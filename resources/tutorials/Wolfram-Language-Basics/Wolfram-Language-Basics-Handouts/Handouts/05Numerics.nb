(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    418975,       9917]
NotebookOptionsPosition[    279925,       7522]
NotebookOutlinePosition[    364939,       9029]
CellTagsIndexPosition[    364353,       9010]
WindowTitle->Numerical Computation
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztXQfYHUXVhhAIndAOVbj00DuEIiQQurQA0jFAIIiEkoA0hY+qQGjSUSBS
BWnySy8JoAgiGEOVGnoTfwQU+Gn/vM6Z3LnzzezObPnu/ZLzPs+BfLszZ87u
3t13yplzFtvnkKH795lmmmlGz6j+M3TvIwePGrX30Tv0V3/sdPDoH444eL/h
Wxx8+H4j9hs1cJ/p1MHhSh6adppp+k7THtCyG82qZA0luys5Usk5Sn6j5CEl
Lyh5TclHSj5W8q0l3/DxD5VMUvKsknuUXKXkNCWHKtlRyfJKpm/T5QkEAoFA
MBmKj+ZVsh3z1O3MX98GBDz3rpJXlExQ8qSS8Uoe4P8/yMcnsp5/Zuj6Uskz
Sn6r5KdKNlIyc7vvh0AgEAimbCiumUvJbkp+qeR5Dz+9y7z2CyUHKtmSx4YL
KEkeoqo6/ZQ0lKyjZKiSUUouV/Kokn85bX/Fx8dwu/3quAcCgUAgmLqg+GQR
JSOV3M/jMMM7n/K85XE8HpsrR08fJXMrWUzJKkrWVzLIkYFKVlSyqJLZI2xb
iMejY5gDbfs+UXID8/Yc1d0RgUAgEEzpULzRX8kBSv7kjLkeV3KsktWVTOep
Ny/zGcaCZym5hec/31HydcY8Z0i+UPI6c9x1Sk5VMkzJmkpm9bQ/M3My2n7F
mUe9lTlT1hYFAoFA4IXiiJV4zvPf1FzTu595bWGn7Aw8pjtGyc1K3irAc2UE
tmFu9kolP1KygpJpPdeD9cOJVj1w8glKFuzZuysQCASCToXihMGk5zgNV7zG
4z6X+xZXcrCSO5X8p4d5L0Y+4HHjHkrmcWxfTcl51PRT/T8llykZ0LN3WyAQ
CASdAsUBG5D21TQ8gr0N25I150l6PQ9jvic6gOdSBPOwGMuOUNLfuh7s6/ih
kpescmOVLNGepyAQCASCnob65i9Jer3McMZdStaxzmPOE/4l8P38pgM4rax8
TnoP42DrGuG3swvpfYpmfHimzZkCgUAgmLKgvvEzKjmRtP8Jvv3wg1nXOj8P
af/P9zqAu+qSp5QMB9fzNYMPsef/dT7/Pv5u31MSCAQCQR1Q3/a1qLnn720l
uxL7lTD/Ye/Bpx3AUz0l4L2DLT6cibRPzed8HmugC7X3qQkEAoGgLNS3fDrS
Y7yv+Pt+EfHePP7245wb42xqkldJ+9WYPgHmjB/gc4hps1N7n6BAIBAIikJ9
w0nJffxNf1PJEOvc9pQdB62nBPOU/9sBdvxBycp8b6YlHTvA+MQiPs4M7XuS
AoFAICgC9e1+g7/jmOObi4/NTzouZ7t5x8h6Sg7pADsgGDOfQhyTjfSeRDOX
fEt7n6ZAIBAIUsHfb+yF6MN/I+7mBx3AN0auZbv6ko6b3W57jCDe9wC2bTbS
cQUmtPNZCgQCgSAd/E2/lf89qAP4xRZwy0KWrUM6wCZb4DM0H9v2kfCgQCAQ
9D44PLhdB3CLLcewXYiJtg7/+5YOsMuWBtslPCgQCAS9EB3Mgy+T3suI/BPw
yUT8buzjQ+yazzrAPuFBgUAgmALQwTy4Ldt0kXVsXz52UgfYJzwoEAgEUwBq
4kHk9EM8sscK1r+b7VmZWnMxIYbNHKRzJ71RQC/iv/1eycbkzxEsPCgQCART
GWriwQcs/eswL34VWRd5AJclvT/vQc/5s1nvLgn2wJ/lfCVLW3ZVFRegwfqE
BwUCgaAXoiYefN7TDnLWn0H5++HzeC6PJ21BbqgjyImLTXo8WcV1Cg8KBAJB
L0dNPPix0wb25U/P/0ZOI/h/vuCph/jVMfOeoXlTI48o2UlJXy6H/X1zWPYs
LTwoEAgEAqAmHvyWuWx60vmZwG3Yq3+0krm5Lfh+fo+aMd0gw/lcjB+M60eD
cSLy665lXRt8S88mHRsH48dZ+fgGwoMCgUAgAGrkwaWZA89h3WuSzt+HeJyX
KFnWsmFF0rmeUvZF2PsqTlaysKUPPHcz6bEi8mYghipiiZ/L51PWFoUHBQKB
YApGjTy4AeuEj+fW/O/DnDLI7bsZcR4HLnNNQhujrXrg3D2VPGmdBw8O5vNd
aI//PUp4UCAQCARAjTy4C+ucSHof/HdIz03+j6cs8r1vz+UR3zQmvz14Z0mu
M1rJO54yXXx+EHPi5fz36cKDAoFAIABq5MFRrPMu/hs5ixArey7S+Z3c8pgz
Hch1uiL0b8Nl9w+cH096LhRzom/zsVO5zrXCgwKBQCAAauTB01nn5dYxw0Pr
k38/4VtK5iO9TnhHhu6TWc9aSr7wnIff6YKkx593WccP5HoPZOgWHhQIBIKp
CDXyoMmXdKp1DPOdm/LxA5iv3HrjSI8b51Tyiuf83aTHefMqed1z/kUlG3Mb
RznnhvLxqmLJCA+2CdxXQl9neSWrsCyhZKZ22yYQCHoXauTBB1jngc5x+M3M
xufAd1souZp0zBdTZgyfx7fN9h2dRNo/FDx4n6PzXCVrW9cFH1R3zGnmXauK
JVMLDyo9Syo5p4TMVaC9VSyZO7H+9gXtjOYs0n5Q25LeJ/M38s8DGMHe0xtJ
97WSrsVqb8OSz+CIIu0GbNmtpC2psnkNNmBN/jjS+bR3IN1/ma6qe1QGpPNq
27aOqKGNIu/I8lXbwbbMXMCWDStot+x37ZyINorqrosHn2edQz3nljH3xbJ/
Fn7Xbie9VrgTH/8B1/lcyRp87OekefNKvLP2+6T+vRT/f5in3UWo2lgydfHg
oCpsimwLc8fvOfV/kWjvOQXt7B+huz/p9eJ/FGwDfDnW/q1FXtOhJZ9BZXMD
bH+Vv9k86eohGz5RcivpfUwzVHW/UkB6bcW1C9+WWStup8g7cmGVNli27FrA
lkMraLfsd+3biDbK6K+DBz9mnQM951axbH5UycFKyLoWzHnupaQf/32hkn34
34hNs7OSma3yS5H+VmJO9BE+5uNBjCmqjCUDaXB7VfLgGqT9bH0+sCFBzmLM
905QsmBCW6t6dL2UaO8R3C78n77MsfMLfk4oP1uO3t2VfJijD77ImCd4i7LH
iOhb/ZQ4xlDENaHtp0j7WPliFoXkQ34O16fcwxxbsLf2mcTfQxk5LWDDszXa
gDWO3aq6Zwn39sKAPXtW3M4R/AzfTrgn+C1V3j+gbN8LW8z+a7wHu1fQLr5r
E/h9/b+E+4Bv20sU8X1l/fi+fBKh9z9GL/9dFQ/im3QnaU7anHXC78X9Pq3G
5z6yjmEOEz4te5DTFyPP/AnrxRzLnx3d4/n8Qc7xl/n4TKRjro0h7cNaNpdh
w7qWytcHlc5lqHVPpCu4bz/w3aNI/e4aqpGk8ZOlD7GDQvtSLnWfbUAH4hD9
MqDjM9aDfadu3FisGaJPhLh9fwvUH0fp88Zz8+8l63fwsJIVUu9XKkjvP8ra
Y4u5kkERgr7kBdS6HmEkc/6JbfhNhg3w4W5Ygt8wvoFbKzlGyf0U3ht1WdHf
coF72Y/C8Y7vqbHd+TN+365sV3Hb8J/P66t+y7/3pPck0Q7EQBlOmotCNrzJ
73ny74G/BRspedWjF9y+JbXOI+J4ER7E9xffZ6zX/IB/69M6tpiYoj926g7i
4x8FdIP/ESNtK6ODyyNOKMaJ8JUJ9dHv4bLuvNYQ2yZLZ19+R/HtxDqlL+5p
23iQdeNbEuo//bak7nEBvaXmQUj3IW19/82jHFEPa7+3BGy6jdLGuvit/Muj
B7Ylv+MU/vZjzjZ3jrcq8Dvu9v+MDEvUhd/W3x0dF0TUw3P6a8CG3G+3KrNC
Rv2LU66hKFQ73894r8HTC9Xc/viI70up99vT5kjnGn1t/qbKNnPscccrtqxT
gf6VPXo38JSL5UFw6E2kOe27ZM1Lcl3wyeqk/WKwbvcCfx8W4vfWfuaDuI5v
H2G3bwyXxXxmzNjNXIs9zjmLj2G/BsamT5CeD9mT9br8jf4/+guIc3oPhfm6
R3iQ9d8QaP/MEjoR8zzEr3eXtNflsqh+Lekxis+eMe5zitQHf6kPPPowFzB9
voYWXdsEbLsy1a6yID3PVpoHWddK1PpNHBtZ79iADbHPGv3aiQEdW6VeRyqo
dX7Q9x78uOb2RzjtPe6xAd+ryvpY1JoTNsTD21TVXoQ98wRseKXCNp619L4W
KBPDgwd56i2sZEfSuZTwTQmNb8Ej8MXAXIrhE7MHflKgTotw2VViyiq5mct3
8d94zzD/MXtGe5iHx3wu/NlC822XB+o2uEzdPLhboP3bSugMfdch8EuaOV9L
ULc9l4v58lzOyfj9YW4gmQMtvciB6duvekaiHt9aKuRnRW0rCgrHyB1WUJ/9
Tfx1ZB3fGnw0D7KOdQM6/lLkOhLaxdykmVP6OvB+P1WzDe7v/ZDAvdi/ovaW
cvTuF2hv1SraS7Drc48N91Wo3/5t/yFQJoYHwXHrcRnwUWou+EO5rnl3t+O/
o/bxWe3GtDWWy5/E93dF/vuqRJsxZpyL6+6bUa7BZermwTnJPxeMeb8o3w+P
zvNz7kGhfiHpcabNO1dH1IG/sG9+AH4Zc+TVj9D/M49u3M9VEnSEfoNdZe1L
Rca7OqygvlMsHbdG1inNg6znmYCe2tZble7DrXYwP7ttwIbaOMHzDNHP8vXV
H66ovRMsnRgXDgpcc/Q7UZFdvvm2qN9gpH6bB8cHysTwIARjpgFc7ric76cr
Nh9hDW43/veEmPpcNpUH4afs8m+s4PtoxqxbUra/YMN6lrXuoyedu8pnQ7f5
7kh9L+Xch4sK6t3S0bNHRJ1jAjYcWMQGj37sv/D5RET3OzN+g11V2JiCjHd1
WEF9dl+vp3kw5DNSybMPtPm01Q76SNhP5Vt3ObtGG9xniN/XKYF70aigPft9
x7qc8GCzTCwPQtBXWYDLXpJT1hX472F+Ev6EJgfEX2LqctlYHjyPyyO3oZmP
DfmEhWQE61ibsv2ZepoHXX8jI9383CN0Le7oeMyjd1JBO39h6cC60zw55bGf
xedPjns6SxEbAu2E9nCtGVl/SubBzSwdD0TWqYoHR2e9y1WDtF+c3Y6Z67rN
Y8O7VJP/qucZ4ve1TOBeHFuyLXv/GvxF4TcqPNgsk8KDEIzhwGXTBX43WXJm
hn1V8eA5ln6s641LtPEErou5dJ9/hSsN61nWzYPLB2yYWECXHecH89wh37nk
uSlq7Xc+HlE+NCc1NrXtnHbWDrTzq8j6UzIPzkTNeEJRe2aoOh7cO6DnmiLX
EtGevR6A/lcfPr5nwI4ta7KjGw/ycZ8v8N9LtmX7n93Bx4QHm2VSeRByL+k+
POYSHomsY2TjgH1B4bKxPPgzS39o/BQSrJVjDIm+0suRdRrWs6w9vij598NA
Fs6v3aLnd851Y97Q50tyeKLeJZ36J0bUuS5wTTultB3RDvpFvrg0eHb9IupP
sTxY0IaqeHCPgJ4barAZ3y07NsO51jn4r/rmRq+r2g5uL8SDIwP3Y62C7WA/
rt2n35WPCw82y0xuM+Pd8gnW+cAZ8Ht19x+FBL7J51ltYx0J+Qiz4oDE8iD8
ReALsyqXxxzsvQnXA39R7P2Aj8cTCfUa1rPsCR48L2DH8AQdeC/seAsmV6Sv
XxI1R2bpPtipn7kHiH9DoXH3AiltR9r3+0BbgyLqCg+22lAVD4b8Fi+pwWY3
zuMazvmbPHaAG2evwZYQDyKelm+v+7l5OgPtbGXpQNyEmfm48GCzTFEehJzB
9RYjPY8eKod1QKzLeteJSM+zYp3+Lt/z5zK+bxCeKfgYcSq8/XnSOQi6KDyO
gmDfDsa201NrnqZO5MHNA3bcnKBjQ6ve5PU79f8jPXq/TPkGkO5PmLrod2eu
rajzywWu55+xbaaAwrFuuiLqCg+22lAVD4b2IR5Sg832Ws6znvM7BmzZtwZb
vDzI53z5ypGfJ2nPK+uy4z9caR0XHmyWKcODk3+rpH1+7TwOb/E3ZzmrrWmt
f2Psdhe/S3NYx5Gnt4UT+bj5Bn3KzxUx62ey6iGGNtbbEa90tHXczP1j3IHv
P+YA7bEQ1rLm5fNjC1x/g/X3FA9inPtvjx0fx74j1JoL6wnr+AqBaxwaqRdr
TPa8Uu58EoV9eWvZP6b0/jDQXu4+TBIedG2oigdDebGXy6+d1M581NrPPspT
Zibyx6YcX6Ut3FYWD4bW65PiC1D3ud5NrXPCg80yZXkQewp25Pqb8m96ckw4
0msyQ5T8mjh3B3WfO8O8KPo/WKe2ORFzrgfwvxeg7tyH/HOYS/+jow/rXBtw
GcQ6PMv5jWHshzUJ9A2X5GMhf+WO4kFu69aALYMi69t73E91zr3m0RvrR7KZ
U2+viDonBq6l0nhSVnuh8fSkiLrCg602lOZB0v1PXx7RyvZRW22NsvRjHsS7
pk46HpZrD8ovWrE9WTyI+Ju+mIBJMc+cZ4S9uHZMTeHBZpmyPGh4bH1HL+KV
Ydxh9tyfxMfhv5sVa9xwIuKndIvJTE3ue5jC8fHMM5+f3zMTPwm+rocpmc/R
6cY36nQeHB6wZUxEXXLu22Dn/EUevfCpy43nQq37EtAGRdQJjcFzc40VAYV9
btF3yox/SsKDrg1V8OBWnvroW69eg7127PV7M8q5/TkjpfYueNoJ8iCf9+2r
TFqrpFYfibOdc8KDzTJV8CDmQBdhHfCBftQ5j5y52GeB8V1KLBrs3VvGshV5
IrK4z5Xx3C7mWidZxzE3Aq7diPVuSGl5QNrNgwsGbHk6oq7tm4f51Rmc898r
+m5Qq7/Uk5HXElqP7YqpnwrScaVDz3L+nLrCg602lOJB0j7KL3rqH12Dre6z
C8Z24G+Gz9+h1N4FTzt5PPjdwP3dO1I/vhN2DBDXJ0h4sFmmLA9i7L4y1x/l
OY9YWcS/rRT/TcjprBe5MjG2wxzr/Yk6TmMda1J3v1Rwn8lDkRV7vqN4kNsL
+bQuklPPnvO53XM+FFfjmBy97r78kyOvw53TNtJt7aYKkF4LDj3LpXPqCg+2
2lCYB1WZAeTPN3FcTbbacxVY/8uMz6DOnxu4tkJ7FwJt5PEg5rJe9dgwLlK/
HZ/gOc954cFmmTI8CB4xYyqfvwPGXevy+dA6UEgwpoT/JuJqYs0KHAoeBB++
n6hrW7bB5yPxL2r6Kx+WqLedPHhCwJ4RGXXc3PNefzxq9fk04o1Pa9Vx86es
n1XeqheKrVc6/3Wgvf4ZzzLz/afewYOI2Ts+UQrNQVMkD5KOHbsQ3z+sQdxI
3feqvmve06pB3ffPjY2o48tTDzm/QrsyeZDLnOSxAXNi34nQb/czus3pkvCg
XaYMD5p9Z8h36JtXNPE9t6C0+Uzcl8W47s3W8WP42KaJdiKu2hJc1xdvG+tf
i/L5MxN1N6xn2ZM8uGbAnuDvh7rnS/D645F/Hy/mV+bM0G3vy8P9jopFRWEe
HBlTPxWk/Q+mZB4sIuML2hDiwRQB/yFHWm5+5qLw3KvB+bX+W883Z4s4DMl7
FyLt8vHg0oH7dmSObnc/0mKeMsKDzTKT20x8t0ZzHeQ59Pk13cDnFyWddyfl
3TD+pz9yjqMPaWIB/jxRJ/pG8IlG3/Rpz/nnSOcdxJgpK9e2Kw3rWfYkD/Yh
/xoG5nxmCNSxczK+kaHbneM0snOgPLjFjsN6fcJ1hPLJHharIwWUPR5cMaeu
8GCrDWV5EM++Ek7JsdP2r8bcUm4+aK7XFbC7knGr5xl6+Yf8sX+fydFt51f5
Y6CM8GCzzOQ2E96ts7k89uy9ZR3HPKjZEzgTl4Fviy+/ZEgu5nr45vjyUsHH
Gn4vmOv4U6ROjFXhq7Mm68Y+IrPX0C6HtSqsjyH20gORuhvWs+wxHuQ2QzkR
hwTKj7PKXJ6j+zmPXm++WeruXzcs4RpC97krVkcK+DcbepZ5a6u9gQeH9aAN
IR7EMx1rCWJdhOaDas23S9o3z56rOiWhbmgsdlNFtsXyoDseMOLNCUW6L2/v
fzogUE54sFkmlQdv4PsMLkKeX8yXwXflAOJ8fawL4y573zzW9fYhPc/p26cK
eYr02AKxzbJitd3KNjQonEsCY6UrSO85nM2yA7HT+ll/I94MxknGpxr2wadn
Dmr1s+5EHnRjRBk5y1PWzT2/S45u3/ww1mW79aWpex6HTL9Lp25o7F1Lblvq
Hv/Ulhlz6goPttoQtT7IZUO5lfC9rnNO1N2rnOkL5anvm6+Av11wjSBBdywP
gst9cda6vedcfkOrDN75uQLlhAebZVJ4EPpmYMG4e6T9zSMduwB74U3MUPiK
Xko6n8AsVjnUH8LfT5ObAD78y/J53z5WV0Zy2R2sY4jfhrkMrJ31sdrD72gv
JdfzPTexSLGnenqrHHzYjldyEP+NtX3fHt9O4cHZyB+b1ecbtrV1PiYX0kaB
613DU9busyTdA1X+7EA7UXv3U0E6N72vvdw4biQ86NqQwoN4B0PrI3Xm+Hsy
0GZZCfqjJdgWxYNc9nceG1r2xVtlL7XK/C5Dp/Bgs0wsD04kT15w0mtuO5OO
T+vztzeCOU74IcKvsOHoQM4t41e6V+TvEN9/E1Mb83LzOzrxzULcQsydZvno
/JN/NxsHflPLZby/beVBbje0F2VRp9wY69wTIX1Wecw7f+zR+xOn3GLO+aRx
HOl5BJ/996foSWhvt0B73jUUp67wYKsN0TzI5UPPGnNK3fpXFdi3UuS3pIg8
UoF9KTy4U8COzZxyiLtoz5EFc7aQ8KBdJoYHsfd9YaceclliTuvTgr8jxHhZ
zNGJOcuUPRF3e65nPdKcXcQmtI0csos4OtenMMc3uEy7ePCQgF37OuXsnMen
hvQ5dW726B3nlHFj22yQaP/6AftfTdGT0F4opvNFEXWFB1ttSOXBPhTOvQ0/
tr4V23eWpR/zipMKiq8/CInK05hhXwoP9iM/X1zjlNveOod5r+BcPwkP2mVi
eBB71brtVyEdrwDzkoinjThnebnb4aeJ/TCrO3oWsf4dWhN2BX1IM4bEmuKC
lg6MZTC+Q77Nt3L0oO8E3x7Mp2J/x1yObViHxHg1tI7V4HLt4sElAnZdb5WZ
g1rjSsT6je/j0Ytx/cxWGfu+4B4kfctIzyf49tzANzg3J2AqKOxbtHtEXeHB
VhuSeJDrIBdyaH7miAptQ5/a9qe+toSu3et47p5nmLdv51KPDRiHzGqVsfuu
eb5wwoPNMjE8aORtvs/Iz7MBOTEZ+Le3Gun96ljjw7oR5iWRD3cpqxy4BftU
scaIfb8fOufuybEDYufbbfC7Zdpa0tGHdw/7LODXg37nRfwOg99a4maS9v8B
H4IXwY8hP5yO4EFu+3mPXdg3bHJt2LGlu8VSy9C7QOCaN+Hzbu7AGwva/3Cg
nczchQXb8u2ZwW9nvoi6tfAg6fk7M/a4I7JOr+RBrhfymUE/evGKbHPjA25R
Qhd8zHzzXi+7349Evak8GIqztiefx54g218gs79Lnc2D3eb6SuivmgddQZ89
k1esdsCRZoz2pqPnIy6DcQvmThYO3Bsj8OPEPEF/rtfwlIHvKcaeq2XcHx9v
p1x/p/DgmIBtq/F5e69lt1hqObp9fgYmVt3KzvF9Cto/OmB/1XGN3RjjRh6K
rF8XD9q+Xn+KrNObeTDLZ6aS7x/pmDVGJ2IolZpzVfWvCdi7XgmdqTyIfucr
Hhvu4fP7W8fwjc2LG98pPPgPjw2Z8asS9dv7L38fKFOGB30yeZ6RdeI3/+uM
3z3kEy6L78xh/O89AmXR3zHxTK+x6mXZhH72GZY9sfO4vYUHQ7/nw/n8Q9ax
pNym5I+H9xifO9Q5vmCevkAbmF9342xBomJ1J7QTytMRlWM143fWVdKuwy1d
4yPr9Foe5LohnxlI7hx1ju65qXVcVDp3Cek5Ip+tl5TQmcSDXMcXT/Frfoce
tI6dHqGrU3jQ588xqUL99rjrqkCZqnnQyPusc4OY8lzW7J0fwH/f5Cl7NJ+D
/9QXVr0Ym7AW5Rs7lpEG29BOHuxL/vEzYp1hfG3v1xyQqHugRy/W87Ame4N1
bGLJa7gucH+D4/kCbfj2gmENKXPfoFW/Lh680NJ1Z2Sd3s6DWT4zmGufu4Rd
bqzb0jmc+B17z2Mr+v2F1rE9zzCGB5cK3DP499lzHStH6OoUHvR95yG5axUR
ut3vvTeOO5+rgwcnss5QvvEW4bImfsNf+Hc3L7WudT9Ceo879uRjLG3mU9eO
tAl7qPtVeI2QBtvQNh7k9q/32Aab7DiDrxfQ24f88xbrUms/67SS9q9I/jFh
JevlSs8mgecXHceU6uPBe1OvN+NdHVbGlhRQ+bxLWT4zV5Swy+7vdNtLW0Jv
KAdFcG9Cjr5kHuR6eXG0ovqk1Dk8+OOAHT+qQLfrT79xoNzkdy/j3Soid7FO
Xy4mnyCemc3dXVx/G/4b/h1L8TET09nwYOh5urI+l/d914tKg3W2mwf3DNhn
+45fVlC3L66BG0NmUAXXcEHgGr5XUi/Grr44cZiPiV43ohp4kHS/7kNLV5Rf
Y8a7OqyoLamgavLwhnxmIJsXsMndMxi1RyhS93oBO4N71XP0FeXBA3O+SZkx
uC09ncKDAwJ2YC00aq4moBf+TXZfHe+ZN54tn6+DBy9nnadHloevk82D2O+z
Buu4As+e/72vVeZ1PhbLgztzeZ/PYFFpsM528yDWPb/22GfPiX6/oO5dc/R+
HPp9JbaD3+0LnrbQb0mKh2XphG+Bj8fRr1o+UZdvjhjSVcQ21unmYx8bWW/v
gC2l45zEgnQOJZ8N0et7lO0zg3gp8yba5O4t2D79yoK60WfxxW/Ct4oK6NvR
0bN2ZD2sf4byhkflZGI9blxgIwNTr6UsKBxnOHdfb0AfnpU7RxbsE/H5Onjw
VNZ5bWT5/tQ9FwD2OaAvj3U9fM8Qu8Te0zqJ29gmsg2TB+ruCq+zwTrbyoNs
QyinrXk/Cq25kM4B6eNYIzdXeA3LU+v4yP4mrpmoC7+bqz26cC3J30cK723t
StXF+jAH4vbJLoisG8oPdmkRW4qAwvOESXPk5N+nagRzxrH7fOAP7Pq+bVns
6oJthPzYk/MHo46jY6+EurcG7IjK0cs6QjE4Dky9lrIg3ccMzZGjbzNTgi70
E25xdGDPX7d4aFYdlKmDB834LTpvA/lz4pzFerBONd4592Ki3cbff2yF19lg
nZ3Ag8dk2Pl4Sd2hPX6Q4VVdA7eFdaMPPO1g/RDf/0y/VNJry/Cj8uWPQz86
M8Z4QCfWqicFrr+rgD74O/j6Lbm+jaTzYoW+x/AzWynVnoL2h+KsoB+zaL6W
ybrQx83qmyJe8WwReny5Ra8ud6Ut+kNrzBCMaaPGYawL/p1u3jT4P8Ry/g4B
O6LeRfL3wYzgd540Dq8ClJ2rHXGeDyUnJqdTH7/J46n7/ALe+UE5baNcHTw4
lHX69njbgnkGxPjAnBj6725c9W9Yj7tXDfJnPofvgi+HuvedoNbcXGWlwTo7
gQez4ilG55sJ6D46Q3f0+5/QHp5pyJ8Q4znwMtY+MUbDOtV+Sn5C2u80tP6L
d2n9yPaxhxWx4BE7F+/nOxnXj9/4rZGCb/oTKc+J9PoJck/D5wzrDL7xsi3Y
8w3/QcRBwdwX1g1KrfmwDZuxDWdS9v7eb9nGn3N52J7pp0x6LPdGhr43+Pli
/8KM1jPCtYET3P6/LeDY/bkuykfltyDdN0d5zF2fQuE8OUYQuwo+H4hpv4aj
Cz56m/DvCd8fn+8pBLng8JtGHIBg3hbqHkfUfEuzxjwLs17o/2ugfSP4vZ/I
9uI9WDiktyqQ7g+dl2MXBH1k9BkQmxN79OAX5cvFat6FXP8CLlsHDw5knaE+
I34Hx5Mzr06e/AN83OejsKtTF+8q9vSH9gXex+Vcv+oy0mCdbedBtiOUH2PD
knpDHPt0VbZ72sS4Dnvryvo1fca/q9kT2nb3RvaUdHlsqWL+YnzJZ1HWhrER
bYArJiS8c0WfUaw/SleJ653g6HL9ymJkWI59lzjlM+M5lfxNHxpzz6oA6Vj4
oX5CiqCvvGxkmyhfBw8i3+nMvt8H6f57P24TY0D05e/h8nO494DLuTyIa0T/
YQDXRR/MxBFDbDTkFHTj1jzH59316TLSYJ2dwoMXemxEnyhqviVHt6+/PqYK
u3PaxXw5+i4p+ZwhiHuFb1nyeJXax4OHe2yZKniQ20HfB2MQxIN5lfxrRo2S
z2hK4UHXfzUvjk+v4EG2FfODWL8MzQmFBOsCmHfZLL+VlvZQ1/Bg1J73SEGO
QbMfEL9l5M8abLWL+fGTqbWvfxKfs31CfTyIeTGTc+ku6zh8DfG9nJXPId42
fB1NXB2zzyKUgy5VcM/nYZ2dwoOzk57PsaVQnBeP7vk8umvLoRqwAWvg6PMc
oeRi0mtC+N1jTz/m1xFvA/OBjZLt+O5jT0i3MStpn8qyeqNzIwfuR1kbMvNd
ZrQ7LT9zW1ffks8odg2uf0H93d450n3zVB2Z7xY1c5G33JeM8mV+09FzKVWD
9Jw55nMxN4S1kF+Rft/x3iPeHfoYhykZTFYOgMQ2sB4HX5q5+e+xVJ4f3mNd
iN2JdQo77vXqpH34fH6/mL+CTyh8Yib3/bmezYMX87GtA+2Dk84ga62e9L5v
3Lt+/Fyr4MGDrOsENz9W/GkLBAKBoB2gpu/uLfx3aA9XirhzAtjLgbXsLJ9D
IzdzncljNv7b8CDWhudhPnspRxf8C39LnJ/JsqeKmDK3ke6PzULN+NyV+mgL
BAKBoH4wRxl+GsHHViW9z7goR9zJerDWh3gyrybWH8L1r/Lw4Ej++6hEnfAp
whzp9Fy/jO8FrseMn82+3fPb8fwEAoFAUB7qG74o6blE+FmadTfkNQ7ta8wT
rNlhj22en3FIniG9Xo78d3Yuiqf5+EIldMN35ugC3GwEOZ6XZZtMfk7keCoc
/0cgEAgE7Yf6jg/lbzr87ufnY6ljrirlELbhSP4/eHBj/rcvRkhPCNYAN2cb
kEf4M+bjpPhcAoFAIOhMUNNPGPHMzb6G2PigVQvWAeEnZHzDzP/XbSMH7s42
YD/qO3xs6/Y9MYFAIBBUCdJ+HyanHPxA+vKxi9rEPZc69sGPNCsWR50ynG1A
fK2n+NhR7XlSAoFAIKgLpPeyj+PvPPZmTEfx8W6qFqxPrmbZFsonXvc40HAg
/H7Mvs5CcdAFAoFA0Png773Ze34FuJCPH98GHvoj8zBser+H20a8vqGeewI/
1mnb+5QEAoFAUCdIx3CYyN/9m4hjMJCOVxvKfVWXwC+zSFyiMoI4wRvyNWOd
8m98HDmtpmvv0xEIBAJBT4DHQCY3zH3EsXXAD+TPi1OXIN7oVz3YHvZnLM7X
ivg2Zr/+5cKBAoFAMHWB9HqhieH5jMUPiE325x4eo/WEYLw3G1/jIGrut0eu
GZkLFQgEgqkQpONVX0zN+cLB1vEzOoC7qhDsBdzfuuYDSM//Yhx6UPvuvkAg
EAg6BaTzN4IX4EOJuKTGfwb5JUN573qDwAd0Ob6W2ai5Tx97GIe0964LBAKB
oJNAem3wbeaJ+5UsxMeR0+OXHcBpKYK8ScgfbfboI67qi3wO+xSXaO/dFggE
AkEngvRe8juZLxCXdJh17ruk/UzazXF5gjXPpdhmzO8ils6XfA65ovq17QYL
BAKBoONBek/fwaRjc4M7bifO90c6Ds1hPK/Ybr5zBTnKh1rXgTihE/jcW0q2
at9dFQgEAkFvA8ZU1MzbhFxNiM1tchvNSdrPsqf3G/rkQ+bmGSzb4Ptjcmog
/3D/9t5NgUAgEPRG8NhwP+YacAry0m5rnV+EOacdfIh52y7DcaTHqgdRc/8j
cg5v0r67JxAIBIIpBaTzxCMv7dfMMQ8qGWidBx+eR+Vy/MbKu0qOtfgPXL09
NXPHf8rnZR1QIBAIBJVCccuKSu62OOkO4vy+fB4x235COk5M1fz3PI9NTd4o
8N/WSv7K58HRv1KyQPvukEAgEAimBiiuGazkUYuj7rHnINW/ZySdQ2JCQc4z
8g3rBt/1Yd3wAd2DmjFSIcgptVz77ohAIBAIpkYo7tmcmr403zLvIXZ2X6sM
/DYvo6b/aYwg/wTyBC9u6cE++NFK3rDGfzfY41GBQCAQCNoBxUUDSeeuMD6a
r/Ma3fxWmf5KDqRw7NKveZ51J2LfT663HOmcFB9xOcRJu4BkL7xAIBAIOgyk
91pcbI39sH/9RiUbkxXLmrkN4713lDxLOvbLAtb5GZTspmS8M0aEf+g87bk6
gUAgEAjiwGO/kaTzWBgewz73nypZxCo3nVNvFR772bmfwIW72GNEgUAgEAh6
C0jHY7uK5zON78t97OsyC+lYbodSq0/NP5gPB7TbfoFAIBAIqgDp3L/Ief+I
xXf/pmbsT/z/NiVDZewnEAgEgikZiueWVnKqkjdJ738YpWS+dtslEAgEgikH
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",
 CellChangeTimes->{3.785141470231607*^9, 
  3.785141924332955*^9},ExpressionUUID->"059f49ae-49fc-4f44-80e6-\
ab700841b96e"],

Cell[TextData[StyleBox["Wolfram Language Basics",
 FontTracking->-0.75]], "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
   3.726941915180914*^9, 3.726941915962871*^9}, 3.72805557420755*^9, {
   3.730591596400971*^9, 3.7305915992067432`*^9}, {3.785144430726679*^9, 
   3.7851444313967543`*^9}, {3.812802882143258*^9, 3.812802882905703*^9}, {
   3.814892360443033*^9, 3.814892372895254*^9}, 3.820977503237152*^9, {
   3.822666397731648*^9, 3.822666402569378*^9}, {3.822939895950795*^9, 
   3.8229398974437847`*^9}},ExpressionUUID->"1243965a-40ce-482a-9c91-\
36878f955d76"],

Cell["numerical  computation", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
   3.726941908757318*^9, 3.7269419228992167`*^9}, {3.727530497787223*^9, 
   3.72753049862645*^9}, 3.728055577046837*^9, {3.730591604782598*^9, 
   3.73059161531714*^9}, {3.814892398152801*^9, 3.814892406904223*^9}, 
   3.8148924864887667`*^9, {3.820977529175358*^9, 3.820977534896346*^9}, 
   3.822666444343193*^9},ExpressionUUID->"abd2714b-c40b-491d-9b98-\
1f3d249655e3"],

Cell[TextData[StyleBox["\[WolframLanguageLogoCircle]",
 FontSize->108,
 FontColor->RGBColor[
  0.07357900358587015, 0.11967650873579004`, 0.19916075379568168`]]], "Text",
 CellChangeTimes->{{3.820847947788309*^9, 
  3.8208479747250233`*^9}},ExpressionUUID->"9c80e341-d86e-4010-903b-\
2496bf803f59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"af8fa16b-2d2f-4cf9-83a3-782cadb2cd0d"],

Cell[CellGroupData[{

Cell["Outline", "Section",
 CellChangeTimes->{{3.8209775788140774`*^9, 
  3.8209775802975917`*^9}},ExpressionUUID->"6355f4b6-59ed-411e-a3d9-\
7cc830c21387"],

Cell["\<\
This notebook looks at the following topics in numerical computation:\
\>", "Text",
 CellChangeTimes->{{3.822665790710704*^9, 3.822665792408613*^9}},
 CellTags->"Overview",ExpressionUUID->"b2c82ae1-d2c7-4cb4-8b01-9f2a29d70153"],

Cell[TextData[{
 "Approximating data\[LongDash]",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Interpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpolation"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.8209777359431467`*^9, {3.821610524362521*^9, 3.821610528534608*^9}},
 CellTags->"Overview",ExpressionUUID->"36122511-5209-448a-a691-86b19364c842"],

Cell[TextData[{
 "Numerical integration\[LongDash]",
 StyleBox[ButtonBox["NIntegrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NIntegrate"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.820977737586588*^9, 3.8216105329196095`*^9},
 CellTags->"Overview",ExpressionUUID->"16d4f860-4803-47ef-8f7a-1049d5c13eb6"],

Cell[TextData[{
 "Numerical equation solving\[LongDash]",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.8209777391985025`*^9, {3.821610535764987*^9, 3.821610538703454*^9}},
 CellTags->"Overview",ExpressionUUID->"88bd5da0-1f4d-41f7-8a0a-e2ab05aedf76"],

Cell[TextData[{
 "Numerical optimization\[LongDash]",
 StyleBox[ButtonBox["FindMinimum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindMinimum"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["FindMaximum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindMaximum"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["NMinimize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NMinimize"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["NMaximize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NMaximize"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["LinearProgramming",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearProgramming"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.820977740774759*^9, {3.8216105447503557`*^9, 3.8216105927966*^9}},
 CellTags->"Overview",ExpressionUUID->"1d03055f-f8c1-4c3a-9e12-47ae9cfe46bd"],

Cell[TextData[{
 "Numerical solution of differential equations\[LongDash]",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.8209777423585253`*^9, 3.821610596659197*^9},
 CellTags->"Overview",ExpressionUUID->"cbc345aa-0552-4b8d-84e7-f4d1173db928"],

Cell["Types of numbers\[LongDash]exact vs. approximate, arbitrary precision", \
"Item",
 CellChangeTimes->{
  3.8209777440013313`*^9},ExpressionUUID->"e215f128-b70a-4945-9f36-\
ec0fe9172d77"],

Cell["Working with large arrays: sparse arrays, packed arrays", "Item",
 CellChangeTimes->{
  3.820977746032733*^9},ExpressionUUID->"84d0d039-8c4a-4684-84eb-\
88881e4ddec5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"58786991-67d7-433a-a46d-8fb0c362eb18"],

Cell[CellGroupData[{

Cell["Functions for Numerical Computation", "Section",
 CellTags->"Functions",ExpressionUUID->"496e407a-c066-4da1-b418-4ae33f4e9a50"],

Cell[TextData[{
 "Fitting data\[LongDash]",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["NonlinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NonlinearModelFit"],
  FontWeight->"Bold"],
 ", \[Ellipsis]"
}], "Item",
 CellChangeTimes->{
  3.820977805146227*^9, {3.8216106469274006`*^9, 3.8216106750565376`*^9}},
 CellTags->"Functions",ExpressionUUID->"585c942a-41b6-42ce-b20a-4177123a9c9d"],

Cell[TextData[{
 "Interpolation\[LongDash]",
 StyleBox[ButtonBox["Interpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpolation"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.8209778068355074`*^9, 3.8216106788677416`*^9},
 CellTags->"Functions",ExpressionUUID->"cfbd3645-b332-4283-a26f-38c1c4ea59bc"],

Cell[TextData[{
 "Integration\[LongDash]",
 StyleBox[ButtonBox["NIntegrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NIntegrate"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.8209778090154853`*^9, 3.8216106823276787`*^9},
 CellTags->"Functions",ExpressionUUID->"05ddf751-3789-4d08-8a01-544557f60885"],

Cell[TextData[{
 "Solving equations\[LongDash]",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.820977811062317*^9, 3.821610685853304*^9},
 CellTags->"Functions",ExpressionUUID->"d14ea351-5ec0-460d-81e0-aed69ccada57"],

Cell[TextData[{
 "Intermediate values\[LongDash]",
 StyleBox[ButtonBox["EvaluationMonitor",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EvaluationMonitor"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Reap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Reap"],
  FontWeight->"Bold"],
 ", and ",
 StyleBox[ButtonBox["Sow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Sow"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.82097781332019*^9, {3.821610696870485*^9, 3.8216107109928756`*^9}},
 CellTags->"Functions",ExpressionUUID->"e024ff95-3f1d-4ebf-a36e-bd495593bcb8"],

Cell[TextData[{
 "Optimization\[LongDash]",
 StyleBox[ButtonBox["FindMinimum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindMinimum"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["NMinimize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NMinimize"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.820977816327008*^9, {3.821610759654176*^9, 3.821610791696151*^9}},
 CellTags->"Functions",ExpressionUUID->"8a24ea91-2aa3-4fa5-b798-37143421c545"],

Cell[TextData[{
 "Solving differential equations\[LongDash]",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.8209778184381557`*^9, 3.8216107674753637`*^9},
 CellTags->"Functions",ExpressionUUID->"7a6a2fd9-e860-4fc1-ac21-645867bf8922"],

Cell[TextData[{
 "Solving linear systems\[LongDash]",
 StyleBox[ButtonBox["LinearSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearSolve"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{3.8209778207709026`*^9, 3.8216107721800184`*^9},
 CellTags->"Functions",ExpressionUUID->"ab927bcd-ffbb-4c7b-87b7-ea5d51c32498"],

Cell["", "EndOfSlide",ExpressionUUID->"3a3a8b9c-217f-44ee-a30f-ef7e07ef1e98"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"85ca6769-278b-44b3-ad45-be821539f62f"],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{3.82097793145358*^9},
 CellTags->"Functions",ExpressionUUID->"99cff20c-e257-4d94-a062-fa2d1b38b9f2"],

Cell["\<\
When working with numerical data, it is often useful to try to approximate it \
with a continuous function. One way of approximating data is to perform a \
regression; that is, fitting a function to the data in the least-squares \
sense.\
\>", "Text",
 CellTags->"Functions",ExpressionUUID->"0b9bc45e-5165-4a3f-9791-7e1f8464ddd8"],

Cell["For example, here is some sample data:", "CodeText",
 CellChangeTimes->{{3.82183442115594*^9, 3.821834422003199*^9}},
 CellTags->"Functions",ExpressionUUID->"c619b03d-e83d-4497-9bc1-3e4b09def117"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.63", ",", "0.661", ",", "0.680", ",", "1.27", ",", "1.90", ",", 
     "1.595", ",", "1.59", ",", "1.31", ",", "2.46", ",", "2.48", ",", "3.33",
      ",", "3.267", ",", "3.547", ",", "4.612", ",", "5.244", ",", "5.04", 
     ",", "6.41", ",", "6.22", ",", "6.529", ",", "8.049", ",", "8.717"}], 
    "}"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"812a2c9f-2194-43b5-b33d-e51b23818b46"],

Cell[BoxData[
 RowBox[{"dataplot", "=", 
  RowBox[{"ListPlot", "[", "data", "]"}]}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"2de5b134-dd1e-44ee-b65e-df27544b5cb6"],

Cell["This creates a model with a linear and quadratic term:", "CodeText",
 CellChangeTimes->{{3.821834424021887*^9, 3.821834424429468*^9}},
 CellTags->"Functions",ExpressionUUID->"cd62072e-0019-4ca5-bcce-013bc7d0f6ba"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      SuperscriptBox["x", "2"]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"ddad8df7-aca6-4f38-8844-616277ac58e4"],

Cell["Here is the explicit model:", "CodeText",
 CellChangeTimes->{{3.821834426760269*^9, 
  3.821834427140428*^9}},ExpressionUUID->"54ea3d8b-04af-4a29-b31e-\
0b862e2c1472"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<BestFit\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"a5836a3c-952a-41c9-a200-ce6edbd83c5f"],

Cell["\<\
And here is a plot of the fitted function together with the original data:\
\>", "CodeText",
 CellChangeTimes->{{3.8218344291930103`*^9, 3.821834429580819*^9}},
 CellTags->"Functions",ExpressionUUID->"551d2ef6-75e5-4173-a5c6-733488a7c865"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"dataplot", ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "21"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"fcca5054-baec-404a-bc83-ebea8d997a30"],

Cell["Here is an ANOVA table for this model:", "CodeText",
 CellChangeTimes->{{3.821834431709766*^9, 
  3.82183443208589*^9}},ExpressionUUID->"5ad67003-76e9-4bee-abfa-\
76be425fb407"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<ANOVATable\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"24a1050d-ec03-4812-bcc5-1167b9298090"],

Cell["Much more information is contained in the model:", "CodeText",
 CellChangeTimes->{{3.821834433479403*^9, 
  3.8218344338804073`*^9}},ExpressionUUID->"28e2f9ed-f082-478c-9957-\
ab9e867c941c"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"599e8b49-d269-4108-be33-cdec9bc85092"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"data", ",", "dataplot", ",", "model"}], "]"}]], "Input",ExpressionU\
UID->"4a80f63d-7c8e-47fd-aa5d-1f5d9645dd65"],

Cell["", "EndOfSlide",ExpressionUUID->"a68b881d-9e19-4df9-9edc-b6561db8edf5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"086cbcb9-fb40-4ce7-ae89-c67dcb3a3247"],

Cell[CellGroupData[{

Cell["Interpolation", "Section",
 CellChangeTimes->{3.820978012263731*^9},
 CellTags->"Functions",ExpressionUUID->"77cc775f-b2cb-4e18-92a0-dfcec973ecc9"],

Cell["\<\
The previous example constructed a model that fit the data in the \
least-squares sense; in such cases, the fitted functions may not actually \
pass through any of the data points. Interpolation, on the other hand, \
constructs a function that approximates the data by passing through each and \
every data point. Typically this is done by creating polynomials that pass \
through some small subset of the data and then piecing together these \
polynomials to create the interpolating function.\
\>", "Text",
 CellTags->"Functions",ExpressionUUID->"7ab3b336-3a99-4acb-93a0-3dd617a63610"],

Cell[TextData[{
 "Here is some two-dimensional data that you will work with, imported from a \
file of tabular data.\[LineSeparator]Note: ",
 StyleBox["use the correct sequence of directory names to specify the file \
location",
  FontSlant->"Italic"],
 ":"
}], "CodeText",
 CellChangeTimes->{{3.821666165227436*^9, 3.8216661912577286`*^9}, {
  3.821834477016679*^9, 3.821834484515607*^9}},
 CellTags->"Functions",ExpressionUUID->"18ce389f-70ce-4046-a41d-938f0f7c3748"],

Cell[BoxData[
 RowBox[{"filedata", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data\>\"", ",", 
     "\"\<data2D.dat\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821666141405629*^9, 3.8216661498724904`*^9}, {
   3.821834455541202*^9, 3.82183445921728*^9}, 3.822665908923394*^9, 
   3.822666283195153*^9, 3.822666350145513*^9, {3.822939997963038*^9, 
   3.822940001494026*^9}},
 CellTags->"Functions",ExpressionUUID->"308579fc-abe5-4742-a37a-a27d430e96eb"],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"filedata", ",", "\"\<Table\>\""}], "]"}]}]], "Input",
 CellTags->"Functions",ExpressionUUID->"4650ca9d-aa59-4ab9-93f6-eafafeae7e29"],

Cell[BoxData[
 RowBox[{"dataplot", "=", 
  RowBox[{"ListPlot", "[", "data", "]"}]}]], "Input",
 CellTags->"Functions",ExpressionUUID->"7a8eafa3-9bdb-4a31-b7bb-83000ffee586"],

Cell["\<\
This interpolates the data, creating an approximate function that you can use \
like any other function in the Wolfram Language:\
\>", "CodeText",
 CellChangeTimes->{{3.820978038273009*^9, 3.820978042720075*^9}, {
  3.8218344874550047`*^9, 3.82183448795595*^9}},
 CellTags->"Functions",ExpressionUUID->"33781bd8-21e0-476a-808d-a65a2d1f2d01"],

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input",
 CellTags->"Functions",ExpressionUUID->"79fe605f-5038-4b14-9cab-2eef4832976e"],

Cell["\<\
Here is a plot of the original data together with the interpolating function:\
\
\>", "CodeText",
 CellChangeTimes->{{3.821834490777071*^9, 3.82183449115788*^9}},
 CellTags->"Functions",ExpressionUUID->"7bbdba31-f388-4d6c-9d4d-752a33663224"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "4"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", "dataplot"}], 
   "}"}], "]"}]], "Input",
 CellTags->"Functions",ExpressionUUID->"80ebec86-ec28-4a32-9162-25a6b9cdc158"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"f", ",", "data", ",", "dataplot", ",", "filedata"}], 
  "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[10]:=",ExpressionUUID->"090480fd-f416-4141-b336-4ae54a9b3acc"],

Cell["", "EndOfSlide",ExpressionUUID->"ed446e13-456c-4eff-b38a-654dc1cce367"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e35ee0cd-b1a6-4703-b005-90d6eab10397"],

Cell[CellGroupData[{

Cell["Integration", "Section",
 CellChangeTimes->{3.8209780649470587`*^9},
 CellTags->"Functions",ExpressionUUID->"d2d01309-75d2-4175-82a1-8f367472d1ae"],

Cell[TextData[{
 "This gives the numerical integral of ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Exp", "[", "x", "]"}], "Input"]],ExpressionUUID->
  "52f7531f-8743-4009-8fc1-895e876055ee"],
 " with respect to ",
 StyleBox["x", "MR"],
 " for ",
 StyleBox["x", "MR"],
 " ranging from 0 to 1:"
}], "CodeText",
 CellChangeTimes->{{3.82183449458703*^9, 3.821834494985853*^9}},
 CellTags->"Functions",ExpressionUUID->"923dc08f-e944-40d9-bada-af376ea6cc96"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"be13d9da-18f1-42a9-99ca-b6007b74d9d4"],

Cell[TextData[{
 "Many functions can cause problems for the numerical routines in ",
 StyleBox[ButtonBox["NIntegrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NIntegrate"],
  FontWeight->"Bold"],
 ". In such cases it is usually important for you to analyze the function a \
bit and fine-tune any appropriate arguments or options to fit the situation \
at hand."
}], "Text",
 CellChangeTimes->{{3.8216108690055704`*^9, 3.8216108737717085`*^9}},
 CellTags->"Functions",ExpressionUUID->"20e5ceaa-69e3-4207-b939-a1039528b7ab"],

Cell["\<\
Here is an example in which numerous discontinuities exist over the \
integration region:\
\>", "CodeText",
 CellChangeTimes->{{3.8218344974976463`*^9, 
  3.8218344978617573`*^9}},ExpressionUUID->"d46d8435-5b3d-458a-b0c6-\
4de4f44b26cf"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Sin", "[", "x", "]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"b440b408-2f8b-435d-bd66-348a3c0d3aec"],

Cell[TextData[{
 "Using the ",
 StyleBox[ButtonBox["Exclusions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Exclusions"],
  FontWeight->"Bold"],
 " option, you can specify those discontinuities to watch out for:"
}], "CodeText",
 CellChangeTimes->{{3.82161088809843*^9, 3.8216108932470503`*^9}, {
  3.821834499935979*^9, 
  3.8218345002926283`*^9}},ExpressionUUID->"2b55dd0d-a083-44d1-a4d3-\
a4e51bc23ad0"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Sin", "[", "x", "]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"Exclusions", "\[Rule]", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", "0"}]}]}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"d9e8d89e-7201-493f-8635-1494633856c7"],

Cell[TextData[{
 "Alternatively, you might specify a larger value for ",
 StyleBox[ButtonBox["MaxRecursion",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MaxRecursion"],
  FontWeight->"Bold"],
 " to get a better result:"
}], "CodeText",
 CellChangeTimes->{{3.8216109004718556`*^9, 3.8216109507287025`*^9}, {
  3.821834501983055*^9, 3.8218345023645363`*^9}},
 CellID->416954400,ExpressionUUID->"5cb92d8a-501e-484c-b502-8032a8345221"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Sin", "[", "x", "]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "100"}]}], "]"}]], "Input",
 CellLabel->"",
 CellID->682978387,ExpressionUUID->"1bd53389-3a86-4ba6-9e30-f7d6e62b073c"],

Cell["\<\
In such a case, it is more efficient to explicitly specify the \
discontinuities:\
\>", "CodeText",
 CellChangeTimes->{{3.8218345044428596`*^9, 3.821834504810335*^9}},
 CellTags->"Functions",ExpressionUUID->"13203b63-3b84-4d1d-a12d-504dab183c95"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"Sin", "[", "x", "]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]", ",", 
     RowBox[{"2", " ", "\[Pi]"}], ",", 
     RowBox[{"3", " ", "\[Pi]"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"ff9ca22e-1db2-425d-911e-42c17f5b8205"],

Cell["", "EndOfSlide",ExpressionUUID->"4a3e8231-0006-483b-9d41-da4f7fba75ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"29014d49-a22c-46a8-94ed-d55294141260"],

Cell[CellGroupData[{

Cell["Equation Solving", "Section",
 CellChangeTimes->{{3.820978103366217*^9, 3.820978127116583*^9}},
 CellTags->"Functions",ExpressionUUID->"4948d1d1-c97f-4193-a52d-70c3469a2685"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 " function can be used to compute numerical solutions of equations or \
systems of equations."
}], "Text",
 CellChangeTimes->{{3.821610990974229*^9, 3.8216109952016478`*^9}},
 CellTags->"Functions",ExpressionUUID->"18f99582-3db2-43bb-874a-9858f73a05ea"],

Cell[TextData[{
 "Here is a typical calculation using ",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 ". A starting value for the variable is required by the underlying algorithm \
(Newton\[CloseCurlyQuote]s method). The result is returned as a list of rules \
(",
 ButtonBox["Newton's method demonstration",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/TwoGeometricViewsOfNewtonsMethod/"]\
, None},
  ButtonNote->
   "http://demonstrations.wolfram.com/TwoGeometricViewsOfNewtonsMethod/"],
 "):"
}], "CodeText",
 CellChangeTimes->{{3.821611000596328*^9, 3.821611006476914*^9}, {
  3.821611126253329*^9, 3.821611126256483*^9}, {3.821834509991774*^9, 
  3.821834510561446*^9}},
 CellTags->"Functions",ExpressionUUID->"acc5fd87-b78b-43b5-a8a8-53725fdafc49"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"da5cf3d0-9b18-4871-8845-3147fd4ee40d"],

Cell[TextData[{
 "Plots are very useful for choosing starting values for use in ",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.821611134885971*^9, {3.821834513741335*^9, 3.821834514443452*^9}},
 CellTags->"Functions",ExpressionUUID->"ca2a0c73-e388-473d-823d-839e67baced0"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"393f8474-1ba0-48e1-b47b-bde2c1b955a5"],

Cell[TextData[{
 "The solution for ",
 StyleBox["x", "MR"],
 " near 3 can be found by using a starting value near that solution:"
}], "CodeText",
 CellChangeTimes->{{3.8218345159990673`*^9, 3.8218345163750668`*^9}},
 CellTags->"Functions",ExpressionUUID->"4c4ac5dd-fefe-415e-84ec-168431b054e1"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"8151d4ef-0881-4a9b-b756-96909983d6a7"],

Cell[TextData[{
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 " can also be used to compute numerical solutions for systems of equations:"
}], "CodeText",
 CellChangeTimes->{
  3.8216111465670776`*^9, {3.8218345182546587`*^9, 3.82183451861053*^9}},
 CellTags->"Functions",ExpressionUUID->"3b2e3f36-175b-4f86-a7e7-e4f426202b27"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{"y", "\[Equal]", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"d867df1e-e845-4646-8c61-c9921cc6289b"],

Cell[TextData[{
 StyleBox[ButtonBox["NSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NSolve"],
  FontWeight->"Bold"],
 " can be used to find all solutions:"
}], "CodeText",
 CellChangeTimes->{
  3.8216111534761524`*^9, {3.8218345212220907`*^9, 
   3.821834521586944*^9}},ExpressionUUID->"07c0b8b6-9fab-4b72-9801-\
f732a2617591"],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{"y", "\[Equal]", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"83ff6d91-e830-461d-ac16-7722c55a20e5"],

Cell[TextData[{
 "As an aside, you may find it useful to use ",
 StyleBox[ButtonBox["ContourPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ContourPlot"],
  FontWeight->"Bold"],
 " to make a plot of such implicitly defined functions:"
}], "CodeText",
 CellChangeTimes->{{3.8216111591792517`*^9, 3.821611165594174*^9}, {
  3.8218345238718157`*^9, 3.821834524482498*^9}},
 CellTags->"Functions",ExpressionUUID->"0d783000-d4af-4507-ae32-dcf7b6271d0f"],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[Equal]", "1"}], ",", 
     RowBox[{"y", "\[Equal]", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"83b61db6-04c6-42a8-9df0-8091e7ed2169"],

Cell["", "EndOfSlide",ExpressionUUID->"627a26ee-735c-4f5c-a632-764c850c57bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"027a0690-0a6e-4222-89ce-d79420c0253b"],

Cell[CellGroupData[{

Cell["Optimization", "Section",
 CellChangeTimes->{3.8209781517961783`*^9},
 CellTags->"Functions",ExpressionUUID->"be621810-47c4-4285-a62a-db172e831636"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["FindMinimum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindMinimum"],
  FontWeight->"Bold"],
 " function can be used to compute numerical minima for functions in one or \
more variables."
}], "Text",
 CellChangeTimes->{3.8216112287525406`*^9},
 CellTags->"Functions",ExpressionUUID->"d2036302-d23e-449a-875c-24c39c817b03"],

Cell["Here is a plot of a function to be minimized:", "CodeText",
 CellChangeTimes->{{3.821834527526451*^9, 3.821834527905428*^9}},
 CellTags->"Functions",ExpressionUUID->"9988b326-09fa-4968-9c95-cbb2344661c8"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", "x", "]"}], 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"d7f7e6c6-3c7c-4149-a09d-21f693ffecf0"],

Cell[CellGroupData[{

Cell[TextData[{
 "This shows the use of ",
 StyleBox[ButtonBox["FindMinimum",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindMinimum"],
  FontWeight->"Bold"],
 " to find a local minimum of this function:"
}], "CodeText",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.8216112377338457`*^9, 3.8216112462264185`*^9}, {
  3.821834539972224*^9, 3.821834541566587*^9}},
 CellTags->"Functions",ExpressionUUID->"6cc0173b-c9e0-4b58-a901-9a21f6004bb4"],

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", "x", "]"}], 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"311f98f8-23d4-478f-b50a-7f40088f4a36"],

Cell["\<\
The result is a list with two elements. The first element gives the value of \
the function at the minimum, and the second element is a list of rules giving \
the values of the variables at the minimum.\
\>", "Text",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.8216112377338457`*^9, 3.8216112462264185`*^9}, {
  3.821834539972224*^9, 3.8218345410199747`*^9}},
 CellTags->"Functions",ExpressionUUID->"23ec1d40-734c-46be-8391-0b1e34649c0e"]
}, Open  ]],

Cell["\<\
Several functions are available for global optimization problems.\
\>", "Text",
 CellChangeTimes->{{3.821661450024065*^9, 3.821661450901677*^9}},
 CellTags->"Functions",ExpressionUUID->"399e9d19-ccee-4bef-bb11-4009a4a32459"],

Cell[TextData[{
 "For example, this finds the minimum of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", 
       FractionBox["1", "2"]}], ")"}], "2"]}], TraditionalForm]], 
  "InlineFormula",ExpressionUUID->"751ca519-6fde-43e2-b243-25c9dc195a21"],
 " subject to the constraints ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[GreaterEqual]", "0"}], TraditionalForm]], "InlineFormula",
  ExpressionUUID->"e975eaf8-f627-4638-ad7d-4fc01e02fc33"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[GreaterEqual]", 
    RowBox[{"x", "+", "1"}]}], TraditionalForm]], "InlineFormula",
  ExpressionUUID->"937fc9b3-d75c-49ba-b118-ef2de2921355"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.8216614524804544`*^9, {3.821834552730321*^9, 
   3.82183455374114*^9}},ExpressionUUID->"21535b73-f9e0-4bbf-9d97-\
3972be591277"],

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", ".5"}], ")"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"y", "\[GreaterEqual]", "0"}], "&&", 
       RowBox[{"y", "\[GreaterEqual]", 
        RowBox[{"x", "+", "1"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"cb982df8-a0d9-445b-85e5-e4c3481d3b51"],

Cell["\<\
The following graphic is a visualization of this global minimum:\
\>", "CodeText",
 CellChangeTimes->{{3.8218345553190823`*^9, 
  3.821834555666852*^9}},ExpressionUUID->"fe91cf6f-d8a6-4108-8ec3-\
3f77dbf53fa4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"constraints", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
     RowBox[{
      RowBox[{"y", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"y", "\[GreaterEqual]", 
       RowBox[{"x", "+", "1"}]}]}]}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"f62b9546-5d6f-4d53-82d0-e759083ac421"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "0.5"}], ")"}], "2"]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"RegionFunction", "\[Rule]", "constraints"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", 
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"y", "-", "0.5"}], ")"}], "2"]}]}], "}"}], "/.", 
          RowBox[{"soln", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         FractionBox["1", "24"]}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"50c948cb-72da-4232-8328-718740e92860"],

Cell[TextData[{
 "For more information on optimization routines and strategies in the Wolfram \
Language, see the tutorial ",
 StyleBox[ButtonBox["Numerical Operations On Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/NumericalOperationsOnFunctionsOverview"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.820978175526882*^9, 3.820978186929431*^9}, {
  3.821611473240044*^9, 3.821611473240044*^9}, {3.8216115265338492`*^9, 
  3.821611530318245*^9}},
 CellTags->"Functions",ExpressionUUID->"5cca075e-a7e5-4ecf-851e-ccfbb6996a0f"],

Cell["", "EndOfSlide",ExpressionUUID->"84d1d4ff-3bb0-445c-9344-4a37843d5db7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e4aefb47-fca1-46db-9021-cf5f06c5fc3b"],

Cell[CellGroupData[{

Cell["Solving Differential Equations", "Section",
 CellChangeTimes->{{3.8209782290160785`*^9, 3.8209782349465294`*^9}},
 CellTags->"Functions",ExpressionUUID->"5485ede6-52b2-451f-a914-8baa962c4b5d"],

Cell[TextData[{
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"],
 " computes numerical solutions of differential equations. It can handle \
initial value problems, boundary value problems for linear equations, and \
partial differential equations in two variables."
}], "Text",
 CellChangeTimes->{3.82161155845051*^9},
 CellTags->"Functions",ExpressionUUID->"9e21fae2-2a8b-4772-a5e7-046762226392"],

Cell[TextData[{
 "This shows the use of ",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"],
 " to solve an initial value problem:"
}], "CodeText",
 CellChangeTimes->{{3.8216115626713734`*^9, 3.821611566899972*^9}, {
  3.821834567852168*^9, 3.82183457002461*^9}},
 CellTags->"Functions",ExpressionUUID->"0c27bfbc-6f4e-4ab3-93fe-0e033de0e4a0"],

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "''"}], "[", "x", "]"}], "+", 
        RowBox[{
         RowBox[{"f", "'"}], "[", "x", "]"}], "+", 
        RowBox[{"f", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    "f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"d5703a4a-d3a0-4715-b0a6-7a5fe6fc9d63"],

Cell[TextData[{
 "Results from ",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"],
 " use the same format as results from ",
 StyleBox[ButtonBox["Solve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Solve"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["DSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DSolve"],
  FontWeight->"Bold"],
 ", and they are used in much the same way."
}], "Text",
 CellChangeTimes->{{3.8216115780169396`*^9, 3.821611634840001*^9}},
 CellTags->"Functions",ExpressionUUID->"02804726-1098-4053-ae77-88d14e6bf84f"],

Cell[TextData[{
 "The solutions are represented using ",
 StyleBox[ButtonBox["InterpolatingFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InterpolatingFunction"],
  FontWeight->"Bold"],
 " objects, which provide a convenient way of interpolating between the \
points that were computed by the numerical differential equation solver."
}], "Text",
 CellChangeTimes->{3.8216116781667223`*^9},
 CellTags->"Functions",ExpressionUUID->"c3e03984-fea4-4af0-b37f-c33f49c417ea"],

Cell[TextData[{
 "The value of the solution at a point ",
 StyleBox["x", "MR"],
 " can be obtained by using this solution to substitute for ",
 StyleBox["f", "Input"],
 " in ",
 Cell[BoxData[
  RowBox[{"f", "[", "x", "]"}]], "Input",ExpressionUUID->
  "b6f494ce-4e97-4530-aab8-24fa976576bc"],
 "."
}], "Text",
 CellChangeTimes->{{3.8216614978072424`*^9, 3.8216614982381268`*^9}},
 CellTags->"Functions",ExpressionUUID->"32c90c0c-0ccd-44f7-a662-c070b9d796a8"],

Cell[TextData[{
 "For example, this input gives the value of the solution at ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"f", "[", "2", "]"}], "Input"]],ExpressionUUID->
  "5fa690c8-c0f5-428b-be97-3e237bb320df"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.821661499627406*^9, {3.8218345741153183`*^9, 
   3.821834574579282*^9}},ExpressionUUID->"3715d837-0e3d-4f97-8885-\
97b3eb680402"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "2", "]"}], "/.", "soln"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"2d5cba56-cd14-42e5-8922-3751aa2d211a"],

Cell["This generates a plot of the solution:", "CodeText",
 CellChangeTimes->{{3.821834577049878*^9, 3.821834577449085*^9}},
 CellTags->"Functions",ExpressionUUID->"76f74fca-2246-49d2-b041-ed2651b0258e"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "/.", "soln"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"4285c0ae-c539-4874-9acf-de75fa5d2c9f"],

Cell["\<\
The advantage of working with interpolation functions is that, as continuous \
functions, you can do many basic computations with them easily.\
\>", "Text",
 CellChangeTimes->{{3.821661509479005*^9, 3.821661510289446*^9}},
 CellTags->"Functions",ExpressionUUID->"7e35b1b0-fad1-4093-86bb-183e53f15f4c"],

Cell["\<\
For example, here is a plot of the derivative of the solution:\
\>", "CodeText",
 CellChangeTimes->{
  3.8216615127438383`*^9, {3.821834579155078*^9, 
   3.821834579513888*^9}},ExpressionUUID->"e556498e-f488-4ef1-8acc-\
15467f0c2d76"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}], "/.", "soln"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"",ExpressionUUID->"1fe3b372-ddcf-4ba1-8ae4-9499e185bd36"],

Cell[TextData[{
 "To see the discrete points from which the interpolation function is \
created, you can reap and sow those values using ",
 StyleBox[ButtonBox["EvaluationMonitor",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EvaluationMonitor"],
  FontWeight->"Bold"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.821611719669793*^9, {3.8218345831445*^9, 
   3.8218345839160967`*^9}},ExpressionUUID->"dcad3451-c8f7-4f1a-b04d-\
13cc828547dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"Reap", "[", "\[IndentingNewLine]", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"f", "''"}], "[", "x", "]"}], "+", 
          RowBox[{
           RowBox[{"f", "'"}], "[", "x", "]"}], "+", 
          RowBox[{"f", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"f", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], 
      ",", "f", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
      RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
       RowBox[{"Sow", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"f", "[", "x", "]"}]}], "}"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"dc503948-c2ed-4451-9fc9-b495ea8e45d6"],

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{
   RowBox[{"Last", "[", "soln", "]"}], ",", "12"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"01dd0125-07e4-419c-a9ad-49f4d02ab209"],

Cell["", "EndOfSlide",ExpressionUUID->"d3b33cbb-e002-43f0-a9af-9bf07e2c69f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3b719c92-b6b8-4fdf-a182-88a22f8320f3"],

Cell[CellGroupData[{

Cell["Solving Linear Systems", "Section",
 CellChangeTimes->{{3.820978289786141*^9, 3.8209782954314756`*^9}},
 CellTags->"Functions",ExpressionUUID->"6eb516f7-1c59-445c-b4fd-10ccf1928167"],

Cell[TextData[{
 "Solving systems of equations by matrix methods is one of the oldest and \
most common tasks in working with large amounts of data. Given a matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["A", "Input"], TraditionalForm]],ExpressionUUID->
  "abef6b0f-0434-4b15-9f9a-bc09bb2b56e5"],
 " and a vector ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "8b7fed9e-0d18-4f28-97dd-8788cbae9f69"],
 ", the solution to the equation ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"A", ".", "x"}], "=", "b"}], "Input"], TraditionalForm]],
  ExpressionUUID->"6f8f8476-1a87-45b3-9b11-4eb2ad655531"],
 " can be solved by a variety of methods. Although you could start by finding \
the inverse ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["A", 
     RowBox[{"-", "1"}]], "Input"], TraditionalForm]],ExpressionUUID->
  "f11d9231-fa5f-450b-a024-84b69dd21422"],
 ", there are better, more efficient ways to solve such systems in ",
 "the Wolfram Language",
 "."
}], "Text",
 CellChangeTimes->{{3.8209783169551835`*^9, 3.8209783221030655`*^9}},
 CellTags->"Functions",ExpressionUUID->"53a01afa-6cc8-456b-b479-d4255328647f"],

Cell[TextData[{
 "For example, here is a simple matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["A", "Input"], TraditionalForm]],ExpressionUUID->
  "7416580f-b168-4dd4-9274-0ef7d415b7e2"],
 " and vector ",
 Cell[BoxData[
  FormBox[
   StyleBox["b", "Input"], TraditionalForm]],ExpressionUUID->
  "9c32a571-8888-4f92-b2d9-0532a88d1b2c"],
 ":"
}], "CodeText",
 CellChangeTimes->{{3.8218345873544064`*^9, 3.821834587800832*^9}},
 CellTags->"Functions",ExpressionUUID->"9f35dabc-ffef-4483-9768-a553cbaf3e05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.", ",", " ", "2."}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", ",", "7."}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"3.8", ",", "1.5"}], "}"}]}], ";"}]}], "Input",
 CellTags->"Functions",
 CellLabel->"In[33]:=",ExpressionUUID->"f405a266-14ad-42ca-9596-2966fabc057d"],

Cell["This solves the matrix equation:", "CodeText",
 CellChangeTimes->{{3.8218345909533453`*^9, 3.821834591326659*^9}},
 CellTags->"Functions",ExpressionUUID->"2b63cf9a-8eaa-4e68-98b8-4b844df48ac3"],

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"A", ",", "b"}], "]"}]}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[35]:=",ExpressionUUID->"faae2f76-3485-4f6e-82bf-70d1ade78568"],

Cell[TextData[{
 "And here is a check\[LongDash]this gives the dot product of ",
 StyleBox["A", "MR"],
 " and ",
 StyleBox["x:", "MR"]
}], "CodeText",
 CellChangeTimes->{{3.821834593373657*^9, 3.821834593826688*^9}},
 CellTags->"Functions",ExpressionUUID->"9c55256d-018d-497f-831b-43c7eb50a8f2"],

Cell[BoxData[
 RowBox[{"A", ".", "x"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[36]:=",ExpressionUUID->"b6c6ac6c-2350-444e-a4af-0071c7a0d028"],

Cell["\<\
Of course, these functions are particularly important on larger problems.\
\>", "Text",
 CellTags->"Functions",ExpressionUUID->"5c7aff4d-47b1-4a25-8e52-ece88e5bdd62"],

Cell[TextData[{
 "Here is a random ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1000", "\[Cross]", "1000"}], TraditionalForm]],ExpressionUUID->
  "f04fc498-f860-441f-8c68-8c5517fd6ff7"],
 " matrix and corresponding vector:"
}], "CodeText",
 CellChangeTimes->{{3.82183459565056*^9, 3.821834596041747*^9}},
 CellTags->"Functions",ExpressionUUID->"4487621f-71d2-48fe-a6fc-1df13ae63283"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[37]:=",ExpressionUUID->"2845395f-9e33-4bef-aeb9-21d1f1695dd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "mat", "]"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[38]:=",ExpressionUUID->"7f58fa1c-b410-40da-82e9-b31b5e983397"],

Cell["This solves the matrix equation:", "CodeText",
 CellChangeTimes->{{3.821834598117518*^9, 3.821834598502458*^9}},
 CellTags->"Functions",ExpressionUUID->"9fbe1304-d8b9-4c47-b5fc-ad81644bda3f"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"mat", ",", "b"}], "]"}]}], ";"}], "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[39]:=",ExpressionUUID->"995aa62a-44b8-4195-816b-c6d52c91cf27"],

Cell[TextData[{
 "And here is a check, using ",
 StyleBox[ButtonBox["Chop",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Chop"],
  FontWeight->"Bold"],
 " to replace numbers that are close to zero with 0:"
}], "CodeText",
 CellChangeTimes->{
  3.8216118777719727`*^9, {3.821834600966724*^9, 3.821834601370081*^9}},
 CellTags->"Functions",ExpressionUUID->"0d12b2d4-366b-4641-a434-8f206ca76054"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mat", ".", "x"}], "-", "b"}], "//", "Chop"}], "//", 
  "Short"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[40]:=",ExpressionUUID->"82fbb6d1-cdd1-4f6d-898e-b15a2f92557a"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"A", ",", "x", ",", "mat", ",", "b", ",", "vals", ",", "soln"}], 
  "]"}]], "Input",
 CellTags->"Functions",
 CellLabel->"In[41]:=",ExpressionUUID->"a9b3cf81-4f01-4f7a-8d61-1f20487dc9ff"],

Cell[TextData[{
 "For other numerical operations, see the tutorial ",
 StyleBox[ButtonBox["Numerical Functions",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/MathematicalFunctions#21826"],
  FontWeight->"Bold"],
 ". For more information on linear systems, see the tutorial ",
 StyleBox[ButtonBox["Solving Linear Systems",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/LinearAlgebra#22511"],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.8216119822676277`*^9, 3.8216119945209727`*^9}, {
  3.821612056151166*^9, 3.8216120561596327`*^9}, {3.821612089667587*^9, 
  3.8216121082156796`*^9}},
 CellTags->"Overview",ExpressionUUID->"4e53f1b8-0d4d-4009-b040-5a69e7f724dc"],

Cell["", "EndOfSlide",ExpressionUUID->"2e4d05ce-ff61-4872-89a1-785764b3f662"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2b206b14-9cfd-4a24-b1b2-bfb786732b7d"],

Cell[CellGroupData[{

Cell["Working with Numbers", "Section",
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"7bba1170-53d7-4295-8017-de4da2134cb8"],

Cell[TextData[{
 StyleBox["Exact", "Text"],
 " and inexact numbers"
}], "Item",
 CellChangeTimes->{3.8209783592614717`*^9},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"adc367f1-c7fa-4192-8359-ab356e8f68ec"],

Cell["Working with high-precision numbers", "Item",
 CellChangeTimes->{3.8209783608960867`*^9},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"d018cf1a-511d-424e-a1be-091a6ee28e4f"],

Cell["Computations involving high-precision numbers", "Item",
 CellChangeTimes->{3.8209783623930097`*^9},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"d31ba7a0-50a0-4a40-822b-8aa3277af1f5"],

Cell[TextData[{
 "Controlling precision in numerical functions\[LongDash]",
 StyleBox[ButtonBox["WorkingPrecision",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WorkingPrecision"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["PrecisionGoal",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PrecisionGoal"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{
  3.820978363938876*^9, {3.8216121381086884`*^9, 3.821612142881963*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"b0993bf3-1ddf-4ea6-a417-302b8ea6ff8b"],

Cell["", "EndOfSlide",ExpressionUUID->"25caa977-da78-4ec1-9682-2c0d16f13165"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"96e8620e-098b-4869-a6ac-dc97821b7c06"],

Cell[CellGroupData[{

Cell["Exact and Inexact Numbers", "Section",
 CellChangeTimes->{{3.8209783918570137`*^9, 3.820978399864294*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"80cada77-e0c1-406a-ba11-d2f0f86ea864"],

Cell["\<\
Unlike a typical pocket calculator, the Wolfram Language can manipulate exact \
numbers as well as inexact numbers. In fact, there are three distinct kinds \
of arithmetic that the Wolfram Language can do\[LongDash]exact, IEEE, and \
arbitrary-precision arithmetic. IEEE arithmetic is very fast, but its \
precision is fixed by the floating-point unit of your computer. \
Arbitrary-precision arithmetic is slower, but the Wolfram Language tracks the \
precision of all computations using this arithmetic so you gain finer control \
of the result. Which arithmetic routine is invoked depends upon the input and \
the nature of the computation as the next few sections describe. \
\>", "Text",
 CellChangeTimes->{{3.8209784893654795`*^9, 3.820978547223611*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"ac7accca-70e4-459f-a37d-594ed221a53d"],

Cell["\<\
Exact numbers include integers, fractions, and symbolic constants that are \
represented exactly:\
\>", "CodeText",
 CellChangeTimes->{{3.8218346112048597`*^9, 3.8218346115945168`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"87f87a81-4241-4f5f-afb3-831d662b49c4"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Precision", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     FractionBox["22", "7"], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"",ExpressionUUID->"a2ed2298-3f15-42fe-9d79-0e965c3ba484"],

Cell["\<\
Inexact numbers are numbers such as 3.14159 that are represented by \
specifying some finite number of digits in the number:\
\>", "CodeText",
 CellChangeTimes->{{3.8218346138417253`*^9, 3.821834614286425*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"7f9682a3-3c2c-4efe-b0e4-8f0e840c121f"],

Cell[BoxData[
 RowBox[{"Precision", "[", "3.1415926535897932384626433832795", 
  "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"69f06bf1-5033-4745-abf6-b9741f6d4ca3"],

Cell["", "EndOfSlide",ExpressionUUID->"870209b0-e014-4777-af6f-117a85d40441"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e5efad73-58bd-4e07-b37f-ff1b5573fc1b"],

Cell[CellGroupData[{

Cell["Calculations", "Section",
 CellChangeTimes->{3.820978578697099*^9},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"b54ffed7-e65f-439c-a9d3-c40fafa47fad"],

Cell["\<\
In calculations with numbers, the Wolfram Language normally returns the \
precision that is justified by the input.\
\>", "Text",
 CellChangeTimes->{{3.8209785849912434`*^9, 3.8209785979030943`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"56676376-9512-41c6-8391-1d4cce70775b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Exact inputs\"\>", "\<\"\[LongRightArrow]\"\>", "\<\"Exact \
results\"\>"},
    {"\<\"Inexact inputs\"\>", "\<\"\[LongRightArrow]\"\>", "\<\"Inexact \
results\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"SR"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {1 -> GrayLevel[0.5]}, 
     "RowsIndexed" -> {2 -> GrayLevel[0.85]}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{0.62}}}],
  "Grid"]], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.8209806332704053`*^9},
 ShowStringCharacters->
  False,ExpressionUUID->"de26a2fb-5c5b-435b-99ef-ef574ecde6c4"],

Cell[TextData[{
 "For example, since this input involves the inexact number ",
 StyleBox["4.0", "MR"],
 ", Wolfram Language works out an inexact approximation:"
}], "CodeText",
 CellChangeTimes->{{3.8209786283700113`*^9, 3.8209786346235685`*^9}, {
  3.82183462066593*^9, 3.821834621094116*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"3cd50427-1813-4ff7-9c07-b5b1528b5af4"],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  FractionBox["\[Pi]", "4.0"], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[44]:=",ExpressionUUID->"60544c1f-4234-4402-9d9e-de3dd51057f1"],

Cell["If the input is exact, the result will also be exact:", "CodeText",
 CellChangeTimes->{{3.821834623876227*^9, 3.821834624261797*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"7f926558-6d3e-43c8-89b3-f6acfd40cb58"],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  FractionBox["\[Pi]", "4"], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[45]:=",ExpressionUUID->"f9db6c39-a13f-4fb2-987f-74b1e989af8d"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"Cos", "[", "1", "]"}]], "Input",ExpressionUUID->
  "e369e708-9414-4843-bb42-5cf00bb7f19e"],
 " evaluates to the exact result ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Cos", "[", "1", "]"}], "Input"]],ExpressionUUID->
  "69401881-3591-4e61-86b3-1a47b4606667"],
 ":"
}], "CodeText",
 CellChangeTimes->{{3.8216121987667904`*^9, 3.8216121987667904`*^9}, {
  3.821834625515759*^9, 3.8218346258901987`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"88f46037-24e3-4e0a-ae6c-93638328a346"],

Cell[BoxData[
 RowBox[{"Cos", "[", "1", "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[46]:=",ExpressionUUID->"e1e85738-cf74-404f-92fb-bbcce7109c14"],

Cell[TextData[{
 "You can get an inexact approximation for ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Cos", "[", "1", "]"}], "Input"]],ExpressionUUID->
  "ccabf2a2-8802-43fc-9506-7f07f9e324ad"],
 " either by starting with an inexact input or by using the ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"],
  FontWeight->"Bold"],
 " function:"
}], "CodeText",
 CellChangeTimes->{{3.8216122125219727`*^9, 3.821612218218766*^9}, {
  3.821834628036332*^9, 3.821834628469442*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"93d98674-e4aa-4ee1-8369-abcf7b54a780"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Cos", "[", "1", "]"}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[47]:=",ExpressionUUID->"ff9ce77b-0637-4500-9ca9-52ad9be0ebac"],

Cell["", "EndOfSlide",ExpressionUUID->"09b57ac1-b91a-4476-84c4-1859effd9931"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"09e702bc-ffc2-4173-a024-5af233e9ad4f"],

Cell[CellGroupData[{

Cell["High-precision Numbers", "Section",
 CellChangeTimes->{{3.8209786659291315`*^9, 3.8209786714029274`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"dc286458-b411-434b-a36d-43280f5a092a"],

Cell["\<\
The Wolfram Language can also do high-precision calculations.\
\>", "Text",
 CellChangeTimes->{{3.820978684196192*^9, 3.820978687863679*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"d61a3b30-ab42-44ff-b2bc-0cf71dacc3c0"],

Cell[TextData[{
 "The second argument in ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"],
  FontWeight->"Bold"],
 " specifies the precision to use for an inexact approximation:"
}], "CodeText",
 CellChangeTimes->{
  3.8216122399169436`*^9, {3.821834631618318*^9, 3.821834631959126*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"db108971-e84a-4332-8354-59d65da58710"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "100"}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[48]:=",ExpressionUUID->"fef9ca30-5003-4b8b-b281-ecf175a6c738"],

Cell[TextData[{
 "If the second argument is omitted, the ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"],
  FontWeight->"Bold"],
 " function uses the numbers provided by the hardware of your computer:"
}], "CodeText",
 CellChangeTimes->{{3.821612244753588*^9, 3.821612252001861*^9}, {
  3.821834633516067*^9, 3.821834633860015*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"cafae96a-db20-45d7-a24a-f1e87e93ef2a"],

Cell[BoxData[
 RowBox[{"N", "[", "\[Pi]", "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[49]:=",ExpressionUUID->"bfb2ba60-fcea-4638-93e8-6e3300217e98"],

Cell[TextData[{
 "The numbers provided by the hardware of your computer are called ",
 StyleBox["machine numbers",
  FontSlant->"Italic"],
 ". Machine numbers typically have a fixed precision of about 16 ",
 StyleBox["decimal",
  FontSlant->"Italic"],
 " digits."
}], "Text",
 CellChangeTimes->{
  3.821612261399273*^9, {3.8216622607580414`*^9, 3.8216622613998737`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"163a8ca5-41c8-4e2a-a9ad-28785e626903"],

Cell[TextData[{
 "A typical value of ",
 StyleBox[ButtonBox["$MachinePrecision",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/$MachinePrecision"],
  FontWeight->"Bold"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"53", 
    SubscriptBox["log", "10"], "2"}], TraditionalForm]], "InlineFormula",
  ExpressionUUID->"e292f13f-252e-4ffd-b3c6-0ff182cf06f3"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.8216622629716735`*^9, {3.821834636544259*^9, 
   3.821834636996614*^9}},ExpressionUUID->"d6f9681a-3d10-48f1-bc15-\
30aa29086c59"],

Cell[BoxData["$MachinePrecision"], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[50]:=",ExpressionUUID->"9abe9256-3d6d-464f-b489-a9ec038df5d8"],

Cell["Machine numbers also have a limited range:", "CodeText",
 CellChangeTimes->{{3.8218346406498413`*^9, 3.821834641023632*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"b6f41fe8-ee6f-45d2-8637-b35cde727c1b"],

Cell["$MinMachineNumber", "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[51]:=",ExpressionUUID->"f3a86294-4ce8-4a95-9362-20afa70d34e5"],

Cell["$MaxMachineNumber", "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[52]:=",ExpressionUUID->"2aef227d-6ffe-426d-a9a2-c8d10ca85153"],

Cell["\<\
Numbers outside of this range are automatically represented using the system \
that is used for high-precision numbers.\
\>", "Text",
 CellChangeTimes->{{3.82166238034739*^9, 3.821662381006625*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"4cc182f9-3f28-4748-8a85-cb3db8292066"],

Cell["\<\
With machine numbers, this calculation would give numerical overflow:\
\>", "CodeText",
 CellChangeTimes->{
  3.821662382988324*^9, {3.821834643417214*^9, 
   3.8218346438072147`*^9}},ExpressionUUID->"edabe5df-e367-4e53-96d9-\
f631e27e43f5"],

Cell[BoxData[
 RowBox[{"Exp", "[", "100000000000000000.", "]"}]], "Input",
 CellChangeTimes->{{3.821662313790024*^9, 3.8216623421632557`*^9}},
 CellTags->"Working with Numbers",
 CellLabel->"In[19]:=",ExpressionUUID->"a14527cf-d982-4dac-98e6-8c693f60fd58"],

Cell["", "EndOfSlide",ExpressionUUID->"ac375917-a8f2-4c79-bb1e-a10f8a37bd9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7763cfb1-0dd9-4509-b2e0-a1dc600fc5cd"],

Cell[CellGroupData[{

Cell["High-precision Calculations", "Section",
 CellChangeTimes->{3.8209787739379272`*^9, 3.8209788121698093`*^9},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"2a3116ee-211f-476c-85dd-7739a503718c"],

Cell["\<\
In calculations with numbers, the Wolfram Language normally returns the \
precision that is justified by the input.\
\>", "Text",
 CellChangeTimes->{{3.820978783353348*^9, 3.8209787871935062`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"9f5eb8b1-2da4-4013-ab21-ca35194bed67"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"High-precision inputs\"\>", "\<\"\[LongRightArrow]\"\>", \
"\<\"high-precision results\"\>"},
    {"\<\"Low-precision inputs\"\>", "\<\"\[LongRightArrow]\"\>", \
"\<\"low-precision results\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"SR"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {1 -> GrayLevel[0.5]}, 
     "RowsIndexed" -> {2 -> GrayLevel[0.85]}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{0.62}}}],
  "Grid"]], "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.820978802677187*^9},
 ShowStringCharacters->
  False,ExpressionUUID->"a2bc96a0-be05-4708-98ee-f18b13906c0c"],

Cell[TextData[{
 "For example, a high-precision value for the argument of ",
 StyleBox[ButtonBox["Cos",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Cos"],
  FontWeight->"Bold"],
 " will automatically lead to a high-precision result:"
}], "CodeText",
 CellChangeTimes->{{3.8216122787706394`*^9, 3.821612298529472*^9}, {
  3.8218346489063997`*^9, 3.8218346509000587`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"9fb5e69d-c5b4-4cac-9554-c025c92a9858"],

Cell[BoxData[
 RowBox[{"Cos", "[", "1.0471975511965977461542144610931676280657", 
  "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[54]:=",ExpressionUUID->"38e6d029-0e49-4585-8208-e5abc018b93f"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["N",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/N"],
  FontWeight->"Bold"],
 " function will not raise the precision of a low-precision result:"
}], "CodeText",
 CellChangeTimes->{{3.821612311921444*^9, 3.8216123186331654`*^9}, {
  3.821834653048498*^9, 3.821834653426673*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"75ba8941-03ad-4a69-8ce5-67eb9bb1c5f2"],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "1.04712", "]"}], ",", "1000"}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[55]:=",ExpressionUUID->"e5ba8d48-c0c4-4942-8052-9b5f0367698e"],

Cell[BoxData[
 ButtonBox[
  RowBox[{"Machine", " ", "and", " ", "adaptive", " ", "precision"}],
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], 
     Cell[
      CellGroupData[{
        Cell["Machine and Adaptive Precision", "Section"], 
        Cell[
         TextData[{
           Cell[
            BoxData[
             RowBox[{
               ButtonBox[
               "N", BaseStyle -> "Link", ButtonData -> "paclet:ref/N"], "[", 
               StyleBox["e", "TI"], "]"}]], "Input"], 
           " typically works by replacing numbers with machine numbers and \
computing the result:"}], "CodeText"], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{
               RowBox[{"e", "[", "h_", "]"}], "=", 
               RowBox[{
                 RowBox[{"Cos", "[", "1", "]"}], "-", 
                 FractionBox[
                  RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"1", "+", "h"}], "]"}], "-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], 
                  RowBox[{"2", " ", "h"}]]}]}]], "Input", CellLabel -> 
            "In[1]:="], 
           Cell[
            BoxData[
             RowBox[{
               RowBox[{"Cos", "[", "1", "]"}], "-", 
               FractionBox[
                RowBox[{
                  RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], "+", 
                  RowBox[{"Sin", "[", 
                    RowBox[{"1", "+", "h"}], "]"}]}], 
                RowBox[{"2", " ", "h"}]]}]], "Output", 
            CellChangeTimes -> {3.8216123256584215`*^9}, CellLabel -> 
            "Out[1]="]}, Open]], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{"N", "[", 
               RowBox[{"e", "[", 
                 FractionBox["1", 
                  SuperscriptBox["10", "12"]], "]"}], "]"}]], "Input", 
            CellLabel -> "In[2]:="], 
           Cell[
            BoxData["0.000012270934307334613`"], "Output", 
            CellChangeTimes -> {3.8216123257171926`*^9}, CellLabel -> 
            "Out[2]="]}, Open]], 
        Cell[
        "This is equivalent to the expression with machine numbers:", 
         "CodeText"], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{"e", "[", 
               FractionBox["1", 
                SuperscriptBox["10.", "12"]], "]"}]], "Input", CellLabel -> 
            "In[3]:="], 
           Cell[
            BoxData["0.000012270934307334613`"], "Output", 
            CellChangeTimes -> {3.821612325746143*^9}, CellLabel -> 
            "Out[3]="]}, Open]], 
        Cell[
        "The machine roundoff error shows up clearly on a log-log plot of the \
difference quotient error:", "CodeText"], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{"ListLogLogPlot", "[", 
               RowBox[{
                 RowBox[{"h", "=", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "k"}]]}], ";", 
                 RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"h", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"e", "[", "h", "]"}], "]"}], "]"}]}], "}"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"k", ",", "0", ",", "16"}], "}"}]}], "]"}]}], 
               "]"}]], "Input", CellChangeTimes -> {3.492446439406609*^9}, 
            CellLabel -> "In[4]:=", CellID -> 676729120], 
           Cell[
            BoxData[
             GraphicsBox[{{}, {
                RGBColor[0.368417, 0.506779, 0.709798], 
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                
                PointBox[{{
                 0., -2.457444111655545}, {-2.3025850929940455`, \
-7.013056131553447}, {-4.605170185988091, -11.617731311565295`}, \
{-6.907755278982137, -16.22289576580654}, {-9.210340371976182, \
-20.828149234518442`}, {-11.512925464970229`, -25.220401145895373`}, \
{-13.815510557964274`, -24.308977342564734`}, {-16.11809565095832, \
-22.36147538640401}, {-18.420680743952367`, -19.774999847533415`}, \
{-20.72326583694641, -19.634742529109637`}, {-23.025850929940457`, \
-16.654563298373787`}, {-25.328436022934504`, -13.659615063141215`}, \
{-27.631021115928547`, -11.308277156473345`}, {-29.933606208922594`, \
-8.629218154132774}, {-32.23619130191664, -5.597538775609191}, \
{-34.538776394910684`, -4.212506234552704}, {-36.841361487904734`, \
-0.6156264703860141}}]}, {{}, {}}}, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {-38.39240839082434, -27.14586439708518}, 
              DisplayFunction -> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledFrameTicks[{Log, Exp}]}, {
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledFrameTicks[{Log, Exp}]}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{-38.39240839082434, 
               0.}, {-27.14586439708518, -0.6156264703860141}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Ticks -> FrontEndValueCache[{
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledTicks[{Log, Exp}]}, {{{-39.14394658089878, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-32.23619130191664, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-25.328436022934504`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-18.420680743952367`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-11.512925464970229`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-4.605170185988091, 
                   FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], StandardForm], {0.01, 
                   0.}}, {-36.841361487904734`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-34.538776394910684`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-29.933606208922594`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-27.631021115928547`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-23.025850929940457`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-20.72326583694641, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-16.11809565095832, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-13.815510557964274`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-9.210340371976182, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-6.907755278982137, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-2.3025850929940455`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {0., 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.302585092994046, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.3978952727983707`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.4849066497880004`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.5649493574615367`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.6390573296152584`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.70805020110221, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.772588722239781, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.833213344056216, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.8903717578961645`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.9444389791664403`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}}, {{-25.328436022934504`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-20.72326583694641, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-16.11809565095832, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-11.512925464970229`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-6.907755278982137, 
                   FormBox["0.001`", StandardForm], {0.01, 
                   0.}}, {-2.3025850929940455`, 
                   FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 3}]& ], StandardForm], {0.01, 
                   0.}}, {-29.933606208922594`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-27.631021115928547`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-23.025850929940457`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-18.420680743952367`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-13.815510557964274`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-9.210340371976182, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-4.605170185988091, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {0., 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.302585092994046, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.3978952727983707`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.4849066497880004`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.5649493574615367`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.6390573296152584`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.70805020110221, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.772588722239781, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.833213344056216, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.8903717578961645`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.9444389791664403`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}}}]]], "Output", 
            CellChangeTimes -> {3.8216123260967555`*^9}, CellLabel -> 
            "Out[4]="]}, Open]], 
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"], $Line = 0; Null]], 
         "ExampleDelimiter", CellID -> 622424864], 
        Cell[
         TextData[{
           Cell[
            BoxData[
             RowBox[{
               ButtonBox[
               "N", BaseStyle -> "Link", ButtonData -> "paclet:ref/N"], "[", 
               RowBox[{
                 StyleBox["e", "TI"], ",", 
                 StyleBox["p", "TI"]}], "]"}]], "InlineFormula"], 
           " works adaptively using arbitrary-precision numbers when ", 
           Cell[
            BoxData[
             StyleBox["p", "TI"]], "InlineFormula"], " is not ", 
           StyleBox[
            ButtonBox[
            "MachinePrecision", BaseStyle -> "Link", ButtonData -> 
             "paclet:ref/MachinePrecision"], FontWeight -> "Bold"], ":"}], 
         "CodeText", 
         CellChangeTimes -> {{3.8216123892621956`*^9, 
          3.8216123993509817`*^9}}], 
        Cell[
         BoxData[
          RowBox[{
            RowBox[{
              RowBox[{"e", "[", "h_", "]"}], "=", 
              RowBox[{
                RowBox[{"Cos", "[", "1", "]"}], "-", 
                FractionBox[
                 RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"1", "+", "h"}], "]"}], "-", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"1", "-", "h"}], "]"}]}], 
                 RowBox[{"2", " ", "h"}]]}]}], ";"}]], "Input", CellLabel -> 
         "In[5]:="], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{"N", "[", 
               RowBox[{
                 RowBox[{"e", "[", 
                   FractionBox["1", 
                    SuperscriptBox["10", "12"]], "]"}], ",", "20"}], "]"}]], 
            "Input", CellLabel -> "In[6]:="], 
           Cell[
            BoxData[
             RowBox[{"0.54030230586813971740093660744297660372`20.", "-", 
               RowBox[{"1.`20.", " ", 
                 SuperscriptBox["2.`20.", 
                  RowBox[{
                    RowBox[{"-", "1.`20."}], "+", "k"}]], " ", 
                 SuperscriptBox["5.`20.", "k"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1.`20."}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1.`20.", "-", 
                    RowBox[{"1.`20.", " ", 
                    SuperscriptBox["10.`20.", 
                    RowBox[{
                    RowBox[{"-", "1.`20."}], " ", "k"}]]}]}], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"1.`20.", "+", 
                    SuperscriptBox["10.`20.", 
                    RowBox[{
                    RowBox[{"-", "1.`20."}], " ", "k"}]]}], "]"}]}], 
                   ")"}]}]}]], "Output", 
            CellChangeTimes -> {3.821612326410847*^9}, CellLabel -> 
            "Out[6]="]}, Open]], 
        Cell[
        "With adaptive precision, the difference quotient error matches the \
theoretical value:", "CodeText"], 
        Cell[
         CellGroupData[{
           Cell[
            BoxData[
             RowBox[{
               RowBox[{"Show", "[", 
                 RowBox[{
                   RowBox[{"ListLogLogPlot", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"h", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "h", "]"}], ",", "20"}], "]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "0", ",", "16"}], "}"}]}], "]"}], "]"}],
                    ",", 
                   RowBox[{"LogLogPlot", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "6"], " ", 
                    RowBox[{"Cos", "[", "1", "]"}], " ", 
                    SuperscriptBox["h", "2"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"h", ",", 
                    FractionBox["1", 
                    SuperscriptBox["10", "16"]], ",", "1"}], "}"}]}], "]"}]}],
                  "]"}], "//", "Quiet"}]], "Input", CellLabel -> "In[7]:="], 
           Cell[
            BoxData[
             GraphicsBox[{{{}, {
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{
                  0., -2.4574441116555454`}, {-2.3025850929940455`, \
-7.013056131553219}, {-4.605170185988091, -11.617731311590846`}, \
{-6.907755278982137, -16.222896547578344`}, {-9.210340371976182, \
-20.828066684066435`}, {-11.512925464970229`, -25.433236869559526`}, \
{-13.815510557964274`, -30.038407055542667`}, {-16.11809565095832, \
-34.64357724153071}, {-18.420680743952367`, -39.2487474275188}, \
{-20.72326583694641, -43.853917613506894`}, {-23.025850929940457`, \
-48.45908779949498}, {-25.328436022934504`, -53.064257985483074`}, \
{-27.631021115928547`, -57.66942817147117}, {-29.933606208922594`, \
-62.274598357459254`}, {-32.23619130191664, -66.87976854344736}, \
{-34.538776394910684`, -71.48493872943544}, {-36.841361487904734`, \
-76.09010891542353}}]}, {{}, {}}}, {{{}, {}, 
                 TagBox[{
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwVxX040wkAB/A125CXkbBSTDqjqOU9jmZiNVbb7B5x6kopL+t0pZUoPE+e
pITITeeuLj3YSo6bVOL3rdCm1MhbJS91u3JGz9316uXc3R+f5+MYlyKOJ5NI
JMF//t+jcXdDXTIXt0pHRK3USNz71v/guiQuwjepLMWUSEiczb07E7gYpOZ2
DZMjcfBcg+pNPBezqatF03Ni3DhAUTls54ITeUzoMSVGEPtSfb6Ei3b6ks0X
J8XgK17UJgZy0Z0bFZHRL8bOHyRKRzoX40cehXkpxJAfStqnVgaDGfWb6fP1
YhhfWyG3FgSjKP+yl8trET4vJcLW/slB9qzfq/BTIuhz0tuL8zlIjX8fV8kS
wW7Dy6oSNgcVrNj1VR1ClFNequTfr0Pf6B8fhuKFIOmrWA1dQcjtFbAnyEIM
nri71X5REMbDrpeGCDaDsHL3eS8MxKNuZsrinE1YLNF3MUq/hKvVyPygDgH2
G0rSx4YCkN3OU5lbCdCtNLnPYgRgNHFuLiIiAkoyo69+mz9u3jGhD5wNRx4/
9cSVc2tRZpwArYaPPdS0MJHWD7JWaaaMwsft1G51CMMPDzzb5yVGbASjJ32i
QugLVnGKs+b4Bky8TusVlvpgpnKvuayDB834/W+SH3pjQNkkLyTxcCmu5aMH
zRt1jvXsLf5h+DvfOJIn8AJZMHtKmh2KCMVloea4J75OkJ+cvLEeS9NKLOUa
D7j55fKbZ0Mw3uQ2YrXAA1NHmIvWhoXgzuRC0Sx/DbQ1RnnLMrmg94lyPIvY
sD8X2rKlLRjqmObGawWrcUDaXTIzzYH0LStLSFmFtuuGaQIfDkgTAY9PFbvB
IdkpuG86CBUdb+MuGazE3Q39PfrkQPhYCo6Kz7jiqwKvt+UfAtAaOF0fy3TB
q6aXy6ty/bGDv9GdW+yMLDX7wulpP0wSnFV3mF/ALMjloslJX+RZDxywK3CC
opjQxX/0hk0Pg0NnLIO3mFQfneWFHw8rWVurmbj9oaisysITu6caq0w97SFO
v9emzV6D/b17zc7y7TCQ8NPhYjM2yvftnOl0YuCZ1GMk7p0bmvqnHFtMrPH5
iYYaOeiKWxY6yajLAnwyVfnJPjuj1sp+mYxuDmva0LvNA064orBtKPA1glVX
TEusnonCfkmD5VEyTLR/ZQTYL8EuE6fCeac/Ee7HagtWvLaGcNvj3ijdGEHX
WjZnLrZAU0t7xt2jY8SK6se7z5Ms4OzQ4uRuM0bkkewckzrpmBm++h2Z94Z4
v32BuieejqodeWY11b8TDxzn2ShLzfHPrtBQsvQVIasYqpN8MkVMvywxWveU
6KwsG1M0GYMtj29cZfOUMIiyDhw+YQxatIRK4Q0QfoZFhQslxqh7tubna9V9
RMWeXN9MvRGMhvQDBtInRJrLoRzJUiPs1bQVxuo0xHKlxHHuGA2M8Ao3Q56a
iInRpnqF09D6MEtdV91OFMyPUCfa0rBEG0AylN4jppJCUnpqqSip2Tkcp7tJ
aFd6NCtGKBj/xd72RvV1gjpYYzF8lQKu6ukmM+mvRMBp110L0ygYPXghI0Wn
ICr1TJNMSwoKM6z1i6QVxPPy8m2qFwbIoNk25urKCEsBo35MYYA6Fs2tSXeS
CJstpjrIDFBZfr7wkL+iJaOGHi3hGuBfbENiag==
                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$52583#1"]& ]}, {}}}, 
              AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {-38.39240839082434, -81.85228280389046}, 
              DisplayFunction -> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledFrameTicks[{Log, Exp}]}, {
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledFrameTicks[{Log, Exp}]}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], 
              Method -> {
               "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{-38.39240839082434, 
               0.}, {-81.85228280389046, -2.4574441116555454`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Ticks -> FrontEndValueCache[{
                 Charting`ScaledTicks[{Log, Exp}], 
                 Charting`ScaledTicks[{Log, Exp}]}, {{{-39.14394658089878, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "17"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-32.23619130191664, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-25.328436022934504`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-18.420680743952367`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-11.512925464970229`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-4.605170185988091, 
                   FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], StandardForm], {0.01, 
                   0.}}, {-36.841361487904734`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-34.538776394910684`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-29.933606208922594`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-27.631021115928547`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-23.025850929940457`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-20.72326583694641, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-16.11809565095832, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-13.815510557964274`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-9.210340371976182, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-6.907755278982137, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-2.3025850929940455`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {0., 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.302585092994046, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.3978952727983707`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.4849066497880004`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.5649493574615367`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.6390573296152584`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.70805020110221, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.772588722239781, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.833213344056216, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.8903717578961645`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.9444389791664403`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}}, {{-71.38013788281542, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "31"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-48.35428695287496, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "21"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-25.328436022934504`, 
                   FormBox[
                    TemplateBox[{"10", 
                    RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], StandardForm], {0.01, 
                   0.}}, {-2.3025850929940455`, 
                   FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], StandardForm], {0.01, 
                   0.}}, {-82.89306334778564, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-80.5904782547916, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-78.28789316179756, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-75.9853080688035, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-73.68272297580947, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-69.07755278982137, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-66.77496769682732, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-64.47238260383328, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-62.16979751083923, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-59.86721241784519, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-57.564627324851145`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-55.262042231857095`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-52.95945713886305, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-50.65687204586901, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-46.051701859880914`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-43.74911676688687, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-41.44653167389282, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-39.14394658089878, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-36.841361487904734`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-34.538776394910684`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-32.23619130191664, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-29.933606208922594`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-27.631021115928547`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-23.025850929940457`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-20.72326583694641, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-18.420680743952367`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-16.11809565095832, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-13.815510557964274`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-11.512925464970229`, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-9.210340371976182, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-6.907755278982137, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {-4.605170185988091, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {0., 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}, {2.302585092994046, 
                   FormBox[
                    TemplateBox[{0., 0.}, "Spacer2"], StandardForm], {0.005, 
                   0.}}}}]]], "Output", 
            CellChangeTimes -> {3.8216123265717096`*^9}, CellLabel -> 
            "Out[7]="]}, Open]]}, Open]], All]),
  Evaluator->Automatic,
  ImageSize->{195, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"b1a4e983-7122-4d6b-bd45-f5f6ea0ee4ed"],

Cell["", "EndOfSlide",ExpressionUUID->"c3e9b13e-463d-4d36-b8b4-535cfa1cfe3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f06ea65d-6c02-45ee-bbfd-3b3969712f83"],

Cell[CellGroupData[{

Cell["High-precision Numerical Computation", "Section",
 CellChangeTimes->{{3.8209788338816404`*^9, 3.820978843136628*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"1a85eb41-5642-49d0-9e9c-5885cd8597b5"],

Cell["\<\
In most numerical programs, errors resulting from the use of inexact numbers \
are only one source of numerical error. In a numerical integral, for example, \
there is also sampling and interpolation error. To get a reliable \
high-precision result, it is necessary to consider all these sources of error.\
\>", "Text",
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"c88c4b18-e6ec-45a6-89bc-016c36bf98bc"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["NIntegrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NIntegrate"],
  FontWeight->"Bold"],
 " function includes several options for specifying tolerances on numerical \
error:"
}], "CodeText",
 CellChangeTimes->{
  3.8216125770175753`*^9, {3.821834658340191*^9, 3.821834659045236*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"d67c366f-f24d-4d6d-9e90-7bccc9b117bb"],

Cell[BoxData[
 RowBox[{"Options", "[", "NIntegrate", "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[8]:=",ExpressionUUID->"9142ad1d-e047-46c6-96d2-44f9c44db256"],

Cell["Here is a high-precision numerical integral:", "CodeText",
 CellChangeTimes->{{3.82183466119244*^9, 3.82183466197493*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"5b4b39ca-a00e-41bf-9bfb-fc01b1ffba5b"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     FractionBox["7", "10"], "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "36"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "30"}]}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[57]:=",ExpressionUUID->"27d1c647-7a92-4705-a6da-544ba95cadbb"],

Cell[TextData[{
 "The ",
 StyleBox[ButtonBox["NIntegrate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NIntegrate"],
  FontWeight->"Bold"],
 " function generates a warning message if the input has low precision. \
Although the result may have high precision, the last few digits may be \
incorrect:"
}], "CodeText",
 CellChangeTimes->{{3.821612586448934*^9, 3.8216126101106977`*^9}, {
  3.82183466425662*^9, 3.821834665847101*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"541f5e6e-6972-4e24-9689-671eb3fdccb5"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"0.7", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "36"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "30"}]}], "]"}]], "Input",
 CellTags->"Working with Numbers",
 CellLabel->"In[58]:=",ExpressionUUID->"cc306b3c-f45f-4b1e-a6ee-02a3bc84da29"],

Cell["\<\
For general information on specifying tolerances on numerical error, see the \
Documentation Center for individual functions.\
\>", "Text",
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"5611cd2e-071b-4390-b8ce-2a9218d09036"],

Cell[TextData[{
 "See the tutorials ",
 ButtonBox["Numerical Precision, ",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Numbers#21155"],
 ButtonBox["Arbitrary-Precision Calculations",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Numbers#4686"],
 ButtonBox[",",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/NumericalPrecision"],
 " and ",
 ButtonBox["Exact and Approximate Results",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Numbers#9834"],
 " for extended discussions of precision and working with exact and \
approximate numbers in the Wolfram Language."
}], "Text",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{
  3.820980315439569*^9, {3.8216126721844754`*^9, 3.82161267219138*^9}, {
   3.8216127196285477`*^9, 3.821612719637625*^9}, {3.8216127596363077`*^9, 
   3.8216127596363077`*^9}},
 CellTags->
  "Working with \
Numbers",ExpressionUUID->"dbfec174-aaed-40fb-8d4f-09fb28b66940"],

Cell["", "EndOfSlide",ExpressionUUID->"30f77ae2-a702-4d3b-b984-a87686cb918d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fa490366-7af3-477a-a7a3-9064fe1107ed"],

Cell[CellGroupData[{

Cell["Large Arrays", "Section",
 CellTags->
  "Large Arrays",ExpressionUUID->"96849a68-23af-48e8-8781-4bebb77aafc1"],

Cell["Introduction to working with large arrays of data", "Item",
 CellChangeTimes->{3.8209788727424755`*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"ef760736-b068-444b-8ab2-2a5caf28424a"],

Cell["Creating and visualizing sparse arrays", "Item",
 CellChangeTimes->{3.820978877993949*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"4f6230e6-d9b7-4111-9f6f-335552714297"],

Cell["Computations with sparse arrays", "Item",
 CellChangeTimes->{3.8209788801988916`*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"8c38e58d-2e76-420e-9f61-4967fcbbfc66"],

Cell["Introduction to packed arrays", "Item",
 CellChangeTimes->{3.8209788820962954`*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"3e80ed31-78ae-4064-88f5-e802df01bc41"],

Cell["Working with packed arrays", "Item",
 CellChangeTimes->{3.820978884327696*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"5bbcda23-b881-4adb-9eea-186ec85f8345"],

Cell["", "EndOfSlide",ExpressionUUID->"27aefb6c-1ed9-4b75-8b0e-18752aa633e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0a503f07-a9fa-46cf-ac85-f752ac06ce21"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Large Arrays", "Color7",
 FontSlant->"Plain"]], "Section",
 CellTags->
  "Large Arrays",ExpressionUUID->"5a2f6148-34ea-4b41-a6e9-9e2f3352236a"],

Cell["\<\
When working with large arrays of data, it becomes very important that your \
computations are as efficient as possible. \
\>", "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"67554502-16ae-485b-8af9-ade534703d95"],

Cell[TextData[{
 "Simply representing a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100000", "\[Cross]", "100000"}], TraditionalForm]],ExpressionUUID->
  "45c22130-78a1-40aa-84fc-55a9116b56ef"],
 " matrix, for example, requires a very large amount of memory:"
}], "CodeText",
 CellChangeTimes->{{3.82183467466962*^9, 3.8218346751628323`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"5e8ee7f9-077c-4982-98f0-8f0a82fed5de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    SuperscriptBox["10", "5"], " ", 
    SuperscriptBox["10", "5"], " ", "16"}], "]"}], " ", "Byte"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[59]:=",ExpressionUUID->"f98d329d-6ca1-4f85-9aac-65e67767157d"],

Cell["That is 160 gigabytes!", "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"39b9d973-5d87-4d0e-a0a7-e32d7c6d3f70"],

Cell["\<\
Clearly, if you are going to work with large arrays of data in the Wolfram \
Language, there have to be efficient ways of representing such objects and \
fast routines for operating on them. In this section we will briefly look at \
two such technologies that are designed for working with very large datasets\
\[LongDash]sparse arrays and packed arrays.\
\>", "Text",
 CellChangeTimes->{{3.8209789324048867`*^9, 3.8209789358114777`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"d4b214b9-e9ee-4c25-a303-0b6a4ee02fec"],

Cell["", "EndOfSlide",ExpressionUUID->"b8c7a0ef-770d-4368-89ee-3f6d98594521"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6a2cc32e-c6cb-419e-af0d-369678aae167"],

Cell[CellGroupData[{

Cell["Creating Sparse Arrays", "Section",
 CellChangeTimes->{{3.82097895598238*^9, 3.8209789635231857`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"663563e2-a5cb-4518-862f-7d26f3aca5f3"],

Cell[TextData[{
 "Many applications in science and engineering involve work with very large \
matrices that have mostly 0\[CloseCurlyQuote]s as elements. Such objects are \
referred to as ",
 StyleBox["sparse arrays",
  FontSlant->"Italic"],
 ", and very fast and efficient algorithms have been developed for storing \
and operating on them. "
}], "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"cf61a68c-4e51-4268-a3ad-48ca9d825b0d"],

Cell["\<\
The Wolfram Language automatically recognizes arrays as sparse and uses \
appropriate algorithms automatically.\
\>", "Text",
 CellChangeTimes->{{3.8209789843158913`*^9, 
  3.8209789889128647`*^9}},ExpressionUUID->"8e481e2e-cf69-4990-8d49-\
40c16c04a0e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Matrix\>\"", ",", "\"\<Zitney/hydr1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", "mat1", "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"33b8152e-d908-4d75-ba26-34277d98c34a"],

Cell[TextData[{
 "You create a sparse array with the ",
 StyleBox[ButtonBox["SparseArray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SparseArray"],
  FontWeight->"Bold"],
 " function. For example, this creates a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "\[Cross]", "4"}], TraditionalForm]],ExpressionUUID->
  "94a7bcfc-85a2-4ec6-b03a-fc8ccc0789bd"],
 " sparse array with diagonal elements set to 1:"
}], "CodeText",
 CellChangeTimes->{
  3.821612807194536*^9, {3.821834688563833*^9, 3.821834689075286*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"c96f6dd3-9f20-48ad-90ac-21edcd5c4c3a"],

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Band", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[27]:=",ExpressionUUID->"735a3e50-d0af-4100-bc38-8b097cdb5c8c"],

Cell[TextData[{
 "The Wolfram Language represents such objects internally as a special data \
type, the ",
 StyleBox[ButtonBox["SparseArray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SparseArray"],
  FontWeight->"Bold"],
 " object you see above."
}], "Text",
 CellChangeTimes->{{3.8209789991356444`*^9, 3.820979002722831*^9}, {
  3.8216128151139927`*^9, 3.8216128211687574`*^9}, {3.8216629986070642`*^9, 
  3.821662999287279*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"ae740596-d44b-483b-b1e3-ffde438d0cca"],

Cell[TextData[{
 "To convert this object into the familiar matrix, wrap ",
 StyleBox[ButtonBox["Normal",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Normal"],
  FontWeight->"Bold"],
 " around it:"
}], "CodeText",
 CellChangeTimes->{
  3.8216630005927873`*^9, {3.821834692045702*^9, 
   3.8218346924727297`*^9}},ExpressionUUID->"cac8b593-7251-417f-b104-\
50eaa9c71ef1"],

Cell[BoxData[
 RowBox[{"Normal", "[", "mat2", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[28]:=",ExpressionUUID->"62650b6c-57f8-471f-9347-3e310eac856d"],

Cell[TextData[{
 "Or to simply display it as a traditional matrix, use ",
 StyleBox[ButtonBox["MatrixForm",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MatrixForm"],
  FontWeight->"Bold"],
 StyleBox[":",
  FontWeight->"Bold"]
}], "CodeText",
 CellChangeTimes->{
  3.8216128259198956`*^9, {3.821834694088276*^9, 3.821834694546751*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"879065e4-2ed6-4aa5-92f3-d79ae364963f"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat2", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[29]:=",ExpressionUUID->"b2d8677f-eb84-42cc-bfc7-790b7011cbbc"],

Cell[TextData[{
 "If you want to see the explicit rules associated with any ",
 StyleBox[ButtonBox["SparseArray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SparseArray"],
  FontWeight->"Bold"],
 " object, use ",
 StyleBox[ButtonBox["ArrayRules",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ArrayRules"],
  FontWeight->"Bold"],
 ":"
}], "CodeText",
 CellChangeTimes->{{3.8216128307041254`*^9, 3.8216128387370253`*^9}, {
  3.821834696941062*^9, 3.821834697709511*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"4a027bfc-9bb0-48af-8db0-db03b6b0868a"],

Cell[BoxData[
 RowBox[{"ArrayRules", "[", "mat2", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[30]:=",ExpressionUUID->"f6010b81-c5e4-4b3e-a859-4adb56193d41"],

Cell["", "EndOfSlide",ExpressionUUID->"525327b9-48ec-46eb-95e6-d66f8e47cd3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f42010ba-885f-4336-8e22-80abb02442ef"],

Cell[CellGroupData[{

Cell["Visualizing Sparse Arrays", "Section",
 CellChangeTimes->{{3.820979026672814*^9, 3.820979034583207*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"d0246185-d730-4324-8529-f73db8eb13bc"],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["ArrayPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ArrayPlot"],
  FontWeight->"Bold"],
 " (or ",
 StyleBox[ButtonBox["MatrixPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MatrixPlot"],
  FontWeight->"Bold"],
 ") to visualize sparse (and other) arrays:"
}], "CodeText",
 CellChangeTimes->{{3.8216128595997343`*^9, 3.821612866575536*^9}, {
  3.821834701128723*^9, 3.821834701610923*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"1addf4cf-2f71-4364-85c3-1cab3e3f5f12"],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", "mat2", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[66]:=",ExpressionUUID->"eb4bf21c-b593-4ddf-833e-5581a20fba35"],

Cell[TextData[{
 "You can adjust the colors that are used for each array element by using the \
",
 StyleBox[ButtonBox["ColorRules",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ColorRules"],
  FontWeight->"Bold"],
 " option:"
}], "CodeText",
 CellChangeTimes->{
  3.8216128741690845`*^9, {3.821834703045167*^9, 3.821834703413762*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"22fc5391-69f2-4e21-bb03-08aa78f789d7"],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"mat2", ",", 
   RowBox[{"ColorRules", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "\[Rule]", "Red"}], ",", 
      RowBox[{"1", "\[Rule]", "Blue"}]}], "}"}]}]}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[67]:=",ExpressionUUID->"47262be3-0c23-4fbe-a918-32d9af476d7b"],

Cell["", "EndOfSlide",ExpressionUUID->"cb70b881-e6ec-4bef-800a-1475d0cb43d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"686d11a2-d831-46b0-b9ca-e84b5de4e822"],

Cell[CellGroupData[{

Cell["Working with Sparse Arrays", "Section",
 CellChangeTimes->{{3.820979073335012*^9, 3.8209790796742773`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"3b2d8ef5-ffb5-4932-82ea-f226953f1c6b"],

Cell["\<\
The Wolfram Language has specialized routines for working with sparse array \
objects. In addition, sparse arrays are stored in a very efficient manner, \
enabling you to work with sparse objects that are orders of magnitude larger \
than the corresponding dense objects.\
\>", "Text",
 CellChangeTimes->{{3.820979089411769*^9, 3.820979094950693*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"b4e13d85-61d4-42fc-b79d-94d1a2f0f8c1"],

Cell[TextData[{
 "For example, here is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100000", "\[Cross]", "100000"}], TraditionalForm]],ExpressionUUID->
  "ab7f88d6-b4b6-4d56-b1c6-9ea99f91a12d"],
 " sparse array with random numbers on and within two positions of the \
diagonal, and 0\[CloseCurlyQuote]s everywhere else. (This may take up to \
about a half a minute to compute.):"
}], "CodeText",
 CellChangeTimes->{3.821834707830369*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"e4174484-4942-4021-bca2-a0006a3518fc"],

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "2"}]}], 
      "\[RuleDelayed]", 
      RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["10", "5"], ",", 
      SuperscriptBox["10", "5"]}], "}"}]}], "]"}]}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[68]:=",ExpressionUUID->"7e723443-49ef-497d-a309-863dc67c5a01"],

Cell["The size of the stored object may surprise you.", "Text",
 CellChangeTimes->{{3.8209791136939597`*^9, 3.8209791238784795`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"b702701f-3dfb-4838-8866-ef0c8610e689"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"ByteCount", "[", "mat", "]"}], "]"}], "Byte"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[69]:=",ExpressionUUID->"e0be8b55-6ed7-434f-a70c-e537731b3954"],

Cell["\<\
A dense array of the same size would require four to five orders of magnitude \
more memory, so working with such objects is a bit beyond the capabilities of \
modern computers:\
\>", "CodeText",
 CellChangeTimes->{{3.8216634564041424`*^9, 3.821663470161944*^9}, {
  3.821834710319235*^9, 3.8218347107297*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"12be45e1-98f9-4e65-be96-6b4a7ce08816"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    SuperscriptBox["10", "5"], " ", 
    SuperscriptBox["10", "5"], " ", "16"}], "]"}], " ", "Byte"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[70]:=",ExpressionUUID->"ad6c98d0-fbdb-4d1f-b2f3-c7bc37192f9b"],

Cell[TextData[{
 "Here are some timings to give you a sense of the speed differences between \
operations involving dense and sparse arrays. A ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2000", "\[Cross]", "2000"}], TraditionalForm]],ExpressionUUID->
  "39d6a219-aaba-4ff9-8a59-be762472c688"],
 " matrix is used to perform each of the six computations."
}], "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"b01fa216-b71c-4842-b16b-ac9ba93405e6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"\
]\\) = 2000\"\>",
      StripOnInput->False,
      FontWeight->"Bold"], 
     StyleBox["\<\"sparse\"\>",
      StripOnInput->False,
      FontWeight->"Bold"], 
     StyleBox["\<\"dense\"\>",
      StripOnInput->False,
      FontWeight->"Bold"]},
    {
     StyleBox["\<\"Transpose\"\>", "MR",
      StripOnInput->False], 
     RowBox[{"0.000144`2.6099074855912203", " ", "seconds"}], 
     RowBox[{"0.038089`5.03234456420935", " ", "seconds"}]},
    {
     StyleBox["\<\"LinearSolve\"\>", "MR",
      StripOnInput->False], 
     RowBox[{"0.00036`3.0078474942632556", " ", "seconds"}], 
     RowBox[{"0.436942`6.091968785725699", " ", "seconds"}]},
    {
     StyleBox["\<\"Dot\"\>", "MR",
      StripOnInput->False], 
     RowBox[{"0.000468`3.121790846570101", " ", "seconds"}], 
     RowBox[{"0.242628`5.836485911806423", " ", "seconds"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{
    "Columns" -> {Right, Left, Left}, "Rows" -> {{Baseline}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[1, 1, 0.85]}}},
   GridBoxDividers->{"Columns" -> {1, 0}, "Rows" -> {1, 0}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {{FontFamily -> "Times"}}},
   GridBoxSpacings->{"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}],
  "Grid"]], "Output",ExpressionUUID->"1db0a9aa-0b32-47cf-8421-427249050eb5"],

Cell[BoxData[
 ButtonBox[
  RowBox[{"Code", " ", "for", " ", "table"}],
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       BoxData[{
         RowBox[{
           RowBox[{"n", "=", "2000"}], ";"}], "\n", 
         RowBox[{
           RowBox[{"spmat", " ", "=", " ", 
             RowBox[{"SparseArray", "[", " ", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "/;", " ", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "1"}]}], 
                    " ", "\[RuleDelayed]", " ", 
                    RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", " ", 
                 RowBox[{"{", 
                   RowBox[{"n", ",", "n"}], "}"}], ",", "0.0"}], "]"}]}], 
           ";"}], "\n", 
         RowBox[{
           RowBox[{"densemat", "=", 
             RowBox[{"Normal", "[", "spmat", "]"}]}], ";"}]}], "Input"], 
      Cell[
       BoxData[{
         RowBox[{
           RowBox[{"comp1", "[", "mat_", "]"}], ":=", 
           RowBox[{
             RowBox[{
               RowBox[{"AbsoluteTiming", "[", 
                 RowBox[{
                   RowBox[{"Transpose", "[", "mat", "]"}], ";"}], "]"}], "[", 
               
               RowBox[{"[", "1", "]"}], "]"}], " ", "seconds"}]}], "\n", 
         RowBox[{
           RowBox[{"comp2", "[", "mat_", "]"}], ":=", 
           RowBox[{
             RowBox[{
               RowBox[{"AbsoluteTiming", "[", 
                 RowBox[{
                   RowBox[{"LinearSolve", "[", "mat", "]"}], ";"}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "seconds"}]}], "\n", 
         RowBox[{
           RowBox[{"comp3", "[", "mat_", "]"}], ":=", 
           RowBox[{
             RowBox[{
               RowBox[{"AbsoluteTiming", "[", 
                 RowBox[{
                   RowBox[{"Dot", "[", 
                    RowBox[{"mat", ",", "mat"}], "]"}], ";"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "seconds"}]}]}], "Input"], 
      Cell[
       BoxData[
        RowBox[{"trans", "=", 
          RowBox[{"comp1", "/@", 
            RowBox[{"{", 
              RowBox[{"spmat", ",", "densemat"}], "}"}]}]}]], "Input"], 
      Cell[
       BoxData[
        RowBox[{"ls", "=", 
          RowBox[{"comp2", "/@", 
            RowBox[{"{", 
              RowBox[{"spmat", ",", "densemat"}], "}"}]}]}]], "Input"], 
      Cell[
       BoxData[
        RowBox[{"dot", "=", 
          RowBox[{"comp3", "/@", 
            RowBox[{"{", 
              RowBox[{"spmat", ",", "densemat"}], "}"}]}]}]], "Input"], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{"Grid", "[", 
             RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    
                    RowBox[{
                    "\"\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) = \
2000\"", ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Bold\""}]}], "]"}], 
                    ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"sparse\"", ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Bold\""}]}], "]"}], 
                    ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"dense\"", ",", 
                    RowBox[{"FontWeight", "\[Rule]", "\"Bold\""}]}], "]"}]}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"trans", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Transpose\"", ",", "\"MR\""}], "]"}]}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"ls", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"LinearSolve\"", ",", "\"MR\""}], "]"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{"dot", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"Dot\"", ",", "\"MR\""}], "]"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"Alignment", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Right", ",", "Left", ",", "Left"}], "}"}], ",", 
                    "Baseline"}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"ItemStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"Background", "\[Rule]", 
                 RowBox[{"GrayLevel", "[", ".85", "]"}]}], ",", 
               RowBox[{"Dividers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"1.1", ",", ".5"}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input"], 
         Cell[
          BoxData[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"\\!\\(\\*\\nStyleBox[\\\"n\\\",\\nFontSlant->\\\"Italic\\\"]\
\\) = 2000\"", StripOnInput -> False, FontWeight -> "Bold"], 
               StyleBox[
               "\"sparse\"", StripOnInput -> False, FontWeight -> "Bold"], 
               StyleBox[
               "\"dense\"", StripOnInput -> False, FontWeight -> "Bold"]}, {
               StyleBox["\"Transpose\"", "MR", StripOnInput -> False], 
               RowBox[{"0.017834`4.7027937558018165", " ", "seconds"}], 
               RowBox[{"0.038428`5.036192775525597", " ", "seconds"}]}, {
               StyleBox["\"LinearSolve\"", "MR", StripOnInput -> False], 
               RowBox[{"0.002972`3.9245937985845125", " ", "seconds"}], 
               RowBox[{"0.2332`5.81927353958295", " ", "seconds"}]}, {
               StyleBox["\"Dot\"", "MR", StripOnInput -> False], 
               RowBox[{"0.019171`4.734189760685714", " ", "seconds"}], 
               RowBox[{"0.247606`5.84530615781546", " ", "seconds"}]}}, 
             AutoDelete -> False, 
             GridBoxAlignment -> {
              "Columns" -> {Right, Left, Left}, "Rows" -> {{Baseline}}}, 
             GridBoxBackground -> {"Columns" -> {{
                  GrayLevel[0.85]}}}, 
             GridBoxDividers -> {"Columns" -> {1, 0}, "Rows" -> {1, 0}}, 
             GridBoxFrame -> {
              "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemStyle -> {"Columns" -> {{FontFamily -> "Times"}}}, 
             GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}], 
            "Grid"]], "Output"]}, Open]]}, All]),
  Evaluator->Automatic,
  ImageSize->{105, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"d94ea071-2903-47b1-9623-df3fb8452160"],

Cell["", "EndOfSlide",ExpressionUUID->"771de6cb-399d-43b4-bb96-ac0deb14f92b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"17f2630c-d48d-44cb-ac3b-41cc9ba269ac"],

Cell[CellGroupData[{

Cell["Packed Arrays", "Section",
 CellChangeTimes->{{3.8209791517464523`*^9, 3.820979159969048*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"9de2a503-89e5-4490-aa84-3020d8c5a133"],

Cell[TextData[{
 "When you enter a list in the Wolfram Language, it is represented internally \
as an expression with head ",
 StyleBox[ButtonBox["List",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/List"],
  FontWeight->"Bold"],
 " even though its ",
 StyleBox[ButtonBox["OutputForm",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/OutputForm"],
  FontWeight->"Bold"],
 " is the more familiar list with curly braces:"
}], "CodeText",
 CellChangeTimes->{{3.82097918764708*^9, 3.8209791914693055`*^9}, {
  3.8216129628621745`*^9, 3.821612972358103*^9}, {3.821834722370121*^9, 
  3.821834722872067*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"1d2d1281-e24c-4596-9652-526c83ddbff5"],

Cell[BoxData[
 RowBox[{"lis", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[71]:=",ExpressionUUID->"4c8fc309-632c-4226-ac1e-6bba0909739b"],

Cell[BoxData[
 RowBox[{"FullForm", "[", "lis", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[72]:=",ExpressionUUID->"55421774-3151-42d3-a37f-8f1fe8b5ad93"],

Cell["\<\
Each integer you see in the list is itself an expression. Internally in the \
Wolfram Language C code, the data stored carries information about the type \
of the expression (in this case, the list itself and the machine integer \
elements of that list).\
\>", "Text",
 CellChangeTimes->{{3.820979216101102*^9, 3.8209792191719637`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"aa0bc7e4-9fab-492f-9dd4-135af4be4413"],

Cell[TextData[{
 "Using the built-in ",
 StyleBox[ButtonBox["Range",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Range"],
  FontWeight->"Bold"],
 " function to create the same list results in a list that looks the same \
(same ",
 StyleBox[ButtonBox["OutputForm",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/OutputForm"],
  FontWeight->"Bold"],
 "), but is stored internally using a different data structure:"
}], "CodeText",
 CellChangeTimes->{{3.8216129824982247`*^9, 3.821612994484047*^9}, {
  3.8218347353968782`*^9, 3.821834736286478*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"5c5b4952-190c-44c5-ae27-c7857ecd6f66"],

Cell[BoxData[
 RowBox[{"packedlist", "=", 
  RowBox[{"Range", "[", "5", "]"}]}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[73]:=",ExpressionUUID->"c6c996d8-b8c2-432d-a042-1dcfa4a3b1ea"],

Cell[BoxData[
 RowBox[{"packedlist", "===", "lis"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[74]:=",ExpressionUUID->"7f047de3-d769-48ba-a338-182f69e932d7"],

Cell[TextData[{
 "To see that these lists are in fact stored differently, use the function ",
 StyleBox[ButtonBox["PackedArrayQ",
  BaseStyle->"Link",
  ButtonData->"paclet:Developer/ref/PackedArrayQ"], "MR"],
 " that is available in the ",
 StyleBox["Developer`", "MR"],
 " context:"
}], "CodeText",
 CellChangeTimes->{{3.821613113436815*^9, 3.821613113436815*^9}, {
  3.821613161508237*^9, 3.821613161509274*^9}, {3.821834739282612*^9, 
  3.821834739745821*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"29968e30-6c0f-48f0-b62a-deb712fc61c8"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "lis", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[75]:=",ExpressionUUID->"b8184ce8-ff0c-4786-b71b-59b4af1343b0"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "packedlist", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[76]:=",ExpressionUUID->"9bf56f15-100c-4809-b37e-1ce161ec5988"],

Cell["\<\
Packed arrays are essentially an efficient data structure for representing \
and computing with large arrays of data. The main advantages to using them in \
your computations are improvements in memory footprint and speed. Here are a \
few examples that demonstrate this.\
\>", "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"f46187b4-3e33-4175-b4ef-da8bd5ad7f16"],

Cell["\<\
This gives the byte count for an array consisting of 1000 floating-point \
numbers:\
\>", "CodeText",
 CellChangeTimes->{{3.8218347533381233`*^9, 3.821834754012774*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"fbb9acb3-e31b-4122-b633-de8d2e99c48a"],

Cell[BoxData[
 RowBox[{"ByteCount", "[", 
  RowBox[{"pvec", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}]}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[77]:=",ExpressionUUID->"4a3eb46a-096e-4d10-a66b-f46883ec04cf"],

Cell["\<\
Changing one of the elements (in this case, the first) to be a different \
type, results in an array that is not packed:\
\>", "CodeText",
 CellChangeTimes->{{3.821834755906581*^9, 3.8218347562481833`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"907e12a0-a394-4d31-88f1-10827d2a8690"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qvec", "=", "pvec"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qvec", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ByteCount", "[", "qvec", "]"}]}], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[78]:=",ExpressionUUID->"fc1daa7a-f771-4eaa-968d-8a541e2de470"],

Cell["That is roughly a 4 times improvement in memory storage:", "CodeText",
 CellChangeTimes->{{3.821834758965987*^9, 3.821834759360955*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"e56a3bcb-b2f8-4daf-94a9-1bf4884c8ca9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"ByteCount", "[", "qvec", "]"}], 
   RowBox[{"ByteCount", "[", "pvec", "]"}]], "//", "N"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[81]:=",ExpressionUUID->"63d7e228-8517-4a07-ae9d-b04c9d255cac"],

Cell["\<\
The speed improvements are quite noticeable when working with packed arrays \
(and are even more noticeable as the dimension of the array increases):\
\>", "CodeText",
 CellChangeTimes->{{3.821834761251083*^9, 3.821834761623848*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"2f32f8b8-e1cf-4bbb-a2d1-8ffbaeb5319b"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"pvec", "+", "pvec"}], ",", 
    RowBox[{"{", "1000", "}"}]}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[82]:=",ExpressionUUID->"7a099d72-b80b-4a88-987e-7ddbb3f8344a"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"qvec", "+", "qvec"}], ",", 
    RowBox[{"{", "1000", "}"}]}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[83]:=",ExpressionUUID->"cd075afc-f6d9-49db-bb4b-e444a4ca3463"],

Cell[BoxData[
 ButtonBox[
  RowBox[{"Explanation", " ", "of", " ", "efficiency"}],
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       TextData[{"In the first operation, ", 
         StyleBox["pvec", "MR"], " is stored as a packed array, so when ", 
         StyleBox[
          ButtonBox[
          "Plus", BaseStyle -> "Link", ButtonData -> "paclet:ref/Plus"], 
          FontWeight -> "Bold"], 
         StyleBox[" ", FontWeight -> "Bold"], 
         "sees it, it knows all of the elements are machine real numbers, so \
internally, a function which adds arrays of real numbers is used. Except for \
overflow and underflow checking which ", "the Wolfram Language", 
         " does, this is done as fast as you could get by writing a loop to \
do the addition in a C program for two arrays of machine numbers."}], "Text", 
       CellChangeTimes -> {{3.8216132311860466`*^9, 3.821613255420801*^9}}], 
      Cell[
       TextData[{"In the second operation, ", 
         StyleBox["qvec", "MR"], " is stored as ", 
         StyleBox["List[\[Ellipsis]]", "MR"], ", so what happens is first ", 
         StyleBox[
          ButtonBox[
          "Plus", BaseStyle -> "Link", ButtonData -> "paclet:ref/Plus"], 
          FontWeight -> "Bold"], 
         " is threaded over the lists, producing (roughly)"}], "Text", 
       CellChangeTimes -> {{3.821613278518987*^9, 3.821613288227338*^9}}], 
      Cell[
       BoxData[
        RowBox[{"{", 
          RowBox[{
            RowBox[{
              RowBox[{"qvec", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{"qvec", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
              RowBox[{"qvec", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"qvec", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"...", "."}]}], "}"}]], "Input", Evaluatable -> False], 
      Cell[
       TextData[{
         StyleBox[
          ButtonBox[
          "Plus", BaseStyle -> "Link", ButtonData -> "paclet:ref/Plus"], 
          FontWeight -> "Bold"], 
         " has to process 1000 expressions. For each pair of numbers, ", 
         StyleBox[
          ButtonBox[
          "Plus", BaseStyle -> "Link", ButtonData -> "paclet:ref/Plus"], 
          FontWeight -> "Bold"], 
         " has to use the information attached to those numbers (", 
         StyleBox["i.e.", FontSlant -> "Italic"], 
         ", real, integer, machine, bignum, ", 
         StyleBox["etc", FontSlant -> "Italic"], 
         ".) to determine what function to use to do the actual adding. This \
all takes time and accounts for nearly all of the difference here."}], "Text",
        CellChangeTimes -> {{3.821613293532628*^9, 3.8216133195045137`*^9}}]},
      All]),
  Evaluator->Automatic,
  ImageSize->{155, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"ab90743a-64e1-4401-883a-336708b4f476"],

Cell["", "EndOfSlide",ExpressionUUID->"9f3ec625-5aeb-41a3-ba02-d10d500bdd8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7e2f3b99-ee0e-47e2-87aa-17ab1e41e017"],

Cell[CellGroupData[{

Cell["Using Packed Arrays", "Section",
 CellChangeTimes->{{3.82097925176339*^9, 3.820979260617505*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"82e27b09-6d2c-4d07-8afe-282139c449b7"],

Cell["\<\
Given their efficiency in storing and speed in computing with large arrays, \
it is important to try to use packed arrays whenever possible in your \
programs. Presented next are several different situations in which packed \
arrays are used by the Wolfram Language.\
\>", "Text",
 CellChangeTimes->{{3.820979294573112*^9, 3.8209792982714157`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"8d77e994-fae6-435e-a6ed-188b97621530"],

Cell[CellGroupData[{

Cell["Listable and Structural Operations", "Subsection",
 CellTags->
  "Large Arrays",ExpressionUUID->"fe010985-5d65-4b13-93a9-d931e7dcc334"],

Cell[TextData[{
 "Here is a list of those built-in functions that have the ",
 StyleBox[ButtonBox["Listable",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Listable"],
  FontWeight->"Bold"],
 " attribute (remove ",
 StyleBox["//Short", "MR"],
 " to see the entire list):"
}], "CodeText",
 CellChangeTimes->{{3.82161338353323*^9, 3.821613410972233*^9}, {
  3.82183476630309*^9, 3.821834766642105*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"466b14f4-dc38-4d2a-9e60-0a668ce4cc71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Attributes", "[", "#", "]"}], ",", " ", "Listable"}], "]"}], 
     "&"}]}], "]"}], "//", "Short"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[84]:=",ExpressionUUID->"5ab2b069-b878-4742-8acf-a8b3c4ee72d3"],

Cell["\<\
Most of the functions given in this list will produce packed array output \
given a packed array as input.\
\>", "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"b897ac05-3e3c-4adc-afa4-45b565af8ed9"],

Cell[TextData[{
 "In addition, many built-in functions that perform structural operations on \
expressions will also take advantage of the packed array \
machinery\[LongDash]functions such as ",
 StyleBox[ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Part"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Join",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Join"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Transpose",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Transpose"],
  FontWeight->"Bold"],
 ", and so on:"
}], "CodeText",
 CellChangeTimes->{{3.8216134250404587`*^9, 3.821613438930114*^9}, 
   3.821664326458243*^9, {3.821834769244569*^9, 3.8218347696148853`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"fdecd28b-3057-44a5-b974-d55e5fb895cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "]"}], ",", 
     RowBox[{"{", "500", "}"}], ",", 
     RowBox[{"{", "500", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.393844785014451*^9, 3.393844786529744*^9}},
 CellTags->"Large Arrays",
 CellLabel->"In[85]:=",ExpressionUUID->"0fcca7b4-3bb5-4430-8a4d-0e77bc05ce01"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "mat", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[86]:=",ExpressionUUID->"bd6ba56c-3ede-4d81-937d-f7b147b4db4e"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"newmat", "=", 
    RowBox[{"Transpose", "[", "mat", "]"}]}], ";"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[87]:=",ExpressionUUID->"8db5b37e-f670-4e37-ab37-c844f7e04250"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "newmat", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[88]:=",ExpressionUUID->"011a8b0c-f8ea-490c-b7c6-fb4bdae34594"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Packed Arrays", "Subsection",
 CellChangeTimes->{{3.820981088615793*^9, 
  3.8209810905377235`*^9}},ExpressionUUID->"8be0eec4-af12-4102-98b6-\
b02c40b5d6d9"],

Cell["\<\
Here is an example that shows how the use of packed arrays can significantly \
speed up certain computations. You will create a simple function for \
computing a two-dimensional lattice random walk.\
\>", "Text",ExpressionUUID->"c501408a-41ba-4a66-8458-f737c5e71d94"],

Cell[TextData[{
 "Here are the compass directions. Note that ",
 StyleBox["NSEW", "MR"],
 " is not packed:"
}], "CodeText",
 CellChangeTimes->{{3.82183477263664*^9, 
  3.821834773055636*^9}},ExpressionUUID->"91764e0f-68c2-45b9-930a-\
1e5a8593c867"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NSEW", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Developer`PackedArrayQ", "[", "NSEW", "]"}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"b1aea64e-d60b-42f7-b783-2637e2630cb9"],

Cell["Here is the random walk function:", "CodeText",
 CellChangeTimes->{{3.821834775380863*^9, 
  3.8218347768407803`*^9}},ExpressionUUID->"87447d72-2bf9-4ea0-b0ab-\
86905eac65ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"walk2D", "[", "t_", "]"}], ":=", 
  RowBox[{"Accumulate", "[", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"NSEW", ",", "t"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.49244785715458*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"eec70727-ea6e-4952-bdfa-c1459005a888"],

Cell[TextData[{
 "Compute how long a ",
 Cell[BoxData[
  FormBox["10000000", TraditionalForm]], "None",ExpressionUUID->
  "0fbfba00-20e2-45c7-811f-d14fb02055ef"],
 "-step walk takes:"
}], "CodeText",
 CellChangeTimes->{{3.821834778635336*^9, 
  3.8218347790645657`*^9}},ExpressionUUID->"c041da77-0d46-41bb-a698-\
f7d9ce38d61c"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"walk2D", "[", 
    SuperscriptBox["10", "7"], "]"}], ";"}], "]"}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"1d2fba88-79fb-4a9b-bdf0-fbbbcbaaf6ae"],

Cell["Now, create a packed version of this code:", "CodeText",
 CellChangeTimes->{{3.821834781337873*^9, 
  3.821834781735065*^9}},ExpressionUUID->"f8c4b3b9-8c49-43a7-a89b-\
a4faf6a067d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NSEWpacked", "=", "\[IndentingNewLine]", 
   RowBox[{"Developer`ToPackedArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Developer`PackedArrayQ", "[", "NSEWpacked", "]"}]}], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"30f7839a-8049-452f-833f-b70e342fb13e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"walk2Dpacked", "[", "t_", "]"}], ":=", 
  RowBox[{"Accumulate", "[", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"NSEWpacked", ",", "t"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.492447907229608*^9, 3.4924479161363792`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"4ea26be9-2cef-4a44-ad69-f262ba364ef3"],

Cell["It is roughly an order of magnitude speedup:", "CodeText",
 CellChangeTimes->{{3.8218347841007347`*^9, 
  3.8218347845213957`*^9}},ExpressionUUID->"451b7e1a-5c10-4330-913d-\
02894bb7756f"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"walk2Dpacked", "[", 
    SuperscriptBox["10", "7"], "]"}], ";"}], "]"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"1a7f9a42-00f3-42d3-81df-2e76525c4e3a"],

Cell["", "EndOfSlide",ExpressionUUID->"80e46f2d-77eb-4474-9a11-6d5e4e6d293f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"107e574a-4eee-4fb0-80e9-779e5aef5223"],

Cell[CellGroupData[{

Cell["Built-in Functions that Return Packed Arrays", "Section",
 CellChangeTimes->{{3.8209793407662387`*^9, 3.820979351286516*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"14cc879e-826a-4bb4-903a-89e9ad8801cd"],

Cell[TextData[{
 "Functions such as ",
 StyleBox[ButtonBox["Fourier",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Fourier"],
  FontWeight->"Bold"],
 " do their computations on machine numbers and so they are already using \
arrays. In such cases, these functions will give their output in terms of a \
packed array:"
}], "CodeText",
 CellChangeTimes->{
  3.821613486978292*^9, {3.821834787902171*^9, 3.821834788304015*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"c1a0800d-e5fd-40e1-ae80-e0ebecf3bc26"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", 
  RowBox[{"Fourier", "[", 
   RowBox[{"N", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[97]:=",ExpressionUUID->"ae4ad2ad-feaa-4bca-afa3-b78c5e242181"],

Cell[TextData[{
 "Whether the input is a packed array or not, if ",
 StyleBox[ButtonBox["Fourier",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Fourier"],
  FontWeight->"Bold"],
 " does its computation with machine numbers, it internally uses arrays \
already, so it is natural to give the output in terms of a packed array."
}], "Text",
 CellChangeTimes->{3.8216134978592863`*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"28b79120-5b7b-4b15-bf74-bd31fda82af5"],

Cell["", "EndOfSlide",ExpressionUUID->"e0d4f723-3e3b-47de-bbcb-69f28adb0028"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f32c6cb8-0fb8-420e-ae34-73da8f96b500"],

Cell[CellGroupData[{

Cell["Hints for Working with Packed Arrays", "Section",
 CellChangeTimes->{{3.820979366742749*^9, 3.8209793745361614`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"a19f9053-ed85-4414-822b-c94f4d81391f"],

Cell["\<\
Perhaps the most important thing is to try to make sure that you do \
operations on lists of elements all at once or in groups whenever possible. \
The functional style of programming and the many list-based constructs in the \
Wolfram Language make this much easier.\
\>", "Item",
 CellChangeTimes->{3.820980322811805*^9},
 CellTags->
  "Large Arrays",ExpressionUUID->"e6c1776d-b961-42c0-aace-b20e481f7f08"],

Cell["\<\
The data type needs to be consistent for there to even be a packed array \
representation.\
\>", "Item",
 CellTags->
  "Large Arrays",ExpressionUUID->"a9f6310b-f5ea-4b85-9369-d438df011d9a"],

Cell["\<\
Following are a few examples that include some tools you can use to help you \
write code that takes advantage of packed arrays:\
\>", "CodeText",
 CellChangeTimes->{{3.8218347939232893`*^9, 3.8218347943281727`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"4423e610-b481-4a28-9ba3-32007e877e49"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayForm", "[", 
  RowBox[{"Range", "[", "10000", "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[98]:=",ExpressionUUID->"9e23c757-8989-4e66-aa91-2331a7727af6"],

Cell[BoxData[
 RowBox[{"SetSystemOptions", "[", 
  RowBox[{"PackedArrayOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\"\<UnpackMessage\>\"", "\[Rule]", "True"}], "}"}]}], 
  "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->"In[99]:=",ExpressionUUID->"5dff1a75-2e25-42b8-8375-a75eb2e91e59"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Apply", "[", 
   RowBox[{"Plus", ",", " ", 
    RowBox[{"N", "[", 
     RowBox[{"Range", "[", "10000", "]"}], "]"}]}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[100]:=",ExpressionUUID->"edf5519d-d47d-429c-aab1-1ccc715cadf1"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"N", "[", 
    RowBox[{"Range", "[", "10000", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[101]:=",ExpressionUUID->"b39d7e06-1b23-49cd-8e14-c2c59272a156"],

Cell["\<\
You should also be aware that many of the built-in functions have thresholds \
at which the packed array technology is used.\
\>", "Text",
 CellTags->
  "Large Arrays",ExpressionUUID->"00e7dd44-8414-456d-8bae-1884364bbf79"],

Cell[TextData[{
 "For example, for small arrays, ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"],
  FontWeight->"Bold"],
 " does not represent its output in a packed array as the small amount of \
overhead to do so is not justified by the small object it is working with:"
}], "CodeText",
 CellChangeTimes->{{3.821613535474346*^9, 3.821613543827667*^9}, {
  3.8218347988244877`*^9, 3.821834799239979*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"c0034a18-3b91-439a-a17f-38886c6e3161"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"i", " ", 
      RowBox[{"Pi", "/", "10."}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[102]:=",ExpressionUUID->"47fa4522-046b-4e60-9994-4f4dc137b4ac"],

Cell["But for larger arrays, it does pack them:", "CodeText",
 CellChangeTimes->{{3.821834801768339*^9, 3.821834802141761*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"9e3053e1-87df-4c68-a2e0-546fdd302190"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"i", " ", 
      RowBox[{"Pi", "/", "10."}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "500"}], "}"}]}], "]"}], "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[103]:=",ExpressionUUID->"b893b7e2-59f7-426f-b23a-6b1188be74db"],

Cell[TextData[{
 "Here is a list of several system options that control various compilation \
thresholds. All of these are user controlled via ",
 StyleBox[ButtonBox["SystemOptions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SystemOptions"],
  FontWeight->"Bold"],
 ":"
}], "CodeText",
 CellChangeTimes->{
  3.8216135612701178`*^9, {3.821834806127048*^9, 3.821834806861905*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"48211574-6658-4ad0-b3a4-7f7274d654e5"],

Cell[BoxData[
 RowBox[{"SystemOptions", "[", "\"\<CompileOptions\>\"", "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[104]:=",ExpressionUUID->"c6b9147b-bc15-43af-be73-be3a4442ec51"],

Cell[TextData[{
 "For a detailed look at packed and sparse arrays, look at the tutorial ",
 ButtonBox["Sparse Arrays: Manipulating Lists.",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ManipulatingLists#23168"]
}], "Text",
 CellChangeTimes->{{3.8216135975759144`*^9, 3.8216135975759144`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"ac3f6b03-c7c2-460a-bdfc-efdd27c20721"],

Cell["\<\
This resets the system option that controls the display of messages \
associated with packed arrays:\
\>", "CodeText",
 CellChangeTimes->{{3.821834809344825*^9, 3.8218348097548428`*^9}},
 CellTags->
  "Large Arrays",ExpressionUUID->"d1e00574-d84e-4339-8171-db3fb8654573"],

Cell[BoxData[
 RowBox[{"SetSystemOptions", "[", 
  RowBox[{"PackedArrayOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\"\<UnpackMessage\>\"", "\[Rule]", "False"}], "}"}]}], 
  "]"}]], "Input",
 CellTags->"Large Arrays",
 CellLabel->
  "In[105]:=",ExpressionUUID->"2b0f7e9e-f7ca-43eb-9f83-5de8704656b0"],

Cell["", "EndOfSlide",ExpressionUUID->"9bf2da0b-9a88-49ba-a3cb-b3ccde08db09"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1dc3cccb-5dda-4f91-af94-57963b021969"],

Cell[CellGroupData[{

Cell["Exercises", "Section",
 CounterAssignments->{{"Chapter", 5}, {"ExerciseNumber", 0}},
 CellTags->"Exercises",ExpressionUUID->"11656155-69c0-4a59-8aed-d5e8787629bf"],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Solving an Equation Numerically"
}], "Subsection",
 CellChangeTimes->{{3.820980205400056*^9, 3.820980212013563*^9}},
 CellTags->{
  "Exercises", 
   "Solving Numerically"},ExpressionUUID->"eaf30a00-0ee3-44e4-8e87-\
bbb4a708e152"],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the following input to get a plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "b2acbd88-2a5f-47e1-9813-29000d2eec2d"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", 
    RowBox[{"x", "/", "4"}]}], TraditionalForm]],ExpressionUUID->
  "f645510f-278e-4f31-a959-58ae991dcab6"],
 " on the same graph. The points where the two curves cross are solutions of \
the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sin", "(", "x", ")"}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"x", "/", "4"}]}]}], TraditionalForm]],ExpressionUUID->
  "1b33806e-71ca-443f-bb0f-07a6c4cd933c"],
 "."
}], "Item",
 CellTags->{
  "Exercises", 
   "Solving Numerically"},ExpressionUUID->"93542c1f-77f9-4cf5-95be-\
73e4c84b7be0"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"1", "-", 
      FractionBox["x", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellTags->{"Exercises", "Solving Numerically"},
 CellLabel->"",ExpressionUUID->"b11ff97e-efab-407b-ae74-ad0eb9f4edbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the following input to compute one of the three real solutions of \
the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"sin", "(", "x", ")"}], "=", 
    RowBox[{"1", "-", 
     RowBox[{"x", "/", "4"}]}]}], TraditionalForm]],ExpressionUUID->
  "dc61edb4-c5e8-426d-9223-478554b2928b"],
 ". The first argument in ",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 " is the equation to be solved, and the second argument gives the variable \
and the starting value for that variable. The algorithm used by ",
 StyleBox[ButtonBox["FindRoot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindRoot"],
  FontWeight->"Bold"],
 " begins with the specified starting value when it searches for a solution."
}], "Item",
 CellChangeTimes->{{3.8216139935436807`*^9, 3.8216140011056786`*^9}},
 CellTags->{
  "Exercises", 
   "Solving Numerically"},ExpressionUUID->"6f79029f-45ee-4ca4-809d-\
932a272f6c8a"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"1", "-", 
     FractionBox["x", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellTags->{"Exercises", "Solving Numerically"},
 CellLabel->"",ExpressionUUID->"63de1a07-1c95-473c-99e4-ddfd90683128"],

Cell["Compute the other two real solutions to this equation.", "Item",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10000.},
 CellTags->{
  "Exercises", 
   "Solving Numerically"},ExpressionUUID->"255e24f9-3cf1-489d-aa20-\
36322aea4d7b"]
}, Open  ]],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
      "The approximate locations of the other two solutions can be seen by \
plotting the two sides of the equation on the same graph and noting the \
points where the two lines intersect.", "Text"], 
      Cell[
       TextData[{"The algorithm used by ", 
         StyleBox[
          ButtonBox[
          "FindRoot", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/FindRoot"], FontWeight -> "Bold"], 
         " will often converge to the solution that is closest to the \
starting value."}], "Text", CellChangeTimes -> {3.821614028270944*^9}]}, All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"897ce869-35ee-4c5d-a9ab-f71c7f42b378"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      TextData[{
       "For each solution there are many possible starting values that will \
cause ", 
        StyleBox[
         ButtonBox[
         "FindRoot", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/FindRoot"], FontWeight -> "Bold"], 
        " to converge to that solution. "}], "Text", 
      CellChangeTimes -> {{3.8216140534980955`*^9, 3.821614080823479*^9}}], 
     Cell[
      TextData[{
       "Here are inputs showing one possible set of starting values for \
computing the three real solutions of the equation ", 
        Cell[
         BoxData[
          FormBox[
           RowBox[{
             RowBox[{"sin", "(", "x", ")"}], "=", 
             RowBox[{"1", "-", 
               FractionBox["x", "4"]}]}], TraditionalForm]], "Input"], ".", 
        Cell[
         BoxData[
          Cell[""]]]}], "CodeText", 
      CellChangeTimes -> {3.8216140835352235`*^9}], 
     Cell[
      BoxData[
       RowBox[{"FindRoot", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
             RowBox[{"1", "-", 
               FractionBox["x", "4"]}]}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"FindRoot", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
             RowBox[{"1", "-", 
               FractionBox["x", "4"]}]}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"FindRoot", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", 
             RowBox[{"1", "-", 
               FractionBox["x", "4"]}]}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "6"}], "}"}]}], "]"}]], "Input"]}, WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"62a1ee42-15da-4096-a58e-ba4fc603d004"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Curve Fitting"
}], "Subsection",
 CellChangeTimes->{3.8209802203279324`*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"d7595e83-fc92-4f91-bca0-73ac041d5f28"],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the following two inputs to define values for ",
 StyleBox["xdata ", "Input",
  FontWeight->"Plain"],
 "and ",
 StyleBox["ydata.", "Input",
  FontWeight->"Plain"],
 " In this exercise, the value of ",
 StyleBox["xdata", "MR"],
 " represents the values of the independent variable in a dataset, and the \
value of ",
 StyleBox["ydata", "MR"],
 " gives values for the dependent (response) variable."
}], "Item",
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"f1d37dd3-2bfb-4129-ae9b-24fb6b4ead9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xdata", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "11", ",", "12", ",", 
     "15"}], "}"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Curve Fitting"},
 CellLabel->
  "In[111]:=",ExpressionUUID->"e95c0348-eb50-4eb9-8eb9-474c8f0338b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ydata", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.7", ",", "5.9", ",", "12.8", ",", "25.1", ",", "29.2", ",", "30.1", 
     ",", "42.0", ",", "43.9"}], "}"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Curve Fitting"},
 CellLabel->
  "In[112]:=",ExpressionUUID->"b5701654-ce8b-4542-b36b-61e8ccd5accb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the following inputs to see a plot of this data. ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], "Input"]],ExpressionUUID->
  "75535bdf-196b-4634-9a81-beb01092289e"],
 " is used here to combine ",
 StyleBox["x", "Input",
  FontWeight->"Plain"],
 StyleBox["data", "Text",
  FontWeight->"Plain"],
 StyleBox[" ", "Input",
  FontWeight->"Plain"],
 "and ",
 StyleBox["ydata", "Text"],
 " into a list of pairs suitable for use as input to ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{3.8216143266475096`*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"f2d63ca0-6791-4b4e-9ce8-52a311ca7841"],

Cell[BoxData[
 RowBox[{"xydata", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}]}]], "Input",
 CellTags->{"Exercises", "Curve Fitting"},
 CellLabel->
  "In[113]:=",ExpressionUUID->"db18a1ef-c946-4add-a21f-e91ab3b59633"],

Cell[BoxData[
 RowBox[{"dataplot", "=", 
  RowBox[{"ListPlot", "[", "xydata", "]"}]}]], "Input",
 CellTags->{"Exercises", "Curve Fitting"},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2bb4f77e-14da-4c3b-8942-01d7c125bd09"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 " to fit the linear model ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "72b433f8-0a81-44d3-aae1-e53720c77350"],
 " to these data."
}], "Item",
 CellChangeTimes->{3.8216143329842215`*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"ed87e833-56fc-4ecb-9250-8a9720d1727b"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       TextData[{"Look up ", 
         StyleBox[
          ButtonBox[
          "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
         " in the Documentation Center or evaluate ", 
         StyleBox["?LinearModelFit", "Input"], " to get it syntax."}], 
       "CodeText", 
       CellChangeTimes -> {{3.821614352767872*^9, 3.8216143585345235`*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{"?", "LinearModelFit"}]], "Input"], 
         Cell[
          BoxData[
           RowBox[{
             StyleBox[
             "\"\!\(\*RowBox[{\\\"LinearModelFit\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) constructs \
a linear model of the form \!\(\*RowBox[{SubscriptBox[\\\"\[Beta]\\\", \
\\\"0\\\"], \\\"+\\\", RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"1\\\"], \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"1\\\"]}], \\\"+\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"2\\\"], SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"2\\\"]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\) that fits the \!\(\*SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\
\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\) for successive \!\(\*StyleBox[\\\"x\\\
\", \\\"TI\\\"]\) values 1, 2, \!\(\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\).\\n\!\(\*RowBox[{\\\"LinearModelFit\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"11\\\", \\\
\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"12\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"21\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"22\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) constructs a linear model of the \
form \!\(\*RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"0\\\"], \\\"+\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"1\\\"], SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"1\\\"]}], \\\"+\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"2\\\"], SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"2\\\"]}], \\\"+\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\) where the \!\(\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\) depend on the variables \
\!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"k\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"LinearModelFit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\) constructs a \
linear model from the design matrix \!\(\*StyleBox[\\\"m\\\", \\\"TI\\\"]\) \
and response vector \!\(\*StyleBox[\\\"v\\\", \\\"TI\\\"]\).\"", "MSG"], 
             "\[NonBreakingSpace]", 
             ButtonBox[
              StyleBox["\[RightSkeleton]", "SR"], Active -> True, BaseStyle -> 
              "Link", ButtonData -> "paclet:ref/LinearModelFit"]}]], "Print", 
          "PrintUsage", CellTags -> "Info3492165664-2974340"]}, Open]], 
      Cell[
       TextData[{"The first argument in ", 
         StyleBox[
          ButtonBox[
          "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
         " is expected to be the data that you are approximating."}], "Item", 
       CellChangeTimes -> {{3.8216143706651163`*^9, 3.82161437510159*^9}}], 
      Cell[
       TextData[{"The second argument in ", 
         StyleBox[
          ButtonBox[
          "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
         " is a set of basis functions for the model. A linear combination of \
these basis functions will be computed."}], "Item", 
       CellChangeTimes -> {{3.8216143793026466`*^9, 3.82161438348952*^9}}], 
      Cell[
      "The third argument is a list of the variables in the model.", "Item"]},
      All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"abebe832-1656-4151-ad37-16f9e341ffee"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      TextData[{
       "Here is one possible solution. It is convenient to assign the result \
from ", 
        StyleBox[
         ButtonBox[
         "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
        " as the value of a variable, so that this result can be used in the \
subsequent calculations. Here the result from ", 
        StyleBox[
         ButtonBox[
         "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
        " is assigned as the value of ", 
        StyleBox["datafit", "MR"], "."}], "CodeText", 
      CellChangeTimes -> {{3.8216144639644446`*^9, 3.821614485852579*^9}}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"xdata", "=", 
            RowBox[{"{", 
              
              RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "11", 
                ",", "12", ",", "15"}], "}"}]}]], "Input", 
         CellTags -> {"Exercises", "Curve Fitting"}], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "11", 
              ",", "12", ",", "15"}], "}"}]], "Output", 
         CellTags -> {"Exercises", "Curve Fitting"}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"ydata", "=", 
            RowBox[{"{", 
              
              RowBox[{"1.7", ",", "5.9", ",", "12.8", ",", "25.1", ",", 
                "29.2", ",", "30.1", ",", "42.0", ",", "43.9"}], "}"}]}]], 
         "Input", CellTags -> {"Exercises", "Curve Fitting"}], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"1.7`", ",", "5.9`", ",", "12.8`", ",", "25.1`", ",", 
              "29.2`", ",", "30.1`", ",", "42.`", ",", "43.9`"}], "}"}]], 
         "Output", CellTags -> {"Exercises", "Curve Fitting"}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"datafit", "=", 
            RowBox[{"LinearModelFit", "[", 
              RowBox[{
                RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                    RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], ",", 
                RowBox[{"{", "x", "}"}], ",", "x"}], "]"}]}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"FittedModel", "[", 
            PanelBox[
             TagBox[
              RowBox[{
                RowBox[{"-", "0.3304347826087039`"}], "+", 
                RowBox[{"3.169565217391305`", " ", "x"}]}], Short], 
             FrameMargins -> 5], "]"}]], "Output"]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"datafit", "[", "x", "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{
            RowBox[{"-", "0.3304347826087039`"}], "+", 
            RowBox[{"3.169565217391305`", " ", "x"}]}]], "Output"]}, Open]]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"7c02ade8-5375-4321-802c-a3df01b1fcb4"],

Cell[TextData[{
 "Plot the function returned by ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 " over a range appropriate to the data."
}], "Item",
 CellChangeTimes->{3.82161440929099*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"c8b81dd4-cea6-4930-ae1f-43fa20c58834"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      TextData[{
       "Here is one possible solution. It is convenient to assign the result \
from ", 
        StyleBox[
         ButtonBox[
         "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
        " as the value of a variable, so that this result can be used in the \
subsequent calculations. Here the result from ", 
        StyleBox[
         ButtonBox[
         "LinearModelFit", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/LinearModelFit"], FontWeight -> "Bold"], 
        " is assigned as the value of ", 
        StyleBox["datafit", "MR"], "."}], "CodeText", 
      CellChangeTimes -> {{3.8216146307041707`*^9, 3.8216146703097444`*^9}}], 
     
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"xdata", "=", 
            RowBox[{"{", 
              
              RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "11", 
                ",", "12", ",", "15"}], "}"}]}]], "Input", 
         CellTags -> {"Exercises", "Curve Fitting"}], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "11", 
              ",", "12", ",", "15"}], "}"}]], "Output", 
         CellTags -> {"Exercises", "Curve Fitting"}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"ydata", "=", 
            RowBox[{"{", 
              
              RowBox[{"1.7", ",", "5.9", ",", "12.8", ",", "25.1", ",", 
                "29.2", ",", "30.1", ",", "42.0", ",", "43.9"}], "}"}]}]], 
         "Input", CellTags -> {"Exercises", "Curve Fitting"}], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"1.7`", ",", "5.9`", ",", "12.8`", ",", "25.1`", ",", 
              "29.2`", ",", "30.1`", ",", "42.`", ",", "43.9`"}], "}"}]], 
         "Output", CellTags -> {"Exercises", "Curve Fitting"}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"datafit", "=", 
            RowBox[{"LinearModelFit", "[", 
              RowBox[{
                RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                    RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], ",", 
                RowBox[{"{", "x", "}"}], ",", "x"}], "]"}]}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"FittedModel", "[", 
            PanelBox[
             TagBox[
              RowBox[{
                RowBox[{"-", "0.3304347826087039`"}], "+", 
                RowBox[{"3.169565217391305`", " ", "x"}]}], Short], 
             FrameMargins -> 5], "]"}]], "Output"]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Plot", "[", 
            RowBox[{
              RowBox[{"datafit", "[", "x", "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"x", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             LineBox[CompressedData["
1:eJwVjXs0lAkAxSe2KMpKTchMzIzHGB8RSuK7mcmnlqkkdlopryIsWafo4VXW
Kc/yijazUkxlp2RTa+ScyqZUYlYqHY9oqUgmypjC2j/uuef3x+9ek6Bo71A1
Go3mNZv/u4d13ZNGGyU1z8wcPVk7Dyp6anmh7ig5qZ11K1w+D3Qtb5UVe5Qc
SjEc8xiZB+GYolLkPkq2RjiEaZhpoOGerXpN5ihZQkZ4Hy/QQGlI9V+hBgrS
erDDLDFOEwEV18we2X0ifR2lT/fbLUAX9yqtMHScvNjubyKSLoR+UYfnS+4k
STXpZRiULkZhT/wa8twUebWKPfKJQ0cy/+0N0ykazln1JdBLDOCz6dJZtZ/U
YRvhJyV3MNDcYN4WkzsXjGLZRcsoYwTskckdPmtg/FWFxy1vFsJvc5VPhAuw
KPLdzD4bDuip26MmkrQRjJQhvWFTvE4olB7sXQStuLgrZIs5JNHNYkHm9xgZ
qhcH5nJhqHJU1Z7XhV61v0SykYflTGlde+tiZDzzS4u1IPBBqc6WvdeDi6uk
0G7QGsKoEIWn0VIYq1s21IWuxD6n61s9POhozOLJft5mC7/6bpH27mVIq/OT
M2zt0P5i6YPDOfoYLazelm2yCqwqXnfNZQPEL3X8ODnHHjP6njuKugxxif92
3OyzPYq6RGFvFhjhiP794wP9DqCJ3JkqNgOROS3WZXcdoYxyWSvzYWJu7Xd8
xp+rccdJb1qwfwVkiaH78wvWoNx6iGskMMaSEQW3NNYJxEJ5esQrY9AXVnmG
B62FMSVxEoeZwKEl94SNmzM6nxwrlcxhYdq1fOVN+3WIpfk+HihiIcz3dWAb
ywW/ZC8TzuewMaqz6Y8Bmiucw7tT59SzYZLQG3Rb4YpIcb5W90YOYo6X2eXI
SRxKWb/zYzsHNsup+wl+wJZrY4EdEab49oOPRPspkL22oK5MaYrnTw4sO+e6
Hvm66+67nTJDuvk15+yb66EukJs+WGEOd/n08BELN2xm7RKmXjHH9i3B/fZF
bgj2UnAX8y3gVNGd7aXDR88/saJfWy1g5RXdFJzEB7ty0rk1nIuxR/QbnUo+
BGYHB4U0S2gx2wcNYwRoob0ZqM60hO2disofewQwtvAtfs/hgViXazThtwGd
l2+KNWp4WK2Zw8x7sAGxL3WiRa5WOF1ZHqp0dEebT5Qi+ZkV7jCfBjZI3VHM
q2vKDCIwM6AzlMKk0PkuLl8tlMAnnnAizpiCocQmMH4vgf6YTPUwFoUSzkVV
cCSBJpWmkdBslhm5hPMBAlmL1LwMrSn8prMn790JAssdx6XXXSiUjunucq8m
sDrtRWy/P4Xu6se8+hoCFs30pI4ACsyYdKVtLQFDne0ZD3dTEA9/O8WQEZg+
01Z+NYTC7/8ONo43Evi7qrn9cCSFsue3LctfENjWXu+45AiFvoL4Cf1XBDYY
fHXTSKTA8lnVmN01+xfgtFmVROF8q2Tnob7Z/bc39vYem+WHeblbhwn0fpWe
qcqY9dOFO5tGCMjx4YI4a9Z3n2/poiBwL41XfTqHQvndxHsWXwhU6kgexudR
eJPslFuqJFDiM/AsooAChxz3X/KVQEYxpy+giELIlJR7corA0e6gka3FFC7I
wr/MzBCIZpepBGcp/AfeFR2k
              "]]}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           AxesOrigin -> {2., 0}, 
           PlotRange -> {{1, 15}, {0., 47.21304257267081}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02]}]], "Output"]}, Open]]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"b5cf1137-13f1-4057-be8c-b648d66bf62d"],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["Show",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Show"],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "to display the data and the fit on the same graph."
}], "Item",
 CellChangeTimes->{{3.821614591218844*^9, 3.821614597530433*^9}},
 CellTags->{
  "Exercises", 
   "Curve Fitting"},ExpressionUUID->"8ba99593-f4f4-48e9-87d9-0db33fef0562"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell["Here is one possible solution.", "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"datafit", "=", 
            RowBox[{"LinearModelFit", "[", 
              RowBox[{
                RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                    RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                  RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], 
         "Input"], 
        Cell[
         BoxData[
          RowBox[{"FittedModel", "[", 
            PanelBox[
             TagBox[
              RowBox[{
                RowBox[{"-", "0.3304347826087039`"}], "+", 
                RowBox[{
                  RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], " ", 
                  "x"}]}], Short], FrameMargins -> 5], "]"}]], "Output"]}, 
       Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"fitplot", "=", 
            RowBox[{"Plot", "[", 
              RowBox[{
                RowBox[{"datafit", "[", "x", "]"}], ",", 
                RowBox[{"{", 
                  RowBox[{"x", ",", "0", ",", "16"}], "}"}]}], "]"}]}]], 
         "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             LineBox[CompressedData["
1:eJwVxXk4lAkAB2DXbiS3MIlpHBPD+Cwa6Zjvl6P5RqrH0comSVSkknSoXe1g
qJxFOoZyrbSzoRxtUSNmPWW77LDo0djFFrlzJcXu/vE+LyPksE+YkoKCwub/
/L9nWH9L/cAl7mHvgRyZZZtExW1ZVDcthmyiDnEWmK0SxxtXcitpiaQpJtpY
VjLJpuftd/No2eQzuy/68awWiX/ozMOLtGLSz8iMuTuoWfKGSHZLo1WR2ca9
6zg9VZL8pVuTztOkpGfy6FhU+G+kQLVy5TlaKxkYOeRWyPuH3B5QUD423kee
faB5fEn/HKm+IAjkmY6Sjuk9H28rfw1L75H+xpRJMu+ucsnr9xo48cKFvDI5
S34M/+VzPVcPhlU6ckXFBVI5mlvRyTVETY/bs5frlJBw8n1NebYxGiLyjAOG
VPDopMsq6k86ppjrtW4fXAT2x3tyn3cMKM2KtY0tF4PjGOwVrGkBzkJwjW/Z
EoxZf+a+0mbiWaLTiyaWFpLzwg8y1KxAzxycvTWijR3aoR7etiwMznTL2+x1
Ief6FPaybFH8vrZZM10PuZHPS/387KBpcnO0r08fIvW0YzIXe6SGV+/NtzBA
A5fdyXb+BtMQ9+0/YwjheNaFGb4DYhykVQaNRmDEx6RGezqiu0ya0sJYhu8u
GncFBjthLqJVZH3KGEq7xU+dj6yCzYZF83trlyNBo3q28TAHvELGvjuGpsh3
EcZJEpxxwmSX2d+BdOS4vfSIFK6G7dA29fbNKzCnriRWi3eBntaYqvTTCnzx
nQs1yF4DFYmo3DyXgY7YQ7tbs9bigFNtp9omM2yll95VvLUOYn5I/qNpM3AS
mgvo99djanCZ9tscc0xL98pGario9uUpZ7tbwCfpaQC7mcQZSnij6q0FpLq+
F9LDAMYbz44ioSUuPa6WxvUCa5wTs2kOTHAqThcyIzcg0PTlrKKMiYa0OMbN
wQ2Yak7riRKshKm4z7P7mCuuqATF+FhYIexe8tKxaVfoyasLlaRW6DOjE7HH
3PDVDwI/lyPWcHhBm7g/7waFW0HlPbosHNjvvV0W547oa+Vpug0sHHUd2les
5oGHNmdVdQ7ZoPL06abhCx7Q8Yy2jde0RXcRr0lLZyO62K9ksXW2eK1+Imrg
2kZUXCct+oLYqA/prRUZ87CznKNjMs+G3Mj926arPPwoLBB0/WyH3zVVRaVm
FG73m4g0vQgUT6gK9hRSOJsnDJZvIZCVYtORV0wh1GfYssybQIL5FqKjhMLy
urqKzf4E9vhmvfESUzifsaMpNYQAo9JkDaeKwn7O1fHFsQTyox0mVJsomCXq
U4tKCIjGd4SVDVCYX/29RnspgZRzcXX9gxQ6h3v/KBETOMUo0DMfoZDpX7lz
4x0CAd5vH1/+QGGB5XNUWEfA6E6UqWCOQldLxnVlGYGcKGG7rwYfvybN7JG1
EUhSLbVL1+Ije+0u66IOAsfzm4VPdPjY9JNdlaucwLZXWk7rDfh4cPL5U8EA
AX37a5lMOh857FUZ3kMEVJ7UvQtm8HGkJ9ePMUpgclc3V2TOh5VXZHf9JAFZ
hsWwlhUfKoqtxZkzBBpX8tw9WXz8Vb02IvgTgUpJuCjRlo+6iCLC/guBIv/U
D4/s+LhMV59aWCBwcbSMP2vPx78AOSNE
              "]]}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 16}, {-0.3304337476486329, 50.3826076606921}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02]}]], "Output"]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"dataplot", "=", 
            RowBox[{"ListPlot", "[", 
              RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                  RowBox[{"xdata", ",", "ydata"}], "}"}], "]"}], "]"}]}]], 
         "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{
            Hue[0.67, 0.6, 0.6], 
            
            PointBox[{{1., 1.7}, {3., 5.9}, {4., 12.8}, {7., 25.1}, {8., 
             29.2}, {11., 30.1}, {12., 42.}, {15., 43.9}}]}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           PlotRange -> Automatic, PlotRangeClipping -> True]], "Output"]}, 
       Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Show", "[", 
            RowBox[{"dataplot", ",", "fitplot"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{{
             Hue[0.67, 0.6, 0.6], 
             
             PointBox[{{1., 1.7}, {3., 5.9}, {4., 12.8}, {7., 25.1}, {8., 
              29.2}, {11., 30.1}, {12., 42.}, {15., 43.9}}]}, {{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              LineBox[CompressedData["
1:eJwVxXk4lAkAB2DXbiS3MIlpHBPD+Cwa6Zjvl6P5RqrH0comSVSkknSoXe1g
qJxFOoZyrbSzoRxtUSNmPWW77LDo0djFFrlzJcXu/vE+LyPksE+YkoKCwub/
/L9nWH9L/cAl7mHvgRyZZZtExW1ZVDcthmyiDnEWmK0SxxtXcitpiaQpJtpY
VjLJpuftd/No2eQzuy/68awWiX/ozMOLtGLSz8iMuTuoWfKGSHZLo1WR2ca9
6zg9VZL8pVuTztOkpGfy6FhU+G+kQLVy5TlaKxkYOeRWyPuH3B5QUD423kee
faB5fEn/HKm+IAjkmY6Sjuk9H28rfw1L75H+xpRJMu+ucsnr9xo48cKFvDI5
S34M/+VzPVcPhlU6ckXFBVI5mlvRyTVETY/bs5frlJBw8n1NebYxGiLyjAOG
VPDopMsq6k86ppjrtW4fXAT2x3tyn3cMKM2KtY0tF4PjGOwVrGkBzkJwjW/Z
EoxZf+a+0mbiWaLTiyaWFpLzwg8y1KxAzxycvTWijR3aoR7etiwMznTL2+x1
Ief6FPaybFH8vrZZM10PuZHPS/387KBpcnO0r08fIvW0YzIXe6SGV+/NtzBA
A5fdyXb+BtMQ9+0/YwjheNaFGb4DYhykVQaNRmDEx6RGezqiu0ya0sJYhu8u
GncFBjthLqJVZH3KGEq7xU+dj6yCzYZF83trlyNBo3q28TAHvELGvjuGpsh3
EcZJEpxxwmSX2d+BdOS4vfSIFK6G7dA29fbNKzCnriRWi3eBntaYqvTTCnzx
nQs1yF4DFYmo3DyXgY7YQ7tbs9bigFNtp9omM2yll95VvLUOYn5I/qNpM3AS
mgvo99djanCZ9tscc0xL98pGario9uUpZ7tbwCfpaQC7mcQZSnij6q0FpLq+
F9LDAMYbz44ioSUuPa6WxvUCa5wTs2kOTHAqThcyIzcg0PTlrKKMiYa0OMbN
wQ2Yak7riRKshKm4z7P7mCuuqATF+FhYIexe8tKxaVfoyasLlaRW6DOjE7HH
3PDVDwI/lyPWcHhBm7g/7waFW0HlPbosHNjvvV0W547oa+Vpug0sHHUd2les
5oGHNmdVdQ7ZoPL06abhCx7Q8Yy2jde0RXcRr0lLZyO62K9ksXW2eK1+Imrg
2kZUXCct+oLYqA/prRUZ87CznKNjMs+G3Mj926arPPwoLBB0/WyH3zVVRaVm
FG73m4g0vQgUT6gK9hRSOJsnDJZvIZCVYtORV0wh1GfYssybQIL5FqKjhMLy
urqKzf4E9vhmvfESUzifsaMpNYQAo9JkDaeKwn7O1fHFsQTyox0mVJsomCXq
U4tKCIjGd4SVDVCYX/29RnspgZRzcXX9gxQ6h3v/KBETOMUo0DMfoZDpX7lz
4x0CAd5vH1/+QGGB5XNUWEfA6E6UqWCOQldLxnVlGYGcKGG7rwYfvybN7JG1
EUhSLbVL1+Ije+0u66IOAsfzm4VPdPjY9JNdlaucwLZXWk7rDfh4cPL5U8EA
AX37a5lMOh857FUZ3kMEVJ7UvQtm8HGkJ9ePMUpgclc3V2TOh5VXZHf9JAFZ
hsWwlhUfKoqtxZkzBBpX8tw9WXz8Vb02IvgTgUpJuCjRlo+6iCLC/guBIv/U
D4/s+LhMV59aWCBwcbSMP2vPx78AOSNE
               "]]}}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           PlotRange -> Automatic, PlotRangeClipping -> True]], "Output"]}, 
       Open]], 
     Cell[
      TextData[{
       "If this solution does not work as expected, verify that you have \
evaluated the inputs that define ", 
        StyleBox["xdata", "MR"], " and ", 
        StyleBox["ydata", "MR"], "."}], "Text"]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"dbd13725-5778-400c-a323-6b85e4af5ddc"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Curve Fitting II"
}], "Subsection",
 CellChangeTimes->{3.8209802221477737`*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting II"},ExpressionUUID->"5f3d83ea-3577-43ac-ae8e-a9949d05f749"],

Cell["\<\
Evaluate the following two inputs to define the data directory for this \
course and to import the file USLifeExpectancy.dat, which contains mortality \
data for the United States between the years 1959 and 1999. Display the full \
dataset in tabular form.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "Curve Fitting II"},ExpressionUUID->"26b8d57d-0113-432d-80ba-52174af4b982"],

Cell["\<\
Use the correct sequence of directory names to specify the file location, for \
example:\
\>", "CodeText",
 CellChangeTimes->{{3.821665463721089*^9, 3.821665504368579*^9}, {
  3.8229405617637377`*^9, 
  3.822940568940098*^9}},ExpressionUUID->"69e22a8a-4e2a-467a-abb9-\
596c3af06c81"],

Cell[BoxData[
 RowBox[{"datafile", "=", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Directory1\>\"", ",", "\"\<Directory2\>\"", ",", 
     "\"\<USLifeExpectancy.dat\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8216654303318834`*^9, 
  3.821665439348901*^9}},ExpressionUUID->"70b86834-4f94-4821-8aca-\
443b597268a7"],

Cell[BoxData[
 RowBox[{"lifedata", "=", 
  RowBox[{"Import", "[", "datafile", "]"}]}]], "Input",
 CellTags->{"Exercises", "Curve Fitting II"},
 CellLabel->
  "In[128]:=",ExpressionUUID->"3cc8e234-8cfc-4012-85a7-1d2e0a011269"],

Cell[TextData[{
 "Extract the raw data for the years 1959 through 1999 for males (first and \
third columns only). Then use ",
 StyleBox[ButtonBox["LinearModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearModelFit"],
  FontWeight->"Bold"],
 " to fit a cubic model ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", 
    RowBox[{"b", " ", "x"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"d", " ", 
     SuperscriptBox["x", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "81428477-b100-4a5c-a2d4-56236a7eb7f7"],
 " to the data."
}], "Item",
 CellChangeTimes->{3.8216149041619806`*^9},
 CellTags->{
  "Exercises", 
   "Curve Fitting II"},ExpressionUUID->"92f6dca1-f8aa-4506-b77e-c6577ed5ab01"],

Cell[TextData[{
 "Finally, use ",
 StyleBox[ButtonBox["Show",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Show"],
  FontWeight->"Bold"],
 " to display the data and the fit in the same graphic."
}], "Text",
 CellChangeTimes->{{3.821614909015172*^9, 3.8216149133616147`*^9}},
 CellTags->{
  "Exercises", 
   "Curve Fitting II"},ExpressionUUID->"b2fa54d6-8e70-42e7-8c39-b568e322826f"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell["This creates a path to the data directory.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"datafile", "=", 
         RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"data\"", ",", 
               "\"USLifeExpectancy.dat\""}], "}"}], "]"}]}]], "Input", 
      CellChangeTimes -> {{3.822940499393508*^9, 3.822940506435795*^9}}], 
     Cell["Here we import the data.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"lifedata", "=", 
         RowBox[{"Import", "[", "datafile", "]"}]}]], "Input", 
      CellTags -> {"Exercises", "Curve Fitting II"}], 
     Cell["This displays the data in a simple tabular format.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"TableForm", "[", "lifedata", "]"}]], "Input"], 
     Cell[
     "To extract the appropriate data, we need all but the first three rows, \
and columns 1 and 3 only.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"maledata", "=", 
         RowBox[{"Part", "[", 
           RowBox[{"lifedata", ",", 
             RowBox[{"4", ";;", 
               RowBox[{"Length", "[", "lifedata", "]"}]}], ",", 
             RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]], "Input"], 
     Cell[
      TextData[{"This creates a plot of ", 
        StyleBox["maledata", "MR"], "."}], "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"dataplot", "=", 
         RowBox[{"ListPlot", "[", "maledata", "]"}]}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"ffit", "=", 
         RowBox[{"LinearModelFit", "[", 
           RowBox[{"maledata", ",", 
             RowBox[{"{", 
               RowBox[{"x", ",", 
                 SuperscriptBox["x", "2"], ",", 
                 SuperscriptBox["x", "3"]}], "}"}], ",", "x"}], "]"}]}]], 
      "Input"], 
     Cell[
      BoxData[
       RowBox[{"ffit", "[", "x", "]"}]], "Input"], 
     Cell[
     "Finally, here is a plot of the fitted function together with the \
original data plot.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"Show", "[", 
         RowBox[{"dataplot", ",", 
           RowBox[{"Plot", "[", 
             RowBox[{
               RowBox[{"ffit", "[", "x", "]"}], ",", 
               RowBox[{"{", 
                 RowBox[{"x", ",", "1959", ",", "1999"}], "}"}]}], "]"}]}], 
         "]"}]], "Input"]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"92682f79-fcac-4e62-a5cf-22ef9c9da506"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Moving Averages"
}], "Subsection",
 CellChangeTimes->{3.8209802255385895`*^9},
 CellTags->{
  "Exercises", 
   "Moving Averages"},ExpressionUUID->"1deaca16-2707-4825-b130-43e0d51b730c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given a list of (noisy) data, create a function that computes an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-term moving average and then use that function to smooth the noisy data."
}], "Item",
 CellTags->{
  "Exercises", 
   "Moving Averages"},ExpressionUUID->"4a7b8aab-6ae6-45ae-8a40-6ed82e82750d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "+", 
      RowBox[{"RandomReal", "[", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "30"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->{"Exercises", "Moving Averages"},
 CellLabel->
  "In[129]:=",ExpressionUUID->"8d42754c-8f2d-49fe-9474-5119126f1d6c"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellTags->{"Exercises", "Moving Averages"},
 CellLabel->"",ExpressionUUID->"c5cf92ff-8474-4907-aa63-dae9da235910"]
}, Open  ]],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
     "There are several ways to approach this problem.", "Text", 
      CellChangeTimes -> {{3.8216152079531*^9, 3.82161520890324*^9}}], 
     Cell[
     "Starting with a small list consisting of symbolic elements, let' s \
create a 3 - term moving average and then generalize to an arbitrary number \
of terms.", "CodeText", 
      CellChangeTimes -> {{3.8216152098831353`*^9, 3.82161522182831*^9}}], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"vec", "=", 
           RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], 
             "}"}]}], ";"}]], "Input"], 
     Cell[
     "This partitions the list into 3-element sublists with offset 1.", 
      "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"p", "=", 
            RowBox[{"Partition", "[", 
              RowBox[{"vec", ",", "3", ",", "1"}], "]"}]}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"b", ",", "c", ",", "d"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"c", ",", "d", ",", "e"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}]], 
         "Output"]}, Open]], 
     Cell["We want the mean of each of the sublists.", "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Map", "[", 
            RowBox[{"Mean", ",", "p"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"a", "+", "b", "+", "c"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"b", "+", "c", "+", "d"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"c", "+", "d", "+", "e"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"d", "+", "e", "+", "f"}], ")"}]}]}], "}"}]], 
         "Output"]}, Open]], 
     Cell[
     "So here is one function that puts these steps together and \
generalizes.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"movingAverage", "[", 
           RowBox[{"lis_List", ",", "n_Integer"}], "]"}], ":=", 
         RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
             RowBox[{"Partition", "[", 
               RowBox[{"lis", ",", "n", ",", "1"}], "]"}]}], "]"}]}]], 
      "Input"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"movingAverage", "[", 
            RowBox[{"vec", ",", "3"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"a", "+", "b", "+", "c"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"b", "+", "c", "+", "d"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"c", "+", "d", "+", "e"}], ")"}]}], ",", 
              RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                  RowBox[{"d", "+", "e", "+", "f"}], ")"}]}]}], "}"}]], 
         "Output"]}, Open]], 
     Cell[
      TextData[{"Another approach uses ", 
        Cell[
         BoxData[
          ButtonBox[
          "ListConvolve", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/ListConvolve"]], "InlineFormula"], 
        " with an appropriate kernel."}], "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"ListConvolve", "[", 
            RowBox[{
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "1"}], "}"}], "/", "3"}], ",", 
              "vec"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                FractionBox["a", "3"], "+", 
                FractionBox["b", "3"], "+", 
                FractionBox["c", "3"]}], ",", 
              RowBox[{
                FractionBox["b", "3"], "+", 
                FractionBox["c", "3"], "+", 
                FractionBox["d", "3"]}], ",", 
              RowBox[{
                FractionBox["c", "3"], "+", 
                FractionBox["d", "3"], "+", 
                FractionBox["e", "3"]}], ",", 
              RowBox[{
                FractionBox["d", "3"], "+", 
                FractionBox["e", "3"], "+", 
                FractionBox["f", "3"]}]}], "}"}]], "Output"]}, Open]], 
     Cell["So here is another approach.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"movingAverage2", "[", 
           RowBox[{"lis_List", ",", "n_Integer"}], "]"}], ":=", 
         RowBox[{"ListConvolve", "[", 
           RowBox[{
             RowBox[{
               RowBox[{"Table", "[", 
                 RowBox[{"1", ",", 
                   RowBox[{"{", "n", "}"}]}], "]"}], "/", "n"}], ",", "lis"}],
            "]"}]}]], "Input"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"movingAverage2", "[", 
            RowBox[{"vec", ",", "3"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            RowBox[{
              RowBox[{
                FractionBox["a", "3"], "+", 
                FractionBox["b", "3"], "+", 
                FractionBox["c", "3"]}], ",", 
              RowBox[{
                FractionBox["b", "3"], "+", 
                FractionBox["c", "3"], "+", 
                FractionBox["d", "3"]}], ",", 
              RowBox[{
                FractionBox["c", "3"], "+", 
                FractionBox["d", "3"], "+", 
                FractionBox["e", "3"]}], ",", 
              RowBox[{
                FractionBox["d", "3"], "+", 
                FractionBox["e", "3"], "+", 
                FractionBox["f", "3"]}]}], "}"}]], "Output"]}, Open]], 
     Cell[
     "Finally, we use the moving average to smooth the data as given in the \
exercise.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"data", "=", 
           RowBox[{"Table", "[", 
             RowBox[{
               RowBox[{
                 RowBox[{"Log", "[", "x", "]"}], "+", 
                 RowBox[{"RandomReal", "[", "]"}]}], ",", 
               RowBox[{"{", 
                 RowBox[{"x", ",", "30"}], "}"}]}], "]"}]}], ";"}]], "Input"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"ListLinePlot", "[", "data", "]"}]], "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7AUmM9q4KOyzhwo47D5ovvrq0hdQPodDrFOc
yuSNv6B8AYdZ905zWS2H8UUc5CymsOyMZXKA8CUcjrqdOughzwjlyziY5dWH
NC5kgfIVHI79v6Q6pxjGV3JYl2tWGl7GDOWrOGisffEk+QGMr+bwZ49XnWs2
O5Sv4XB2Z9s55iWsUL6Ww2b5g1cZV3FB+ToOom2hD/z7OKF8PYc1h2cuyXjE
BuUbOJRxWtyvuccL5Rs6+KTkrf2WB1Nv5BCQcqotN4QPyjd2OKqrX/A9Habe
xOFgxs0jbFocUL6pg7D9hznPs7ihfDOHKcXzOaLFYOaZO/SsOhudYw+Tt3AI
OTLvRdFmASjf0kFP+dDWeCV+KN/KYYdvtOrhbzC+tcO9GbMaZefC/GfjYMza
x/44Aabf1mFW/d4Lz/7B+HYOHwqSb57tF3QAABecdlI=
              "]]}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           AxesOrigin -> {0, 0}, 
           PlotRange -> {{0., 30.}, {0., 4.39043368977967}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02]}]], "Output"]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"ListLinePlot", "[", 
            RowBox[{"movingAverage2", "[", 
              RowBox[{"data", ",", "6"}], "]"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          GraphicsBox[{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7BVbHvyYL/bdHirgsGaJaPypZX+hfA6HJyHb
/MRMGR0gfAGHn2aPPJmtmKB8EQcPxoojlYHMUL6Ew+EcMT1BTRYoX8ZhllY3
6+2XML6Cg96JA0ddX7NC+UoONp3XUviOskH5Kg7WhwSdBMPZoXw1B48/cgez
GDmhfA0H7Rn+82LDYXwth2kmG55LnuKC8nUcZj4U15Gw54by9Ry4jZqXb2OG
8Q0c5rjZqCkehfENHRbqVjRJ/4TpN3JgTLlb0uIGkzd2EHjl2jjjJIxv4uCT
ca8nRJgHyjd1KOX7MkcugRfKN3M4VCTgfMkWxjd36DNTPcLXygflWziE5Ysv
PbmEH8q3dOgKXudl+47fAQByildU
              "]]}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
           AxesOrigin -> {0, 1.5}, ImageMargins -> 0., ImageSize -> Automatic,
            PlotRange -> {{0., 25.}, {1.4430236551054423`, 
            3.9913278421831295`}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {
             Scaled[0.02], 
             Scaled[0.02]}]], "Output"]}, Open]], 
     Cell[
      BoxData[
       RowBox[{"Clear", "[", 
         RowBox[{"vec", ",", "p", ",", "data"}], "]"}]], "Input"]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"b286bae4-8688-4e43-9b6e-a81b75040197"],

Cell[BoxData[
 ButtonBox[
  RowBox[{"MovingAverage", " ", "and", " ", "Manipulate"}],
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       TextData[{"This can also be done with the built-in function ", 
         StyleBox[
          ButtonBox[
          "MovingAverage", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/MovingAverage"], FontWeight -> "Bold"], "."}], 
       "CodeText", 
       CellChangeTimes -> {{3.8216152743672028`*^9, 3.8216152784412484`*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{"smth3", "=", 
             RowBox[{"MovingAverage", "[", 
               RowBox[{"data", ",", "3"}], "]"}]}]], "Input"], 
         Cell[
          BoxData[
           RowBox[{"{", 
             
             RowBox[{"1.187912035929311`", ",", "1.605028051481507`", ",", 
               "1.8539235791148554`", ",", "2.1806344835103872`", ",", 
               "2.489831751692849`", ",", "2.567864845229423`", ",", 
               "2.6471269537939186`", ",", "2.772904310055666`", ",", 
               "2.7372869858157935`", ",", "2.713368439205104`", ",", 
               "2.8222771313452752`", ",", "3.069519563372878`", ",", 
               "3.1287287863530873`", ",", "3.111598151642549`", ",", 
               "3.1935089398976686`", ",", "3.2949832311584086`", ",", 
               "3.2247020300158655`", ",", "3.31751796293243`", ",", 
               "3.4797489901671996`", ",", "3.7655796634556635`", ",", 
               "3.676850029225548`", ",", "3.6246812940448883`", ",", 
               "3.623350767491187`", ",", "3.6081689256602116`", ",", 
               "3.894524333526229`", ",", "3.8953005953621425`", ",", 
               "4.139768152203926`", ",", "4.09363924527826`"}], "}"}]], 
          "Output"]}, Open]], 
      Cell[
      "Note that the length of this list is shorter than the original data. \
We will have to account for that in our plots by shifting.", "CodeText"], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{"Length", "[", "smth3", "]"}]], "Input"], 
         Cell[
          BoxData["28"], "Output"]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          BoxData[
           RowBox[{"Length", "[", "data", "]"}]], "Input"], 
         Cell[
          BoxData["30"], "Output"]}, Open]], 
      Cell[
       BoxData[
        RowBox[{"ListLinePlot", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"data", ",", "smth3"}], "}"}], ",", 
            RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]], "Input"], 
      Cell[
       BoxData[
        RowBox[{"With", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"n", "=", "3"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ListLinePlot", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"data", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "-", "1"}], ",", 
                    RowBox[{"1", "-", "n"}]}], "}"}]}], "]"}], ",", "smth3"}],
                   "}"}], ",", 
                RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]], "Input"], 
      Cell["Here is a dynamic version.", "CodeText"], 
      Cell[
       BoxData[
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
          RowBox[{
            RowBox[{"ListLinePlot", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"data", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"n", "-", "1"}], ",", 
                    RowBox[{"1", "-", "n"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"MovingAverage", "[", 
                    RowBox[{"data", ",", "n"}], "]"}]}], "}"}], ",", 
                RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"0", ",", "5"}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
              RowBox[{"n", ",", "2", ",", "6", ",", "1"}], "}"}]}], "]"}]], 
       "Input"]}, All]),
  Evaluator->Automatic,
  ImageSize->{200, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"239f799e-983f-4d89-999d-20ae0bdff41e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Sparse Arrays"
}], "Subsection",
 CellChangeTimes->{3.8209802271297293`*^9},
 CellTags->{
  "Exercises", 
   "Sparse Arrays"},ExpressionUUID->"e03ef530-e7aa-4c30-b838-ff9a285a9e88"],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["SparseArray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SparseArray"],
  FontWeight->"Bold"],
 " to create a random lower-triangular sparse ",
 Cell[BoxData[
  FormBox[
   RowBox[{"6", "\[Cross]", "6"}], TraditionalForm]],ExpressionUUID->
  "6054a449-4f19-4f5d-8bb8-b93a5f523a11"],
 " matrix."
}], "Item",
 CellChangeTimes->{3.821615374939643*^9},
 CellTags->{
  "Exercises", 
   "Sparse Arrays"},ExpressionUUID->"f7fa67aa-b126-466e-bf8b-d1527540da42"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"mat", "=", 
            RowBox[{"SparseArray", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
                    RowBox[{"i", "\[GreaterEqual]", "j"}]}], "\[RuleDelayed]", 
                  RowBox[{"RandomReal", "[", "]"}]}], ",", 
                RowBox[{"{", 
                  RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}]], "Input"], 
        Cell[
         BoxData[
          TagBox[
           RowBox[{"SparseArray", "[", 
             RowBox[{
               InterpretationBox[
                
                RowBox[{
                 "\"<\"", "\[InvisibleSpace]", "21", "\[InvisibleSpace]", 
                  "\">\""}], 
                SequenceForm["<", 21, ">"], Editable -> False], ",", 
               RowBox[{"{", 
                 RowBox[{"6", ",", "6"}], "}"}]}], "]"}], False, Editable -> 
           False]], "Output"]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input"], 
        Cell[
         BoxData[
          TagBox[
           RowBox[{"(", "\[NoBreak]", 
             
             GridBox[{{"0.1804760500303917`", "0", "0", "0", "0", "0"}, {
               "0.7688913533202453`", "0.5373763130379698`", "0", "0", "0", 
                "0"}, {"0.2665314893460293`", "0.9920492496045132`", 
                "0.5739812279640668`", "0", "0", "0"}, {
               "0.6838525284006298`", "0.9492354808851557`", 
                "0.10885946145759018`", "0.39975947230364883`", "0", "0"}, {
               "0.6053348218001571`", "0.5144623552043108`", 
                "0.8348568293356919`", "0.47386787258630503`", 
                "0.7131863989973635`", "0"}, {
               "0.9354924881492328`", "0.30481850374507014`", 
                "0.20552359139626009`", "0.47242662677247127`", 
                "0.29057183327136005`", "0.7984613601427999`"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
              GridBoxSpacings -> {"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.7]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
           Function[BoxForm`e$, 
            MatrixForm[
            SparseArray[
             Automatic, {6, 6}, 0, {
              1, {{0, 1, 3, 6, 10, 15, 21}, {{1}, {2}, {1}, {3}, {2}, {1}, {
                4}, {1}, {2}, {3}, {2}, {1}, {4}, {5}, {3}, {5}, {1}, {6}, {
                2}, {4}, {3}}}, {0.1804760500303917, 0.5373763130379698, 
               0.7688913533202453, 0.5739812279640668, 0.9920492496045132, 
               0.2665314893460293, 0.39975947230364883`, 0.6838525284006298, 
               0.9492354808851557, 0.10885946145759018`, 0.5144623552043108, 
               0.6053348218001571, 0.47386787258630503`, 0.7131863989973635, 
               0.8348568293356919, 0.29057183327136005`, 0.9354924881492328, 
               0.7984613601427999, 0.30481850374507014`, 0.47242662677247127`,
                0.20552359139626009`}}], BoxForm`opts$953]]]], "Output"]}, 
       Open]]}, WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"10ae0421-ef00-4960-b178-f9c7e90df5fe"],

Cell["\<\
Verify that the transpose of a lower-triangular matrix is an upper-triangular \
matrix.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "Sparse Arrays"},ExpressionUUID->"577af961-e6e8-40a5-9ed8-2e693d5238d5"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"mat", "=", 
         RowBox[{"SparseArray", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
                 RowBox[{"i", "\[GreaterEqual]", "j"}]}], "\[RuleDelayed]", 
               RowBox[{"RandomReal", "[", "]"}]}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}]], "Input"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"MatrixForm", "[", 
            RowBox[{"Transpose", "[", "mat", "]"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          TagBox[
           RowBox[{"(", "\[NoBreak]", 
             
             GridBox[{{
               "0.20071470776579758`", "0.4994790475248623`", 
                "0.920800367331239`", "0.32520493757777946`", 
                "0.16785245956868922`", "0.16463690613523463`"}, {
               "0", "0.4309012741524263`", "0.8891373907202011`", 
                "0.46011776506477275`", "0.18565840876648387`", 
                "0.9881241946179335`"}, {
               "0", "0", "0.5963970085758235`", "0.9821148420009049`", 
                "0.5422532298731781`", "0.8541901280971258`"}, {
               "0", "0", "0", "0.3827345161517952`", "0.8275130420302337`", 
                "0.13696131100808562`"}, {
               "0", "0", "0", "0", "0.42180953860931947`", 
                "0.164942185852901`"}, {
               "0", "0", "0", "0", "0", "0.6919533050352631`"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
              GridBoxSpacings -> {"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.7]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
           Function[BoxForm`e$, 
            MatrixForm[
            SparseArray[
             Automatic, {6, 6}, 0, {
              1, {{0, 6, 11, 15, 18, 20, 21}, {{1}, {2}, {3}, {4}, {5}, {6}, {
                2}, {3}, {4}, {5}, {6}, {3}, {4}, {5}, {6}, {4}, {5}, {6}, {
                5}, {6}, {6}}}, {0.20071470776579758`, 0.4994790475248623, 
               0.920800367331239, 0.32520493757777946`, 0.16785245956868922`, 
               0.16463690613523463`, 0.4309012741524263, 0.8891373907202011, 
               0.46011776506477275`, 0.18565840876648387`, 0.9881241946179335,
                0.5963970085758235, 0.9821148420009049, 0.5422532298731781, 
               0.8541901280971258, 0.3827345161517952, 0.8275130420302337, 
               0.13696131100808562`, 0.42180953860931947`, 0.164942185852901, 
               0.6919533050352631}}], BoxForm`opts$931]]]], "Output"]}, 
       Open]]}, WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"00d44686-a35d-441b-9423-a56de1ac536b"],

Cell["\<\
Verify that the determinant of a triangular matrix is equal to the product of \
its diagonal elements.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "Sparse Arrays"},ExpressionUUID->"e7d0a8c1-53a1-4839-af6b-2207fab4d1e7"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"mat", "=", 
         RowBox[{"SparseArray", "[", 
           RowBox[{
             RowBox[{
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
                 RowBox[{"i", "\[GreaterEqual]", "j"}]}], "\[RuleDelayed]", 
               RowBox[{"RandomReal", "[", "]"}]}], ",", 
             RowBox[{"{", 
               RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}]], "Input"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Det", "[", "mat", "]"}]], "Input"], 
        Cell[
         BoxData["0.005762132579155566`"], "Output"]}, Open]], 
     Cell[
      TextData[{"Here are the diagonal elements of ", 
        StyleBox["mat", "MR"], 
        ". Note that a sparse array object is returned."}], "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"diags", "=", 
            RowBox[{"Diagonal", "[", "mat", "]"}]}]], "Input"], 
        Cell[
         BoxData[
          TagBox[
           RowBox[{"SparseArray", "[", 
             RowBox[{
               InterpretationBox[
                
                RowBox[{
                 "\"<\"", "\[InvisibleSpace]", "6", "\[InvisibleSpace]", 
                  "\">\""}], 
                SequenceForm["<", 6, ">"], Editable -> False], ",", 
               RowBox[{"{", "6", "}"}]}], "]"}], False, Editable -> False]], 
         "Output"]}, Open]], 
     Cell[
      TextData[{
       "The sparse array can be converted to a list of numbers using ", 
        StyleBox[
         ButtonBox[
         "Normal", BaseStyle -> "Link", ButtonData -> "paclet:ref/Normal"], 
         FontWeight -> "Bold"], "."}], "CodeText", 
      CellChangeTimes -> {3.821615408696473*^9}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Normal", "[", "diags", "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"0.20071470776579758`", ",", "0.4309012741524263`", ",", 
              "0.5963970085758235`", ",", "0.3827345161517952`", ",", 
              "0.42180953860931947`", ",", "0.6919533050352631`"}], "}"}]], 
         "Output"]}, Open]], 
     Cell["This multiplies the list of numbers together.", "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Apply", "[", 
            RowBox[{"Times", ",", "%"}], "]"}]], "Input"], 
        Cell[
         BoxData["0.005762132579155567`"], "Output"]}, Open]]}, WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"a8bfcfb2-b5b2-4c08-a6af-b4a183316ed3"],

Cell["\<\
Verify that the eigenvalues of a triangular matrix are the diagonal elements.\
\
\>", "Item",
 CellTags->{
  "Exercises", 
   "Sparse Arrays"},ExpressionUUID->"954cf298-25fb-49c3-ac66-980f22053291"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"mat", "=", 
            RowBox[{"SparseArray", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
                    RowBox[{"i", "\[GreaterEqual]", "j"}]}], "\[RuleDelayed]", 
                  RowBox[{"RandomReal", "[", "]"}]}], ",", 
                RowBox[{"{", 
                  RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}]], "Input"], 
        Cell[
         BoxData[
          TagBox[
           RowBox[{"SparseArray", "[", 
             RowBox[{
               InterpretationBox[
                
                RowBox[{
                 "\"<\"", "\[InvisibleSpace]", "21", "\[InvisibleSpace]", 
                  "\">\""}], 
                SequenceForm["<", 21, ">"], Editable -> False], ",", 
               RowBox[{"{", 
                 RowBox[{"6", ",", "6"}], "}"}]}], "]"}], False, Editable -> 
           False]], "Output"]}, Open]], 
     Cell[
      TextData[{"Here are the eigenvalues for the matrix ", 
        StyleBox["mat", "MR"], "."}], "CodeText"], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Eigenvalues", "[", "mat", "]"}]], "Input"], 
        Cell[
         BoxData[
          RowBox[{"{", 
            
            RowBox[{"0.6958581605399534`", ",", "0.6021710301766436`", ",", 
              "0.5905257948152105`", ",", "0.193188308920466`", ",", 
              "0.15386644045023767`", ",", "0.10542387155272293`"}], "}"}]], 
         "Output"]}, Open]], 
     Cell[
      TextData[{
       "The two lists contain the same numbers, but in different order, hence \
", 
        StyleBox[
         ButtonBox[
         "Equal", BaseStyle -> "Link", ButtonData -> "paclet:ref/Equal"], 
         FontWeight -> "Bold"], " (", 
        StyleBox["\[Equal]", "MR"], ") returns ", 
        StyleBox[
         ButtonBox[
         "False", BaseStyle -> "Link", ButtonData -> "paclet:ref/False"], 
         FontWeight -> "Bold"], "."}], "CodeText", 
      CellChangeTimes -> {{3.821615444832699*^9, 3.8216154651294994`*^9}}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{
            RowBox[{"Eigenvalues", "[", "mat", "]"}], "\[Equal]", 
            RowBox[{"Normal", "[", 
              RowBox[{"Diagonal", "[", "mat", "]"}], "]"}]}]], "Input"], 
        Cell[
         BoxData["False"], "Output"]}, Open]], 
     Cell[
     "Sorting the lists resolves this problem.", "CodeText", 
      CellChangeTimes -> {{3.8216154697553353`*^9, 3.8216154699542*^9}}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{
            RowBox[{"Sort", "[", 
              RowBox[{"Eigenvalues", "[", "mat", "]"}], "]"}], "==", 
            RowBox[{"Sort", "[", 
              RowBox[{"Normal", "[", 
                RowBox[{"Diagonal", "[", "mat", "]"}], "]"}], "]"}]}]], 
         "Input"], 
        Cell[
         BoxData["True"], "Output"]}, Open]]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"a346c0e6-57b4-4b8d-b593-dc07014e9e64"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " High-Precision Numerical Integration"
}], "Subsection",
 CellChangeTimes->{3.8209802288756185`*^9},
 CellTags->{
  "Exercises", 
   "High Precision \
Integration"},ExpressionUUID->"44d105ae-4bd5-4177-83fd-e355de89de67"],

Cell[CellGroupData[{

Cell["\<\
Evaluate the following three inputs, which represent a failed attempt to get \
50 digits of precision in the result of a numerical integral. This \
calculation fails because both the working precision and the precision of the \
integrand are too low.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "High Precision \
Integration"},ExpressionUUID->"e994c986-cd9e-4449-991b-a22168274540"],

Cell[BoxData[
 RowBox[{"b", "=", "1.0"}]], "Input",
 CellTags->{"Exercises", "High Precision Integration"},
 CellLabel->
  "In[156]:=",ExpressionUUID->"cc0905e8-52f3-438d-a2cf-e01d5201da13"],

Cell[BoxData[
 RowBox[{"c", "=", "4.0"}]], "Input",
 CellChangeTimes->{{3.820981457591324*^9, 3.820981458832512*^9}},
 CellTags->{"Exercises", "High Precision Integration"},
 CellLabel->
  "In[157]:=",ExpressionUUID->"0d0a552a-6da6-4565-b994-f4a6ec132594"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"c", " ", "x"}], "]"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "50"}]}], "]"}]], "Input",
 CellTags->{"Exercises", "High Precision Integration"},
 CellLabel->
  "In[158]:=",ExpressionUUID->"5b84cdaf-bf94-48b5-974e-b39e9955b92d"]
}, Open  ]],

Cell["\<\
Change these inputs so that they correctly give a result with 50 digits of \
precision.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "High Precision \
Integration"},ExpressionUUID->"1b8bd50b-91a0-4953-b8bd-938d6f1fa72a"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
      "It is not possible to compute a high-precision result using \
low-precision inputs.", "Text"], 
      Cell[
       TextData[{"The inputs ", 
         StyleBox["b\[ThinSpace]=\[ThinSpace]1.0", "MR"], " and ", 
         StyleBox["c\[ThinSpace]=\[ThinSpace]4.0", "MR"], 
         " define the parameters ", 
         StyleBox["b", "MR"], " and ", 
         StyleBox["c", "MR"], 
         " to be machine numbers, which have about 16 decimal digits of \
precision."}], "Text"], 
      Cell[
       TextData[{
        "The working precision (the precision used in internal calculations) \
typically has to be several digits beyond the desired precision of the final \
result to allow for numerical error. The working precision of ", 
         StyleBox[
          ButtonBox[
          "NIntegrate", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/NIntegrate"], FontWeight -> "Bold"], 
         " is set using the ", 
         StyleBox[
          ButtonBox[
          "WorkingPrecision", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/WorkingPrecision"], FontWeight -> "Bold"], 
         " option."}], "Text", 
       CellChangeTimes -> {{3.8216155588859897`*^9, 
        3.8216155877912273`*^9}}]}, All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"9e0c8516-0ff7-4c57-9367-a95688c6e6de"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"b", "=", "1"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"c", "=", "4"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"NIntegrate", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"Cos", "[", 
               RowBox[{"c", " ", "x"}], "]"}], " ", 
             RowBox[{"Exp", "[", 
               RowBox[{
                 RowBox[{"-", "b"}], " ", "x"}], "]"}]}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
           RowBox[{"PrecisionGoal", "\[Rule]", "50"}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "60"}]}], "]"}]], "Input"]},
     WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"87231a82-9d3c-4466-9374-eb8e84a43c93"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Resampling Using Interpolation"
}], "Subsection",
 CellChangeTimes->{3.820980230227194*^9},
 CellTags->{
  "Exercises", 
   "Resampling"},ExpressionUUID->"81c6db3f-3fb0-49e4-9a07-f859e8d6da10"],

Cell["\<\
Many calculations require data sampled at regular intervals or on a regular \
grid. If the original data includes missing entries or entries sampled at \
points with irregular spacing, interpolation or extrapolation can sometimes \
be used to generate data at regular points.\
\>", "Text",
 CellTags->{
  "Exercises", 
   "Resampling"},ExpressionUUID->"7e790c37-e839-4038-b11b-57d46fefbaa9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluate the following two inputs to define a value for ",
 StyleBox["data", "MR"],
 " and display a plot of the data. The value of ",
 StyleBox["data", "MR"],
 " is a list of pairs representing data sampled at an irregular set of points."
}], "Item",
 CellTags->{
  "Exercises", 
   "Resampling"},ExpressionUUID->"f0740a88-b1d0-4125-80ab-738ea071c15b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.0", ",", "0.0001234"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.844", ",", "0.0007217"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.2611", ",", "0.001570"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.704", ",", "0.005462"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.041", ",", "0.01610"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.946", ",", "0.02376"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.17", ",", "0.03925"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12.73", ",", "0.1016"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17.67", ",", "0.4373"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17.79", ",", "0.4508"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20.45", ",", "0.8037"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21.55", ",", "0.9805"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24.13", ",", "1.417"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25.41", ",", "1.619"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25.48", ",", "1.631"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27.50", ",", "1.879"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.09", ",", "1.928"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.45", ",", "1.952"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.76", ",", "1.966"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28.74", ",", "1.968"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29.64", ",", "1.997"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30.55", ",", "1.993"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36.48", ",", "1.313"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"37.69", ",", "1.106"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40.24", ",", "0.7004"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"43.47", ",", "0.3283"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45.94", ",", "0.1572"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"49.53", ",", "0.04394"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51.69", ",", "0.01804"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"52.26", ",", "0.01408"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"52.90", ",", "0.01053"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54.69", ",", "0.004494"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"55.44", ",", "0.003082"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57.04", ",", "0.001329"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57.99", ",", "0.0007893"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"61.53", ",", "0.0008688"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63.89", ",", "0.02404"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"67.22", ",", "0.679"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69.53", ",", "0.9785"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"71.51", ",", "0.8923"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"74.71", ",", "0.3298"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75.49", ",", "0.04895"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75.94", ",", "0.0291"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81.68", ",", "1.166*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"86.00", ",", "7.661*^-12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"91.67", ",", "6.072*^-17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"95.68", ",", "3.641*^-19"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"100.0", ",", "2.914*^-20"}], "}"}]}], "}"}]}], ";"}]], "Input",\

 CellTags->{"Exercises", "Resampling"},
 CellLabel->
  "In[160]:=",ExpressionUUID->"12d2f7ef-4088-488e-b6f8-b8bc8b1dc433"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data", "]"}]], "Input",
 CellTags->{"Exercises", "Resampling"},
 CellLabel->"",ExpressionUUID->"be519d58-dd05-48ce-87cb-71cfbb68a264"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["Interpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpolation"],
  FontWeight->"Bold"],
 " to resample this data at points from 0 to 100 in steps of 2. This can be \
done by evaluating ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Interpolation", "[", "data", "]"}], "Input"]],ExpressionUUID->
  "e7011118-620d-455f-ab75-9deaa2a9c543"],
 " to construct an ",
 StyleBox[ButtonBox["InterpolatingFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InterpolatingFunction"],
  FontWeight->"Bold"],
 " expression and then using ",
 StyleBox[ButtonBox["Table",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Table"],
  FontWeight->"Bold"],
 " to construct a list of elements ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"f", "[", "k", "]"}]}], "}"}], "Input"]],ExpressionUUID->
  "db74167a-49b5-4464-b60d-427e644e0a2b"],
 " for ",
 StyleBox["k", "MR"],
 " ranging from 0 to 100 in steps of 2, where ",
 StyleBox["f", "MR"],
 " represents the ",
 StyleBox[ButtonBox["InterpolatingFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/InterpolatingFunction"],
  FontWeight->"Bold"],
 " expression."
}], "Item",
 CellChangeTimes->{{3.821615621181491*^9, 3.821615665626938*^9}},
 CellTags->{
  "Exercises", 
   "Resampling"},ExpressionUUID->"4ce49150-4d9b-4696-b9bd-754259df9847"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       TextData[{"If you have evaluated the input to define ", 
         StyleBox["data", "MR"], ", then the following input will give an ", 
         StyleBox[
          ButtonBox[
          "InterpolatingFunction", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/InterpolatingFunction"], FontWeight -> "Bold"], 
         " expression for that data, and define that function as the value of \
", 
         StyleBox["f", "MR"], "."}], "Text", 
       CellChangeTimes -> {{3.8216157590958786`*^9, 3.821615782693625*^9}}], 
      Cell[
       BoxData[
        RowBox[{"f", "=", 
          RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input"], 
      Cell[
       TextData[{"The function ", 
         StyleBox["f", "Input"], 
         " can be used much like any other function. For example, ", 
         StyleBox["f[10]", "Input"], " will give the interpolated value of ", 
         
         StyleBox["data", "MR"], " at 10."}], "Text"], 
      Cell[
       TextData[{"See the documentation for ", 
         StyleBox[
          ButtonBox[
          "Table", BaseStyle -> "Link", ButtonData -> "paclet:ref/Table"], 
          FontWeight -> "Bold"], 
         " to find out how to construct a table of value of ", 
         StyleBox["{k, f[k]}", "Input"], " for ", 
         StyleBox["k", "MR"], " ranging from 0 to 100 in steps of 2."}], 
       "Text", CellChangeTimes -> {{3.821615807099881*^9, 
        3.8216158264718037`*^9}}]}, All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"96e198a1-67fb-4ce5-bcdc-1e70dd850455"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"f", "=", 
         RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"newdata", "=", 
         RowBox[{"Table", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"k", ",", 
                 RowBox[{"f", "[", "k", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"k", ",", "0", ",", "100", ",", "2"}], "}"}]}], 
           "]"}]}]], "Input"]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"38ac4bb7-e8fc-48c4-84cc-36502e395d68"],

Cell[TextData[{
 "Plot the resampled data using ",
 StyleBox[ButtonBox["ListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListPlot"],
  FontWeight->"Bold"],
 ", and compare that plot with the plot of the original data. If the \
interpolation misses the data in some significant way, try changing some of \
the options to ",
 StyleBox[ButtonBox["Interpolation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpolation"],
  FontWeight->"Bold"],
 " to get a better fit."
}], "Item",
 CellChangeTimes->{{3.821615671696226*^9, 3.821615701043145*^9}},
 CellTags->{
  "Exercises", 
   "Resampling"},ExpressionUUID->"940e266e-7f2d-4103-a3de-3fca4c49791d"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      TextData[{
       "Here is the interpolated data. We assign the interpolation object to \
the symbol ", 
        StyleBox["f", "Input"], "."}], "CodeText", 
      CellChangeTimes -> {{3.8216158622671127`*^9, 3.821615868114746*^9}}], 
     Cell[
      BoxData[
       RowBox[{"f", "=", 
         RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input"], 
     Cell[
      TextData[{"This resamples the data, making pairs ", 
        StyleBox["{k, f[k]}", "Input"], " with ", 
        StyleBox["k", "MR"], 
        " taking on values 0 through 100 in increments of 2."}], "CodeText"], 
     
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"newdata", "=", 
           RowBox[{"Table", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"k", ",", 
                   RowBox[{"f", "[", "k", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", "100", ",", "2"}], "}"}]}], 
             "]"}]}], ";"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"resampplot", "=", 
         RowBox[{"ListPlot", "[", "newdata", "]"}]}]], "Input"], 
     Cell[
     "Comparing the resampled data with the original shows some anomalies out \
near the second peak.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"ListLinePlot", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"data", ",", "newdata"}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]], "Input"], 
     Cell[
      TextData[{
       "Lowering the degree of the polynomials that are used to construct the \
interpolating function will help to give a better fit. This is accomplished \
with the option ", 
        StyleBox[
         ButtonBox[
         "InterpolationOrder", BaseStyle -> "Link", ButtonData -> 
          "paclet:ref/InterpolationOrder"], FontWeight -> "Bold"], "."}], 
      "CodeText", CellChangeTimes -> {3.821615885487782*^9}], 
     Cell[
      BoxData[{
        RowBox[{
          RowBox[{"f", "=", 
            RowBox[{"Interpolation", "[", 
              RowBox[{"data", ",", 
                RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], 
          ";"}], "\n", 
        RowBox[{
          RowBox[{"newdata", "=", 
            RowBox[{"Table", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"k", ",", 
                    RowBox[{"f", "[", "k", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", "100", ",", "2"}], "}"}]}], 
              "]"}]}], ";"}], "\n", 
        RowBox[{"ListLinePlot", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"data", ",", "newdata"}], "}"}], ",", 
            RowBox[{"Mesh", "\[Rule]", "All"}]}], "]"}]}], "Input"]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"460157d5-3918-41b4-aa16-9357aa4b28d3"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Plotting a Result from NDSolve"
}], "Subsection",
 CellChangeTimes->{3.820980231490115*^9},
 CellTags->{
  "Exercises", 
   "Plotting a \
Result"},ExpressionUUID->"081ac2f0-e125-47c9-8ceb-01dd6ae11878"],

Cell[CellGroupData[{

Cell["\<\
Evaluate the following input to compute a numerical solution of a \
differential equation.\
\>", "Item",
 CellTags->{
  "Exercises", 
   "Plotting a \
Result"},ExpressionUUID->"bb6f1b32-6a5e-4c68-a39c-9ff07ddbb265"],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.820981649972955*^9, 
  3.820981652335757*^9}},ExpressionUUID->"92a96cec-44c3-4084-b07a-\
9f7a2eeef5ef"],

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "''"}], "[", "x", "]"}], "+", 
        RowBox[{
         RowBox[{"f", "'"}], "[", "x", "]"}], "+", 
        RowBox[{"8", 
         RowBox[{"f", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    "f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellTags->{"Exercises", "Plotting a Result"},
 CellLabel->
  "In[171]:=",ExpressionUUID->"afa60d9e-29e8-481f-bee3-c106bdfc6ac1"]
}, Open  ]],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], 
     Cell[
      TextData[{"If this input does not work as expected, verify that ", 
        StyleBox["f", "Input"], " and ", 
        StyleBox["x", "MR"], " do not already have values. Evaluate ", 
        StyleBox["Clear[f,x]", "Input"], " if necessary."}], "Text"], All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"1cdb2f9c-4b4d-4fd0-9f72-038be2d5d9ff"],

Cell[TextData[{
 "Make a plot of the result from ",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
  FontWeight->"Bold"],
 " over the range of the solution."
}], "Item",
 CellChangeTimes->{3.821615935525877*^9},
 CellTags->{
  "Exercises", 
   "Plotting a \
Result"},ExpressionUUID->"a53419d6-14a0-4923-b69f-71eeee81d0ba"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
       TextData[{"The result from ", 
         StyleBox[
          ButtonBox[
          "NDSolve", BaseStyle -> "Link", ButtonData -> "paclet:ref/NDSolve"],
           FontWeight -> "Bold"], " will involve a rule containing an ", 
         StyleBox[
          ButtonBox[
          "InterpolatingFunction", BaseStyle -> "Link", ButtonData -> 
           "paclet:ref/InterpolatingFunction"], FontWeight -> "Bold"], 
         " expression."}], "Text", 
       CellChangeTimes -> {{3.8216159809908676`*^9, 3.821616011171685*^9}, {
        3.8216656698721733`*^9, 3.82166567060226*^9}}], 
      Cell[
       TextData[{"If you have evaluated the input to define ", 
         StyleBox["sol", "Input"], 
         ", then the following input will give the value of the solution when \
", 
         StyleBox["x", "MR"], " is 5."}], "CodeText", 
       CellChangeTimes -> {3.8216656719835644`*^9}], 
      Cell[
       BoxData[
        RowBox[{
          RowBox[{"f", "[", "5", "]"}], "/.", 
          RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]], "Input"], 
      Cell[
       TextData[{
        "The following input will return an expression representing the value \
of the solution at a symbolic point ", 
         StyleBox["x", "MR"], "."}], "CodeText"], 
      Cell[
       BoxData[
        RowBox[{
          RowBox[{"f", "[", "x", "]"}], "/.", 
          RowBox[{"sol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]], "Input"], 
      Cell[
       TextData[{
        "The requested plot can be generated by plotting this expression over \
the range ", 
         StyleBox["{x,0,10}", "Input"], "."}], "Text"]}, All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"a95f24d7-8994-4307-9672-9b56bac2d6de"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell["Here is one possible solution.", "CodeText"], 
     Cell[
      BoxData[
       RowBox[{"Plot", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"f", "[", "x", "]"}], "/.", 
             RowBox[{"sol", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"], 
     Cell[
     "There are many variants of this solution that will produce the same \
plot.", "Text", 
      CellChangeTimes -> {{3.8216160591531873`*^9, 3.821616060480686*^9}}], 
     Cell[
     "Here we add an option to see all range of values in the plot.", 
      "CodeText", CellChangeTimes -> {3.821616061959262*^9}], 
     Cell[
      BoxData[
       RowBox[{"Plot", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"f", "[", "x", "]"}], "/.", "sol"}], ",", 
           RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"023c0673-2886-4b28-af2f-9890ec305639"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "5.",
 
 CounterBox["Subsection"],
 " Numerical Differentiation"
}], "Subsection",
 CellChangeTimes->{3.8209802328729815`*^9},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"af09769b-0c7d-492b-ae74-29c1e1a64ee4"],

Cell[TextData[{
 "One of many useful functions in the ",
 Cell[BoxData[
  ButtonBox["NumericalCalculus",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/tutorial/NumericalCalculus"]], 
  "InlineFormula",ExpressionUUID->"5c5d0f6c-7985-4fc9-9ca1-53a0461b4cfb"],
 " package is ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"5dc5c70f-df5e-4303-ae33-fec52eee85fa"],
 ". The ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"da994f4c-9c53-450e-a5f0-c5240bf85e5c"],
 " function is used for computing derivatives numerically. Numerical \
differentiation is of interest most frequently for differentiating \
expressions that cannot be differentiated symbolically using the ",
 StyleBox[ButtonBox["D",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/D"],
  FontWeight->"Bold"],
 " function. "
}], "Text",
 CellChangeTimes->{3.821616152372904*^9},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"9b5b643b-65d4-4d74-a64a-4f6e650f8ee2"],

Cell[TextData[{
 "Evaluate the following inputs to load the ",
 Cell[BoxData[
  ButtonBox["NumericalCalculus",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/Guide/NumericalCalculusPackage"]], 
  "InlineFormula",ExpressionUUID->"8ab528b7-13ea-4b14-990b-f108ccc560b4"],
 " package and display documentation for the",
 " ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"90630c61-a17b-446f-8a3c-6be570bee970"],
 " ",
 "function."
}], "CodeText",
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"c3adf56f-fdd3-416f-a367-f12320aab18e"],

Cell["Needs[\"NumericalCalculus`\"]", "Input",
 CellTags->{"Exercises", "Numerical Differentiation"},
 CellLabel->
  "In[180]:=",ExpressionUUID->"72babba4-2628-4979-b7c5-1e4041ccffe7"],

Cell[BoxData[
 RowBox[{"?", "ND"}]], "Input",
 CellTags->{"Exercises", "Numerical Differentiation"},
 CellLabel->"",ExpressionUUID->"b490fee8-027d-493d-9ff6-7dbb9ceae5c9"],

Cell[TextData[{
 "One common function that is not differentiated symbolically is the absolute \
value function ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 ". The ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 " function is not differentiated by ",
 StyleBox[ButtonBox["D",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/D"],
  FontWeight->"Bold"],
 " because the derivatives of ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 " depend on direction. Mathematically, a function is said to be ",
 StyleBox["differentiable",
  FontSlant->"Italic"],
 " if derivatives exist and are the same in all directions. Because \
derivatives of ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 " are different in different directions, ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 " is not a differentiable function."
}], "Text",
 CellChangeTimes->{{3.821616170580338*^9, 3.821616222238674*^9}},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"45037145-ec57-40cf-8ec1-bd7937526d34"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"49d11af1-c707-4a78-8cb1-7bda61053813"],
 " function can be used to compute directional derivatives of expressions \
involving ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 ". Direction is specified using the ",
 StyleBox[ButtonBox["Scale",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Scale"],
  FontWeight->"Bold"],
 " option of the ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"236c8af3-20a1-481d-9410-b3de0347a8a2"],
 " function. For example, a positive value for the ",
 StyleBox[ButtonBox["Scale",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Scale"],
  FontWeight->"Bold"],
 " option indicates a derivative from the right, and a negative value \
indicates a derivative from the left."
}], "Text",
 CellChangeTimes->{{3.821616229740142*^9, 3.8216162600644217`*^9}},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"67a47924-5419-4e96-8623-c23b4c754736"],

Cell[TextData[{
 "Evaluate the following two inputs to see a typical use of the ",
 StyleBox[ButtonBox["Scale",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Scale"],
  FontWeight->"Bold"],
 " option of the ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"45ce3946-931d-4b69-8447-a9dd9b1f1746"],
 " function to compute directional derivatives of the ",
 StyleBox[ButtonBox["Abs",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Abs"],
  FontWeight->"Bold"],
 " function."
}], "CodeText",
 CellChangeTimes->{{3.821616269741802*^9, 3.8216162738110476`*^9}},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"459259ba-55a9-4b25-a338-d3c5ecd9fdac"],

Cell[BoxData[
 RowBox[{"ND", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], ",", "x", ",", "0", ",", 
   RowBox[{"Scale", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellTags->{"Exercises", "Numerical Differentiation"},
 CellLabel->
  "In[182]:=",ExpressionUUID->"288a5166-3a6e-4e05-a63f-2aa0a54854d5"],

Cell[BoxData[
 RowBox[{"ND", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], ",", "x", ",", "0", ",", 
   RowBox[{"Scale", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellTags->{"Exercises", "Numerical Differentiation"},
 CellLabel->
  "In[183]:=",ExpressionUUID->"58969540-f88a-47c7-9823-69a25b04bd61"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["ND",
   BaseStyle->"Link",
   ButtonData->"paclet:NumericalCalculus/ref/ND"]], "InlineFormula",
  ExpressionUUID->"841ece0d-57f1-4f1a-b4cc-37b6a12a7d1b"],
 " to plot the derivative of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     RowBox[{"\[LeftBracketingBar]", "x", "\[RightBracketingBar]"}]}]], 
   TraditionalForm]],ExpressionUUID->"aa761f49-3ba6-4cf3-bf53-cb5664affe36"],
 " for ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "25096e3d-bd48-4620-a2ea-68a6cd286e1c"],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "3"}], TraditionalForm]],ExpressionUUID->
  "f766fe38-e7b8-4cdb-b164-774eae9e6603"],
 " to 3."
}], "Item",
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"4b0b6836-7ff1-4266-8e6c-cafd329b9617"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`], 
    ButtonBoxOptions -> {
     Background -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]}},
  ButtonFunction:>(SelectionMove[
     ButtonNotebook[], All, ButtonCell]; SelectionMove[
     ButtonNotebook[], After, Cell]; NotebookWrite[
     ButtonNotebook[], {
      Cell[
      "A separate plotting variable will be necessary in this calculation to \
distinguish the plotting variable from the variable of differentiation.", 
       "Text"], 
      Cell[
       TextData[{"For example, if ", 
         StyleBox["x0", "Input"], " is the plotting variable, then ", 
         StyleBox["ND[Exp[-Abs[x]],x,x0]", "Input"], 
         " would compute a numerical derivative of ", 
         StyleBox["Exp[-Abs[x]]", "Input"], " with respect to ", 
         StyleBox["x", "Input"], " at the point ", 
         StyleBox["x0", "Input"], 
         StyleBox[".", "MR"]}], "Text"], 
      Cell[
       TextData[{"If ", 
         StyleBox["x0", "Input"], 
         " is used as the plotting variable, the option ", 
         StyleBox["Scale\[Rule]Sign[x0]", "Input"], " can be included in ", 
         StyleBox[
          ButtonBox[
          "ND", BaseStyle -> "Link", ButtonData -> 
           "paclet:NumericalCalculus/ref/ND"], "MR"], 
         " so the derivative will be computed from the left for negative \
values of ", 
         StyleBox["x0", "MR"], " and from the right for positive values of ", 
         
         StyleBox["x0.", "MR"]}], "Text", 
       CellChangeTimes -> {{3.8216163577845774`*^9, 3.821616357787715*^9}}]}, 
     All]),
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"10d016cd-788f-4a56-ac0f-ab6ad9737b93"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"NumericalCalculus`\"", "]"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"Plot", "[", 
         RowBox[{
           RowBox[{"ND", "[", 
             RowBox[{
               RowBox[{"Exp", "[", 
                 RowBox[{"-", 
                   RowBox[{"Abs", "[", "x", "]"}]}], "]"}], ",", "x", ",", 
               "x0", ",", 
               RowBox[{"Scale", "\[Rule]", 
                 RowBox[{"Sign", "[", "x0", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
             RowBox[{"x0", ",", 
               RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input"]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"f97e9d56-4f52-429f-8d26-f11268d49a39"],

Cell[TextData[{
 "What will happen if you omit the value for the ",
 StyleBox[ButtonBox["Scale",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Scale"],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "option? Why?"
}], "Item",
 CellChangeTimes->{{3.821616280848565*^9, 3.821616287227049*^9}},
 CellTags->{
  "Exercises", 
   "Numerical \
Differentiation"},ExpressionUUID->"276d8d8a-250f-4c67-a332-7e6716fa9f11"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      TextData[{"If the ", 
        StyleBox[
         ButtonBox[
         "Scale", BaseStyle -> "Link", ButtonData -> "paclet:ref/Scale"], 
         FontWeight -> "Bold"], " option is omitted then ", 
        Cell[
         BoxData[
          ButtonBox[
          "ND", BaseStyle -> "Link", ButtonData -> 
           "paclet:NumericalCalculus/ref/ND"]], "InlineFormula"], 
        " samples the function on both sides of the requested point. This \
leads to an indeterminate calculation unless the derivative is the same on \
both sides of that point."}], "Text", 
      CellChangeTimes -> {3.8216163953834496`*^9}], 
     Cell[
      TextData[{"The effect of omitting the ", 
        StyleBox[
         ButtonBox[
         "Scale", BaseStyle -> "Link", ButtonData -> "paclet:ref/Scale"], 
         FontWeight -> "Bold"], 
        " option can be seen by going ahead and doing the plot without the ", 
        
        StyleBox[
         ButtonBox[
         "Scale", BaseStyle -> "Link", ButtonData -> "paclet:ref/Scale"], 
         FontWeight -> "Bold"], " option."}], "CodeText", 
      CellChangeTimes -> {{3.8216164131405354`*^9, 3.8216164233543015`*^9}}], 
     
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"NumericalCalculus`\"", "]"}]], "Input"], 
     Cell[
      BoxData[
       RowBox[{"Plot", "[", 
         RowBox[{
           RowBox[{"ND", "[", 
             RowBox[{
               RowBox[{"Exp", "[", 
                 RowBox[{"-", 
                   RowBox[{"Abs", "[", "x", "]"}]}], "]"}], ",", "x", ",", 
               "x0"}], "]"}], ",", 
           RowBox[{"{", 
             RowBox[{"x0", ",", 
               RowBox[{
                 RowBox[{"-", "1"}], "/", "2"}], ",", 
               RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]], "Input"]}, 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"e70cbce4-76a7-4091-8e62-974806bab5f3"],

Cell["", "EndOfSlide",ExpressionUUID->"64ab5714-e826-49d8-8a46-abf79148a7bc"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
Saveable->False,
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1024, 768},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Numerical Computation",
TaggingRules->{
 "WolframUNotebook" -> True, 
  "PresenterSettings" -> {"ShowNavigationBar" -> True}},
ButtonBoxOptions->{BaseStyle->None},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell["Title", "Subsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> 
          RGBColor[
           0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
         Cell[
          StyleData["Title", "SlideShow"], CellMargins -> {{120, 0}, {0, 40}},
           FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> 
          RGBColor[
           0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
         Cell[
          StyleData[
          "Title", "Slideshow Working", StyleDefinitions -> 
           StyleData["Title", "SlideShow"]]], 
         Cell[
          StyleData[
          "Title", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Title", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Title", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Title", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Subtitle", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> "Source Sans Pro",
           FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
          FontVariations -> {"CapsType" -> "AllCaps"}, 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Subtitle", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subtitle", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subtitle", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["TitleGraphic", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
          "NaturalLanguage", FormatType -> StandardForm, ShowStringCharacters -> 
          False, FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
           StyleData["TitelGraphic", "SlideShow"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell["Section", "Subsection"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
          ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}}, 
          ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
          LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
          70, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Section", "Slideshow Working", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]]], 
         Cell[
          StyleData[
          "Section", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]]], 
         Cell[
          StyleData[
          "Section", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Section", "SlideShow"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> "Source Sans Pro",
           FontSize -> 40, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
         Cell[
          StyleData["Subsection", "SlideShow"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, LineSpacing -> {1, 2}, 
          FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
         Cell[
          StyleData[
          "Subsection", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subsection", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subsection", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subsection", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subsection", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
          CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> "Source Sans Pro",
           FontSize -> 30, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
          "Inline", CellMargins -> {{120, 0}, {0, 40}}, LineSpacing -> {1, 2},
           FontFamily -> "Source Sans Pro", FontSize -> 30, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
         Cell[
          StyleData[
          "Subsubsection", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subsubsection", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subsubsection", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subsubsection", "Slideshow Working"]]]}, Open]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       StyleData["EndOfSlide"], CellFrame -> {{False, False}, {False, True}}, 
       ShowCellBracket -> False, CellMargins -> {{120, 0}, {100, 15}}, 
       CellFrameColor -> GrayLevel[0.85]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}}, 
       CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> GrayLevel[0.8], 
       MenuSortingValue -> 10000]}, Closed]]}, Visible -> False, 
  FrontEndVersion -> "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"8fae9e66-8150-40e7-a15e-9375df5d2cdb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Curve Fitting"->{
  Cell[177282, 4726, 236, 9, 55, "Subsection",ExpressionUUID->"d7595e83-fc92-4f91-bca0-73ac041d5f28",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[177543, 4739, 541, 16, 54, "Item",ExpressionUUID->"f1d37dd3-2bfb-4129-ae9b-24fb6b4ead9f",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178087, 4757, 320, 9, 40, "Input",ExpressionUUID->"e95c0348-eb50-4eb9-8eb9-474c8f0338b6",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178410, 4768, 339, 9, 40, "Input",ExpressionUUID->"b5701654-ce8b-4542-b36b-61e8ccd5accb",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178786, 4782, 824, 27, 54, "Item",ExpressionUUID->"f2d63ca0-6791-4b4e-9ce8-52a311ca7841",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[179613, 4811, 273, 7, 40, "Input",ExpressionUUID->"db18a1ef-c946-4add-a21f-e91ab3b59633",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[179889, 4820, 222, 5, 40, "Input",ExpressionUUID->"2bb4f77e-14da-4c3b-8942-01d7c125bd09",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[180126, 4828, 517, 17, 34, "Item",ExpressionUUID->"ed87e833-56fc-4ecb-9250-8a9720d1727b",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[190465, 5056, 376, 11, 34, "Item",ExpressionUUID->"c8b81dd4-cea6-4930-ae1f-43fa20c58834",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[196524, 5205, 405, 13, 34, "Item",ExpressionUUID->"8ba99593-f4f4-48e9-87d9-0db33fef0562",
   CellTags->{"Exercises", "Curve Fitting"}]},
 "Curve Fitting II"->{
  Cell[204235, 5387, 242, 9, 55, "Subsection",ExpressionUUID->"5f3d83ea-3577-43ac-ae8e-a9949d05f749",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[204480, 5398, 388, 8, 104, "Item",ExpressionUUID->"26b8d57d-0113-432d-80ba-52174af4b982",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[205524, 5428, 225, 5, 51, "Input",ExpressionUUID->"3cc8e234-8cfc-4012-85a7-1d2e0a011269",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[205752, 5435, 741, 22, 74, "Item",ExpressionUUID->"92f6dca1-f8aa-4506-b77e-c6577ed5ab01",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[206496, 5459, 384, 11, 44, "Text",ExpressionUUID->"b2fa54d6-8e70-42e7-8c39-b568e322826f",
   CellTags->{"Exercises", "Curve Fitting II"}]},
 "Exercises"->{
  Cell[170240, 4511, 169, 2, 139, "Section",ExpressionUUID->"11656155-69c0-4a59-8aed-d5e8787629bf",
   CounterAssignments->{{"Chapter", 5}, {"ExerciseNumber", 0}},
   CellTags->"Exercises"],
  Cell[170434, 4517, 284, 10, 91, "Subsection",ExpressionUUID->"eaf30a00-0ee3-44e4-8e87-bbb4a708e152",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[170743, 4531, 812, 26, 71, "Item",ExpressionUUID->"93542c1f-77f9-4cf5-95be-73e4c84b7be0",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[171558, 4559, 413, 12, 68, "Input",ExpressionUUID->"b11ff97e-efab-407b-ae74-ad0eb9f4edbf",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[172008, 4576, 1000, 27, 123, "Item",ExpressionUUID->"6f79029f-45ee-4ca4-809d-932a272f6c8a",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[173011, 4605, 365, 10, 68, "Input",ExpressionUUID->"63de1a07-1c95-473c-99e4-ddfd90683128",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[173379, 4617, 243, 5, 44, "Item",ExpressionUUID->"255e24f9-3cf1-489d-aa20-36322aea4d7b",
   CellGroupingRules->{Global`GroupTogetherGrouping, 10000.},
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[177282, 4726, 236, 9, 55, "Subsection",ExpressionUUID->"d7595e83-fc92-4f91-bca0-73ac041d5f28",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[177543, 4739, 541, 16, 54, "Item",ExpressionUUID->"f1d37dd3-2bfb-4129-ae9b-24fb6b4ead9f",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178087, 4757, 320, 9, 40, "Input",ExpressionUUID->"e95c0348-eb50-4eb9-8eb9-474c8f0338b6",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178410, 4768, 339, 9, 40, "Input",ExpressionUUID->"b5701654-ce8b-4542-b36b-61e8ccd5accb",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[178786, 4782, 824, 27, 54, "Item",ExpressionUUID->"f2d63ca0-6791-4b4e-9ce8-52a311ca7841",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[179613, 4811, 273, 7, 40, "Input",ExpressionUUID->"db18a1ef-c946-4add-a21f-e91ab3b59633",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[179889, 4820, 222, 5, 40, "Input",ExpressionUUID->"2bb4f77e-14da-4c3b-8942-01d7c125bd09",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[180126, 4828, 517, 17, 34, "Item",ExpressionUUID->"ed87e833-56fc-4ecb-9250-8a9720d1727b",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[190465, 5056, 376, 11, 34, "Item",ExpressionUUID->"c8b81dd4-cea6-4930-ae1f-43fa20c58834",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[196524, 5205, 405, 13, 34, "Item",ExpressionUUID->"8ba99593-f4f4-48e9-87d9-0db33fef0562",
   CellTags->{"Exercises", "Curve Fitting"}],
  Cell[204235, 5387, 242, 9, 55, "Subsection",ExpressionUUID->"5f3d83ea-3577-43ac-ae8e-a9949d05f749",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[204480, 5398, 388, 8, 104, "Item",ExpressionUUID->"26b8d57d-0113-432d-80ba-52174af4b982",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[205524, 5428, 225, 5, 51, "Input",ExpressionUUID->"3cc8e234-8cfc-4012-85a7-1d2e0a011269",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[205752, 5435, 741, 22, 74, "Item",ExpressionUUID->"92f6dca1-f8aa-4506-b77e-c6577ed5ab01",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[206496, 5459, 384, 11, 44, "Text",ExpressionUUID->"b2fa54d6-8e70-42e7-8c39-b568e322826f",
   CellTags->{"Exercises", "Curve Fitting II"}],
  Cell[209837, 5555, 240, 9, 55, "Subsection",ExpressionUUID->"1deaca16-2707-4825-b130-43e0d51b730c",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210102, 5568, 320, 8, 34, "Item",ExpressionUUID->"4a7b8aab-6ae6-45ae-8a40-6ed82e82750d",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210425, 5578, 406, 12, 40, "Input",ExpressionUUID->"8d42754c-8f2d-49fe-9474-5119126f1d6c",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210834, 5592, 242, 5, 40, "Input",ExpressionUUID->"c5cf92ff-8474-4907-aa63-dae9da235910",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[225940, 5990, 236, 9, 55, "Subsection",ExpressionUUID->"e03ef530-e7aa-4c30-b838-ff9a285a9e88",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[226179, 6001, 503, 16, 34, "Item",ExpressionUUID->"f7fa67aa-b126-466e-bf8b-d1527540da42",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[230726, 6110, 216, 6, 34, "Item",ExpressionUUID->"577af961-e6e8-40a5-9ed8-2e693d5238d5",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[234484, 6196, 231, 6, 34, "Item",ExpressionUUID->"e7d0a8c1-53a1-4839-af6b-2207fab4d1e7",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[237803, 6292, 208, 6, 34, "Item",ExpressionUUID->"954cf298-25fb-49c3-ac66-980f22053291",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[241651, 6403, 274, 10, 55, "Subsection",ExpressionUUID->"44d105ae-4bd5-4177-83fd-e355de89de67",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[241950, 6417, 394, 9, 54, "Item",ExpressionUUID->"e994c986-cd9e-4449-991b-a22168274540",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242347, 6428, 190, 4, 40, "Input",ExpressionUUID->"cc0905e8-52f3-438d-a2cf-e01d5201da13",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242540, 6434, 256, 5, 40, "Input",ExpressionUUID->"0d0a552a-6da6-4565-b994-f4a6ec132594",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242799, 6441, 500, 14, 40, "Input",ExpressionUUID->"5b84cdaf-bf94-48b5-974e-b39e9955b92d",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[243314, 6458, 231, 7, 34, "Item",ExpressionUUID->"1b8bd50b-91a0-4953-b8bd-938d6f1fa72a",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[246644, 6550, 248, 9, 55, "Subsection",ExpressionUUID->"81c6db3f-3fb0-49e4-9a07-f859e8d6da10",
   CellTags->{"Exercises", "Resampling"}],
  Cell[246895, 6561, 401, 8, 56, "Text",ExpressionUUID->"7e790c37-e839-4038-b11b-57d46fefbaa9",
   CellTags->{"Exercises", "Resampling"}],
  Cell[247321, 6573, 371, 9, 54, "Item",ExpressionUUID->"f0740a88-b1d0-4125-80ab-738ea071c15b",
   CellTags->{"Exercises", "Resampling"}],
  Cell[247695, 6584, 3716, 104, 174, "Input",ExpressionUUID->"12d2f7ef-4088-488e-b6f8-b8bc8b1dc433",
   CellTags->{"Exercises", "Resampling"}],
  Cell[251414, 6690, 175, 3, 40, "Input",ExpressionUUID->"be519d58-dd05-48ce-87cb-71cfbb68a264",
   CellTags->{"Exercises", "Resampling"}],
  Cell[251604, 6696, 1374, 43, 74, "Item",ExpressionUUID->"4ce49150-4d9b-4696-b9bd-754259df9847",
   CellTags->{"Exercises", "Resampling"}],
  Cell[256076, 6820, 660, 18, 54, "Item",ExpressionUUID->"940e266e-7f2d-4103-a3de-3fca4c49791d",
   CellTags->{"Exercises", "Resampling"}],
  Cell[260097, 6933, 257, 10, 55, "Subsection",ExpressionUUID->"081ac2f0-e125-47c9-8ceb-01dd6ae11878",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[260379, 6947, 225, 7, 34, "Item",ExpressionUUID->"bb6f1b32-6a5e-4c68-a39c-9ff07ddbb265",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[260794, 6962, 785, 24, 40, "Input",ExpressionUUID->"afa60d9e-29e8-481f-bee3-c106bdfc6ac1",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[262491, 7010, 364, 12, 34, "Item",ExpressionUUID->"a53419d6-14a0-4923-b69f-71eeee81d0ba",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[266724, 7127, 262, 10, 55, "Subsection",ExpressionUUID->"af09769b-0c7d-492b-ae74-29c1e1a64ee4",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[266989, 7139, 1164, 32, 106, "Text",ExpressionUUID->"9b5b643b-65d4-4d74-a64a-4f6e650f8ee2",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[268156, 7173, 674, 20, 77, "CodeText",ExpressionUUID->"c3adf56f-fdd3-416f-a367-f12320aab18e",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[268833, 7195, 184, 3, 52, "Input",ExpressionUUID->"72babba4-2628-4979-b7c5-1e4041ccffe7",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[269020, 7200, 171, 3, 52, "Input",ExpressionUUID->"b490fee8-027d-493d-9ff6-7dbb9ceae5c9",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[269194, 7205, 1305, 42, 131, "Text",ExpressionUUID->"45037145-ec57-40cf-8ec1-bd7937526d34",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[270502, 7249, 1223, 36, 110, "Text",ExpressionUUID->"67a47924-5419-4e96-8623-c23b4c754736",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[271728, 7287, 771, 23, 77, "CodeText",ExpressionUUID->"459259ba-55a9-4b25-a338-d3c5ecd9fdac",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[272502, 7312, 301, 7, 52, "Input",ExpressionUUID->"288a5166-3a6e-4e05-a63f-2aa0a54854d5",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[272806, 7321, 321, 8, 52, "Input",ExpressionUUID->"58969540-f88a-47c7-9823-69a25b04bd61",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[273130, 7331, 869, 28, 48, "Item",ExpressionUUID->"4b0b6836-7ff1-4266-8e6c-cafd329b9617",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[277064, 7439, 426, 14, 44, "Item",ExpressionUUID->"276d8d8a-250f-4c67-a332-7e6716fa9f11",
   CellTags->{"Exercises", "Numerical Differentiation"}]},
 "Functions"->{
  Cell[20741, 429, 133, 1, 230, "Section",ExpressionUUID->"496e407a-c066-4da1-b418-4ae33f4e9a50",
   CellTags->"Functions"],
  Cell[20877, 432, 511, 15, 44, "Item",ExpressionUUID->"585c942a-41b6-42ce-b20a-4177123a9c9d",
   CellTags->"Functions"],
  Cell[21391, 449, 326, 8, 44, "Item",ExpressionUUID->"cfbd3645-b332-4283-a26f-38c1c4ea59bc",
   CellTags->"Functions"],
  Cell[21720, 459, 318, 8, 44, "Item",ExpressionUUID->"05ddf751-3789-4d08-8a01-544557f60885",
   CellTags->"Functions"],
  Cell[22041, 469, 316, 8, 44, "Item",ExpressionUUID->"d14ea351-5ec0-460d-81e0-aed69ccada57",
   CellTags->"Functions"],
  Cell[22360, 479, 592, 19, 44, "Item",ExpressionUUID->"e024ff95-3f1d-4ebf-a36e-bd495593bcb8",
   CellTags->"Functions"],
  Cell[22955, 500, 467, 14, 44, "Item",ExpressionUUID->"8a24ea91-2aa3-4fa5-b798-37143421c545",
   CellTags->"Functions"],
  Cell[23425, 516, 331, 8, 44, "Item",ExpressionUUID->"7a6a2fd9-e860-4fc1-ac21-645867bf8922",
   CellTags->"Functions"],
  Cell[23759, 526, 331, 8, 44, "Item",ExpressionUUID->"ab927bcd-ffbb-4c7b-87b7-ea5d51c32498",
   CellTags->"Functions"],
  Cell[24366, 548, 146, 2, 139, "Section",ExpressionUUID->"99cff20c-e257-4d94-a062-fa2d1b38b9f2",
   CellTags->"Functions"],
  Cell[24515, 552, 340, 6, 108, "Text",ExpressionUUID->"0b9bc45e-5165-4a3f-9791-7e1f8464ddd8",
   CellTags->"Functions"],
  Cell[24858, 560, 202, 2, 44, "CodeText",ExpressionUUID->"c619b03d-e83d-4497-9bc1-3e4b09def117",
   CellTags->"Functions"],
  Cell[25554, 576, 189, 4, 51, "Input",ExpressionUUID->"2de5b134-dd1e-44ee-b65e-df27544b5cb6",
   CellTags->"Functions"],
  Cell[25746, 582, 219, 2, 44, "CodeText",ExpressionUUID->"cd62072e-0019-4ca5-bcce-013bc7d0f6ba",
   CellTags->"Functions"],
  Cell[25968, 586, 305, 8, 55, "Input",ExpressionUUID->"ddad8df7-aca6-4f38-8844-616277ac58e4",
   CellTags->"Functions"],
  Cell[26598, 605, 249, 4, 44, "CodeText",ExpressionUUID->"551d2ef6-75e5-4173-a5c6-733488a7c865",
   CellTags->"Functions"],
  Cell[26850, 611, 410, 10, 148, "Input",ExpressionUUID->"fcca5054-baec-404a-bc83-ebea8d997a30",
   CellTags->"Functions"],
  Cell[28384, 658, 153, 2, 139, "Section",ExpressionUUID->"77cc775f-b2cb-4e18-92a0-dfcec973ecc9",
   CellTags->"Functions"],
  Cell[28540, 662, 597, 9, 204, "Text",ExpressionUUID->"7ab3b336-3a99-4acb-93a0-3dd617a63610",
   CellTags->"Functions"],
  Cell[29140, 673, 469, 10, 108, "CodeText",ExpressionUUID->"18ce389f-70ce-4046-a41d-938f0f7c3748",
   CellTags->"Functions"],
  Cell[29612, 685, 546, 11, 51, "Input",ExpressionUUID->"308579fc-abe5-4742-a37a-a27d430e96eb",
   CellTags->"Functions"],
  Cell[30161, 698, 207, 4, 51, "Input",ExpressionUUID->"4650ca9d-aa59-4ab9-93f6-eafafeae7e29",
   CellTags->"Functions"],
  Cell[30371, 704, 173, 3, 51, "Input",ExpressionUUID->"7a8eafa3-9bdb-4a31-b7bb-83000ffee586",
   CellTags->"Functions"],
  Cell[30547, 709, 351, 6, 76, "CodeText",ExpressionUUID->"33781bd8-21e0-476a-808d-a65a2d1f2d01",
   CellTags->"Functions"],
  Cell[30901, 717, 171, 3, 51, "Input",ExpressionUUID->"79fe605f-5038-4b14-9cab-2eef4832976e",
   CellTags->"Functions"],
  Cell[31075, 722, 251, 5, 44, "CodeText",ExpressionUUID->"7bbdba31-f388-4d6c-9d4d-752a33663224",
   CellTags->"Functions"],
  Cell[31329, 729, 456, 12, 51, "Input",ExpressionUUID->"80ebec86-ec28-4a32-9162-25a6b9cdc158",
   CellTags->"Functions"],
  Cell[31788, 743, 224, 5, 51, "Input",ExpressionUUID->"090480fd-f416-4141-b336-4ae54a9b3acc",
   CellTags->"Functions"],
  Cell[32288, 762, 153, 2, 139, "Section",ExpressionUUID->"d2d01309-75d2-4175-82a1-8f367472d1ae",
   CellTags->"Functions"],
  Cell[32444, 766, 450, 13, 44, "CodeText",ExpressionUUID->"923dc08f-e944-40d9-bada-af376ea6cc96",
   CellTags->"Functions"],
  Cell[32897, 781, 271, 7, 42, "Input",ExpressionUUID->"be13d9da-18f1-42a9-99ca-b6007b74d9d4",
   CellTags->"Functions"],
  Cell[33171, 790, 529, 11, 58, "Text",ExpressionUUID->"20e5ceaa-69e3-4207-b939-a1039528b7ab",
   CellTags->"Functions"],
  Cell[35857, 871, 256, 5, 35, "CodeText",ExpressionUUID->"13203b63-3b84-4d1d-a12d-504dab183c95",
   CellTags->"Functions"],
  Cell[36116, 878, 404, 11, 66, "Input",ExpressionUUID->"ff9ca22e-1db2-425d-911e-42c17f5b8205",
   CellTags->"Functions"],
  Cell[36796, 903, 180, 2, 139, "Section",ExpressionUUID->"4948d1d1-c97f-4193-a52d-70c3469a2685",
   CellTags->"Functions"],
  Cell[36979, 907, 393, 10, 35, "Text",ExpressionUUID->"18f99582-3db2-43bb-874a-9858f73a05ea",
   CellTags->"Functions"],
  Cell[37375, 919, 864, 21, 58, "CodeText",ExpressionUUID->"acc5fd87-b78b-43b5-a8a8-53725fdafc49",
   CellTags->"Functions"],
  Cell[38242, 942, 344, 10, 42, "Input",ExpressionUUID->"da5cf3d0-9b18-4871-8845-3147fd4ee40d",
   CellTags->"Functions"],
  Cell[38589, 954, 387, 10, 35, "CodeText",ExpressionUUID->"ca2a0c73-e388-473d-823d-839e67baced0",
   CellTags->"Functions"],
  Cell[38979, 966, 343, 10, 42, "Input",ExpressionUUID->"393f8474-1ba0-48e1-b47b-bde2c1b955a5",
   CellTags->"Functions"],
  Cell[39325, 978, 294, 6, 35, "CodeText",ExpressionUUID->"4c4ac5dd-fefe-415e-84ec-168431b054e1",
   CellTags->"Functions"],
  Cell[39622, 986, 344, 10, 42, "Input",ExpressionUUID->"8151d4ef-0881-4a9b-b756-96909983d6a7",
   CellTags->"Functions"],
  Cell[39969, 998, 396, 9, 35, "CodeText",ExpressionUUID->"3b2e3f36-175b-4f86-a7e7-e4f426202b27",
   CellTags->"Functions"],
  Cell[40368, 1009, 515, 16, 45, "Input",ExpressionUUID->"d867df1e-e845-4646-8c61-c9921cc6289b",
   CellTags->"Functions"],
  Cell[41658, 1054, 454, 10, 35, "CodeText",ExpressionUUID->"0d783000-d4af-4507-ae32-dcf7b6271d0f",
   CellTags->"Functions"],
  Cell[42115, 1066, 580, 18, 45, "Input",ExpressionUUID->"83b61db6-04c6-42a8-9df0-8091e7ed2169",
   CellTags->"Functions"],
  Cell[42971, 1098, 154, 2, 139, "Section",ExpressionUUID->"be621810-47c4-4285-a62a-db172e831636",
   CellTags->"Functions"],
  Cell[43128, 1102, 374, 10, 35, "Text",ExpressionUUID->"d2036302-d23e-449a-875c-24c39c817b03",
   CellTags->"Functions"],
  Cell[43505, 1114, 210, 2, 35, "CodeText",ExpressionUUID->"9988b326-09fa-4968-9c95-cbb2344661c8",
   CellTags->"Functions"],
  Cell[43718, 1118, 317, 9, 42, "Input",ExpressionUUID->"d7f7e6c6-3c7c-4149-a09d-21f693ffecf0",
   CellTags->"Functions"],
  Cell[44060, 1131, 482, 11, 35, "CodeText",ExpressionUUID->"6cc0173b-c9e0-4b58-a901-9a21f6004bb4",
   CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
   CellTags->"Functions"],
  Cell[44545, 1144, 374, 10, 42, "Input",ExpressionUUID->"311f98f8-23d4-478f-b50a-7f40088f4a36",
   CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
   CellTags->"Functions"],
  Cell[44922, 1156, 486, 8, 58, "Text",ExpressionUUID->"23ec1d40-734c-46be-8391-0b1e34649c0e",
   CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
   CellTags->"Functions"],
  Cell[45423, 1167, 234, 4, 35, "Text",ExpressionUUID->"399e9d19-ccee-4bef-bb11-4009a4a32459",
   CellTags->"Functions"],
  Cell[46570, 1202, 595, 18, 45, "Input",ExpressionUUID->"cb982df8-a0d9-445b-85e5-e4c3481d3b51",
   CellTags->"Functions"],
  Cell[49087, 1280, 591, 13, 58, "Text",ExpressionUUID->"5cca075e-a7e5-4ecf-851e-ccfbb6996a0f",
   CellTags->"Functions"],
  Cell[49954, 1307, 198, 2, 230, "Section",ExpressionUUID->"5485ede6-52b2-451f-a914-8baa962c4b5d",
   CellTags->"Functions"],
  Cell[50155, 1311, 460, 10, 58, "Text",ExpressionUUID->"9e21fae2-2a8b-4772-a5e7-046762226392",
   CellTags->"Functions"],
  Cell[50618, 1323, 404, 10, 35, "CodeText",ExpressionUUID->"0c27bfbc-6f4e-4ab3-93fe-0e033de0e4a0",
   CellTags->"Functions"],
  Cell[51025, 1335, 726, 22, 42, "Input",ExpressionUUID->"d5703a4a-d3a0-4715-b0a6-7a5fe6fc9d63",
   CellTags->"Functions"],
  Cell[51754, 1359, 619, 19, 35, "Text",ExpressionUUID->"02804726-1098-4053-ae77-88d14e6bf84f",
   CellTags->"Functions"],
  Cell[52376, 1380, 479, 10, 58, "Text",ExpressionUUID->"c3e03984-fea4-4af0-b37f-c33f49c417ea",
   CellTags->"Functions"],
  Cell[52858, 1392, 458, 12, 35, "Text",ExpressionUUID->"32c90c0c-0ccd-44f7-a662-c070b9d796a8",
   CellTags->"Functions"],
  Cell[53706, 1419, 176, 4, 42, "Input",ExpressionUUID->"2d5cba56-cd14-42e5-8922-3751aa2d211a",
   CellTags->"Functions"],
  Cell[53885, 1425, 203, 2, 35, "CodeText",ExpressionUUID->"76f74fca-2246-49d2-b041-ed2651b0258e",
   CellTags->"Functions"],
  Cell[54091, 1429, 293, 8, 42, "Input",ExpressionUUID->"4285c0ae-c539-4874-9acf-de75fa5d2c9f",
   CellTags->"Functions"],
  Cell[54387, 1439, 311, 5, 58, "Text",ExpressionUUID->"7e35b1b0-fad1-4093-86bb-183e53f15f4c",
   CellTags->"Functions"],
  Cell[54948, 1454, 314, 9, 42, "Input",ExpressionUUID->"1fe3b372-ddcf-4ba1-8ae4-9499e185bd36",
   CellTags->"Functions"],
  Cell[57224, 1528, 188, 2, 139, "Section",ExpressionUUID->"6eb516f7-1c59-445c-b4fd-10ccf1928167",
   CellTags->"Functions"],
  Cell[57415, 1532, 1176, 31, 81, "Text",ExpressionUUID->"53a01afa-6cc8-456b-b479-d4255328647f",
   CellTags->"Functions"],
  Cell[58594, 1565, 504, 14, 35, "CodeText",ExpressionUUID->"9f35dabc-ffef-4483-9768-a553cbaf3e05",
   CellTags->"Functions"],
  Cell[59101, 1581, 440, 14, 64, "Input",ExpressionUUID->"f405a266-14ad-42ca-9596-2966fabc057d",
   CellTags->"Functions"],
  Cell[59544, 1597, 199, 2, 35, "CodeText",ExpressionUUID->"2b63cf9a-8eaa-4e68-98b8-4b844df48ac3",
   CellTags->"Functions"],
  Cell[59746, 1601, 214, 5, 42, "Input",ExpressionUUID->"faae2f76-3485-4f6e-82bf-70d1ade78568",
   CellTags->"Functions"],
  Cell[59963, 1608, 295, 7, 35, "CodeText",ExpressionUUID->"9c55256d-018d-497f-831b-43c7eb50a8f2",
   CellTags->"Functions"],
  Cell[60261, 1617, 152, 3, 42, "Input",ExpressionUUID->"b6c6ac6c-2350-444e-a4af-0071c7a0d028",
   CellTags->"Functions"],
  Cell[60416, 1622, 176, 3, 35, "Text",ExpressionUUID->"5c7aff4d-47b1-4a25-8e52-ece88e5bdd62",
   CellTags->"Functions"],
  Cell[60595, 1627, 379, 9, 35, "CodeText",ExpressionUUID->"4487621f-71d2-48fe-a6fc-1df13ae63283",
   CellTags->"Functions"],
  Cell[60977, 1638, 347, 10, 42, "Input",ExpressionUUID->"2845395f-9e33-4bef-aeb9-21d1f1695dd9",
   CellTags->"Functions"],
  Cell[61327, 1650, 351, 10, 42, "Input",ExpressionUUID->"7f58fa1c-b410-40da-82e9-b31b5e983397",
   CellTags->"Functions"],
  Cell[61681, 1662, 197, 2, 35, "CodeText",ExpressionUUID->"9fbe1304-d8b9-4c47-b5fc-ad81644bda3f",
   CellTags->"Functions"],
  Cell[61881, 1666, 280, 7, 42, "Input",ExpressionUUID->"995aa62a-44b8-4195-816b-c6d52c91cf27",
   CellTags->"Functions"],
  Cell[62164, 1675, 395, 10, 35, "CodeText",ExpressionUUID->"0d12b2d4-366b-4641-a434-8f206ca76054",
   CellTags->"Functions"],
  Cell[62562, 1687, 238, 7, 42, "Input",ExpressionUUID->"82fbb6d1-cdd1-4f6d-898e-b15a2f92557a",
   CellTags->"Functions"],
  Cell[62803, 1696, 235, 5, 42, "Input",ExpressionUUID->"a9b3cf81-4f01-4f7a-8d61-1f20487dc9ff",
   CellTags->"Functions"]},
 "High Precision Integration"->{
  Cell[241651, 6403, 274, 10, 55, "Subsection",ExpressionUUID->"44d105ae-4bd5-4177-83fd-e355de89de67",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[241950, 6417, 394, 9, 54, "Item",ExpressionUUID->"e994c986-cd9e-4449-991b-a22168274540",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242347, 6428, 190, 4, 40, "Input",ExpressionUUID->"cc0905e8-52f3-438d-a2cf-e01d5201da13",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242540, 6434, 256, 5, 40, "Input",ExpressionUUID->"0d0a552a-6da6-4565-b994-f4a6ec132594",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[242799, 6441, 500, 14, 40, "Input",ExpressionUUID->"5b84cdaf-bf94-48b5-974e-b39e9955b92d",
   CellTags->{"Exercises", "High Precision Integration"}],
  Cell[243314, 6458, 231, 7, 34, "Item",ExpressionUUID->"1b8bd50b-91a0-4953-b8bd-938d6f1fa72a",
   CellTags->{"Exercises", "High Precision Integration"}]},
 "Large Arrays"->{
  Cell[120796, 3116, 116, 2, 139, "Section",ExpressionUUID->"96849a68-23af-48e8-8781-4bebb77aafc1",
   CellTags->"Large Arrays"],
  Cell[120915, 3120, 194, 3, 35, "Item",ExpressionUUID->"ef760736-b068-444b-8ab2-2a5caf28424a",
   CellTags->"Large Arrays"],
  Cell[121112, 3125, 181, 3, 35, "Item",ExpressionUUID->"4f6230e6-d9b7-4111-9f6f-335552714297",
   CellTags->"Large Arrays"],
  Cell[121296, 3130, 176, 3, 35, "Item",ExpressionUUID->"8c38e58d-2e76-420e-9f61-4967fcbbfc66",
   CellTags->"Large Arrays"],
  Cell[121475, 3135, 174, 3, 35, "Item",ExpressionUUID->"3e80ed31-78ae-4064-88f5-e802df01bc41",
   CellTags->"Large Arrays"],
  Cell[121652, 3140, 169, 3, 35, "Item",ExpressionUUID->"5bbcda23-b881-4adb-9eea-186ec85f8345",
   CellTags->"Large Arrays"],
  Cell[122097, 3157, 167, 3, 139, "Section",ExpressionUUID->"5a2f6148-34ea-4b41-a6e9-9e2f3352236a",
   CellTags->"Large Arrays"],
  Cell[122267, 3162, 230, 5, 35, "Text",ExpressionUUID->"67554502-16ae-485b-8af9-ade534703d95",
   CellTags->"Large Arrays"],
  Cell[122500, 3169, 424, 10, 35, "CodeText",ExpressionUUID->"5e8ee7f9-077c-4982-98f0-8f0a82fed5de",
   CellTags->"Large Arrays"],
  Cell[122927, 3181, 275, 7, 45, "Input",ExpressionUUID->"f98d329d-6ca1-4f85-9aac-65e67767157d",
   CellTags->"Large Arrays"],
  Cell[123205, 3190, 123, 2, 35, "Text",ExpressionUUID->"39b9d973-5d87-4d0e-a0a7-e32d7c6d3f70",
   CellTags->"Large Arrays"],
  Cell[123331, 3194, 533, 9, 81, "Text",ExpressionUUID->"d4b214b9-e9ee-4c25-a303-0b6a4ee02fec",
   CellTags->"Large Arrays"],
  Cell[124140, 3217, 193, 3, 139, "Section",ExpressionUUID->"663563e2-a5cb-4518-862f-7d26f3aca5f3",
   CellTags->"Large Arrays"],
  Cell[124336, 3222, 440, 10, 58, "Text",ExpressionUUID->"cf61a68c-4e51-4268-a3ad-48ca9d825b0d",
   CellTags->"Large Arrays"],
  Cell[125393, 3252, 600, 16, 35, "CodeText",ExpressionUUID->"c96f6dd3-9f20-48ad-90ac-21edcd5c4c3a",
   CellTags->"Large Arrays"],
  Cell[125996, 3270, 391, 11, 42, "Input",ExpressionUUID->"735a3e50-d0af-4100-bc38-8b097cdb5c8c",
   CellTags->"Large Arrays"],
  Cell[126390, 3283, 521, 13, 35, "Text",ExpressionUUID->"ae740596-d44b-483b-b1e3-ffde438d0cca",
   CellTags->"Large Arrays"],
  Cell[127288, 3311, 168, 3, 42, "Input",ExpressionUUID->"62650b6c-57f8-471f-9347-3e310eac856d",
   CellTags->"Large Arrays"],
  Cell[127459, 3316, 422, 12, 35, "CodeText",ExpressionUUID->"879065e4-2ed6-4aa5-92f3-d79ae364963f",
   CellTags->"Large Arrays"],
  Cell[127884, 3330, 172, 3, 42, "Input",ExpressionUUID->"b2d8677f-eb84-42cc-bfc7-790b7011cbbc",
   CellTags->"Large Arrays"],
  Cell[128059, 3335, 559, 16, 35, "CodeText",ExpressionUUID->"4a027bfc-9bb0-48af-8db0-db03b6b0868a",
   CellTags->"Large Arrays"],
  Cell[128621, 3353, 172, 3, 42, "Input",ExpressionUUID->"f6010b81-c5e4-4b3e-a859-4adb56193d41",
   CellTags->"Large Arrays"],
  Cell[129069, 3370, 195, 3, 139, "Section",ExpressionUUID->"d0246185-d730-4324-8529-f73db8eb13bc",
   CellTags->"Large Arrays"],
  Cell[129267, 3375, 531, 16, 35, "CodeText",ExpressionUUID->"1addf4cf-2f71-4364-85c3-1cab3e3f5f12",
   CellTags->"Large Arrays"],
  Cell[129801, 3393, 171, 3, 42, "Input",ExpressionUUID->"eb4bf21c-b593-4ddf-833e-5581a20fba35",
   CellTags->"Large Arrays"],
  Cell[129975, 3398, 422, 12, 35, "CodeText",ExpressionUUID->"22fc5391-69f2-4e21-bb03-08aa78f789d7",
   CellTags->"Large Arrays"],
  Cell[130400, 3412, 355, 9, 42, "Input",ExpressionUUID->"47262be3-0c23-4fbe-a918-32d9af476d7b",
   CellTags->"Large Arrays"],
  Cell[131031, 3435, 198, 3, 139, "Section",ExpressionUUID->"3b2d8ef5-ffb5-4932-82ea-f226953f1c6b",
   CellTags->"Large Arrays"],
  Cell[131232, 3440, 446, 8, 58, "Text",ExpressionUUID->"b4e13d85-61d4-42fc-b79d-94d1a2f0f8c1",
   CellTags->"Large Arrays"],
  Cell[131681, 3450, 520, 12, 58, "CodeText",ExpressionUUID->"e4174484-4942-4021-bca2-a0006a3518fc",
   CellTags->"Large Arrays"],
  Cell[132204, 3464, 627, 19, 45, "Input",ExpressionUUID->"7e723443-49ef-497d-a309-863dc67c5a01",
   CellTags->"Large Arrays"],
  Cell[132834, 3485, 218, 3, 35, "Text",ExpressionUUID->"b702701f-3dfb-4838-8866-ef0c8610e689",
   CellTags->"Large Arrays"],
  Cell[133055, 3490, 220, 5, 42, "Input",ExpressionUUID->"e0be8b55-6ed7-434f-a70c-e537731b3954",
   CellTags->"Large Arrays"],
  Cell[133278, 3497, 405, 8, 58, "CodeText",ExpressionUUID->"12be45e1-98f9-4e65-be96-6b4a7ce08816",
   CellTags->"Large Arrays"],
  Cell[133686, 3507, 275, 7, 45, "Input",ExpressionUUID->"ad6c98d0-fbdb-4d1f-b2f3-c7bc37192f9b",
   CellTags->"Large Arrays"],
  Cell[133964, 3516, 447, 10, 58, "Text",ExpressionUUID->"b01fa216-b71c-4842-b16b-ac9ba93405e6",
   CellTags->"Large Arrays"],
  Cell[144196, 3765, 185, 3, 139, "Section",ExpressionUUID->"9de2a503-89e5-4490-aa84-3020d8c5a133",
   CellTags->"Large Arrays"],
  Cell[144384, 3770, 688, 18, 58, "CodeText",ExpressionUUID->"1d2d1281-e24c-4596-9652-526c83ddbff5",
   CellTags->"Large Arrays"],
  Cell[145075, 3790, 234, 5, 42, "Input",ExpressionUUID->"4c8fc309-632c-4226-ac1e-6bba0909739b",
   CellTags->"Large Arrays"],
  Cell[145312, 3797, 169, 3, 42, "Input",ExpressionUUID->"55421774-3151-42d3-a37f-8f1fe8b5ad93",
   CellTags->"Large Arrays"],
  Cell[145484, 3802, 431, 8, 58, "Text",ExpressionUUID->"aa0bc7e4-9fab-492f-9dd4-135af4be4413",
   CellTags->"Large Arrays"],
  Cell[145918, 3812, 635, 17, 58, "CodeText",ExpressionUUID->"5c5b4952-190c-44c5-ae27-c7857ecd6f66",
   CellTags->"Large Arrays"],
  Cell[146556, 3831, 196, 4, 42, "Input",ExpressionUUID->"c6c996d8-b8c2-432d-a042-1dcfa4a3b1ea",
   CellTags->"Large Arrays"],
  Cell[146755, 3837, 168, 3, 42, "Input",ExpressionUUID->"7f047de3-d769-48ba-a338-182f69e932d7",
   CellTags->"Large Arrays"],
  Cell[146926, 3842, 549, 13, 35, "CodeText",ExpressionUUID->"29968e30-6c0f-48f0-b62a-deb712fc61c8",
   CellTags->"Large Arrays"],
  Cell[147478, 3857, 183, 3, 42, "Input",ExpressionUUID->"b8184ce8-ff0c-4786-b71b-59b4af1343b0",
   CellTags->"Large Arrays"],
  Cell[147664, 3862, 190, 3, 42, "Input",ExpressionUUID->"9bf56f15-100c-4809-b37e-1ce161ec5988",
   CellTags->"Large Arrays"],
  Cell[147857, 3867, 380, 7, 58, "Text",ExpressionUUID->"f46187b4-3e33-4175-b4ef-da8bd5ad7f16",
   CellTags->"Large Arrays"],
  Cell[148240, 3876, 264, 6, 35, "CodeText",ExpressionUUID->"fbb9acb3-e31b-4122-b633-de8d2e99c48a",
   CellTags->"Large Arrays"],
  Cell[148507, 3884, 260, 6, 42, "Input",ExpressionUUID->"4a3eb46a-096e-4d10-a66b-f46883ec04cf",
   CellTags->"Large Arrays"],
  Cell[148770, 3892, 301, 6, 35, "CodeText",ExpressionUUID->"907e12a0-a394-4d31-88f1-10827d2a8690",
   CellTags->"Large Arrays"],
  Cell[149074, 3900, 375, 10, 85, "Input",ExpressionUUID->"fc1daa7a-f771-4eaa-968d-8a541e2de470",
   CellTags->"Large Arrays"],
  Cell[149452, 3912, 227, 3, 35, "CodeText",ExpressionUUID->"e56a3bcb-b2f8-4daf-94a9-1bf4884c8ca9",
   CellTags->"Large Arrays"],
  Cell[149682, 3917, 257, 6, 62, "Input",ExpressionUUID->"63d7e228-8517-4a07-ae9d-b04c9d255cac",
   CellTags->"Large Arrays"],
  Cell[149942, 3925, 328, 6, 58, "CodeText",ExpressionUUID->"2f32f8b8-e1cf-4bbb-a2d1-8ffbaeb5319b",
   CellTags->"Large Arrays"],
  Cell[150273, 3933, 285, 7, 42, "Input",ExpressionUUID->"7a099d72-b80b-4a88-987e-7ddbb3f8344a",
   CellTags->"Large Arrays"],
  Cell[150561, 3942, 285, 7, 42, "Input",ExpressionUUID->"cd075afc-f6d9-49db-bb4b-e444a4ca3463",
   CellTags->"Large Arrays"],
  Cell[154488, 4038, 188, 3, 139, "Section",ExpressionUUID->"82e27b09-6d2c-4d07-8afe-282139c449b7",
   CellTags->"Large Arrays"],
  Cell[154679, 4043, 443, 8, 58, "Text",ExpressionUUID->"8d77e994-fae6-435e-a6ed-188b97621530",
   CellTags->"Large Arrays"],
  Cell[155147, 4055, 141, 2, 91, "Subsection",ExpressionUUID->"fe010985-5d65-4b13-93a9-d931e7dcc334",
   CellTags->"Large Arrays"],
  Cell[155291, 4059, 486, 13, 35, "CodeText",ExpressionUUID->"466b14f4-dc38-4d2a-9e60-0a668ce4cc71",
   CellTags->"Large Arrays"],
  Cell[155780, 4074, 415, 11, 42, "Input",ExpressionUUID->"5ab2b069-b878-4742-8acf-a8b3c4ee72d3",
   CellTags->"Large Arrays"],
  Cell[156198, 4087, 215, 5, 35, "Text",ExpressionUUID->"b897ac05-3e3c-4adc-afa4-45b565af8ed9",
   CellTags->"Large Arrays"],
  Cell[156416, 4094, 795, 23, 58, "CodeText",ExpressionUUID->"fdecd28b-3057-44a5-b974-d55e5fb895cb",
   CellTags->"Large Arrays"],
  Cell[157214, 4119, 400, 10, 42, "Input",ExpressionUUID->"0fcca7b4-3bb5-4430-8a4d-0e77bc05ce01",
   CellTags->"Large Arrays"],
  Cell[157617, 4131, 183, 3, 42, "Input",ExpressionUUID->"bd6ba56c-3ede-4d81-937d-f7b147b4db4e",
   CellTags->"Large Arrays"],
  Cell[157803, 4136, 260, 6, 42, "Input",ExpressionUUID->"8db5b37e-f670-4e37-ab37-c844f7e04250",
   CellTags->"Large Arrays"],
  Cell[158066, 4144, 186, 3, 42, "Input",ExpressionUUID->"011a8b0c-f8ea-490c-b7c6-fb4bdae34594",
   CellTags->"Large Arrays"],
  Cell[162528, 4282, 216, 3, 230, "Section",ExpressionUUID->"14cc879e-826a-4bb4-903a-89e9ad8801cd",
   CellTags->"Large Arrays"],
  Cell[162747, 4287, 511, 13, 58, "CodeText",ExpressionUUID->"c1a0800d-e5fd-40e1-ae80-e0ebecf3bc26",
   CellTags->"Large Arrays"],
  Cell[163261, 4302, 281, 6, 42, "Input",ExpressionUUID->"ae4ad2ad-feaa-4bca-afa3-b78c5e242181",
   CellTags->"Large Arrays"],
  Cell[163545, 4310, 468, 11, 58, "Text",ExpressionUUID->"28b79120-5b7b-4b15-bf74-bd31fda82af5",
   CellTags->"Large Arrays"],
  Cell[164289, 4335, 208, 3, 230, "Section",ExpressionUUID->"a19f9053-ed85-4414-822b-c94f4d81391f",
   CellTags->"Large Arrays"],
  Cell[164500, 4340, 418, 8, 56, "Item",ExpressionUUID->"e6c1776d-b961-42c0-aace-b20e481f7f08",
   CellTags->"Large Arrays"],
  Cell[164921, 4350, 199, 5, 35, "Item",ExpressionUUID->"a9f6310b-f5ea-4b85-9369-d438df011d9a",
   CellTags->"Large Arrays"],
  Cell[165123, 4357, 311, 6, 35, "CodeText",ExpressionUUID->"4423e610-b481-4a28-9ba3-32007e877e49",
   CellTags->"Large Arrays"],
  Cell[165437, 4365, 220, 4, 42, "Input",ExpressionUUID->"9e23c757-8989-4e66-aa91-2331a7727af6",
   CellTags->"Large Arrays"],
  Cell[165660, 4371, 302, 7, 42, "Input",ExpressionUUID->"5dff1a75-2e25-42b8-8375-a75eb2e91e59",
   CellTags->"Large Arrays"],
  Cell[165965, 4380, 310, 8, 42, "Input",ExpressionUUID->"edf5519d-d47d-429c-aab1-1ccc715cadf1",
   CellTags->"Large Arrays"],
  Cell[166278, 4390, 276, 7, 42, "Input",ExpressionUUID->"b39d7e06-1b23-49cd-8e14-c2c59272a156",
   CellTags->"Large Arrays"],
  Cell[166557, 4399, 233, 5, 35, "Text",ExpressionUUID->"00e7dd44-8414-456d-8bae-1884364bbf79",
   CellTags->"Large Arrays"],
  Cell[166793, 4406, 529, 12, 58, "CodeText",ExpressionUUID->"c0034a18-3b91-439a-a17f-38886c6e3161",
   CellTags->"Large Arrays"],
  Cell[167325, 4420, 387, 11, 42, "Input",ExpressionUUID->"47fa4522-046b-4e60-9994-4f4dc137b4ac",
   CellTags->"Large Arrays"],
  Cell[167715, 4433, 212, 3, 35, "CodeText",ExpressionUUID->"9e3053e1-87df-4c68-a2e0-546fdd302190",
   CellTags->"Large Arrays"],
  Cell[167930, 4438, 382, 11, 42, "Input",ExpressionUUID->"b893b7e2-59f7-426f-b23a-6b1188be74db",
   CellTags->"Large Arrays"],
  Cell[168315, 4451, 468, 12, 35, "CodeText",ExpressionUUID->"48211574-6658-4ad0-b3a4-7f7274d654e5",
   CellTags->"Large Arrays"],
  Cell[168786, 4465, 197, 4, 51, "Input",ExpressionUUID->"c6b9147b-bc15-43af-be73-be3a4442ec51",
   CellTags->"Large Arrays"],
  Cell[168986, 4471, 384, 8, 76, "Text",ExpressionUUID->"ac3f6b03-c7c2-460a-bdfc-efdd27c20721",
   CellTags->"Large Arrays"],
  Cell[169373, 4481, 281, 6, 76, "CodeText",ExpressionUUID->"d1e00574-d84e-4339-8171-db3fb8654573",
   CellTags->"Large Arrays"],
  Cell[169657, 4489, 307, 8, 51, "Input",ExpressionUUID->"2b0f7e9e-f7ca-43eb-9f83-5de8704656b0",
   CellTags->"Large Arrays"]},
 "Moving Averages"->{
  Cell[209837, 5555, 240, 9, 55, "Subsection",ExpressionUUID->"1deaca16-2707-4825-b130-43e0d51b730c",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210102, 5568, 320, 8, 34, "Item",ExpressionUUID->"4a7b8aab-6ae6-45ae-8a40-6ed82e82750d",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210425, 5578, 406, 12, 40, "Input",ExpressionUUID->"8d42754c-8f2d-49fe-9474-5119126f1d6c",
   CellTags->{"Exercises", "Moving Averages"}],
  Cell[210834, 5592, 242, 5, 40, "Input",ExpressionUUID->"c5cf92ff-8474-4907-aa63-dae9da235910",
   CellTags->{"Exercises", "Moving Averages"}]},
 "Numerical Differentiation"->{
  Cell[266724, 7127, 262, 10, 55, "Subsection",ExpressionUUID->"af09769b-0c7d-492b-ae74-29c1e1a64ee4",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[266989, 7139, 1164, 32, 106, "Text",ExpressionUUID->"9b5b643b-65d4-4d74-a64a-4f6e650f8ee2",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[268156, 7173, 674, 20, 77, "CodeText",ExpressionUUID->"c3adf56f-fdd3-416f-a367-f12320aab18e",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[268833, 7195, 184, 3, 52, "Input",ExpressionUUID->"72babba4-2628-4979-b7c5-1e4041ccffe7",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[269020, 7200, 171, 3, 52, "Input",ExpressionUUID->"b490fee8-027d-493d-9ff6-7dbb9ceae5c9",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[269194, 7205, 1305, 42, 131, "Text",ExpressionUUID->"45037145-ec57-40cf-8ec1-bd7937526d34",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[270502, 7249, 1223, 36, 110, "Text",ExpressionUUID->"67a47924-5419-4e96-8623-c23b4c754736",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[271728, 7287, 771, 23, 77, "CodeText",ExpressionUUID->"459259ba-55a9-4b25-a338-d3c5ecd9fdac",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[272502, 7312, 301, 7, 52, "Input",ExpressionUUID->"288a5166-3a6e-4e05-a63f-2aa0a54854d5",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[272806, 7321, 321, 8, 52, "Input",ExpressionUUID->"58969540-f88a-47c7-9823-69a25b04bd61",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[273130, 7331, 869, 28, 48, "Item",ExpressionUUID->"4b0b6836-7ff1-4266-8e6c-cafd329b9617",
   CellTags->{"Exercises", "Numerical Differentiation"}],
  Cell[277064, 7439, 426, 14, 44, "Item",ExpressionUUID->"276d8d8a-250f-4c67-a332-7e6716fa9f11",
   CellTags->{"Exercises", "Numerical Differentiation"}]},
 "Overview"->{
  Cell[17550, 324, 237, 4, 44, "Text",ExpressionUUID->"b2c82ae1-d2c7-4cb4-8b01-9f2a29d70153",
   CellTags->"Overview"],
  Cell[17790, 330, 488, 14, 44, "Item",ExpressionUUID->"36122511-5209-448a-a691-86b19364c842",
   CellTags->"Overview"],
  Cell[18281, 346, 325, 8, 44, "Item",ExpressionUUID->"16d4f860-4803-47ef-8f7a-1049d5c13eb6",
   CellTags->"Overview"],
  Cell[18609, 356, 353, 9, 44, "Item",ExpressionUUID->"88bd5da0-1f4d-41f7-8a0a-e2ab05aedf76",
   CellTags->"Overview"],
  Cell[18965, 367, 865, 29, 74, "Item",ExpressionUUID->"1d03055f-f8c1-4c3a-9e12-47ae9cfe46bd",
   CellTags->"Overview"],
  Cell[19833, 398, 342, 8, 44, "Item",ExpressionUUID->"cbc345aa-0552-4b8d-84e7-f4d1173db928",
   CellTags->"Overview"],
  Cell[63041, 1703, 723, 17, 58, "Text",ExpressionUUID->"4e53f1b8-0d4d-4009-b040-5a69e7f724dc",
   CellTags->"Overview"]},
 "Plotting a Result"->{
  Cell[260097, 6933, 257, 10, 55, "Subsection",ExpressionUUID->"081ac2f0-e125-47c9-8ceb-01dd6ae11878",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[260379, 6947, 225, 7, 34, "Item",ExpressionUUID->"bb6f1b32-6a5e-4c68-a39c-9ff07ddbb265",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[260794, 6962, 785, 24, 40, "Input",ExpressionUUID->"afa60d9e-29e8-481f-bee3-c106bdfc6ac1",
   CellTags->{"Exercises", "Plotting a Result"}],
  Cell[262491, 7010, 364, 12, 34, "Item",ExpressionUUID->"a53419d6-14a0-4923-b69f-71eeee81d0ba",
   CellTags->{"Exercises", "Plotting a Result"}]},
 "Resampling"->{
  Cell[246644, 6550, 248, 9, 55, "Subsection",ExpressionUUID->"81c6db3f-3fb0-49e4-9a07-f859e8d6da10",
   CellTags->{"Exercises", "Resampling"}],
  Cell[246895, 6561, 401, 8, 56, "Text",ExpressionUUID->"7e790c37-e839-4038-b11b-57d46fefbaa9",
   CellTags->{"Exercises", "Resampling"}],
  Cell[247321, 6573, 371, 9, 54, "Item",ExpressionUUID->"f0740a88-b1d0-4125-80ab-738ea071c15b",
   CellTags->{"Exercises", "Resampling"}],
  Cell[247695, 6584, 3716, 104, 174, "Input",ExpressionUUID->"12d2f7ef-4088-488e-b6f8-b8bc8b1dc433",
   CellTags->{"Exercises", "Resampling"}],
  Cell[251414, 6690, 175, 3, 40, "Input",ExpressionUUID->"be519d58-dd05-48ce-87cb-71cfbb68a264",
   CellTags->{"Exercises", "Resampling"}],
  Cell[251604, 6696, 1374, 43, 74, "Item",ExpressionUUID->"4ce49150-4d9b-4696-b9bd-754259df9847",
   CellTags->{"Exercises", "Resampling"}],
  Cell[256076, 6820, 660, 18, 54, "Item",ExpressionUUID->"940e266e-7f2d-4103-a3de-3fca4c49791d",
   CellTags->{"Exercises", "Resampling"}]},
 "SlideShowHeader"->{
  Cell[615, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[17244, 313, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"af8fa16b-2d2f-4cf9-83a3-782cadb2cd0d",
   CellTags->"SlideShowHeader"],
  Cell[20594, 423, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"58786991-67d7-433a-a46d-8fb0c362eb18",
   CellTags->"SlideShowHeader"],
  Cell[24219, 542, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"85ca6769-278b-44b3-ad45-be821539f62f",
   CellTags->"SlideShowHeader"],
  Cell[28237, 652, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"086cbcb9-fb40-4ce7-ae89-c67dcb3a3247",
   CellTags->"SlideShowHeader"],
  Cell[32141, 756, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e35ee0cd-b1a6-4703-b005-90d6eab10397",
   CellTags->"SlideShowHeader"],
  Cell[36649, 897, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"29014d49-a22c-46a8-94ed-d55294141260",
   CellTags->"SlideShowHeader"],
  Cell[42824, 1092, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"027a0690-0a6e-4222-89ce-d79420c0253b",
   CellTags->"SlideShowHeader"],
  Cell[49807, 1301, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e4aefb47-fca1-46db-9021-cf5f06c5fc3b",
   CellTags->"SlideShowHeader"],
  Cell[57077, 1522, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3b719c92-b6b8-4fdf-a182-88a22f8320f3",
   CellTags->"SlideShowHeader"],
  Cell[63893, 1728, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2b206b14-9cfd-4a24-b1b2-bfb786732b7d",
   CellTags->"SlideShowHeader"],
  Cell[65458, 1784, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"96e8620e-098b-4869-a6ac-dc97821b7c06",
   CellTags->"SlideShowHeader"],
  Cell[67874, 1850, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e5efad73-58bd-4e07-b37f-ff1b5573fc1b",
   CellTags->"SlideShowHeader"],
  Cell[72081, 1978, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"09e702bc-ffc2-4173-a024-5af233e9ad4f",
   CellTags->"SlideShowHeader"],
  Cell[76575, 2118, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7763cfb1-0dd9-4509-b2e0-a1dc600fc5cd",
   CellTags->"SlideShowHeader"],
  Cell[116308, 2980, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f06ea65d-6c02-45ee-bbfd-3b3969712f83",
   CellTags->"SlideShowHeader"],
  Cell[120649, 3110, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fa490366-7af3-477a-a7a3-9064fe1107ed",
   CellTags->"SlideShowHeader"],
  Cell[121950, 3151, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"0a503f07-a9fa-46cf-ac85-f752ac06ce21",
   CellTags->"SlideShowHeader"],
  Cell[123993, 3211, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6a2cc32e-c6cb-419e-af0d-369678aae167",
   CellTags->"SlideShowHeader"],
  Cell[128922, 3364, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f42010ba-885f-4336-8e22-80abb02442ef",
   CellTags->"SlideShowHeader"],
  Cell[130884, 3429, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"686d11a2-d831-46b0-b9ca-e84b5de4e822",
   CellTags->"SlideShowHeader"],
  Cell[144049, 3759, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"17f2630c-d48d-44cb-ac3b-41cc9ba269ac",
   CellTags->"SlideShowHeader"],
  Cell[154341, 4032, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7e2f3b99-ee0e-47e2-87aa-17ab1e41e017",
   CellTags->"SlideShowHeader"],
  Cell[162381, 4276, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"107e574a-4eee-4fb0-80e9-779e5aef5223",
   CellTags->"SlideShowHeader"],
  Cell[164142, 4329, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f32c6cb8-0fb8-420e-ae34-73da8f96b500",
   CellTags->"SlideShowHeader"],
  Cell[170093, 4505, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1dc3cccb-5dda-4f91-af94-57963b021969",
   CellTags->"SlideShowHeader"]},
 "Solving Numerically"->{
  Cell[170434, 4517, 284, 10, 91, "Subsection",ExpressionUUID->"eaf30a00-0ee3-44e4-8e87-bbb4a708e152",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[170743, 4531, 812, 26, 71, "Item",ExpressionUUID->"93542c1f-77f9-4cf5-95be-73e4c84b7be0",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[171558, 4559, 413, 12, 68, "Input",ExpressionUUID->"b11ff97e-efab-407b-ae74-ad0eb9f4edbf",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[172008, 4576, 1000, 27, 123, "Item",ExpressionUUID->"6f79029f-45ee-4ca4-809d-932a272f6c8a",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[173011, 4605, 365, 10, 68, "Input",ExpressionUUID->"63de1a07-1c95-473c-99e4-ddfd90683128",
   CellTags->{"Exercises", "Solving Numerically"}],
  Cell[173379, 4617, 243, 5, 44, "Item",ExpressionUUID->"255e24f9-3cf1-489d-aa20-36322aea4d7b",
   CellGroupingRules->{Global`GroupTogetherGrouping, 10000.},
   CellTags->{"Exercises", "Solving Numerically"}]},
 "Sparse Arrays"->{
  Cell[225940, 5990, 236, 9, 55, "Subsection",ExpressionUUID->"e03ef530-e7aa-4c30-b838-ff9a285a9e88",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[226179, 6001, 503, 16, 34, "Item",ExpressionUUID->"f7fa67aa-b126-466e-bf8b-d1527540da42",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[230726, 6110, 216, 6, 34, "Item",ExpressionUUID->"577af961-e6e8-40a5-9ed8-2e693d5238d5",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[234484, 6196, 231, 6, 34, "Item",ExpressionUUID->"e7d0a8c1-53a1-4839-af6b-2207fab4d1e7",
   CellTags->{"Exercises", "Sparse Arrays"}],
  Cell[237803, 6292, 208, 6, 34, "Item",ExpressionUUID->"954cf298-25fb-49c3-ac66-980f22053291",
   CellTags->{"Exercises", "Sparse Arrays"}]},
 "Working with Numbers"->{
  Cell[64040, 1734, 134, 3, 139, "Section",ExpressionUUID->"7bba1170-53d7-4295-8017-de4da2134cb8",
   CellTags->"Working with Numbers"],
  Cell[64177, 1739, 218, 7, 35, "Item",ExpressionUUID->"adc367f1-c7fa-4192-8359-ab356e8f68ec",
   CellTags->"Working with Numbers"],
  Cell[64398, 1748, 190, 4, 35, "Item",ExpressionUUID->"d018cf1a-511d-424e-a1be-091a6ee28e4f",
   CellTags->"Working with Numbers"],
  Cell[64591, 1754, 200, 4, 35, "Item",ExpressionUUID->"d31ba7a0-50a0-4a40-822b-8aa3277af1f5",
   CellTags->"Working with Numbers"],
  Cell[64794, 1760, 535, 16, 35, "Item",ExpressionUUID->"b0993bf3-1ddf-4ea6-a417-302b8ea6ff8b",
   CellTags->"Working with Numbers"],
  Cell[65605, 1790, 207, 4, 139, "Section",ExpressionUUID->"80cada77-e0c1-406a-ba11-d2f0f86ea864",
   CellTags->"Working with Numbers"],
  Cell[65815, 1796, 864, 14, 127, "Text",ExpressionUUID->"ac7accca-70e4-459f-a37d-594ed221a53d",
   CellTags->"Working with Numbers"],
  Cell[66682, 1812, 290, 7, 35, "CodeText",ExpressionUUID->"87f87a81-4241-4f5f-afb3-831d662b49c4",
   CellTags->"Working with Numbers"],
  Cell[66975, 1821, 281, 7, 59, "Input",ExpressionUUID->"a2ed2298-3f15-42fe-9d79-0e965c3ba484",
   CellTags->"Working with Numbers"],
  Cell[67259, 1830, 315, 7, 35, "CodeText",ExpressionUUID->"7f9682a3-3c2c-4efe-b0e4-8f0e840c121f",
   CellTags->"Working with Numbers"],
  Cell[68021, 1856, 168, 4, 139, "Section",ExpressionUUID->"b54ffed7-e65f-439c-a9d3-c40fafa47fad",
   CellTags->"Working with Numbers"],
  Cell[68192, 1862, 304, 7, 35, "Text",ExpressionUUID->"56676376-9512-41c6-8391-1d4cce70775b",
   CellTags->"Working with Numbers"],
  Cell[69412, 1896, 389, 9, 35, "CodeText",ExpressionUUID->"3cd50427-1813-4ff7-9c07-b5b1528b5af4",
   CellTags->"Working with Numbers"],
  Cell[69804, 1907, 197, 4, 57, "Input",ExpressionUUID->"60544c1f-4234-4402-9d9e-de3dd51057f1",
   CellTags->"Working with Numbers"],
  Cell[70004, 1913, 234, 4, 35, "CodeText",ExpressionUUID->"7f926558-6d3e-43c8-89b3-f6acfd40cb58",
   CellTags->"Working with Numbers"],
  Cell[70241, 1919, 195, 4, 56, "Input",ExpressionUUID->"f9db6c39-a13f-4fb2-987f-74b1e989af8d",
   CellTags->"Working with Numbers"],
  Cell[70439, 1925, 538, 15, 35, "CodeText",ExpressionUUID->"88f46037-24e3-4e0a-ae6c-93638328a346",
   CellTags->"Working with Numbers"],
  Cell[70980, 1942, 170, 3, 42, "Input",ExpressionUUID->"e1e85738-cf74-404f-92fb-bbcce7109c14",
   CellTags->"Working with Numbers"],
  Cell[71153, 1947, 598, 17, 35, "CodeText",ExpressionUUID->"93d98674-e4aa-4ee1-8369-abcf7b54a780",
   CellTags->"Working with Numbers"],
  Cell[71754, 1966, 198, 4, 42, "Input",ExpressionUUID->"ff9ce77b-0637-4500-9ca9-52ad9be0ebac",
   CellTags->"Working with Numbers"],
  Cell[72228, 1984, 206, 4, 139, "Section",ExpressionUUID->"dc286458-b411-434b-a36d-43280f5a092a",
   CellTags->"Working with Numbers"],
  Cell[72437, 1990, 246, 6, 35, "Text",ExpressionUUID->"d61a3b30-ab42-44ff-b2bc-0cf71dacc3c0",
   CellTags->"Working with Numbers"],
  Cell[72686, 1998, 412, 12, 35, "CodeText",ExpressionUUID->"db108971-e84a-4332-8354-59d65da58710",
   CellTags->"Working with Numbers"],
  Cell[73101, 2012, 197, 4, 42, "Input",ExpressionUUID->"fef9ca30-5003-4b8b-b281-ecf175a6c738",
   CellTags->"Working with Numbers"],
  Cell[73301, 2018, 458, 12, 35, "CodeText",ExpressionUUID->"cafae96a-db20-45d7-a24a-f1e87e93ef2a",
   CellTags->"Working with Numbers"],
  Cell[73762, 2032, 172, 3, 42, "Input",ExpressionUUID->"bfb2ba60-fcea-4638-93e8-6e3300217e98",
   CellTags->"Working with Numbers"],
  Cell[73937, 2037, 465, 13, 58, "Text",ExpressionUUID->"163a8ca5-41c8-4e2a-a9ad-28785e626903",
   CellTags->"Working with Numbers"],
  Cell[74940, 2071, 157, 2, 42, "Input",ExpressionUUID->"9abe9256-3d6d-464f-b489-a9ec038df5d8",
   CellTags->"Working with Numbers"],
  Cell[75100, 2075, 225, 4, 35, "CodeText",ExpressionUUID->"b6f41fe8-ee6f-45d2-8637-b35cde727c1b",
   CellTags->"Working with Numbers"],
  Cell[75328, 2081, 148, 2, 42, "Input",ExpressionUUID->"f3a86294-4ce8-4a95-9362-20afa70d34e5",
   CellTags->"Working with Numbers"],
  Cell[75479, 2085, 148, 2, 42, "Input",ExpressionUUID->"2aef227d-6ffe-426d-a9a2-c8d10ca85153",
   CellTags->"Working with Numbers"],
  Cell[75630, 2089, 303, 7, 35, "Text",ExpressionUUID->"4cc182f9-3f28-4748-8a85-cb3db8292066",
   CellTags->"Working with Numbers"],
  Cell[76190, 2106, 256, 4, 42, "Input",ExpressionUUID->"a14527cf-d982-4dac-98e6-8c693f60fd58",
   CellTags->"Working with Numbers"],
  Cell[76722, 2124, 209, 4, 139, "Section",ExpressionUUID->"2a3116ee-211f-476c-85dd-7739a503718c",
   CellTags->"Working with Numbers"],
  Cell[76934, 2130, 302, 7, 35, "Text",ExpressionUUID->"9f5eb8b1-2da4-4013-ab21-ca35194bed67",
   CellTags->"Working with Numbers"],
  Cell[78180, 2164, 468, 12, 35, "CodeText",ExpressionUUID->"9fb5e69d-c5b4-4cac-9554-c025c92a9858",
   CellTags->"Working with Numbers"],
  Cell[78651, 2178, 214, 4, 42, "Input",ExpressionUUID->"38e6d029-0e49-4585-8208-e5abc018b93f",
   CellTags->"Working with Numbers"],
  Cell[78868, 2184, 421, 12, 35, "CodeText",ExpressionUUID->"75ba8941-03ad-4a69-8ce5-67eb9bb1c5f2",
   CellTags->"Working with Numbers"],
  Cell[79292, 2198, 231, 5, 42, "Input",ExpressionUUID->"e5ba8d48-c0c4-4942-8052-9b5f0367698e",
   CellTags->"Working with Numbers"],
  Cell[116455, 2986, 218, 4, 230, "Section",ExpressionUUID->"1a85eb41-5642-49d0-9e9c-5885cd8597b5",
   CellTags->"Working with Numbers"],
  Cell[116676, 2992, 424, 8, 81, "Text",ExpressionUUID->"c88c4b18-e6ec-45a6-89bc-016c36bf98bc",
   CellTags->"Working with Numbers"],
  Cell[117103, 3002, 432, 13, 35, "CodeText",ExpressionUUID->"d67c366f-f24d-4d6d-9e90-7bccc9b117bb",
   CellTags->"Working with Numbers"],
  Cell[117538, 3017, 182, 3, 42, "Input",ExpressionUUID->"9142ad1d-e047-46c6-96d2-44f9c44db256",
   CellTags->"Working with Numbers"],
  Cell[117723, 3022, 223, 4, 35, "CodeText",ExpressionUUID->"5b4b39ca-a00e-41bf-9bfb-fc01b1ffba5b",
   CellTags->"Working with Numbers"],
  Cell[117949, 3028, 444, 11, 60, "Input",ExpressionUUID->"27d1c647-7a92-4705-a6da-544ba95cadbb",
   CellTags->"Working with Numbers"],
  Cell[118396, 3041, 529, 14, 58, "CodeText",ExpressionUUID->"541f5e6e-6972-4e24-9689-671eb3fdccb5",
   CellTags->"Working with Numbers"],
  Cell[118928, 3057, 421, 10, 42, "Input",ExpressionUUID->"cc306b3c-f45f-4b1e-a6ee-02a3bc84da29",
   CellTags->"Working with Numbers"],
  Cell[119352, 3069, 244, 6, 35, "Text",ExpressionUUID->"5611cd2e-071b-4390-b8ce-2a9218d09036",
   CellTags->"Working with Numbers"],
  Cell[119599, 3077, 921, 25, 58, "Text",ExpressionUUID->"dbfec174-aaed-40fb-8d4f-09fb28b66940",
   CellTags->"Working with Numbers"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Curve Fitting", 312635, 8234},
 {"Curve Fitting II", 314094, 8255},
 {"Exercises", 314846, 8266},
 {"Functions", 323894, 8389},
 {"High Precision Integration", 334637, 8563},
 {"Large Arrays", 335598, 8576},
 {"Moving Averages", 347156, 8757},
 {"Numerical Differentiation", 347774, 8766},
 {"Overview", 349670, 8791},
 {"Plotting a Result", 350539, 8806},
 {"Resampling", 351151, 8815},
 {"SlideShowHeader", 352162, 8830},
 {"Solving Numerically", 355960, 8883},
 {"Sparse Arrays", 356946, 8897},
 {"Working with Numbers", 357691, 8908}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[615, 23, 136, 2, 5, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[754, 27, 15061, 253, 142, "Title",ExpressionUUID->"059f49ae-49fc-4f44-80e6-ab700841b96e"],
Cell[15818, 282, 600, 9, 143, "Title",ExpressionUUID->"1243965a-40ce-482a-9c91-36878f955d76"],
Cell[16421, 293, 485, 7, 63, "Subtitle",ExpressionUUID->"abd2714b-c40b-491d-9b98-1f3d249655e3"],
Cell[16909, 302, 298, 6, 152, "Text",ExpressionUUID->"9c80e341-d86e-4010-903b-2496bf803f59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17244, 313, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"af8fa16b-2d2f-4cf9-83a3-782cadb2cd0d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[17391, 319, 156, 3, 139, "Section",ExpressionUUID->"6355f4b6-59ed-411e-a3d9-7cc830c21387"],
Cell[17550, 324, 237, 4, 44, "Text",ExpressionUUID->"b2c82ae1-d2c7-4cb4-8b01-9f2a29d70153",
 CellTags->"Overview"],
Cell[17790, 330, 488, 14, 44, "Item",ExpressionUUID->"36122511-5209-448a-a691-86b19364c842",
 CellTags->"Overview"],
Cell[18281, 346, 325, 8, 44, "Item",ExpressionUUID->"16d4f860-4803-47ef-8f7a-1049d5c13eb6",
 CellTags->"Overview"],
Cell[18609, 356, 353, 9, 44, "Item",ExpressionUUID->"88bd5da0-1f4d-41f7-8a0a-e2ab05aedf76",
 CellTags->"Overview"],
Cell[18965, 367, 865, 29, 74, "Item",ExpressionUUID->"1d03055f-f8c1-4c3a-9e12-47ae9cfe46bd",
 CellTags->"Overview"],
Cell[19833, 398, 342, 8, 44, "Item",ExpressionUUID->"cbc345aa-0552-4b8d-84e7-f4d1173db928",
 CellTags->"Overview"],
Cell[20178, 408, 191, 4, 44, "Item",ExpressionUUID->"e215f128-b70a-4945-9f36-ec0fe9172d77"],
Cell[20372, 414, 173, 3, 44, "Item",ExpressionUUID->"84d0d039-8c4a-4684-84eb-88881e4ddec5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20594, 423, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"58786991-67d7-433a-a46d-8fb0c362eb18",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[20741, 429, 133, 1, 230, "Section",ExpressionUUID->"496e407a-c066-4da1-b418-4ae33f4e9a50",
 CellTags->"Functions"],
Cell[20877, 432, 511, 15, 44, "Item",ExpressionUUID->"585c942a-41b6-42ce-b20a-4177123a9c9d",
 CellTags->"Functions"],
Cell[21391, 449, 326, 8, 44, "Item",ExpressionUUID->"cfbd3645-b332-4283-a26f-38c1c4ea59bc",
 CellTags->"Functions"],
Cell[21720, 459, 318, 8, 44, "Item",ExpressionUUID->"05ddf751-3789-4d08-8a01-544557f60885",
 CellTags->"Functions"],
Cell[22041, 469, 316, 8, 44, "Item",ExpressionUUID->"d14ea351-5ec0-460d-81e0-aed69ccada57",
 CellTags->"Functions"],
Cell[22360, 479, 592, 19, 44, "Item",ExpressionUUID->"e024ff95-3f1d-4ebf-a36e-bd495593bcb8",
 CellTags->"Functions"],
Cell[22955, 500, 467, 14, 44, "Item",ExpressionUUID->"8a24ea91-2aa3-4fa5-b798-37143421c545",
 CellTags->"Functions"],
Cell[23425, 516, 331, 8, 44, "Item",ExpressionUUID->"7a6a2fd9-e860-4fc1-ac21-645867bf8922",
 CellTags->"Functions"],
Cell[23759, 526, 331, 8, 44, "Item",ExpressionUUID->"ab927bcd-ffbb-4c7b-87b7-ea5d51c32498",
 CellTags->"Functions"],
Cell[24093, 536, 77, 0, 136, "EndOfSlide",ExpressionUUID->"3a3a8b9c-217f-44ee-a30f-ef7e07ef1e98"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24219, 542, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"85ca6769-278b-44b3-ad45-be821539f62f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[24366, 548, 146, 2, 139, "Section",ExpressionUUID->"99cff20c-e257-4d94-a062-fa2d1b38b9f2",
 CellTags->"Functions"],
Cell[24515, 552, 340, 6, 108, "Text",ExpressionUUID->"0b9bc45e-5165-4a3f-9791-7e1f8464ddd8",
 CellTags->"Functions"],
Cell[24858, 560, 202, 2, 44, "CodeText",ExpressionUUID->"c619b03d-e83d-4497-9bc1-3e4b09def117",
 CellTags->"Functions"],
Cell[25063, 564, 488, 10, 116, "Input",ExpressionUUID->"812a2c9f-2194-43b5-b33d-e51b23818b46"],
Cell[25554, 576, 189, 4, 51, "Input",ExpressionUUID->"2de5b134-dd1e-44ee-b65e-df27544b5cb6",
 CellTags->"Functions"],
Cell[25746, 582, 219, 2, 44, "CodeText",ExpressionUUID->"cd62072e-0019-4ca5-bcce-013bc7d0f6ba",
 CellTags->"Functions"],
Cell[25968, 586, 305, 8, 55, "Input",ExpressionUUID->"ddad8df7-aca6-4f38-8844-616277ac58e4",
 CellTags->"Functions"],
Cell[26276, 596, 173, 3, 44, "CodeText",ExpressionUUID->"54ea3d8b-04af-4a29-b31e-0b862e2c1472"],
Cell[26452, 601, 143, 2, 51, "Input",ExpressionUUID->"a5836a3c-952a-41c9-a200-ce6edbd83c5f"],
Cell[26598, 605, 249, 4, 44, "CodeText",ExpressionUUID->"551d2ef6-75e5-4173-a5c6-733488a7c865",
 CellTags->"Functions"],
Cell[26850, 611, 410, 10, 148, "Input",ExpressionUUID->"fcca5054-baec-404a-bc83-ebea8d997a30",
 CellTags->"Functions"],
Cell[27263, 623, 183, 3, 44, "CodeText",ExpressionUUID->"5ad67003-76e9-4bee-abfa-76be425fb407"],
Cell[27449, 628, 146, 2, 51, "Input",ExpressionUUID->"24a1050d-ec03-4812-bcc5-1167b9298090"],
Cell[27598, 632, 196, 3, 44, "CodeText",ExpressionUUID->"28e2f9ed-f082-478c-9957-ab9e867c941c"],
Cell[27797, 637, 146, 2, 51, "Input",ExpressionUUID->"599e8b49-d269-4108-be33-cdec9bc85092"],
Cell[27946, 641, 162, 3, 51, "Input",ExpressionUUID->"4a80f63d-7c8e-47fd-aa5d-1f5d9645dd65"],
Cell[28111, 646, 77, 0, 136, "EndOfSlide",ExpressionUUID->"a68b881d-9e19-4df9-9edc-b6561db8edf5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28237, 652, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"086cbcb9-fb40-4ce7-ae89-c67dcb3a3247",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[28384, 658, 153, 2, 139, "Section",ExpressionUUID->"77cc775f-b2cb-4e18-92a0-dfcec973ecc9",
 CellTags->"Functions"],
Cell[28540, 662, 597, 9, 204, "Text",ExpressionUUID->"7ab3b336-3a99-4acb-93a0-3dd617a63610",
 CellTags->"Functions"],
Cell[29140, 673, 469, 10, 108, "CodeText",ExpressionUUID->"18ce389f-70ce-4046-a41d-938f0f7c3748",
 CellTags->"Functions"],
Cell[29612, 685, 546, 11, 51, "Input",ExpressionUUID->"308579fc-abe5-4742-a37a-a27d430e96eb",
 CellTags->"Functions"],
Cell[30161, 698, 207, 4, 51, "Input",ExpressionUUID->"4650ca9d-aa59-4ab9-93f6-eafafeae7e29",
 CellTags->"Functions"],
Cell[30371, 704, 173, 3, 51, "Input",ExpressionUUID->"7a8eafa3-9bdb-4a31-b7bb-83000ffee586",
 CellTags->"Functions"],
Cell[30547, 709, 351, 6, 76, "CodeText",ExpressionUUID->"33781bd8-21e0-476a-808d-a65a2d1f2d01",
 CellTags->"Functions"],
Cell[30901, 717, 171, 3, 51, "Input",ExpressionUUID->"79fe605f-5038-4b14-9cab-2eef4832976e",
 CellTags->"Functions"],
Cell[31075, 722, 251, 5, 44, "CodeText",ExpressionUUID->"7bbdba31-f388-4d6c-9d4d-752a33663224",
 CellTags->"Functions"],
Cell[31329, 729, 456, 12, 51, "Input",ExpressionUUID->"80ebec86-ec28-4a32-9162-25a6b9cdc158",
 CellTags->"Functions"],
Cell[31788, 743, 224, 5, 51, "Input",ExpressionUUID->"090480fd-f416-4141-b336-4ae54a9b3acc",
 CellTags->"Functions"],
Cell[32015, 750, 77, 0, 136, "EndOfSlide",ExpressionUUID->"ed446e13-456c-4eff-b38a-654dc1cce367"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32141, 756, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e35ee0cd-b1a6-4703-b005-90d6eab10397",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[32288, 762, 153, 2, 139, "Section",ExpressionUUID->"d2d01309-75d2-4175-82a1-8f367472d1ae",
 CellTags->"Functions"],
Cell[32444, 766, 450, 13, 44, "CodeText",ExpressionUUID->"923dc08f-e944-40d9-bada-af376ea6cc96",
 CellTags->"Functions"],
Cell[32897, 781, 271, 7, 42, "Input",ExpressionUUID->"be13d9da-18f1-42a9-99ca-b6007b74d9d4",
 CellTags->"Functions"],
Cell[33171, 790, 529, 11, 58, "Text",ExpressionUUID->"20e5ceaa-69e3-4207-b939-a1039528b7ab",
 CellTags->"Functions"],
Cell[33703, 803, 247, 6, 35, "CodeText",ExpressionUUID->"d46d8435-5b3d-458a-b0c6-4de4f44b26cf"],
Cell[33953, 811, 286, 8, 66, "Input",ExpressionUUID->"b440b408-2f8b-435d-bd66-348a3c0d3aec"],
Cell[34242, 821, 410, 11, 35, "CodeText",ExpressionUUID->"2b55dd0d-a083-44d1-a4d3-a4e51bc23ad0"],
Cell[34655, 834, 400, 11, 66, "Input",ExpressionUUID->"d9e8d89e-7201-493f-8635-1494633856c7"],
Cell[35058, 847, 434, 10, 35, "CodeText",ExpressionUUID->"5cb92d8a-501e-484c-b502-8032a8345221",
 CellID->416954400],
Cell[35495, 859, 359, 10, 66, "Input",ExpressionUUID->"1bd53389-3a86-4ba6-9e30-f7d6e62b073c",
 CellID->682978387],
Cell[35857, 871, 256, 5, 35, "CodeText",ExpressionUUID->"13203b63-3b84-4d1d-a12d-504dab183c95",
 CellTags->"Functions"],
Cell[36116, 878, 404, 11, 66, "Input",ExpressionUUID->"ff9ca22e-1db2-425d-911e-42c17f5b8205",
 CellTags->"Functions"],
Cell[36523, 891, 77, 0, 136, "EndOfSlide",ExpressionUUID->"4a3e8231-0006-483b-9d41-da4f7fba75ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36649, 897, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"29014d49-a22c-46a8-94ed-d55294141260",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[36796, 903, 180, 2, 139, "Section",ExpressionUUID->"4948d1d1-c97f-4193-a52d-70c3469a2685",
 CellTags->"Functions"],
Cell[36979, 907, 393, 10, 35, "Text",ExpressionUUID->"18f99582-3db2-43bb-874a-9858f73a05ea",
 CellTags->"Functions"],
Cell[37375, 919, 864, 21, 58, "CodeText",ExpressionUUID->"acc5fd87-b78b-43b5-a8a8-53725fdafc49",
 CellTags->"Functions"],
Cell[38242, 942, 344, 10, 42, "Input",ExpressionUUID->"da5cf3d0-9b18-4871-8845-3147fd4ee40d",
 CellTags->"Functions"],
Cell[38589, 954, 387, 10, 35, "CodeText",ExpressionUUID->"ca2a0c73-e388-473d-823d-839e67baced0",
 CellTags->"Functions"],
Cell[38979, 966, 343, 10, 42, "Input",ExpressionUUID->"393f8474-1ba0-48e1-b47b-bde2c1b955a5",
 CellTags->"Functions"],
Cell[39325, 978, 294, 6, 35, "CodeText",ExpressionUUID->"4c4ac5dd-fefe-415e-84ec-168431b054e1",
 CellTags->"Functions"],
Cell[39622, 986, 344, 10, 42, "Input",ExpressionUUID->"8151d4ef-0881-4a9b-b756-96909983d6a7",
 CellTags->"Functions"],
Cell[39969, 998, 396, 9, 35, "CodeText",ExpressionUUID->"3b2e3f36-175b-4f86-a7e7-e4f426202b27",
 CellTags->"Functions"],
Cell[40368, 1009, 515, 16, 45, "Input",ExpressionUUID->"d867df1e-e845-4646-8c61-c9921cc6289b",
 CellTags->"Functions"],
Cell[40886, 1027, 336, 10, 35, "CodeText",ExpressionUUID->"07c0b8b6-9fab-4b72-9801-f732a2617591"],
Cell[41225, 1039, 430, 13, 45, "Input",ExpressionUUID->"83ff6d91-e830-461d-ac16-7722c55a20e5"],
Cell[41658, 1054, 454, 10, 35, "CodeText",ExpressionUUID->"0d783000-d4af-4507-ae32-dcf7b6271d0f",
 CellTags->"Functions"],
Cell[42115, 1066, 580, 18, 45, "Input",ExpressionUUID->"83b61db6-04c6-42a8-9df0-8091e7ed2169",
 CellTags->"Functions"],
Cell[42698, 1086, 77, 0, 136, "EndOfSlide",ExpressionUUID->"627a26ee-735c-4f5c-a632-764c850c57bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42824, 1092, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"027a0690-0a6e-4222-89ce-d79420c0253b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[42971, 1098, 154, 2, 139, "Section",ExpressionUUID->"be621810-47c4-4285-a62a-db172e831636",
 CellTags->"Functions"],
Cell[43128, 1102, 374, 10, 35, "Text",ExpressionUUID->"d2036302-d23e-449a-875c-24c39c817b03",
 CellTags->"Functions"],
Cell[43505, 1114, 210, 2, 35, "CodeText",ExpressionUUID->"9988b326-09fa-4968-9c95-cbb2344661c8",
 CellTags->"Functions"],
Cell[43718, 1118, 317, 9, 42, "Input",ExpressionUUID->"d7f7e6c6-3c7c-4149-a09d-21f693ffecf0",
 CellTags->"Functions"],
Cell[CellGroupData[{
Cell[44060, 1131, 482, 11, 35, "CodeText",ExpressionUUID->"6cc0173b-c9e0-4b58-a901-9a21f6004bb4",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellTags->"Functions"],
Cell[44545, 1144, 374, 10, 42, "Input",ExpressionUUID->"311f98f8-23d4-478f-b50a-7f40088f4a36",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellTags->"Functions"],
Cell[44922, 1156, 486, 8, 58, "Text",ExpressionUUID->"23ec1d40-734c-46be-8391-0b1e34649c0e",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10001.},
 CellTags->"Functions"]
}, Open  ]],
Cell[45423, 1167, 234, 4, 35, "Text",ExpressionUUID->"399e9d19-ccee-4bef-bb11-4009a4a32459",
 CellTags->"Functions"],
Cell[45660, 1173, 907, 27, 42, "CodeText",ExpressionUUID->"21535b73-f9e0-4bbf-9d97-3972be591277"],
Cell[46570, 1202, 595, 18, 45, "Input",ExpressionUUID->"cb982df8-a0d9-445b-85e5-e4c3481d3b51",
 CellTags->"Functions"],
Cell[47168, 1222, 220, 5, 35, "CodeText",ExpressionUUID->"fe91cf6f-d8a6-4108-8ec3-3f77dbf53fa4"],
Cell[47391, 1229, 400, 11, 42, "Input",ExpressionUUID->"f62b9546-5d6f-4d53-82d0-e759083ac421"],
Cell[47794, 1242, 1290, 36, 139, "Input",ExpressionUUID->"50c948cb-72da-4232-8328-718740e92860"],
Cell[49087, 1280, 591, 13, 58, "Text",ExpressionUUID->"5cca075e-a7e5-4ecf-851e-ccfbb6996a0f",
 CellTags->"Functions"],
Cell[49681, 1295, 77, 0, 136, "EndOfSlide",ExpressionUUID->"84d1d4ff-3bb0-445c-9344-4a37843d5db7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49807, 1301, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e4aefb47-fca1-46db-9021-cf5f06c5fc3b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[49954, 1307, 198, 2, 230, "Section",ExpressionUUID->"5485ede6-52b2-451f-a914-8baa962c4b5d",
 CellTags->"Functions"],
Cell[50155, 1311, 460, 10, 58, "Text",ExpressionUUID->"9e21fae2-2a8b-4772-a5e7-046762226392",
 CellTags->"Functions"],
Cell[50618, 1323, 404, 10, 35, "CodeText",ExpressionUUID->"0c27bfbc-6f4e-4ab3-93fe-0e033de0e4a0",
 CellTags->"Functions"],
Cell[51025, 1335, 726, 22, 42, "Input",ExpressionUUID->"d5703a4a-d3a0-4715-b0a6-7a5fe6fc9d63",
 CellTags->"Functions"],
Cell[51754, 1359, 619, 19, 35, "Text",ExpressionUUID->"02804726-1098-4053-ae77-88d14e6bf84f",
 CellTags->"Functions"],
Cell[52376, 1380, 479, 10, 58, "Text",ExpressionUUID->"c3e03984-fea4-4af0-b37f-c33f49c417ea",
 CellTags->"Functions"],
Cell[52858, 1392, 458, 12, 35, "Text",ExpressionUUID->"32c90c0c-0ccd-44f7-a662-c070b9d796a8",
 CellTags->"Functions"],
Cell[53319, 1406, 384, 11, 35, "CodeText",ExpressionUUID->"3715d837-0e3d-4f97-8885-97b3eb680402"],
Cell[53706, 1419, 176, 4, 42, "Input",ExpressionUUID->"2d5cba56-cd14-42e5-8922-3751aa2d211a",
 CellTags->"Functions"],
Cell[53885, 1425, 203, 2, 35, "CodeText",ExpressionUUID->"76f74fca-2246-49d2-b041-ed2651b0258e",
 CellTags->"Functions"],
Cell[54091, 1429, 293, 8, 42, "Input",ExpressionUUID->"4285c0ae-c539-4874-9acf-de75fa5d2c9f",
 CellTags->"Functions"],
Cell[54387, 1439, 311, 5, 58, "Text",ExpressionUUID->"7e35b1b0-fad1-4093-86bb-183e53f15f4c",
 CellTags->"Functions"],
Cell[54701, 1446, 244, 6, 35, "CodeText",ExpressionUUID->"e556498e-f488-4ef1-8acc-15467f0c2d76"],
Cell[54948, 1454, 314, 9, 42, "Input",ExpressionUUID->"1fe3b372-ddcf-4ba1-8ae4-9499e185bd36",
 CellTags->"Functions"],
Cell[55265, 1465, 444, 12, 35, "CodeText",ExpressionUUID->"dcad3451-c8f7-4f1a-b04d-13cc828547dd"],
Cell[55712, 1479, 1045, 29, 85, "Input",ExpressionUUID->"dc503948-c2ed-4451-9fc9-b495ea8e45d6"],
Cell[56760, 1510, 188, 4, 42, "Input",ExpressionUUID->"01dd0125-07e4-419c-a9ad-49f4d02ab209"],
Cell[56951, 1516, 77, 0, 136, "EndOfSlide",ExpressionUUID->"d3b33cbb-e002-43f0-a9af-9bf07e2c69f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57077, 1522, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3b719c92-b6b8-4fdf-a182-88a22f8320f3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[57224, 1528, 188, 2, 139, "Section",ExpressionUUID->"6eb516f7-1c59-445c-b4fd-10ccf1928167",
 CellTags->"Functions"],
Cell[57415, 1532, 1176, 31, 81, "Text",ExpressionUUID->"53a01afa-6cc8-456b-b479-d4255328647f",
 CellTags->"Functions"],
Cell[58594, 1565, 504, 14, 35, "CodeText",ExpressionUUID->"9f35dabc-ffef-4483-9768-a553cbaf3e05",
 CellTags->"Functions"],
Cell[59101, 1581, 440, 14, 64, "Input",ExpressionUUID->"f405a266-14ad-42ca-9596-2966fabc057d",
 CellTags->"Functions"],
Cell[59544, 1597, 199, 2, 35, "CodeText",ExpressionUUID->"2b63cf9a-8eaa-4e68-98b8-4b844df48ac3",
 CellTags->"Functions"],
Cell[59746, 1601, 214, 5, 42, "Input",ExpressionUUID->"faae2f76-3485-4f6e-82bf-70d1ade78568",
 CellTags->"Functions"],
Cell[59963, 1608, 295, 7, 35, "CodeText",ExpressionUUID->"9c55256d-018d-497f-831b-43c7eb50a8f2",
 CellTags->"Functions"],
Cell[60261, 1617, 152, 3, 42, "Input",ExpressionUUID->"b6c6ac6c-2350-444e-a4af-0071c7a0d028",
 CellTags->"Functions"],
Cell[60416, 1622, 176, 3, 35, "Text",ExpressionUUID->"5c7aff4d-47b1-4a25-8e52-ece88e5bdd62",
 CellTags->"Functions"],
Cell[60595, 1627, 379, 9, 35, "CodeText",ExpressionUUID->"4487621f-71d2-48fe-a6fc-1df13ae63283",
 CellTags->"Functions"],
Cell[60977, 1638, 347, 10, 42, "Input",ExpressionUUID->"2845395f-9e33-4bef-aeb9-21d1f1695dd9",
 CellTags->"Functions"],
Cell[61327, 1650, 351, 10, 42, "Input",ExpressionUUID->"7f58fa1c-b410-40da-82e9-b31b5e983397",
 CellTags->"Functions"],
Cell[61681, 1662, 197, 2, 35, "CodeText",ExpressionUUID->"9fbe1304-d8b9-4c47-b5fc-ad81644bda3f",
 CellTags->"Functions"],
Cell[61881, 1666, 280, 7, 42, "Input",ExpressionUUID->"995aa62a-44b8-4195-816b-c6d52c91cf27",
 CellTags->"Functions"],
Cell[62164, 1675, 395, 10, 35, "CodeText",ExpressionUUID->"0d12b2d4-366b-4641-a434-8f206ca76054",
 CellTags->"Functions"],
Cell[62562, 1687, 238, 7, 42, "Input",ExpressionUUID->"82fbb6d1-cdd1-4f6d-898e-b15a2f92557a",
 CellTags->"Functions"],
Cell[62803, 1696, 235, 5, 42, "Input",ExpressionUUID->"a9b3cf81-4f01-4f7a-8d61-1f20487dc9ff",
 CellTags->"Functions"],
Cell[63041, 1703, 723, 17, 58, "Text",ExpressionUUID->"4e53f1b8-0d4d-4009-b040-5a69e7f724dc",
 CellTags->"Overview"],
Cell[63767, 1722, 77, 0, 136, "EndOfSlide",ExpressionUUID->"2e4d05ce-ff61-4872-89a1-785764b3f662"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63893, 1728, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"2b206b14-9cfd-4a24-b1b2-bfb786732b7d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[64040, 1734, 134, 3, 139, "Section",ExpressionUUID->"7bba1170-53d7-4295-8017-de4da2134cb8",
 CellTags->"Working with Numbers"],
Cell[64177, 1739, 218, 7, 35, "Item",ExpressionUUID->"adc367f1-c7fa-4192-8359-ab356e8f68ec",
 CellTags->"Working with Numbers"],
Cell[64398, 1748, 190, 4, 35, "Item",ExpressionUUID->"d018cf1a-511d-424e-a1be-091a6ee28e4f",
 CellTags->"Working with Numbers"],
Cell[64591, 1754, 200, 4, 35, "Item",ExpressionUUID->"d31ba7a0-50a0-4a40-822b-8aa3277af1f5",
 CellTags->"Working with Numbers"],
Cell[64794, 1760, 535, 16, 35, "Item",ExpressionUUID->"b0993bf3-1ddf-4ea6-a417-302b8ea6ff8b",
 CellTags->"Working with Numbers"],
Cell[65332, 1778, 77, 0, 136, "EndOfSlide",ExpressionUUID->"25caa977-da78-4ec1-9682-2c0d16f13165"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65458, 1784, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"96e8620e-098b-4869-a6ac-dc97821b7c06",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[65605, 1790, 207, 4, 139, "Section",ExpressionUUID->"80cada77-e0c1-406a-ba11-d2f0f86ea864",
 CellTags->"Working with Numbers"],
Cell[65815, 1796, 864, 14, 127, "Text",ExpressionUUID->"ac7accca-70e4-459f-a37d-594ed221a53d",
 CellTags->"Working with Numbers"],
Cell[66682, 1812, 290, 7, 35, "CodeText",ExpressionUUID->"87f87a81-4241-4f5f-afb3-831d662b49c4",
 CellTags->"Working with Numbers"],
Cell[66975, 1821, 281, 7, 59, "Input",ExpressionUUID->"a2ed2298-3f15-42fe-9d79-0e965c3ba484",
 CellTags->"Working with Numbers"],
Cell[67259, 1830, 315, 7, 35, "CodeText",ExpressionUUID->"7f9682a3-3c2c-4efe-b0e4-8f0e840c121f",
 CellTags->"Working with Numbers"],
Cell[67577, 1839, 168, 3, 42, "Input",ExpressionUUID->"69f06bf1-5033-4745-abf6-b9741f6d4ca3"],
Cell[67748, 1844, 77, 0, 136, "EndOfSlide",ExpressionUUID->"870209b0-e014-4777-af6f-117a85d40441"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67874, 1850, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"e5efad73-58bd-4e07-b37f-ff1b5573fc1b",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[68021, 1856, 168, 4, 139, "Section",ExpressionUUID->"b54ffed7-e65f-439c-a9d3-c40fafa47fad",
 CellTags->"Working with Numbers"],
Cell[68192, 1862, 304, 7, 35, "Text",ExpressionUUID->"56676376-9512-41c6-8391-1d4cce70775b",
 CellTags->"Working with Numbers"],
Cell[68499, 1871, 910, 23, 69, "Text",ExpressionUUID->"de26a2fb-5c5b-435b-99ef-ef574ecde6c4"],
Cell[69412, 1896, 389, 9, 35, "CodeText",ExpressionUUID->"3cd50427-1813-4ff7-9c07-b5b1528b5af4",
 CellTags->"Working with Numbers"],
Cell[69804, 1907, 197, 4, 57, "Input",ExpressionUUID->"60544c1f-4234-4402-9d9e-de3dd51057f1",
 CellTags->"Working with Numbers"],
Cell[70004, 1913, 234, 4, 35, "CodeText",ExpressionUUID->"7f926558-6d3e-43c8-89b3-f6acfd40cb58",
 CellTags->"Working with Numbers"],
Cell[70241, 1919, 195, 4, 56, "Input",ExpressionUUID->"f9db6c39-a13f-4fb2-987f-74b1e989af8d",
 CellTags->"Working with Numbers"],
Cell[70439, 1925, 538, 15, 35, "CodeText",ExpressionUUID->"88f46037-24e3-4e0a-ae6c-93638328a346",
 CellTags->"Working with Numbers"],
Cell[70980, 1942, 170, 3, 42, "Input",ExpressionUUID->"e1e85738-cf74-404f-92fb-bbcce7109c14",
 CellTags->"Working with Numbers"],
Cell[71153, 1947, 598, 17, 35, "CodeText",ExpressionUUID->"93d98674-e4aa-4ee1-8369-abcf7b54a780",
 CellTags->"Working with Numbers"],
Cell[71754, 1966, 198, 4, 42, "Input",ExpressionUUID->"ff9ce77b-0637-4500-9ca9-52ad9be0ebac",
 CellTags->"Working with Numbers"],
Cell[71955, 1972, 77, 0, 136, "EndOfSlide",ExpressionUUID->"09b57ac1-b91a-4476-84c4-1859effd9931"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72081, 1978, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"09e702bc-ffc2-4173-a024-5af233e9ad4f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[72228, 1984, 206, 4, 139, "Section",ExpressionUUID->"dc286458-b411-434b-a36d-43280f5a092a",
 CellTags->"Working with Numbers"],
Cell[72437, 1990, 246, 6, 35, "Text",ExpressionUUID->"d61a3b30-ab42-44ff-b2bc-0cf71dacc3c0",
 CellTags->"Working with Numbers"],
Cell[72686, 1998, 412, 12, 35, "CodeText",ExpressionUUID->"db108971-e84a-4332-8354-59d65da58710",
 CellTags->"Working with Numbers"],
Cell[73101, 2012, 197, 4, 42, "Input",ExpressionUUID->"fef9ca30-5003-4b8b-b281-ecf175a6c738",
 CellTags->"Working with Numbers"],
Cell[73301, 2018, 458, 12, 35, "CodeText",ExpressionUUID->"cafae96a-db20-45d7-a24a-f1e87e93ef2a",
 CellTags->"Working with Numbers"],
Cell[73762, 2032, 172, 3, 42, "Input",ExpressionUUID->"bfb2ba60-fcea-4638-93e8-6e3300217e98",
 CellTags->"Working with Numbers"],
Cell[73937, 2037, 465, 13, 58, "Text",ExpressionUUID->"163a8ca5-41c8-4e2a-a9ad-28785e626903",
 CellTags->"Working with Numbers"],
Cell[74405, 2052, 532, 17, 38, "CodeText",ExpressionUUID->"d6f9681a-3d10-48f1-bc15-30aa29086c59"],
Cell[74940, 2071, 157, 2, 42, "Input",ExpressionUUID->"9abe9256-3d6d-464f-b489-a9ec038df5d8",
 CellTags->"Working with Numbers"],
Cell[75100, 2075, 225, 4, 35, "CodeText",ExpressionUUID->"b6f41fe8-ee6f-45d2-8637-b35cde727c1b",
 CellTags->"Working with Numbers"],
Cell[75328, 2081, 148, 2, 42, "Input",ExpressionUUID->"f3a86294-4ce8-4a95-9362-20afa70d34e5",
 CellTags->"Working with Numbers"],
Cell[75479, 2085, 148, 2, 42, "Input",ExpressionUUID->"2aef227d-6ffe-426d-a9a2-c8d10ca85153",
 CellTags->"Working with Numbers"],
Cell[75630, 2089, 303, 7, 35, "Text",ExpressionUUID->"4cc182f9-3f28-4748-8a85-cb3db8292066",
 CellTags->"Working with Numbers"],
Cell[75936, 2098, 251, 6, 35, "CodeText",ExpressionUUID->"edabe5df-e367-4e53-96d9-f631e27e43f5"],
Cell[76190, 2106, 256, 4, 42, "Input",ExpressionUUID->"a14527cf-d982-4dac-98e6-8c693f60fd58",
 CellTags->"Working with Numbers"],
Cell[76449, 2112, 77, 0, 136, "EndOfSlide",ExpressionUUID->"ac375917-a8f2-4c79-bb1e-a10f8a37bd9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76575, 2118, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7763cfb1-0dd9-4509-b2e0-a1dc600fc5cd",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[76722, 2124, 209, 4, 139, "Section",ExpressionUUID->"2a3116ee-211f-476c-85dd-7739a503718c",
 CellTags->"Working with Numbers"],
Cell[76934, 2130, 302, 7, 35, "Text",ExpressionUUID->"9f5eb8b1-2da4-4013-ab21-ca35194bed67",
 CellTags->"Working with Numbers"],
Cell[77239, 2139, 938, 23, 69, "Text",ExpressionUUID->"a2bc96a0-be05-4708-98ee-f18b13906c0c"],
Cell[78180, 2164, 468, 12, 35, "CodeText",ExpressionUUID->"9fb5e69d-c5b4-4cac-9554-c025c92a9858",
 CellTags->"Working with Numbers"],
Cell[78651, 2178, 214, 4, 42, "Input",ExpressionUUID->"38e6d029-0e49-4585-8208-e5abc018b93f",
 CellTags->"Working with Numbers"],
Cell[78868, 2184, 421, 12, 35, "CodeText",ExpressionUUID->"75ba8941-03ad-4a69-8ce5-67eb9bb1c5f2",
 CellTags->"Working with Numbers"],
Cell[79292, 2198, 231, 5, 42, "Input",ExpressionUUID->"e5ba8d48-c0c4-4942-8052-9b5f0367698e",
 CellTags->"Working with Numbers"],
Cell[79526, 2205, 36653, 767, 42, "Text",ExpressionUUID->"b1a4e983-7122-4d6b-bd45-f5f6ea0ee4ed"],
Cell[116182, 2974, 77, 0, 136, "EndOfSlide",ExpressionUUID->"c3e9b13e-463d-4d36-b8b4-535cfa1cfe3b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116308, 2980, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f06ea65d-6c02-45ee-bbfd-3b3969712f83",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[116455, 2986, 218, 4, 230, "Section",ExpressionUUID->"1a85eb41-5642-49d0-9e9c-5885cd8597b5",
 CellTags->"Working with Numbers"],
Cell[116676, 2992, 424, 8, 81, "Text",ExpressionUUID->"c88c4b18-e6ec-45a6-89bc-016c36bf98bc",
 CellTags->"Working with Numbers"],
Cell[117103, 3002, 432, 13, 35, "CodeText",ExpressionUUID->"d67c366f-f24d-4d6d-9e90-7bccc9b117bb",
 CellTags->"Working with Numbers"],
Cell[117538, 3017, 182, 3, 42, "Input",ExpressionUUID->"9142ad1d-e047-46c6-96d2-44f9c44db256",
 CellTags->"Working with Numbers"],
Cell[117723, 3022, 223, 4, 35, "CodeText",ExpressionUUID->"5b4b39ca-a00e-41bf-9bfb-fc01b1ffba5b",
 CellTags->"Working with Numbers"],
Cell[117949, 3028, 444, 11, 60, "Input",ExpressionUUID->"27d1c647-7a92-4705-a6da-544ba95cadbb",
 CellTags->"Working with Numbers"],
Cell[118396, 3041, 529, 14, 58, "CodeText",ExpressionUUID->"541f5e6e-6972-4e24-9689-671eb3fdccb5",
 CellTags->"Working with Numbers"],
Cell[118928, 3057, 421, 10, 42, "Input",ExpressionUUID->"cc306b3c-f45f-4b1e-a6ee-02a3bc84da29",
 CellTags->"Working with Numbers"],
Cell[119352, 3069, 244, 6, 35, "Text",ExpressionUUID->"5611cd2e-071b-4390-b8ce-2a9218d09036",
 CellTags->"Working with Numbers"],
Cell[119599, 3077, 921, 25, 58, "Text",ExpressionUUID->"dbfec174-aaed-40fb-8d4f-09fb28b66940",
 CellTags->"Working with Numbers"],
Cell[120523, 3104, 77, 0, 136, "EndOfSlide",ExpressionUUID->"30f77ae2-a702-4d3b-b984-a87686cb918d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120649, 3110, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"fa490366-7af3-477a-a7a3-9064fe1107ed",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[120796, 3116, 116, 2, 139, "Section",ExpressionUUID->"96849a68-23af-48e8-8781-4bebb77aafc1",
 CellTags->"Large Arrays"],
Cell[120915, 3120, 194, 3, 35, "Item",ExpressionUUID->"ef760736-b068-444b-8ab2-2a5caf28424a",
 CellTags->"Large Arrays"],
Cell[121112, 3125, 181, 3, 35, "Item",ExpressionUUID->"4f6230e6-d9b7-4111-9f6f-335552714297",
 CellTags->"Large Arrays"],
Cell[121296, 3130, 176, 3, 35, "Item",ExpressionUUID->"8c38e58d-2e76-420e-9f61-4967fcbbfc66",
 CellTags->"Large Arrays"],
Cell[121475, 3135, 174, 3, 35, "Item",ExpressionUUID->"3e80ed31-78ae-4064-88f5-e802df01bc41",
 CellTags->"Large Arrays"],
Cell[121652, 3140, 169, 3, 35, "Item",ExpressionUUID->"5bbcda23-b881-4adb-9eea-186ec85f8345",
 CellTags->"Large Arrays"],
Cell[121824, 3145, 77, 0, 136, "EndOfSlide",ExpressionUUID->"27aefb6c-1ed9-4b75-8b0e-18752aa633e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121950, 3151, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"0a503f07-a9fa-46cf-ac85-f752ac06ce21",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[122097, 3157, 167, 3, 139, "Section",ExpressionUUID->"5a2f6148-34ea-4b41-a6e9-9e2f3352236a",
 CellTags->"Large Arrays"],
Cell[122267, 3162, 230, 5, 35, "Text",ExpressionUUID->"67554502-16ae-485b-8af9-ade534703d95",
 CellTags->"Large Arrays"],
Cell[122500, 3169, 424, 10, 35, "CodeText",ExpressionUUID->"5e8ee7f9-077c-4982-98f0-8f0a82fed5de",
 CellTags->"Large Arrays"],
Cell[122927, 3181, 275, 7, 45, "Input",ExpressionUUID->"f98d329d-6ca1-4f85-9aac-65e67767157d",
 CellTags->"Large Arrays"],
Cell[123205, 3190, 123, 2, 35, "Text",ExpressionUUID->"39b9d973-5d87-4d0e-a0a7-e32d7c6d3f70",
 CellTags->"Large Arrays"],
Cell[123331, 3194, 533, 9, 81, "Text",ExpressionUUID->"d4b214b9-e9ee-4c25-a303-0b6a4ee02fec",
 CellTags->"Large Arrays"],
Cell[123867, 3205, 77, 0, 136, "EndOfSlide",ExpressionUUID->"b8c7a0ef-770d-4368-89ee-3f6d98594521"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123993, 3211, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6a2cc32e-c6cb-419e-af0d-369678aae167",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[124140, 3217, 193, 3, 139, "Section",ExpressionUUID->"663563e2-a5cb-4518-862f-7d26f3aca5f3",
 CellTags->"Large Arrays"],
Cell[124336, 3222, 440, 10, 58, "Text",ExpressionUUID->"cf61a68c-4e51-4268-a3ad-48ca9d825b0d",
 CellTags->"Large Arrays"],
Cell[124779, 3234, 265, 6, 35, "Text",ExpressionUUID->"8e481e2e-cf69-4990-8d49-40c16c04a0e5"],
Cell[125047, 3242, 343, 8, 64, "Input",ExpressionUUID->"33b8152e-d908-4d75-ba26-34277d98c34a"],
Cell[125393, 3252, 600, 16, 35, "CodeText",ExpressionUUID->"c96f6dd3-9f20-48ad-90ac-21edcd5c4c3a",
 CellTags->"Large Arrays"],
Cell[125996, 3270, 391, 11, 42, "Input",ExpressionUUID->"735a3e50-d0af-4100-bc38-8b097cdb5c8c",
 CellTags->"Large Arrays"],
Cell[126390, 3283, 521, 13, 35, "Text",ExpressionUUID->"ae740596-d44b-483b-b1e3-ffde438d0cca",
 CellTags->"Large Arrays"],
Cell[126914, 3298, 371, 11, 35, "CodeText",ExpressionUUID->"cac8b593-7251-417f-b104-50eaa9c71ef1"],
Cell[127288, 3311, 168, 3, 42, "Input",ExpressionUUID->"62650b6c-57f8-471f-9347-3e310eac856d",
 CellTags->"Large Arrays"],
Cell[127459, 3316, 422, 12, 35, "CodeText",ExpressionUUID->"879065e4-2ed6-4aa5-92f3-d79ae364963f",
 CellTags->"Large Arrays"],
Cell[127884, 3330, 172, 3, 42, "Input",ExpressionUUID->"b2d8677f-eb84-42cc-bfc7-790b7011cbbc",
 CellTags->"Large Arrays"],
Cell[128059, 3335, 559, 16, 35, "CodeText",ExpressionUUID->"4a027bfc-9bb0-48af-8db0-db03b6b0868a",
 CellTags->"Large Arrays"],
Cell[128621, 3353, 172, 3, 42, "Input",ExpressionUUID->"f6010b81-c5e4-4b3e-a859-4adb56193d41",
 CellTags->"Large Arrays"],
Cell[128796, 3358, 77, 0, 136, "EndOfSlide",ExpressionUUID->"525327b9-48ec-46eb-95e6-d66f8e47cd3c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128922, 3364, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f42010ba-885f-4336-8e22-80abb02442ef",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[129069, 3370, 195, 3, 139, "Section",ExpressionUUID->"d0246185-d730-4324-8529-f73db8eb13bc",
 CellTags->"Large Arrays"],
Cell[129267, 3375, 531, 16, 35, "CodeText",ExpressionUUID->"1addf4cf-2f71-4364-85c3-1cab3e3f5f12",
 CellTags->"Large Arrays"],
Cell[129801, 3393, 171, 3, 42, "Input",ExpressionUUID->"eb4bf21c-b593-4ddf-833e-5581a20fba35",
 CellTags->"Large Arrays"],
Cell[129975, 3398, 422, 12, 35, "CodeText",ExpressionUUID->"22fc5391-69f2-4e21-bb03-08aa78f789d7",
 CellTags->"Large Arrays"],
Cell[130400, 3412, 355, 9, 42, "Input",ExpressionUUID->"47262be3-0c23-4fbe-a918-32d9af476d7b",
 CellTags->"Large Arrays"],
Cell[130758, 3423, 77, 0, 136, "EndOfSlide",ExpressionUUID->"cb70b881-e6ec-4bef-800a-1475d0cb43d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130884, 3429, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"686d11a2-d831-46b0-b9ca-e84b5de4e822",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[131031, 3435, 198, 3, 139, "Section",ExpressionUUID->"3b2d8ef5-ffb5-4932-82ea-f226953f1c6b",
 CellTags->"Large Arrays"],
Cell[131232, 3440, 446, 8, 58, "Text",ExpressionUUID->"b4e13d85-61d4-42fc-b79d-94d1a2f0f8c1",
 CellTags->"Large Arrays"],
Cell[131681, 3450, 520, 12, 58, "CodeText",ExpressionUUID->"e4174484-4942-4021-bca2-a0006a3518fc",
 CellTags->"Large Arrays"],
Cell[132204, 3464, 627, 19, 45, "Input",ExpressionUUID->"7e723443-49ef-497d-a309-863dc67c5a01",
 CellTags->"Large Arrays"],
Cell[132834, 3485, 218, 3, 35, "Text",ExpressionUUID->"b702701f-3dfb-4838-8866-ef0c8610e689",
 CellTags->"Large Arrays"],
Cell[133055, 3490, 220, 5, 42, "Input",ExpressionUUID->"e0be8b55-6ed7-434f-a70c-e537731b3954",
 CellTags->"Large Arrays"],
Cell[133278, 3497, 405, 8, 58, "CodeText",ExpressionUUID->"12be45e1-98f9-4e65-be96-6b4a7ce08816",
 CellTags->"Large Arrays"],
Cell[133686, 3507, 275, 7, 45, "Input",ExpressionUUID->"ad6c98d0-fbdb-4d1f-b2f3-c7bc37192f9b",
 CellTags->"Large Arrays"],
Cell[133964, 3516, 447, 10, 58, "Text",ExpressionUUID->"b01fa216-b71c-4842-b16b-ac9ba93405e6",
 CellTags->"Large Arrays"],
Cell[134414, 3528, 1553, 39, 97, "Output",ExpressionUUID->"1db0a9aa-0b32-47cf-8421-427249050eb5"],
Cell[135970, 3569, 7950, 182, 42, "Text",ExpressionUUID->"d94ea071-2903-47b1-9623-df3fb8452160"],
Cell[143923, 3753, 77, 0, 136, "EndOfSlide",ExpressionUUID->"771de6cb-399d-43b4-bb96-ac0deb14f92b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144049, 3759, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"17f2630c-d48d-44cb-ac3b-41cc9ba269ac",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[144196, 3765, 185, 3, 139, "Section",ExpressionUUID->"9de2a503-89e5-4490-aa84-3020d8c5a133",
 CellTags->"Large Arrays"],
Cell[144384, 3770, 688, 18, 58, "CodeText",ExpressionUUID->"1d2d1281-e24c-4596-9652-526c83ddbff5",
 CellTags->"Large Arrays"],
Cell[145075, 3790, 234, 5, 42, "Input",ExpressionUUID->"4c8fc309-632c-4226-ac1e-6bba0909739b",
 CellTags->"Large Arrays"],
Cell[145312, 3797, 169, 3, 42, "Input",ExpressionUUID->"55421774-3151-42d3-a37f-8f1fe8b5ad93",
 CellTags->"Large Arrays"],
Cell[145484, 3802, 431, 8, 58, "Text",ExpressionUUID->"aa0bc7e4-9fab-492f-9dd4-135af4be4413",
 CellTags->"Large Arrays"],
Cell[145918, 3812, 635, 17, 58, "CodeText",ExpressionUUID->"5c5b4952-190c-44c5-ae27-c7857ecd6f66",
 CellTags->"Large Arrays"],
Cell[146556, 3831, 196, 4, 42, "Input",ExpressionUUID->"c6c996d8-b8c2-432d-a042-1dcfa4a3b1ea",
 CellTags->"Large Arrays"],
Cell[146755, 3837, 168, 3, 42, "Input",ExpressionUUID->"7f047de3-d769-48ba-a338-182f69e932d7",
 CellTags->"Large Arrays"],
Cell[146926, 3842, 549, 13, 35, "CodeText",ExpressionUUID->"29968e30-6c0f-48f0-b62a-deb712fc61c8",
 CellTags->"Large Arrays"],
Cell[147478, 3857, 183, 3, 42, "Input",ExpressionUUID->"b8184ce8-ff0c-4786-b71b-59b4af1343b0",
 CellTags->"Large Arrays"],
Cell[147664, 3862, 190, 3, 42, "Input",ExpressionUUID->"9bf56f15-100c-4809-b37e-1ce161ec5988",
 CellTags->"Large Arrays"],
Cell[147857, 3867, 380, 7, 58, "Text",ExpressionUUID->"f46187b4-3e33-4175-b4ef-da8bd5ad7f16",
 CellTags->"Large Arrays"],
Cell[148240, 3876, 264, 6, 35, "CodeText",ExpressionUUID->"fbb9acb3-e31b-4122-b633-de8d2e99c48a",
 CellTags->"Large Arrays"],
Cell[148507, 3884, 260, 6, 42, "Input",ExpressionUUID->"4a3eb46a-096e-4d10-a66b-f46883ec04cf",
 CellTags->"Large Arrays"],
Cell[148770, 3892, 301, 6, 35, "CodeText",ExpressionUUID->"907e12a0-a394-4d31-88f1-10827d2a8690",
 CellTags->"Large Arrays"],
Cell[149074, 3900, 375, 10, 85, "Input",ExpressionUUID->"fc1daa7a-f771-4eaa-968d-8a541e2de470",
 CellTags->"Large Arrays"],
Cell[149452, 3912, 227, 3, 35, "CodeText",ExpressionUUID->"e56a3bcb-b2f8-4daf-94a9-1bf4884c8ca9",
 CellTags->"Large Arrays"],
Cell[149682, 3917, 257, 6, 62, "Input",ExpressionUUID->"63d7e228-8517-4a07-ae9d-b04c9d255cac",
 CellTags->"Large Arrays"],
Cell[149942, 3925, 328, 6, 58, "CodeText",ExpressionUUID->"2f32f8b8-e1cf-4bbb-a2d1-8ffbaeb5319b",
 CellTags->"Large Arrays"],
Cell[150273, 3933, 285, 7, 42, "Input",ExpressionUUID->"7a099d72-b80b-4a88-987e-7ddbb3f8344a",
 CellTags->"Large Arrays"],
Cell[150561, 3942, 285, 7, 42, "Input",ExpressionUUID->"cd075afc-f6d9-49db-bb4b-e444a4ca3463",
 CellTags->"Large Arrays"],
Cell[150849, 3951, 3363, 73, 42, "Text",ExpressionUUID->"ab90743a-64e1-4401-883a-336708b4f476"],
Cell[154215, 4026, 77, 0, 136, "EndOfSlide",ExpressionUUID->"9f3ec625-5aeb-41a3-ba02-d10d500bdd8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154341, 4032, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"7e2f3b99-ee0e-47e2-87aa-17ab1e41e017",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[154488, 4038, 188, 3, 139, "Section",ExpressionUUID->"82e27b09-6d2c-4d07-8afe-282139c449b7",
 CellTags->"Large Arrays"],
Cell[154679, 4043, 443, 8, 58, "Text",ExpressionUUID->"8d77e994-fae6-435e-a6ed-188b97621530",
 CellTags->"Large Arrays"],
Cell[CellGroupData[{
Cell[155147, 4055, 141, 2, 91, "Subsection",ExpressionUUID->"fe010985-5d65-4b13-93a9-d931e7dcc334",
 CellTags->"Large Arrays"],
Cell[155291, 4059, 486, 13, 35, "CodeText",ExpressionUUID->"466b14f4-dc38-4d2a-9e60-0a668ce4cc71",
 CellTags->"Large Arrays"],
Cell[155780, 4074, 415, 11, 42, "Input",ExpressionUUID->"5ab2b069-b878-4742-8acf-a8b3c4ee72d3",
 CellTags->"Large Arrays"],
Cell[156198, 4087, 215, 5, 35, "Text",ExpressionUUID->"b897ac05-3e3c-4adc-afa4-45b565af8ed9",
 CellTags->"Large Arrays"],
Cell[156416, 4094, 795, 23, 58, "CodeText",ExpressionUUID->"fdecd28b-3057-44a5-b974-d55e5fb895cb",
 CellTags->"Large Arrays"],
Cell[157214, 4119, 400, 10, 42, "Input",ExpressionUUID->"0fcca7b4-3bb5-4430-8a4d-0e77bc05ce01",
 CellTags->"Large Arrays"],
Cell[157617, 4131, 183, 3, 42, "Input",ExpressionUUID->"bd6ba56c-3ede-4d81-937d-f7b147b4db4e",
 CellTags->"Large Arrays"],
Cell[157803, 4136, 260, 6, 42, "Input",ExpressionUUID->"8db5b37e-f670-4e37-ab37-c844f7e04250",
 CellTags->"Large Arrays"],
Cell[158066, 4144, 186, 3, 42, "Input",ExpressionUUID->"011a8b0c-f8ea-490c-b7c6-fb4bdae34594",
 CellTags->"Large Arrays"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158289, 4152, 169, 3, 91, "Subsection",ExpressionUUID->"8be0eec4-af12-4102-98b6-b02c40b5d6d9"],
Cell[158461, 4157, 277, 4, 58, "Text",ExpressionUUID->"c501408a-41ba-4a66-8458-f737c5e71d94"],
Cell[158741, 4163, 248, 7, 35, "CodeText",ExpressionUUID->"91764e0f-68c2-45b9-930a-1e5a8593c867"],
Cell[158992, 4172, 560, 17, 64, "Input",ExpressionUUID->"b1aea64e-d60b-42f7-b783-2637e2630cb9"],
Cell[159555, 4191, 181, 3, 35, "CodeText",ExpressionUUID->"87447d72-2bf9-4ea0-b0ab-86905eac65ae"],
Cell[159739, 4196, 309, 7, 42, "Input",ExpressionUUID->"eec70727-ea6e-4952-bdfa-c1459005a888"],
Cell[160051, 4205, 327, 9, 35, "CodeText",ExpressionUUID->"c041da77-0d46-41bb-a698-f7d9ce38d61c"],
Cell[160381, 4216, 225, 5, 45, "Input",ExpressionUUID->"1d2fba88-79fb-4a9b-bdf0-fbbbcbaaf6ae"],
Cell[160609, 4223, 188, 3, 35, "CodeText",ExpressionUUID->"f8c4b3b9-8c49-43a7-a89b-a4faf6a067d9"],
Cell[160800, 4228, 658, 18, 85, "Input",ExpressionUUID->"30f7839a-8049-452f-833f-b70e342fb13e"],
Cell[161461, 4248, 348, 7, 42, "Input",ExpressionUUID->"4ea26be9-2cef-4a44-ad69-f262ba364ef3"],
Cell[161812, 4257, 194, 3, 35, "CodeText",ExpressionUUID->"451b7e1a-5c10-4330-913d-02894bb7756f"],
Cell[162009, 4262, 231, 5, 45, "Input",ExpressionUUID->"1a7f9a42-00f3-42d3-81df-2e76525c4e3a"],
Cell[162243, 4269, 77, 0, 136, "EndOfSlide",ExpressionUUID->"80e46f2d-77eb-4474-9a11-6d5e4e6d293f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[162381, 4276, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"107e574a-4eee-4fb0-80e9-779e5aef5223",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[162528, 4282, 216, 3, 230, "Section",ExpressionUUID->"14cc879e-826a-4bb4-903a-89e9ad8801cd",
 CellTags->"Large Arrays"],
Cell[162747, 4287, 511, 13, 58, "CodeText",ExpressionUUID->"c1a0800d-e5fd-40e1-ae80-e0ebecf3bc26",
 CellTags->"Large Arrays"],
Cell[163261, 4302, 281, 6, 42, "Input",ExpressionUUID->"ae4ad2ad-feaa-4bca-afa3-b78c5e242181",
 CellTags->"Large Arrays"],
Cell[163545, 4310, 468, 11, 58, "Text",ExpressionUUID->"28b79120-5b7b-4b15-bf74-bd31fda82af5",
 CellTags->"Large Arrays"],
Cell[164016, 4323, 77, 0, 136, "EndOfSlide",ExpressionUUID->"e0d4f723-3e3b-47de-bbcb-69f28adb0028"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164142, 4329, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"f32c6cb8-0fb8-420e-ae34-73da8f96b500",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[164289, 4335, 208, 3, 230, "Section",ExpressionUUID->"a19f9053-ed85-4414-822b-c94f4d81391f",
 CellTags->"Large Arrays"],
Cell[164500, 4340, 418, 8, 56, "Item",ExpressionUUID->"e6c1776d-b961-42c0-aace-b20e481f7f08",
 CellTags->"Large Arrays"],
Cell[164921, 4350, 199, 5, 35, "Item",ExpressionUUID->"a9f6310b-f5ea-4b85-9369-d438df011d9a",
 CellTags->"Large Arrays"],
Cell[165123, 4357, 311, 6, 35, "CodeText",ExpressionUUID->"4423e610-b481-4a28-9ba3-32007e877e49",
 CellTags->"Large Arrays"],
Cell[165437, 4365, 220, 4, 42, "Input",ExpressionUUID->"9e23c757-8989-4e66-aa91-2331a7727af6",
 CellTags->"Large Arrays"],
Cell[165660, 4371, 302, 7, 42, "Input",ExpressionUUID->"5dff1a75-2e25-42b8-8375-a75eb2e91e59",
 CellTags->"Large Arrays"],
Cell[165965, 4380, 310, 8, 42, "Input",ExpressionUUID->"edf5519d-d47d-429c-aab1-1ccc715cadf1",
 CellTags->"Large Arrays"],
Cell[166278, 4390, 276, 7, 42, "Input",ExpressionUUID->"b39d7e06-1b23-49cd-8e14-c2c59272a156",
 CellTags->"Large Arrays"],
Cell[166557, 4399, 233, 5, 35, "Text",ExpressionUUID->"00e7dd44-8414-456d-8bae-1884364bbf79",
 CellTags->"Large Arrays"],
Cell[166793, 4406, 529, 12, 58, "CodeText",ExpressionUUID->"c0034a18-3b91-439a-a17f-38886c6e3161",
 CellTags->"Large Arrays"],
Cell[167325, 4420, 387, 11, 42, "Input",ExpressionUUID->"47fa4522-046b-4e60-9994-4f4dc137b4ac",
 CellTags->"Large Arrays"],
Cell[167715, 4433, 212, 3, 35, "CodeText",ExpressionUUID->"9e3053e1-87df-4c68-a2e0-546fdd302190",
 CellTags->"Large Arrays"],
Cell[167930, 4438, 382, 11, 42, "Input",ExpressionUUID->"b893b7e2-59f7-426f-b23a-6b1188be74db",
 CellTags->"Large Arrays"],
Cell[168315, 4451, 468, 12, 35, "CodeText",ExpressionUUID->"48211574-6658-4ad0-b3a4-7f7274d654e5",
 CellTags->"Large Arrays"],
Cell[168786, 4465, 197, 4, 51, "Input",ExpressionUUID->"c6b9147b-bc15-43af-be73-be3a4442ec51",
 CellTags->"Large Arrays"],
Cell[168986, 4471, 384, 8, 76, "Text",ExpressionUUID->"ac3f6b03-c7c2-460a-bdfc-efdd27c20721",
 CellTags->"Large Arrays"],
Cell[169373, 4481, 281, 6, 76, "CodeText",ExpressionUUID->"d1e00574-d84e-4339-8171-db3fb8654573",
 CellTags->"Large Arrays"],
Cell[169657, 4489, 307, 8, 51, "Input",ExpressionUUID->"2b0f7e9e-f7ca-43eb-9f83-5de8704656b0",
 CellTags->"Large Arrays"],
Cell[169967, 4499, 77, 0, 136, "EndOfSlide",ExpressionUUID->"9bf2da0b-9a88-49ba-a3cb-b3ccde08db09"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170093, 4505, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"1dc3cccb-5dda-4f91-af94-57963b021969",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[170240, 4511, 169, 2, 139, "Section",ExpressionUUID->"11656155-69c0-4a59-8aed-d5e8787629bf",
 CounterAssignments->{{"Chapter", 5}, {"ExerciseNumber", 0}},
 CellTags->"Exercises"],
Cell[CellGroupData[{
Cell[170434, 4517, 284, 10, 91, "Subsection",ExpressionUUID->"eaf30a00-0ee3-44e4-8e87-bbb4a708e152",
 CellTags->{"Exercises", "Solving Numerically"}],
Cell[CellGroupData[{
Cell[170743, 4531, 812, 26, 71, "Item",ExpressionUUID->"93542c1f-77f9-4cf5-95be-73e4c84b7be0",
 CellTags->{"Exercises", "Solving Numerically"}],
Cell[171558, 4559, 413, 12, 68, "Input",ExpressionUUID->"b11ff97e-efab-407b-ae74-ad0eb9f4edbf",
 CellTags->{"Exercises", "Solving Numerically"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[172008, 4576, 1000, 27, 123, "Item",ExpressionUUID->"6f79029f-45ee-4ca4-809d-932a272f6c8a",
 CellTags->{"Exercises", "Solving Numerically"}],
Cell[173011, 4605, 365, 10, 68, "Input",ExpressionUUID->"63de1a07-1c95-473c-99e4-ddfd90683128",
 CellTags->{"Exercises", "Solving Numerically"}],
Cell[173379, 4617, 243, 5, 44, "Item",ExpressionUUID->"255e24f9-3cf1-489d-aa20-36322aea4d7b",
 CellGroupingRules->{Global`GroupTogetherGrouping, 10000.},
 CellTags->{"Exercises", "Solving Numerically"}]
}, Open  ]],
Cell[173637, 4625, 1197, 26, 53, "Text",ExpressionUUID->"897ce869-35ee-4c5d-a9ab-f71c7f42b378"],
Cell[174837, 4653, 2408, 68, 53, "Text",ExpressionUUID->"62a1ee42-15da-4096-a58e-ba4fc603d004"]
}, Closed]],
Cell[CellGroupData[{
Cell[177282, 4726, 236, 9, 55, "Subsection",ExpressionUUID->"d7595e83-fc92-4f91-bca0-73ac041d5f28",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[CellGroupData[{
Cell[177543, 4739, 541, 16, 54, "Item",ExpressionUUID->"f1d37dd3-2bfb-4129-ae9b-24fb6b4ead9f",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[178087, 4757, 320, 9, 40, "Input",ExpressionUUID->"e95c0348-eb50-4eb9-8eb9-474c8f0338b6",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[178410, 4768, 339, 9, 40, "Input",ExpressionUUID->"b5701654-ce8b-4542-b36b-61e8ccd5accb",
 CellTags->{"Exercises", "Curve Fitting"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[178786, 4782, 824, 27, 54, "Item",ExpressionUUID->"f2d63ca0-6791-4b4e-9ce8-52a311ca7841",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[179613, 4811, 273, 7, 40, "Input",ExpressionUUID->"db18a1ef-c946-4add-a21f-e91ab3b59633",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[179889, 4820, 222, 5, 40, "Input",ExpressionUUID->"2bb4f77e-14da-4c3b-8942-01d7c125bd09",
 CellTags->{"Exercises", "Curve Fitting"}]
}, Open  ]],
Cell[180126, 4828, 517, 17, 34, "Item",ExpressionUUID->"ed87e833-56fc-4ecb-9250-8a9720d1727b",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[180646, 4847, 6274, 111, 42, "Text",ExpressionUUID->"abebe832-1656-4151-ad37-16f9e341ffee"],
Cell[186923, 4960, 3539, 94, 42, "Text",ExpressionUUID->"7c02ade8-5375-4321-802c-a3df01b1fcb4"],
Cell[190465, 5056, 376, 11, 34, "Item",ExpressionUUID->"c8b81dd4-cea6-4930-ae1f-43fa20c58834",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[190844, 5069, 5677, 134, 42, "Text",ExpressionUUID->"b5cf1137-13f1-4057-be8c-b648d66bf62d"],
Cell[196524, 5205, 405, 13, 34, "Item",ExpressionUUID->"8ba99593-f4f4-48e9-87d9-0db33fef0562",
 CellTags->{"Exercises", "Curve Fitting"}],
Cell[196932, 5220, 7266, 162, 42, "Text",ExpressionUUID->"dbd13725-5778-400c-a323-6b85e4af5ddc"]
}, Closed]],
Cell[CellGroupData[{
Cell[204235, 5387, 242, 9, 55, "Subsection",ExpressionUUID->"5f3d83ea-3577-43ac-ae8e-a9949d05f749",
 CellTags->{"Exercises", "Curve Fitting II"}],
Cell[204480, 5398, 388, 8, 104, "Item",ExpressionUUID->"26b8d57d-0113-432d-80ba-52174af4b982",
 CellTags->{"Exercises", "Curve Fitting II"}],
Cell[204871, 5408, 293, 7, 44, "CodeText",ExpressionUUID->"69e22a8a-4e2a-467a-abb9-596c3af06c81"],
Cell[205167, 5417, 354, 9, 84, "Input",ExpressionUUID->"70b86834-4f94-4821-8aca-443b597268a7"],
Cell[205524, 5428, 225, 5, 51, "Input",ExpressionUUID->"3cc8e234-8cfc-4012-85a7-1d2e0a011269",
 CellTags->{"Exercises", "Curve Fitting II"}],
Cell[205752, 5435, 741, 22, 74, "Item",ExpressionUUID->"92f6dca1-f8aa-4506-b77e-c6577ed5ab01",
 CellTags->{"Exercises", "Curve Fitting II"}],
Cell[206496, 5459, 384, 11, 44, "Text",ExpressionUUID->"b2fa54d6-8e70-42e7-8c39-b568e322826f",
 CellTags->{"Exercises", "Curve Fitting II"}],
Cell[206883, 5472, 2917, 78, 43, "Text",ExpressionUUID->"92682f79-fcac-4e62-a5cf-22ef9c9da506"]
}, Closed]],
Cell[CellGroupData[{
Cell[209837, 5555, 240, 9, 55, "Subsection",ExpressionUUID->"1deaca16-2707-4825-b130-43e0d51b730c",
 CellTags->{"Exercises", "Moving Averages"}],
Cell[CellGroupData[{
Cell[210102, 5568, 320, 8, 34, "Item",ExpressionUUID->"4a7b8aab-6ae6-45ae-8a40-6ed82e82750d",
 CellTags->{"Exercises", "Moving Averages"}],
Cell[210425, 5578, 406, 12, 40, "Input",ExpressionUUID->"8d42754c-8f2d-49fe-9474-5119126f1d6c",
 CellTags->{"Exercises", "Moving Averages"}],
Cell[210834, 5592, 242, 5, 40, "Input",ExpressionUUID->"c5cf92ff-8474-4907-aa63-dae9da235910",
 CellTags->{"Exercises", "Moving Averages"}]
}, Open  ]],
Cell[211091, 5600, 9906, 266, 42, "Text",ExpressionUUID->"b286bae4-8688-4e43-9b6e-a81b75040197"],
Cell[221000, 5868, 4903, 117, 42, "Text",ExpressionUUID->"239f799e-983f-4d89-999d-20ae0bdff41e"]
}, Closed]],
Cell[CellGroupData[{
Cell[225940, 5990, 236, 9, 55, "Subsection",ExpressionUUID->"e03ef530-e7aa-4c30-b838-ff9a285a9e88",
 CellTags->{"Exercises", "Sparse Arrays"}],
Cell[226179, 6001, 503, 16, 34, "Item",ExpressionUUID->"f7fa67aa-b126-466e-bf8b-d1527540da42",
 CellTags->{"Exercises", "Sparse Arrays"}],
Cell[226685, 6019, 4038, 89, 42, "Text",ExpressionUUID->"10ae0421-ef00-4960-b178-f9c7e90df5fe"],
Cell[230726, 6110, 216, 6, 34, "Item",ExpressionUUID->"577af961-e6e8-40a5-9ed8-2e693d5238d5",
 CellTags->{"Exercises", "Sparse Arrays"}],
Cell[230945, 6118, 3536, 76, 42, "Text",ExpressionUUID->"00d44686-a35d-441b-9423-a56de1ac536b"],
Cell[234484, 6196, 231, 6, 34, "Item",ExpressionUUID->"e7d0a8c1-53a1-4839-af6b-2207fab4d1e7",
 CellTags->{"Exercises", "Sparse Arrays"}],
Cell[234718, 6204, 3082, 86, 42, "Text",ExpressionUUID->"a8bfcfb2-b5b2-4c08-a6af-b4a183316ed3"],
Cell[237803, 6292, 208, 6, 34, "Item",ExpressionUUID->"954cf298-25fb-49c3-ac66-980f22053291",
 CellTags->{"Exercises", "Sparse Arrays"}],
Cell[238014, 6300, 3600, 98, 42, "Text",ExpressionUUID->"a346c0e6-57b4-4b8d-b593-dc07014e9e64"]
}, Closed]],
Cell[CellGroupData[{
Cell[241651, 6403, 274, 10, 55, "Subsection",ExpressionUUID->"44d105ae-4bd5-4177-83fd-e355de89de67",
 CellTags->{"Exercises", "High Precision Integration"}],
Cell[CellGroupData[{
Cell[241950, 6417, 394, 9, 54, "Item",ExpressionUUID->"e994c986-cd9e-4449-991b-a22168274540",
 CellTags->{"Exercises", "High Precision Integration"}],
Cell[242347, 6428, 190, 4, 40, "Input",ExpressionUUID->"cc0905e8-52f3-438d-a2cf-e01d5201da13",
 CellTags->{"Exercises", "High Precision Integration"}],
Cell[242540, 6434, 256, 5, 40, "Input",ExpressionUUID->"0d0a552a-6da6-4565-b994-f4a6ec132594",
 CellTags->{"Exercises", "High Precision Integration"}],
Cell[242799, 6441, 500, 14, 40, "Input",ExpressionUUID->"5b84cdaf-bf94-48b5-974e-b39e9955b92d",
 CellTags->{"Exercises", "High Precision Integration"}]
}, Open  ]],
Cell[243314, 6458, 231, 7, 34, "Item",ExpressionUUID->"1b8bd50b-91a0-4953-b8bd-938d6f1fa72a",
 CellTags->{"Exercises", "High Precision Integration"}],
Cell[243548, 6467, 1861, 43, 42, "Text",ExpressionUUID->"9e0c8516-0ff7-4c57-9367-a95688c6e6de"],
Cell[245412, 6512, 1195, 33, 42, "Text",ExpressionUUID->"87231a82-9d3c-4466-9374-eb8e84a43c93"]
}, Closed]],
Cell[CellGroupData[{
Cell[246644, 6550, 248, 9, 55, "Subsection",ExpressionUUID->"81c6db3f-3fb0-49e4-9a07-f859e8d6da10",
 CellTags->{"Exercises", "Resampling"}],
Cell[246895, 6561, 401, 8, 56, "Text",ExpressionUUID->"7e790c37-e839-4038-b11b-57d46fefbaa9",
 CellTags->{"Exercises", "Resampling"}],
Cell[CellGroupData[{
Cell[247321, 6573, 371, 9, 54, "Item",ExpressionUUID->"f0740a88-b1d0-4125-80ab-738ea071c15b",
 CellTags->{"Exercises", "Resampling"}],
Cell[247695, 6584, 3716, 104, 174, "Input",ExpressionUUID->"12d2f7ef-4088-488e-b6f8-b8bc8b1dc433",
 CellTags->{"Exercises", "Resampling"}],
Cell[251414, 6690, 175, 3, 40, "Input",ExpressionUUID->"be519d58-dd05-48ce-87cb-71cfbb68a264",
 CellTags->{"Exercises", "Resampling"}]
}, Open  ]],
Cell[251604, 6696, 1374, 43, 74, "Item",ExpressionUUID->"4ce49150-4d9b-4696-b9bd-754259df9847",
 CellTags->{"Exercises", "Resampling"}],
Cell[252981, 6741, 2085, 47, 42, "Text",ExpressionUUID->"96e198a1-67fb-4ce5-bcdc-1e70dd850455"],
Cell[255069, 6790, 1004, 28, 42, "Text",ExpressionUUID->"38ac4bb7-e8fc-48c4-84cc-36502e395d68"],
Cell[256076, 6820, 660, 18, 54, "Item",ExpressionUUID->"940e266e-7f2d-4103-a3de-3fca4c49791d",
 CellTags->{"Exercises", "Resampling"}],
Cell[256739, 6840, 3321, 88, 42, "Text",ExpressionUUID->"460157d5-3918-41b4-aa16-9357aa4b28d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[260097, 6933, 257, 10, 55, "Subsection",ExpressionUUID->"081ac2f0-e125-47c9-8ceb-01dd6ae11878",
 CellTags->{"Exercises", "Plotting a Result"}],
Cell[CellGroupData[{
Cell[260379, 6947, 225, 7, 34, "Item",ExpressionUUID->"bb6f1b32-6a5e-4c68-a39c-9ff07ddbb265",
 CellTags->{"Exercises", "Plotting a Result"}],
Cell[260607, 6956, 184, 4, 40, "Input",ExpressionUUID->"92a96cec-44c3-4084-b07a-9f7a2eeef5ef"],
Cell[260794, 6962, 785, 24, 40, "Input",ExpressionUUID->"afa60d9e-29e8-481f-bee3-c106bdfc6ac1",
 CellTags->{"Exercises", "Plotting a Result"}]
}, Open  ]],
Cell[261594, 6989, 894, 19, 42, "Text",ExpressionUUID->"1cdb2f9c-4b4d-4fd0-9f72-038be2d5d9ff"],
Cell[262491, 7010, 364, 12, 34, "Item",ExpressionUUID->"a53419d6-14a0-4923-b69f-71eeee81d0ba",
 CellTags->{"Exercises", "Plotting a Result"}],
Cell[262858, 7024, 2271, 56, 42, "Text",ExpressionUUID->"a95f24d7-8994-4307-9672-9b56bac2d6de"],
Cell[265132, 7082, 1555, 40, 42, "Text",ExpressionUUID->"023c0673-2886-4b28-af2f-9890ec305639"]
}, Closed]],
Cell[CellGroupData[{
Cell[266724, 7127, 262, 10, 55, "Subsection",ExpressionUUID->"af09769b-0c7d-492b-ae74-29c1e1a64ee4",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[266989, 7139, 1164, 32, 106, "Text",ExpressionUUID->"9b5b643b-65d4-4d74-a64a-4f6e650f8ee2",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[268156, 7173, 674, 20, 77, "CodeText",ExpressionUUID->"c3adf56f-fdd3-416f-a367-f12320aab18e",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[268833, 7195, 184, 3, 52, "Input",ExpressionUUID->"72babba4-2628-4979-b7c5-1e4041ccffe7",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[269020, 7200, 171, 3, 52, "Input",ExpressionUUID->"b490fee8-027d-493d-9ff6-7dbb9ceae5c9",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[269194, 7205, 1305, 42, 131, "Text",ExpressionUUID->"45037145-ec57-40cf-8ec1-bd7937526d34",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[270502, 7249, 1223, 36, 110, "Text",ExpressionUUID->"67a47924-5419-4e96-8623-c23b4c754736",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[271728, 7287, 771, 23, 77, "CodeText",ExpressionUUID->"459259ba-55a9-4b25-a338-d3c5ecd9fdac",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[272502, 7312, 301, 7, 52, "Input",ExpressionUUID->"288a5166-3a6e-4e05-a63f-2aa0a54854d5",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[272806, 7321, 321, 8, 52, "Input",ExpressionUUID->"58969540-f88a-47c7-9823-69a25b04bd61",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[273130, 7331, 869, 28, 48, "Item",ExpressionUUID->"4b0b6836-7ff1-4266-8e6c-cafd329b9617",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[274002, 7361, 1895, 43, 53, "Text",ExpressionUUID->"10d016cd-788f-4a56-ac0f-ab6ad9737b93"],
Cell[275900, 7406, 1161, 31, 53, "Text",ExpressionUUID->"f97e9d56-4f52-429f-8d26-f11268d49a39"],
Cell[277064, 7439, 426, 14, 44, "Item",ExpressionUUID->"276d8d8a-250f-4c67-a332-7e6716fa9f11",
 CellTags->{"Exercises", "Numerical Differentiation"}],
Cell[277493, 7455, 2312, 60, 53, "Text",ExpressionUUID->"e70cbce4-76a7-4091-8e62-974806bab5f3"],
Cell[279808, 7517, 77, 0, 171, "EndOfSlide",ExpressionUUID->"64ab5714-e826-49d8-8a46-abf79148a7bc"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

