(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 13.3' *)

(***************************************************************************)
(*                                                                         *)
(*                                                                         *)
(*  Under the Wolfram FreeCDF terms of use, this file and its content are  *)
(*  bound by the Creative Commons BY-SA Attribution-ShareAlike license.    *)
(*                                                                         *)
(*        For additional information concerning CDF licensing, see:        *)
(*                                                                         *)
(*         www.wolfram.com/cdf/adopting-cdf/licensing-options.html         *)
(*                                                                         *)
(*                                                                         *)
(***************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1088,         20]
NotebookDataLength[   2940207,      57515]
NotebookOptionsPosition[   2915197,      57086]
NotebookOutlinePosition[   2915674,      57104]
CellTagsIndexPosition[   2915631,      57101]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Wolfram Mathematica Book", "Title",
 CellChangeTimes->{{3.898851306956377*^9, 
  3.898851317734773*^9}},ExpressionUUID->"6e7da4cf-9d62-46df-b924-\
cbcb0804dc51"],

Cell["Chapter 2: A Demo Project", "Subtitle",
 CellChangeTimes->{{3.898851456736187*^9, 
  3.8988514719082613`*^9}},ExpressionUUID->"6bad283a-13c0-4f9a-979c-\
802d598718ad"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "life expectancy in the US", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Input", "Input interpretation", 1, 1, "Input", 
        "Entity[\"Country\", \"UnitedStates\"][EntityProperty[\"Country\", \
\"LifeExpectancy\"]]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"UnitedStates\"][EntityProperty[\"Country\", \
\"LifeExpectancy\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"United States\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "UnitedStates"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"life expectancy\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["minput", {}, {"Quantity[78.9, \"Years\"]"}], 
       XMLElement["moutput", {}, {"Quantity[78.9, \"Years\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             StyleBox[
              TemplateBox[{
                StyleBox[
                 TagBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["78.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "78.9", "SRString" -> "78.9"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                  SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                 False], "\"  \"", 
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["66", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"66", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
              LineIndent -> 0], LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Life expectancy history", "scanner" -> "Data", "id" -> 
     "History:LifeExpectancy:CountryData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
uNXi//9993/j/wOqBvuL
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1Xe8jmUYB/Bzjj2OrWFryt6biiIzjr1HKFvIyMrI3jJCRkZ2SEJRsmc2
2XuTTQN9b/74fq7fdT3n87zPfb/3857MTdvHtIuKiIiIJFnU85o06nnOKydR
hxg+JC2dOcvvrsVTG7ObXvrF3KGCfjWV5NRqO47zkz6O+/WQr/Cf/l+1Bhv4
RJ9Q/Yi9TNKfoKA8mzzyeuLKjdhFT30/9RbJw8O7fyv1CIu03dVL3JbLq6uo
KK8Mn031sBY+lidynAL6WeSWo91vsPyANMTSd1LP8JvrvdRrxKEhO+lhvpBb
lAvrpoLcggkcI7/Zt+SSPw97L7fkMAv03dSL/CX/o37ASsrrU6ltOcaP4TrV
5PU0l8dzlHz6meSUX1Y7cppfwx5aR0/5KrHDd0EDdtA9nIHwfXCI+fqblA2f
Rzl5BX8TE/aBZnICtSl7+Eof22d0kc/zZ/h7NS8zyKFfRyy5Ptvppp/HDcro
V4R1ywPUO6Qk0j3bqEf5IeydeplHctWwtnB+5HEcIY9+OtnlteF4yPXYRtfw
zO7XN+wzScI54CDfuXad98PnUFZezkOq6NeFtcpjOUxu/TSyyYndc5B8n5f4
lFP8Et4ztS5b6aKfyzXe0y+njNyEMRwil9k3ZJXfIgtv8gav8xqv8gqZyURG
MpCedKQlTTgDYT00ZjQHyeneU8NzhmegEaM4QA7zKbwof8YcrlLabBml5YaM
ZD/ZzSbzgtyZ2VyhlNlSSskNGME+spl9TWr5XeoznL1kNZ9EKjklKUjOO9Rj
GHvCnvibiSST36YuQ8Pzmp3jD/mRmoUJJNV3YhaXw+eafU9JuQ5D2B322Gx8
OBNyR6Llp7TgQHh3zbqqF7gUnktdQgl5GQ/4UL+W2vJgdoXvLbwbRMuJnJOB
8r2wx0TpO6gn+Tki4tmPcR22hDOkncnFsE79YorLS7lP5XC+qCXHc5/e8nXi
0yTsA4Nc2xnOjTyOxHIHZnCBkmaLKCYndI/+8m1S0Dq8w2GvXLtHpfCM1JQH
siOcRf1YEsntmc55SpgtpKhcgy/ZHs6t2RgSyu2YxjmKmy2giFydAWwLZ9xs
NAnkNTyltn4zbeUv1JthXTyhOfvD++PaWYrJ8yksV6M/W8N7YzYq7FV4NvVu
OMO05wSrzZ9QS95EG3kqZyiqn0chOYZ+bCGT2Ujiya2ZwmmKhN8WCspV6ctm
MpqNIK7cismcorDZXArIVcIa2UQGs+HEkWMTi/zhzNGHjaR3fVjks3+JEat4
TE39RlrK8V3oI98I3xmPaca+8F66fpJC8hzyyUu4S0X9GirLvdlAOv1Q/gcN
tgKB
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJwl1mWYlVUUBtChJaS7u5HuTkUapBtUpEEkFOnGVuwCkQYLFZHu7pROARUU
AzvWfvyx2O/eZ57v3nvuOTMU6DO07ZBECQkJaRMnJESd7Z/cbJHH05Iv9c35
Sf6AiizQV+Wc/DqH5Qf5m9TcZAJ3eW5/61vlDrEuf4FxwlP6PGyVJ9CKSiQh
Kcl42npetskTaU1lFppV47z8BgNIzjNm+dguT6INVVhkVp0L8psMJAXPmuVn
hzyZtlRlsVkNLspvMYht+o78I6/mrDyUrLE3TIvPa/6cWoCd8hTaUY0lZjW5
JL/NEfmheB5puMVEBlvbrnbi39h/UvK8viC75Kk8QHWWmtXisvwOQ0jFC2aF
2C1Poz01WGZWmyvyuwwlNS+aFWaPPJ0OrNG34Gf5Q76SB5KR20whlS+zprXl
ch2uynMZRhpeMivCXnkGB+TesVd8x3hSeEZHa2vllvwif0QtVujr8rU8j+Hs
0HeOA8sa5Zw6jMSeky3eL9PjLOrvtj5HLso+eSadWKdvxR35Y2rH+dbX45p8
VR3Ne/JR9eH4PribR+PO8LJcjP3yLDpTJ/bKrD7X5fmMIB2vmBXnNw7oL6sj
mS13oS7pedWsBAfjntCVemQgI5nIzGt+piSH4q7QjfpkiXtpXorDcS/oToPY
V7MG3JDf5zGyxj0yK82RuBf0oGHsjVlDvpEXMJJscY/MynA0zjw9aUT2uDPm
93Aszi29aEwOcpKL3OQhL/nITwEKUojCFKEoxShOCUrG/fHsshyPc05vmvCJ
WSO+lRcyip36LiRirf68Opzscc6YEffPOSkV90cux4m4D/Rhvb41v8bzuZeV
+sZxfuVFHJP7kZbvmURKzxxtbZfcNc4m6/Sl497J5TkZ94O+bNC3ibMhX1ef
YKV8Sh0U79/zMqk/MpX7rH2qNuGmvJgx7NZ3Iwnr9WWYK1fgd77SX1FHkdQz
5+gPyn3iPfOgfqPaNn4+XoOmfKa/l1vyEo7Lj5COx/V71O78Fc+N88KTJPca
G6xfiHtDjjgb+nlqRU7FPeIhNunb8Ue8HqflwWTmfv3n8bljPfZZ/7U6hqXy
CbU/6WPv9GV5T67E6bh7PEwzVpk15Qd5GWPZq+9Bsjg/jGOj+UV1ROynz5FT
vcPM+D2gL2d9vlyZM3Fv6cdm/QP8Ge+Z5nwRn4Hb8rXYM5bLJ9UBxB/FDPGe
mBx7Z7RP7Rl7yCZ9+bizchXOxv3nkNyXVPF96Leo7eO147vQ31DHxufy/FX6
M3L80c9CC/1qtVmcK3kF49iv70UKNusvqY+RK+4BsxL9/3+GCtb+A0u9Alo=

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$6161444#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {
                    Rational[125, 2], 65, 
                    Rational[135, 2], 70, 
                    Rational[145, 2], 75, 
                    Rational[155, 2], 80, 
                    Rational[165, 2]}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{68., 
                    FormBox[
                    TagBox["68", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {70., 
                    FormBox[
                    TagBox["70", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {72., 
                    FormBox[
                    TagBox["72", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {74., 
                    FormBox[
                    TagBox["74", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {76., 
                    FormBox[
                    TagBox["76", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {78., 
                    FormBox[
                    TagBox["78", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {80., 
                    FormBox[
                    TagBox["80", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {67.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {68.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {70.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {72.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {74.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {76.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {78.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {80.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{66., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {68., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {70., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {72., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {74., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {76., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {78., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {80., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {66.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {67., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {67.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {68.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {70.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {72.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {74.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {76.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {78.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {65.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {65., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {80.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{1.5778368*^9, 
                    FormBox[
                    StyleBox["\"1950\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    StyleBox["\"1960\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    StyleBox["\"1970\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    StyleBox["\"1980\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    StyleBox["\"1990\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.4200704*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.5778368*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.7356032*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.0512224*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3667552*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.6823744*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9979072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3135264*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{1.5778368*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}}, PlotRangeClipping -> False, 
                PlotRangePadding -> None, DisplayFunction -> Identity, 
                Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {1.5778368*^9, 64.98603106583764}, 
                FrameTicks -> {{Automatic, {{65., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {70., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {75., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {80., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {60., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {61., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {62., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {63., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {64., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {66., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {67., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {68., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {69., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {71., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {72., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {73., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {74., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {76., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {77., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {78., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {79., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {81., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {82., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {83., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {84., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {85., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{1.2622176*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {1.5778368*^9, 64.98603106583764}, AxesStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{1.2622176*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{1.5778368*^9, 3.7868256*^9}, {
                 64.98603106583764, 80.52988185396146}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{None, None}, {None, None}}, 
                Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1950\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2020\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in years\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox["Right", FontFamily -> "Roboto", FontSize -> 13], 
                    StyleBox[
                    "Center", FontFamily -> "Roboto", FontSize -> 13]}}, 
                    RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
                    Baseline, ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Demographics", "scanner" -> "Data", "id" -> 
     "DemographicProperties:CountryData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Country\", \"UnitedStates\"], \
{EntityProperty[\"Country\", \"Population\"], EntityProperty[\"Country\", \
\"PopulationDensity\"], EntityProperty[\"Country\", \"PopulationGrowth\"], \
EntityProperty[\"Country\", \"LifeExpectancy\"], EntityProperty[\"Country\", \
\"MedianAge\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"population\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["336", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "336", "SRString" -> "336"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Roboto", 
                    FontSize -> 13, LineIndent -> 0}], 1000000& , AutoDelete -> 
                    True]}], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["3", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"3", "\[InvisibleSpace]", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["36.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "36.8", "SRString" -> "36.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"km\"", "2"]}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    "\"people per square kilometer\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], LineIndent -> 0}]}], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["183", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"183", "\[InvisibleSpace]", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population growth\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.298", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.298", "SRString" -> "0.298"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"%\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["171", "\"st\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"171", "\[InvisibleSpace]", "\"st\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"life expectancy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["78.9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "78.9", "SRString" -> "78.9"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["66", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"66", "\[InvisibleSpace]", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2020\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"median age\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["37.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "37.7", "SRString" -> "37.7"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["72", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"72", "\[InvisibleSpace]", "\"nd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                    LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2021\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show rates", "input" -> 
         "DemographicProperties:CountryData__Show rates"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show distribution", "input" -> 
         "DemographicProperties:CountryData__Show distribution"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "DemographicProperties:CountryData__Show non-metric"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "%/yr", "long" -> "percent per year"}, {}]}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["28800", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "28800", "SRString" -> "28800"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"days\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["691200", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "691200", "SRString" -> "691200"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"hours\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"4.147", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"4.147", "\[Times]", 
                    SuperscriptBox["10", "7"]}], "SRString" -> 
                    "4.147 times 10 to the 7"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"minutes\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["7.885", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "7.885", "SRString" -> "7.885"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"average Gregorian decades\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"2.488", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "9"]}], 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"2.488", "\[Times]", 
                    SuperscriptBox["10", "9"]}], "SRString" -> 
                    "2.488 times 10 to the 9"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"seconds\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False, False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "life expectancy", "template" -> 
        "Assuming \"life expectancy\" is international data${separator}Use as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"life expectancy\"} -> {\"CountryProperty\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "CountryProperty", "desc" -> "international data", "input" -> 
          "{\"C\", \"life expectancy\"} -> {\"CountryProperty\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MortalityDataPhrase", "desc" -> 
          " referring to life expectancy data", "input" -> 
          "{\"C\", \"life expectancy\"} -> {\"MortalityDataPhrase\"}"}, \
{}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.0050000000000001", "parsetiming" -> 
    "0.394", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP266514d6hd96g2eh67gi00005987cbc0bec6a0db", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "16", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa266614d6hd96g2eh67gi000057943g0i498587di8350669649384844499", "version" -> 
    "2.6", "inputstring" -> "life expectancy in the US"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 20, 21, 34, 43.2704748`9.388766532544947}, "Line" -> 
    2, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 4,
    5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Input", "Input interpretation", 1, 1, "Input", 
    "Entity[\"Country\", \"UnitedStates\"][EntityProperty[\"Country\", \
\"LifeExpectancy\"]]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "life expectancy in the US"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{403.2, {810., 14.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"742414d8-3088-49dd-bc77-69114b466abe"],

Cell[BoxData[
 TemplateBox[{"78.9`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988488708604603`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"453f891c-906a-48ab-ab7a-8fa428aff318"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<LifeExpectancy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8988489529176035`*^9, 3.898848970439883*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5b2d7032-d01b-46ba-82c3-059ec854dd67"],

Cell[BoxData[
 TemplateBox[{"80.43`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.89884900434776*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"6305a7d6-1f7c-4db2-8118-d7921e70ab3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"\"United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"country\""},
    "Entity"], "[", 
   TemplateBox[{"\"life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LifeExpectancy\\\"]\""},
    "EntityProperty"], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.8988490714844685`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"ec4eeb01-b919-4d5f-bc13-2978b6962075"],

Cell[BoxData[
 TemplateBox[{"78.9`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988490741459637`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9b036185-a0b6-4ac2-b099-866d35c9fc02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", "All", "]"}]], "Input",
 CellChangeTimes->{{3.8988498776919785`*^9, 3.8988498843704033`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c077ecea-2e84-44bf-85f1-a23faff2c789"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Afghanistan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aland Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Albania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Algeria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"American Samoa\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Andorra\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Angola\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Anguilla\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Antigua and Barbuda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Argentina\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Armenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aruba\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Australia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Austria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Azerbaijan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bahamas\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bahrain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bangladesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barbados\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belarus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belgium\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Benin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bermuda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bhutan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bolivia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Caribbean Netherlands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BonaireSintEustatiusAndSaba\""}], "]"}],
      "\"Entity[\\\"Country\\\", \\\"BonaireSintEustatiusAndSaba\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bosnia and Herzegovina\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Botswana\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bouvet Island\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BouvetIsland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"BouvetIsland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brazil\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"British Indian Ocean Territory\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BritishIndianOceanTerritory\""}], "]"}],
      "\"Entity[\\\"Country\\\", \\\"BritishIndianOceanTerritory\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"British Virgin Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"BritishVirginIslands\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brunei\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bulgaria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Burkina Faso\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Burundi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cambodia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cameroon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Canada\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cape Verde\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cayman Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Central African Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chad\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chile\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"China\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Christmas Island\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"ChristmasIsland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cocos Keeling Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Colombia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Comoros\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cook Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Costa Rica\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Croatia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cuba\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Curacao\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyprus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Czech Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Democratic Republic of the Congo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denmark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Djibouti\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dominica\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dominican Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"East Timor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ecuador\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Egypt\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"El Salvador\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Equatorial Guinea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eritrea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Estonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ethiopia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Falkland Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Faroe Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fiji\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Finland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"France\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"French Guiana\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"French Polynesia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"French Southern And Antarctic lands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchSouthernAndAntarcticLands\""}], 
       "]"}], "\"Entity[\\\"Country\\\", \
\\\"FrenchSouthernAndAntarcticLands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gabon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gambia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gaza Strip\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Georgia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ghana\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gibraltar\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greece\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greenland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Grenada\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guadeloupe\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guam\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guatemala\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guernsey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guinea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guinea-Bissau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guyana\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Haiti\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Honduras\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hong Kong\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hungary\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iceland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"India\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indonesia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iran\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iraq\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ireland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Isle of Man\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Israel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Italy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ivory Coast\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jamaica\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Japan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jersey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jordan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kazakhstan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kenya\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kiribati\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kosovo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kuwait\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kyrgyzstan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Laos\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Latvia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lebanon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lesotho\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Liberia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Libya\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Liechtenstein\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lithuania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Luxembourg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Macau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"North Macedonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Madagascar\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malawi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malaysia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Maldives\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mali\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Marshall Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Martinique\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mauritania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mauritius\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mayotte\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mexico\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Micronesia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Moldova\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Monaco\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mongolia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Montenegro\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Montserrat\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Morocco\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mozambique\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Myanmar\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Namibia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nauru\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nepal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Netherlands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Caledonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Zealand\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nicaragua\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Niger\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nigeria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Niue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norfolk Island\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorfolkIsland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"NorfolkIsland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Northern Mariana Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"NorthernMarianaIslands\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"North Korea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norway\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oman\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pakistan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Palau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Panama\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Papua New Guinea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Paraguay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Peru\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Philippines\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pitcairn Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PitcairnIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"PitcairnIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portugal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Puerto Rico\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Qatar\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Republic of the Congo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"R\[EAcute]union\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Romania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Russia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rwanda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Barthelemy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintBarthelemy\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintBarthelemy\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Helena, Ascension and Tristan da Cunha\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Kitts and Nevis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Lucia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Martin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintMartin\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintMartin\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Pierre and Miquelon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintPierreMiquelon\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Vincent and the Grenadines\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaintVincentGrenadines\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Samoa\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Marino\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saudi Arabia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Senegal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Serbia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seychelles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sierra Leone\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Singapore\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sint Maarten\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovakia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Solomon Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Somalia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Africa\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Georgia and the South Sandwich Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Country\"", ",", "\"SouthGeorgiaAndTheSouthSandwichIslands\""}], 
       "]"}], "\"Entity[\\\"Country\\\", \
\\\"SouthGeorgiaAndTheSouthSandwichIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Korea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Sudan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sri Lanka\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sudan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Suriname\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Svalbard\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Svalbard\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Svalbard\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eswatini\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sweden\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Switzerland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Syria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Taiwan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tajikistan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tanzania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Thailand\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Togo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tokelau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tokelau\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tokelau\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tonga\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Trinidad and Tobago\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tunisia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turkey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turkmenistan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turks and Caicos Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tuvalu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uganda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ukraine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United Arab Emirates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United Kingdom\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States Minor Outlying Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStatesMinorOutlyingIslands\""}], 
       "]"}], "\"Entity[\\\"Country\\\", \\\"UnitedStatesMinorOutlyingIslands\
\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States Virgin Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"UnitedStatesVirginIslands\\\"]\"", 
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uruguay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uzbekistan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vanuatu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vatican City\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Venezuela\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vietnam\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wallis and Futuna Islands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"West Bank\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Western Sahara\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Yemen\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zambia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zimbabwe\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", "\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8988499267450895`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"0436a9f7-043d-4f3a-a98a-1de7a1ed041f"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "All", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8988492909572735`*^9, 3.898849343357649*^9}, {
  3.8988497369110093`*^9, 3.8988497770294223`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8be6782c-7169-4f10-abfc-120be1f14557"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.8988498287925596`*^9, 3.8988498333484225`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d80aedca-c761-4233-8eb9-30471062cab8"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Afghanistan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"53.25`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Albania\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"79.23`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Algeria\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"77.79`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"American Samoa\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"75.06`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Andorra\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.23`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Angola\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"61.71`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Anguilla\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"82", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Antigua and Barbuda\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"77.55`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Argentina\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"78.07`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Armenia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"75.86`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "214", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Uzbekistan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"75.03`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Vanuatu\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"74.87`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Venezuela\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"72.22`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Vietnam\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"75.25`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Wallis and Futuna Islands\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"80.45`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"West Bank\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"76.12`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Western Sahara\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"63.8`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Yemen\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"67.18`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Zambia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"65.92`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Zimbabwe\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"62.83`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.898849925547961*^9},
 CellLabel->
  "Out[6]//Short=",ExpressionUUID->"f6f277b0-e76a-46f8-b63e-db1ae6325295"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{"data", ",", "Last"}], "]"}], "//", "Short"}]], "Input",
 CellChangeTimes->{{3.8988499422934427`*^9, 3.89884996220217*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"9df60db4-b67f-4ee0-9906-f5663cd669c8"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Afghanistan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"53.25`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Central African Republic\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"", 
        "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"55.07`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Somalia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"55.32`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Mozambique\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"56.49`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"South Sudan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"58.6`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Chad\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"58.73`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Lesotho\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"58.9`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Eswatini\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"59.13`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Niger\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"59.7`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Sierra Leone\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"60.19`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "214", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Israel\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.15`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Andorra\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.23`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Hong Kong\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.41`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Iceland\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.45`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.62`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"San Marino\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"83.68`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Japan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"84.65`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Macau\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"84.81`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Singapore\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"86.19`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"Monaco\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"", "\"country\""},
       "Entity"], ",", 
      TemplateBox[{"89.4`", "\"yr\"", "years", "\"Years\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.8988500206098547`*^9},
 CellLabel->
  "Out[8]//Short=",ExpressionUUID->"0b42c517-9044-46f0-ad18-09a18145a23c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.898850075755459*^9, 3.898850084912182*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ee391377-7dc5-447a-8258-50c0db64db34"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.63], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.63], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {55., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{14.006714530071292`, 44.346300505980935`}, {
           67.64784569088083, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0}, {60., 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{43.98630050598092, 74.32588648189056}, {
           55.2383905270465, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0}, {65., 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{73.96588648189055, 104.30547245780018`}, {
           41.056156054092995`, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0}, {70., 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{103.94547245780018`, 134.28505843370988`}, {
           10.918907799066794`, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0}, {75., 42.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.92505843370986`, 
           164.2646444096195}, {-5.0361059830059105`, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 42]& ,
        TagBoxNote->"42"],
       StyleBox["42", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[42, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0}, {80., 81.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{163.9046444096195, 
           194.24423038552914`}, {-74.17449903865426, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 81]& ,
        TagBoxNote->"81"],
       StyleBox["81", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[81, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0}, {85., 51.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{193.88423038552912`, 
           224.22381636143876`}, {-20.991119765078594`, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 51]& ,
        TagBoxNote->"51"],
       StyleBox["51", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[51, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0}, {90., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{223.86381636143875`, 254.20340233734845`}, {
           65.87506638176164, 69.78062500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{49.2, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{50., 90.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898850097847836*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"645f20d3-e139-43f1-a0eb-0499769d71f2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataAfrica", "=", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "\"\<Africa\>\"", "]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.898850106773881*^9, 3.8988501800790653`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e84393d2-cb1b-4759-90e8-cbd790d53f10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meanAfrica", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"dataAfrica", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8988501838812227`*^9, 3.898850196402751*^9}, {
  3.8988502285670805`*^9, 3.898850234606969*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9dabc949-b659-4f3b-a7fe-8218fb9881ae"],

Cell[BoxData[
 TemplateBox[{"66.45872413793104`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898850197930718*^9, 3.89885023606546*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"0279b8ea-c16f-41f1-adc4-87b22a09eff5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataAsia", "=", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "\"\<Asia\>\"", "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.898850209799225*^9, 3.8988502256079607`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a454a009-a5f1-449e-9a91-4741087456eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meanAsia", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"dataAsia", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.898850242082183*^9, 3.8988502713510265`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f4807bd6-128f-49a3-86fd-8e3363d311ae"],

Cell[BoxData[
 TemplateBox[{"74.82566037735849`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8988502635875173`*^9, 3.898850272477497*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"5769b9e0-2b13-4c69-88b5-143c7c4c4f91"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataEurope", "=", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "\"\<Europe\>\"", "]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8988502827466965`*^9, 3.8988502954079227`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f91caf62-df13-47af-94be-739a6ccdabd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meanEurope", " ", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{"dataEurope", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8988502989628096`*^9, 3.8988503147454853`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e7a76040-238f-45b8-952a-3a0355e095fb"],

Cell[BoxData[
 TemplateBox[{"79.97102040816327`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898850316057075*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"18b739db-eba0-4be8-a109-4a008956af73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"meanAfrica", ",", "meanAsia", ",", "meanEurope"}], "}"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Africa\>\"", ",", "\"\<Asia\>\"", ",", "\"\<Europe\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988503200211143`*^9, 3.8988503945065393`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e98274a1-f990-4749-abef-95f7bae5f6d9"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.4116533139111435, 0.}, {4.35360524399126, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 66.45872413793104},
          RoundingRadius->0],
         StatusArea[#, 66.45872413793104]& ,
         TagBoxNote->"66.45872413793104"],
        StyleBox["66.45872413793104`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[66.45872413793104, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 74.82566037735849},
          RoundingRadius->0],
         StatusArea[#, 74.82566037735849]& ,
         TagBoxNote->"74.82566037735849"],
        StyleBox["74.82566037735849`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[74.82566037735849, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 79.97102040816327},
          RoundingRadius->0],
         StatusArea[#, 79.97102040816327]& ,
         TagBoxNote->"79.97102040816327"],
        StyleBox["79.97102040816327`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[79.97102040816327, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.4116533139111435, 0.}, {4.430862345229425, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{3.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.4512017479970867`, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Africa\"\>", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Asia\"\>", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Europe\"\>", Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4116533139111435, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.8988503805421257`*^9, 3.898850395950553*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"cea7962d-4344-45d2-b3a9-e84769d17e3a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataSA", "=", 
   RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "\"\<SouthAmerica\>\"", "]"}]}], "}"}]}],
       "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8988504069880295`*^9, 3.8988504314522305`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"baa1b09f-59f4-43fb-9687-f3c20436da79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"dataSA", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988504355378957`*^9, 3.8988504419598637`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"658b352c-8b92-45b4-a1c5-931d60231a22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Argentina\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", "\"country\""},
      "Entity"], ",", 
     TemplateBox[{"78.07`", "\"yr\"", "years", "\"Years\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Bolivia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"country\""},
      "Entity"], ",", 
     TemplateBox[{"70.7`", "\"yr\"", "years", "\"Years\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Brazil\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""},
      "Entity"], ",", 
     TemplateBox[{"74.98`", "\"yr\"", "years", "\"Years\""},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8988504430389605`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"7e923912-8848-4441-bbce-a9002369c8d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"dataSA", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"dataSA", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
   RowBox[{"BarOrigin", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898850452870075*^9, 3.8988504863856096`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"e8e316a6-3a8d-455c-a0a6-bc715ff05628"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., 0.28711985688729885`}, {0., 14.435461676069906`}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 0.5645383239300951}, {78.07, 1.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 78.07]& ,
         TagBoxNote->"78.07"],
        StyleBox["78.07`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[78.07, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 1.564538323930095}, {70.7, 2.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 70.7]& ,
         TagBoxNote->"70.7"],
        StyleBox["70.7`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[70.7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 2.564538323930095}, {74.98, 3.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 74.98]& ,
         TagBoxNote->"74.98"],
        StyleBox["74.98`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[74.98, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 3.564538323930095}, {79.57, 4.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 79.57]& ,
         TagBoxNote->"79.57"],
        StyleBox["79.57`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[79.57, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 4.564538323930095}, {76.91, 5.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 76.91]& ,
         TagBoxNote->"76.91"],
        StyleBox["76.91`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[76.91, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 5.564538323930095}, {77.76, 6.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 77.76]& ,
         TagBoxNote->"77.76"],
        StyleBox["77.76`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[77.76, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 6.564538323930095}, {77.9, 7.435461676069905},
          RoundingRadius->0],
         StatusArea[#, 77.9]& ,
         TagBoxNote->"77.9"],
        StyleBox["77.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[77.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 7.564538323930095}, {77.121, 8.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 77.121]& ,
         TagBoxNote->"77.121"],
        StyleBox["77.121`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[77.121, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 8.564538323930096}, {71.59, 9.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 71.59]& ,
         TagBoxNote->"71.59"],
        StyleBox["71.59`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[71.59, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 9.564538323930096}, {78.13, 10.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 78.13]& ,
         TagBoxNote->"78.13"],
        StyleBox["78.13`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[78.13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 10.564538323930096}, {74.96, 11.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 74.96]& ,
         TagBoxNote->"74.96"],
        StyleBox["74.96`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[74.96, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 11.564538323930096}, {73.57, 12.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 73.57]& ,
         TagBoxNote->"73.57"],
        StyleBox["73.57`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[73.57, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 12.564538323930096}, {78.19, 13.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 78.19]& ,
         TagBoxNote->"78.19"],
        StyleBox["78.19`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[78.19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{0., 13.564538323930096}, {72.22, 14.435461676069906},
          RoundingRadius->0],
         StatusArea[#, 72.22]& ,
         TagBoxNote->"72.22"],
        StyleBox["72.22`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[72.22, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0., 0.28711985688729885`}, {0., 14.71842851245356}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0., 0.5645383239300951}, 
           Offset[{-6., 0.}, {0., 0.5645383239300951}]}], 
         LineBox[{{0., 14.435461676069908`}, 
           Offset[{-6., 0.}, {0., 
            14.435461676069908`}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {
           LineBox[{{0., 1.435461676069905}, 
             Offset[{-4., 0.}, {0., 1.435461676069905}]}], 
           LineBox[{{0., 1.564538323930095}, 
             Offset[{-4., 0.}, {0., 1.564538323930095}]}], 
           LineBox[{{0., 2.435461676069905}, 
             Offset[{-4., 0.}, {0., 2.435461676069905}]}], 
           LineBox[{{0., 2.564538323930095}, 
             Offset[{-4., 0.}, {0., 2.564538323930095}]}], 
           LineBox[{{0., 3.435461676069905}, 
             Offset[{-4., 0.}, {0., 3.435461676069905}]}], 
           LineBox[{{0., 3.564538323930095}, 
             Offset[{-4., 0.}, {0., 3.564538323930095}]}], 
           LineBox[{{0., 4.435461676069905}, 
             Offset[{-4., 0.}, {0., 4.435461676069905}]}], 
           LineBox[{{0., 4.564538323930095}, 
             Offset[{-4., 0.}, {0., 4.564538323930095}]}], 
           LineBox[{{0., 5.435461676069905}, 
             Offset[{-4., 0.}, {0., 5.435461676069905}]}], 
           LineBox[{{0., 5.564538323930095}, 
             Offset[{-4., 0.}, {0., 5.564538323930095}]}], 
           LineBox[{{0., 6.435461676069905}, 
             Offset[{-4., 0.}, {0., 6.435461676069905}]}], 
           LineBox[{{0., 6.564538323930095}, 
             Offset[{-4., 0.}, {0., 6.564538323930095}]}], 
           LineBox[{{0., 7.435461676069905}, 
             Offset[{-4., 0.}, {0., 7.435461676069905}]}], 
           LineBox[{{0., 7.564538323930095}, 
             Offset[{-4., 0.}, {0., 7.564538323930095}]}], 
           LineBox[{{0., 8.435461676069906}, 
             Offset[{-4., 0.}, {0., 8.435461676069906}]}], 
           LineBox[{{0., 8.564538323930098}, 
             Offset[{-4., 0.}, {0., 8.564538323930098}]}], 
           LineBox[{{0., 9.435461676069908}, 
             Offset[{-4., 0.}, {0., 9.435461676069908}]}], 
           LineBox[{{0., 9.564538323930098}, 
             Offset[{-4., 0.}, {0., 9.564538323930098}]}], 
           LineBox[{{0., 10.435461676069908`}, 
             Offset[{-4., 0.}, {0., 10.435461676069908`}]}], 
           LineBox[{{0., 10.564538323930098`}, 
             Offset[{-4., 0.}, {0., 10.564538323930098`}]}], 
           LineBox[{{0., 11.435461676069908`}, 
             Offset[{-4., 0.}, {0., 11.435461676069908`}]}], 
           LineBox[{{0., 11.564538323930098`}, 
             Offset[{-4., 0.}, {0., 11.564538323930098`}]}], 
           LineBox[{{0., 12.435461676069908`}, 
             Offset[{-4., 0.}, {0., 12.435461676069908`}]}], 
           LineBox[{{0., 12.564538323930098`}, 
             Offset[{-4., 0.}, {0., 12.564538323930098`}]}], 
           LineBox[{{0., 13.435461676069908`}, 
             Offset[{-4., 0.}, {0., 13.435461676069908`}]}], 
           LineBox[{{0., 13.564538323930098`}, 
             Offset[{-4., 0.}, {0., 13.564538323930098`}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TemplateBox[{"\"Argentina\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 1.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Bolivia\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 2.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Brazil\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 3.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Chile\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 4.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Colombia\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 5.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Ecuador\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 6.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Falkland Islands\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\""},
            "EntityTraditionalFramed"], Offset[{-2, 0}, {0., 7.}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"French Guiana\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 8.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Guyana\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 9.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Paraguay\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 10.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Peru\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 11.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Suriname\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 12.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Uruguay\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 13.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}], InsetBox[
           TemplateBox[{"\"Venezuela\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
             "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\""},
            "EntityTraditionalFramed"], 
           Offset[{-2, 0}, {0., 14.000000000000002}], NCache[
           ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.28711985688729885`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.898850491772271*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"73c6b37e-9009-4af2-924e-dacd87194b60"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Tooltip", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}], ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<GDP\>\""}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CountryData", "[", 
        RowBox[{"i", ",", "\"\<Name\>\""}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"CountryData", "[", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8988505069574766`*^9, 3.8988506403211384`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"84bb08f3-f827-4fe1-98b5-395bb557c1fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<LifeExpectancy\>\"", ",", "\"\<GDP\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.898850677219491*^9, 3.898850703417596*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"3da1cf4a-83e0-4a4a-80e6-8c59830b4960"],

Cell[BoxData[
 GraphicsBox[{{}, {
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], PointBox[CompressedData["
1:eJxFV2k4lV0blRSVeHZFGSMalBJneM6AlkyZUsjU+JKSRDkpGkXzLFKSVGhA
ZTgpisorhZQGmSqk0hwyVvTt78fn+3Guc+1rn/Pce99r3WutR9cn2MVPVkZG
poV+/vutM0rvQvkjZayKZvtir7Nwn6d83n4rQX/d2AW9ASzkFe97RwYQRNfn
87bmCBF1Z7bpN2sCpzCDTnUbLm7E7erJu0b3r+jpixp4yPUJ2eyzlcFvDaOQ
7joB/BIvyG4+S7DV0CTF8B4Hv33C3TxXEujofTBUGMVDcYSCeGYQwdjLKS/e
p4vAtk9Z/XAegf53RVfpbBbfXP6aatH6KQsa4md/5qHhUuuHvekEt06qbbz5
WYyby62yvc8RTF/V569YJoJkXphfDo/g3/bQyIxwAdbE/On5TJ83t4oxua/P
4lJlk39XJMHtWisJu0yA9R52OQ5mBEqJE7XZHSKUrzN/47aOwOJg1PYgEz5e
F+lZRrAEYeNNlvk/E6Cn0PW62mmC9KO+Pc+7RSh+mJuR50hQm+FXvcqeh2HS
eE/edgaP/aznOIWzCL2m9sv7DIG1rVLamtt8HFUPj542hsA4P0bb8hQPphcq
OlIVCPyvGp73dRVgnafV49pVBF0ZdVYeFI+FQ59f98xlcOnRu4mBm1kknDuY
WWVFwI5q+JT/V4yWyv17ZCII7v+s3nPzNxczf/dO0wgmUF+dGHiex0JdkKpq
YkfXFbPUN3UKcLA5Q3IghoGWV39rRwyLkbMcrmY8YxB2uXTavhYefF/tHuVb
wsBvwRfbyR0sfCfIJU86wkCl383XzF8A39pNoVFSgj8j+idW6piiwuT7UZmZ
BHrZi84fsuAhvz1BdjO9b1ncmzLpTj6SoqUlTxQYHJoyXS/vMA8ntxyJzbFn
sG52yak+BRbVRkFTr+wgCHDROJtiIcK66p31L90JjkXzzw91MUeC0db2+iUE
7nVPzc+6ihCUWes7upLB5IO5Rn+/cJFd0F58gu5vKrx/oOYuB7ske6IStxN8
uLLE+Ea1AA6r3i29tJRgWYe67bY7goH9RKONysH/CKH+rQclWwgcV6g4tdXx
oCafs7qF9tNIzzAg5R2LurGvQ0roWgefn1cLRdC5/XdBfhjt3xVLl65zArRo
N1fExROck2oqcOJFCDWIjTmWzWDzQ9V+yzYebIwiTxcGEnw3t8p91M3BueF5
VbbjCXzDTuqIx9L61jdPvO1hYNLMOsa78Ab4Hv/78w7Z+cIB/j38U65geIbe
P6X+UYINwZwqD/6Gbyx0/d3ckx4wMLSYhunyLGas2pKnWsYgeHrUMyt/Hry6
yxJX+BPM7HzP954owGDBiZdWDQyan/gval0hhMmQHw86VtP+Wuw5tybMBMHf
Mz6sjiUIdSyU73zFg1b6n5eLaP15m2OmKHL4mF6vvL7mFIHz3vMFWi4iROq7
v3RPJXDLnHJfO94UcyqcJ6b9QzCoyi0ryoCHl4Mz6osoHw24WWurKR+6KhyP
cDoZ5Dc+XecZxiK9b1nnnmLK70ku8rcW81DOFmyWs6V6scRYGhvKBafE2mqZ
L4HXoHBDzlYW5rsb43JO0PMGHK/1/2UKucryUw0/GIischeaDRLC+arl3rv7
CM43K2W3P+Pi7M4PYyX0910P1SfEdwuRM1wrwoNDsPvWhKn+L3i4r/XkV7ID
wfGTPeXyT7hwLzn63jyG9it1SP+TX7z/11dt3ffwKB+fBMsnivQJ+KfsjAxH
C6EsENhZXiHY23jS8Z9bPHyp7xsyKYHB2JG2uQ/p/PcpGR4sjaP4jp+uMEyF
hyN7FBeEqlA9OmP5TRTIh0xWilDvNgP/+bd2vZ3PYiVnXU2BJdUXv6Eq7yn/
xpV8sW/NIvj0ddJw22Mi1AR0zlpO+cwr6nZxKBaiMayud002QV7vLxhUsJAM
N3r1vp+BbmTqw5UnTTE3sVGuZRLBxz6LstGZ4gH97ra99z37lxBD6qbUDZ1C
sM+r4LG0WjjA58NxlfFDH4gG5vmO7orAbKpfG5IGNRVcJSiYpdzC3hQh5NV0
tvISQc0Pxa9DrEzh06awu3EbxSOGJP59KYDzxanXS2h/54zrNnbyYiFr35Cn
eI/gSNOzTAdTMxxPjRj9kvKHF5pUb+bNR1igwlBHZwLuzp15+hEC9LeKZeu1
KX9q3Qwy6oX48CXpwIYOBq9qStPV6Hz8vSJjfbyOgfWXoNcnNDnQMI+0szcg
kDrofS28y0fe9vbtcuEUz/YtIVOT6TzV/lFz0iRYr/+z7kMxHxf07Ou4RQyM
Hh54VJTB4ktNW36bEwEJ0b49yZTqxWl5e+56Ao0nraWsWICbVmvtLjsxeHJM
1Ne0gIfNRalHJ0oZrPp3qLVXDQ+Sxq0aOhQfuarDqms7WcxSVlnSnUL1XRLd
UZHMx77ALJWV9PlKbe4eulSPmic4lxmmEfSIpjNr5YRYPlbuzu8iOm/S1BHp
1wWwCbjYHedNMF+xOferiMUHgczitDe0PisyPenB4lre3NmxWrRf7Xz1TVx2
wO+OHepPrN5P5zM+cPC3hQSxNtt0erX4+M44lHtFMvjoFDTGJZZF5DufQ+8y
aD9Gqt1y9WfhVGS9P8GUwETy94WCHQe6Q64rqFI+DP92xqtsLx/mu3Z7Lc5k
QGSdXeeW8KFqvctYeRFB6b6C1bJa7ICemubnKI/v4qD8rv2M2bQfHc9TVRdI
xRDIGC3NFRI4XL7sFV/NGTi/3J3CCxIOi+Ti8rMdPQRb5hi7LcrnwyrAxEBP
iZ7nVenEMEcWwwaNUHm6guCpYcy1GDv+AL+Sf+sOshlqgjQFh20WxgRa39zb
RkmE+OV0KqZpAoPWogb/iYvZAb0dNzk2P0RJCMmZJ3+N7jLoOBRc/mMsC2VR
9clh9QyGZT6NXik1QahJZ4ssPV/Z5yZvZzMBhkfratcnEXS6LknZvF8MmVMW
EX8oP9QDdUfuGszCcs/XVyco3q3mGDRuNM0TsXud/cxpPuIVfGJpnin09a8L
X0jxO2yzosKd4jc7+qJXMNXjiLnVNTS/3B2Sc0jDg+Be2gHVrmYuovY9b5un
Sv1skrzKzJ0sDpp676umz19v+NGsNJH6gdazEbMpvqZdy/Vb6X3+p68Xf8/a
5uAoGsDTYtwDx3QJB7vH/NnhS/1s9yg2AFkCTLayzfP/w+BE5a03Hm9ZLDXQ
T+qleeys12XJfjsBZFoy7x2heSO38rXZWAURVvOypusOJng2Pl2sROv/bz70
jg1PsdIUwznqvUcM1Vu/2xf2pk0VIUrPf2o15Y/q6/AtfQuFuGhTrfGY+v11
H7XRideF0FaaFjmS5sVghebi+ZosBpuXrrlI85lHWujHK3RNLHIipDQPPOve
X+VmJhrgC+fSXMPIoaboa2x00MineqvzwEJemcX53vRPvvup/4SoSKXSmThR
NUq3fDHVKz+LiY2pXMxiAzce3EDxGptRHEHzSly4x8+1cQSRO+IvLs8yRorO
/n9DPAlEslaLNKO4UKtOrhpM7z/ip6ahdSQXzYN+bpl1naBNuIxXYczDjdH7
tedXMHikF/ZV0stBuhtTO4L+f03am+M2NmKc/6wv05vE4OswvsCmlYXmIpHV
TDrPl1B1bSHtv/sgWccoOq+R5pHuDtVcpBfIZ9T4Mih0cgqaPZqPWzf0f0Q+
p/eNKQxefEiEtSIRkW4i2DUtc4LkFncgP1+ZkH54z1IhzMZ8RnwCgUyr0wgf
qQCtUk3vG/Q8tvm/mMPUjzOOvNCVjKR6J+Ov/2UeH2uykms4OTTPxA372hkk
GtAjH4P3c3K0TXGTmXAlaA6DoBE/N6i78sFN096ulkwwpi2hTKFJjNffjXb/
pnnVc+q9u1wtIVbvOD1o+WMGyzdPcJv/h+aT9qs6fnQekzw6RkuU+ah/rdZ+
YT6DRLkDeefV+Cha5Dm5/SL1Z3X9GU5y4gE/vSz/2IXjIR7IP98TJQ4Nt1kM
GX759Bzqz/plu+Le6omh6HpvY2Irg369hBvnnvNx4tHIB/2Uz8mHQnf51gvw
84D40jY/gqrOdO/BbSJ479stX61IIFByPb7jDh8lp7k9LdTfW2TvJfwe8X+8
T6VNvfG9jL4PLZuxw4XipaWt0hW9XIAPhjL3dF0IvIt1ejY5iSFy9ptRSPN8
UXvukd69AuzreX+r5jDlb+k2TRXKt6SaOo8XTQzswhQmu0iNkf32wJjwTwyU
zO1va3oKsPPNktKf02jeur5uk/i+EJUGtsFqNJ9iU+/oKcWigbyzotBn+MGz
FI8taWbXDtL8pWNvNTXDHH+z/B9U7SFYWpm2cYgGfyBv+dhk/omm+DddebJ2
J/X79oppkgUPBFhhlfHcjeaL2qDjaX1Hudj6wlAviPqrk27xvRdnhdDbVtMV
NYf637iC3BCat8OzNVe30noSxybLrx+NEeN8yNPOjSDELn7es400j5k1Wnq/
YOAWqn56N+W3fUDDxy6qp/8WikN511g0T82NraDvD0a/Hr9r38/iPzYzCPY=

       "]]},
     Annotation[#, "Charting`Private`Tag#1"]& ], {
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{3.9749978045895347`, 23.709304643694313`}}]},
       "\"Afghanistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Afghanistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.372355014977151, 23.417867010425645`}}]},
       "\"Albania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Albania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.354012888218683, 25.70112930118518}}]},
       "\"Algeria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Algeria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.318287793706875, 20.273848841309064`}}]},
       "\"American Samoa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "American Samoa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.421607859758004, 21.871980913839767`}}]},
       "\"Andorra\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Andorra", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.122445992332976, 24.85533822679643}}]},
       "\"Angola\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Angola", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.406719247264253, 19.754587423562487`}}]},
       "\"Anguilla\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Anguilla", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.350922889622548, 21.070437246499864`}}]},
       "\"Antigua and Barbuda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Antigua and Barbuda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3576058601322, 26.671475687218017`}}]},
       "\"Argentina\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Argentina", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3288895362607525`, 23.26056403222732}}]},
       "\"Armenia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Armenia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353627160152183, 21.9150787515879}}]},
       "\"Aruba\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Aruba", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.417514427603435, 27.916877216099902`}}]},
       "\"Australia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Australia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.4075725416416205`, 26.789251863353616`}}]},
       "\"Austria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Austria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.302442155331039, 24.475288537784547`}}]},
       "\"Azerbaijan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Azerbaijan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.329021349349984, 23.14363396559684}}]},
       "\"Bahamas\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bahamas", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3778931033922746`, 24.3758461039631}}]},
       "\"Bahrain\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bahrain", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309859086371819, 26.504747280295355`}}]},
       "\"Bangladesh\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bangladesh", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.360675308762846, 22.196998567215136`}}]},
       "\"Barbados\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Barbados", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, 24.82190514777855}}]},
       "\"Belarus\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belarus", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.402441819416474, 26.9680781596259}}]},
       "\"Belgium\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belgium", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324927042633309, 21.29067751152329}}]},
       "\"Belize\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belize", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.124226936703971, 23.47383548445014}}]},
       "\"Benin\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Benin", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.4046439245392905`, 22.736048344121873`}}]},
       "\"Bermuda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bermuda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.269697449699962, 21.602586661401975`}}]},
       "\"Bhutan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bhutan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.258445572902527, 24.32573903647281}}]},
       "\"Bolivia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bolivia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353369925424077, 23.70836286867867}}]},
       "\"Bosnia and Herzegovina\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bosnia and Herzegovina", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.178072777752813, 23.482118957862127`}}]},
       "\"Botswana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Botswana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.317221411307766, 27.998945824585658`}}]},
       "\"Brazil\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Brazil", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375002019736917, 20.98328446409484}}]},
       "\"British Virgin Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "British Virgin Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.358502089626924, 23.20950964778158}}]},
       "\"Brunei\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Brunei", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.321480134805848, 24.95889438684126}}]},
       "\"Bulgaria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bulgaria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.144086654116915, 23.577956258866028`}}]},
       "\"Burkina Faso\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Burkina Faso", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.205736850111646, 21.904436814054378`}}]},
       "\"Burundi\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Burundi", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.193737306100135, 23.953724379496084`}}]},
       "\"Cambodia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cambodia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.139795825126018, 24.407186706781506`}}]},
       "\"Cameroon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cameroon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.426282725928419, 28.12817609264674}}]},
       "\"Canada\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Canada", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.296877159632186, 21.2560674167927}}]},
       "\"Cape Verde\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cape Verde", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.404766121643371, 22.51838367399504}}]},
       "\"Cayman Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cayman Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.00860510327439, 21.55751247265339}}]},
       "\"Central African Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Central African Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.072950669534428, 23.035119698909003`}}]},
       "\"Chad\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Chad", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3766371373894435`, 26.256418234510797`}}]},
       "\"Chile\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Chile", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.334803991301542, 30.32041372139208}}]},
       "\"China\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "China", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342635907068963, 26.326663900598156`}}]},
       "\"Colombia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Colombia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.203198967134183, 20.921862585131887`}}]},
       "\"Comoros\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Comoros", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342375829044089, 19.753304229523998`}}]},
       "\"Cook Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cook Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.37462430490712, 24.84263905107027}}]},
       "\"Costa Rica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Costa Rica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343415735546226, 24.74802059562751}}]},
       "\"Croatia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Croatia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.37462430490712, 25.38060089740576}}]},
       "\"Cuba\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cuba", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.371850028222321, 21.855244462704192`}}]},
       "\"Curacao\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Curacao", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375882799913392, 23.893133769775144`}}]},
       "\"Cyprus\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cyprus", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375757021660286, 26.225949520769177`}}]},
       "\"Czech Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Czech Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.117898315175836, 24.632664815447345`}}]},
       "\"Democratic Republic of the Congo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Democratic Republic of the Congo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399989335048054, 26.598434931762885`}}]},
       "\"Denmark\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Denmark", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.174387269895637, 21.94244373375157}}]},
       "\"Djibouti\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Djibouti", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.35619587463936, 19.967967406903817`}}]},
       "\"Dominica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Dominica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.280547465724028, 25.09074596140307}}]},
       "\"Dominican Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Dominican Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.243051882383293, 21.322651637691884`}}]},
       "\"East Timor\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "East Timor", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353627160152183, 25.3164445112885}}]},
       "\"Ecuador\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ecuador", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, 26.617859411050432`}}]},
       "\"Egypt\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Egypt", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.31895370569792, 23.927585026210437`}}]},
       "\"El Salvador\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "El Salvador", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.194943760778217, 23.02803422027607}}]},
       "\"Equatorial Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Equatorial Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.19735231229633, 21.40730014517379}}]},
       "\"Eritrea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Eritrea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.351953950417589, 24.145907813207657`}}]},
       "\"Estonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Estonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.21803603456465, 25.402105117405778`}}]},
       "\"Ethiopia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ethiopia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.355425952876702, 18.47042283584718}}]},
       "\"Falkland Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Falkland Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.394942859940428, 21.863113864860185`}}]},
       "\"Faroe Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Faroe Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.30406509320417, 22.199404273992798`}}]},
       "\"Fiji\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Fiji", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.401216329067023, 26.32076630800321}}]},
       "\"Finland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Finland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411464070327499, 28.59812576526049}}]},
       "\"France\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "France", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.345375617023201, 21.162165721140813`}}]},
       "\"French Guiana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "French Guiana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.359141762136423, 22.518912356627116`}}]},
       "\"French Polynesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "French Polynesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.23945449739721, 23.47009955762835}}]},
       "\"Gabon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gabon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.191924890560965, 21.36613507991447}}]},
       "\"Gambia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gambia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.319353040145823, 20.459300291111948`}}]},
       "\"Gaza Strip\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gaza Strip", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.347046915777855, 23.48906209902029}}]},
       "\"Georgia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Georgia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398146016553765, 28.978162383058894`}}]},
       "\"Germany\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Germany", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.234251421632511, 25.004842502592716`}}]},
       "\"Ghana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ghana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.384523514872469, 20.824015740046555`}}]},
       "\"Gibraltar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gibraltar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.397899983830172, 25.967180377520855`}}]},
       "\"Greece\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Greece", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.300138475201197, 21.829714425544374`}}]},
       "\"Greenland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Greenland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.32386772050035, 20.8087127191471}}]},
       "\"Grenada\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Grenada", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.393794619523382, 21.9797362102301}}]},
       "\"Guadeloupe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guadeloupe", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.347046915777855, 22.565559979548514`}}]},
       "\"Guam\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guam", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.285378059618076, 25.074892955273945`}}]},
       "\"Guatemala\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guatemala", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.419201988273939, 21.731953418086533`}}]},
       "\"Guernsey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guernsey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.1515122352784415`, 23.47571887240073}}]},
       "\"Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.147253217877503, 21.08216906644447}}]},
       "\"Guinea-Bissau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guinea-Bissau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.270955399408094, 22.422774151810067`}}]},
       "\"Guyana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guyana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.1837281233567865`, 23.31986270735925}}]},
       "\"Haiti\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Haiti", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316153890523174, 23.894120515882303`}}]},
       "\"Honduras\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Honduras", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.42376820625352, 26.57139647913292}}]},
       "\"Hong Kong\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hong Kong", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343155860284888, 25.76677435444636}}]},
       "\"Hungary\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hungary", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.424247650107844, 23.80141073348361}}]},
       "\"Iceland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iceland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.248923721667427, 28.5953336147378}}]},
       "\"India\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "India", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.287990642747287, 27.68780197249535}}]},
       "\"Indonesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Indonesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.318287793706875, 25.979292795360347`}}]},
       "\"Iran\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iran", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.289088639014612, 25.842602654674497`}}]},
       "\"Iraq\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iraq", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399989335048054, 26.777444470810728`}}]},
       "\"Ireland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ireland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.404766121643371, 22.73709752553418}}]},
       "\"Isle of Man\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Isle of Man", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.420646205638937, 26.71960300562181}}]},
       "\"Israel\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Israel", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.414856779264584, 28.265715363653584`}}]},
       "\"Italy\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Italy", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.123903364463645, 24.83983785323219}}]},
       "\"Ivory Coast\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ivory Coast", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324000197151533, 23.34883415491666}}]},
       "\"Jamaica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jamaica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.438525108579144, 29.235529948696747`}}]},
       "\"Japan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Japan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411949448325136, 22.35250637667669}}]},
       "\"Jersey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jersey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.327438444389479, 24.500560374119416`}}]},
       "\"Jordan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jordan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2801323269925415`, 25.858095725264466`}}]},
       "\"Kazakhstan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kazakhstan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.238733464847405, 25.31679795911701}}]},
       "\"Kenya\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kenya", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.213460043112263, 19.11169227560028}}]},
       "\"Kiribati\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kiribati", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2903224454635405`, 22.752913244835966`}}]},
       "\"Kosovo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kosovo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.368181227851829, 25.637366443161397`}}]},
       "\"Kuwait\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kuwait", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.27763786893635, 22.769147571907936`}}]},
       "\"Kyrgyzstan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kyrgyzstan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.189654742026425, 23.674847396971185`}}]},
       "\"Laos\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Laos", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.326117440234365, 24.234966046746255`}}]},
       "\"Latvia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Latvia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.363480717386783, 24.231320019999753`}}]},
       "\"Lebanon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lebanon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.075841090657541, 21.33547957115189}}]},
       "\"Lesotho\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lesotho", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.175924549214524, 21.84511214652176}}]},
       "\"Liberia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Liberia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342895917470844, 23.958741578932873`}}]},
       "\"Libya\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Libya", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411099882159589, 22.639861379156542`}}]},
       "\"Liechtenstein\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Liechtenstein", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3255885495701785`, 24.74660249588583}}]},
       "\"Lithuania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lithuania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.416186486320586, 25.017334948580327`}}]},
       "\"Luxembourg\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Luxembourg", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.440413460373609, 24.70964119716183}}]},
       "\"Macau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Macau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338466519921502, 23.230174475127857`}}]},
       "\"North Macedonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "North Macedonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2174467593560845`, 23.34216667577112}}]},
       "\"Madagascar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Madagascar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, 23.204988134779526`}}]},
       "\"Malawi\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malawi", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.329021349349984, 26.542352556845408`}}]},
       "\"Malaysia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malaysia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.339771321776768, 22.117082625226047`}}]},
       "\"Maldives\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Maldives", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.127295662361787, 23.579377438478247`}}]},
       "\"Mali\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mali", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.418840607796598, 23.407527631393762`}}]},
       "\"Malta\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malta", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309187088496924, 19.285291015973776`}}]},
       "\"Marshall Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Marshall Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399498115585886, 22.534337617206837`}}]},
       "\"Martinique\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Martinique", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.172231100879172, 22.77463265112789}}]},
       "\"Mauritania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mauritania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.33990170837321, 23.113318189405422`}}]},
       "\"Mauritius\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mauritius", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.371850028222321, 19.961411458376674`}}]},
       "\"Mayotte\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mayotte", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343025897324149, 27.704423346982324`}}]},
       "\"Mexico\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mexico", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.306359755748467, 19.842183689042297`}}]},
       "\"Micronesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Micronesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, 23.20098344952477}}]},
       "\"Moldova\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Moldova", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.493120682179469, 22.727971326858537`}}]},
       "\"Monaco\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Monaco", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.263806003286451, 23.298708307058583`}}]},
       "\"Mongolia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mongolia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.35040696029342, 22.287409757071888`}}]},
       "\"Montenegro\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Montenegro", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324000197151533, 18.024505682751293`}}]},
       "\"Montserrat\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Montserrat", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.298101399736121, 25.449507793161604`}}]},
       "\"Morocco\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Morocco", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.034063631337171, 23.363852076176897`}}]},
       "\"Mozambique\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mozambique", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.243051882383293, 25.056438122911544`}}]},
       "\"Myanmar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Myanmar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.187683102652602, 23.093502726302134`}}]},
       "\"Namibia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Namibia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.21390379727974, 18.704705346768637`}}]},
       "\"Nauru\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nauru", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2783313983351166`, 24.2394921113544}}]},
       "\"Nepal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nepal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.406109305189839, 27.54094912817887}}]},
       "\"Netherlands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Netherlands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.364244464878084, 23.013748951587424`}}]},
       "\"New Caledonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "New Caledonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.410735561310335, 26.074585035500547`}}]},
       "\"New Zealand\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "New Zealand", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.310933344565636, 23.25866566533438}}]},
       "\"Nicaragua\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nicaragua", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.089332020398556, 23.33907164785961}}]},
       "\"Niger\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Niger", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.108740442505833, 26.79237123171414}}]},
       "\"Nigeria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nigeria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.335066045810379, 20.89047375593032}}]},
       "\"Northern Mariana Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Northern Mariana Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.271793154274181, 23.516358675237733`}}]},
       "\"North Korea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "North Korea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.410978456623649, 26.616351956542033`}}]},
       "\"Norway\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Norway", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.339119133662605, 25.058351778649225`}}]},
       "\"Oman\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Oman", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.23945449739721, 26.298026934262136`}}]},
       "\"Pakistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Pakistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309187088496924, 19.451832579238047`}}]},
       "\"Palau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Palau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375379591952088, 24.69238914341488}}]},
       "\"Panama\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Panama", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.246493239378686, 23.88415329060862}}]},
       "\"Papua New Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Papua New Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.358374106008653, 24.287268856854666`}}]},
       "\"Paraguay\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Paraguay", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316954637930166, 26.031604639677163`}}]},
       "\"Peru\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Peru", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.253056253376921, 26.613498429563897`}}]},
       "\"Philippines\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Philippines", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.363480717386783, 27.11042237527921}}]},
       "\"Poland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Poland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398023007758481, 26.166664639193545`}}]},
       "\"Portugal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Portugal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.400234854322551, 25.35933664298235}}]},
       "\"Puerto Rico\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Puerto Rico", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.376762804998783, 25.709428018281603`}}]},
       "\"Qatar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Qatar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.122121843221548, 23.110622697284665`}}]},
       "\"Republic of the Congo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Republic of the Congo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.377591815383769, 23.11202862618151}}]},
       "\"R\[EAcute]union\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "R\[EAcute]union", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.334672938290411, 26.239575716426607`}}]},
       "\"Romania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Romania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, 28.02542378349626}}]},
       "\"Russia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Russia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.181744752502934, 23.05870448218783}}]},
       "\"Rwanda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Rwanda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.385146762010125, 16.70588231586044}}]},
       "\"Saint Helena, Ascension and Tristan da Cunha\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Helena, Ascension and Tristan da Cunha", 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.341595188879544, 20.64795143934838}}]},
       "\"Saint Kitts and Nevis\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Kitts and Nevis", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3657702121543585`, 21.255871097578257`}}]},
       "\"Saint Lucia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Lucia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.396915247167632, 17.692942118622803`}}]},
       "\"Saint Pierre and Miquelon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Pierre and Miquelon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.336375289254793, 20.512151495555578`}}]},
       "\"Saint Vincent and the Grenadines\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Vincent and the Grenadines", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316420877575887, 20.508867985789987`}}]},
       "\"Samoa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Samoa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.427000000316613, 21.194537483208425`}}]},
       "\"San Marino\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "San Marino", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.200504758050491, 19.97442510541059}}]},
       "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe", 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.335982696172475, 27.27451454816985}}]},
       "\"Saudi Arabia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saudi Arabia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.156223299267966, 23.93857146567636}}]},
       "\"Senegal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Senegal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338074747144699, 24.692805280269255`}}]},
       "\"Serbia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Serbia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.328625857946767, 20.840993315503972`}}]},
       "\"Seychelles\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Seychelles", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.0975062255596795`, 22.075232404587716`}}]},
       "\"Sierra Leone\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sierra Leone", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.456554161659308, 26.55220697787008}}]},
       "\"Singapore\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Singapore", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.369827527216884, 20.732225578317884`}}]},
       "\"Sint Maarten\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sint Maarten", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3576058601322, 25.373162190228573`}}]},
       "\"Slovakia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Slovakia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.401951803481151, 24.704621035125456`}}]},
       "\"Slovenia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Slovenia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.336636932375072, 21.16232401009827}}]},
       "\"Solomon Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Solomon Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.013134506796558, 22.316087985411453`}}]},
       "\"Somalia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Somalia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.175002465239555, 26.433439972248483`}}]},
       "\"South Africa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Africa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.416186486320586, 28.119923168132466`}}]},
       "\"South Korea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Korea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.070734696582967, 22.32462256845195}}]},
       "\"South Sudan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Sudan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.409276949164042, 27.879040396758754`}}]},
       "\"Spain\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Spain", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353498551059343, 25.114086196097873`}}]},
       "\"Sri Lanka\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sri Lanka", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.201553368737545, 23.98561597673269}}]},
       "\"Sudan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sudan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.298237333944173, 22.060349700120806`}}]},
       "\"Suriname\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Suriname", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.079738409832738, 22.100139233055064`}}]},
       "\"Eswatini\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Eswatini", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.414009680526933, 27.016802676977896`}}]},
       "\"Sweden\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sweden", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.419201988273939, 27.34062688379314}}]},
       "\"Switzerland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Switzerland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, 23.737782207228456`}}]},
       "\"Syria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Syria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.393831680123644, 27.140176208175163`}}]},
       "\"Taiwan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Taiwan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.234975691961846, 22.82668635881054}}]},
       "\"Tajikistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tajikistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.247065649239764, 24.856987324904946`}}]},
       "\"Tanzania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tanzania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.349115971216622, 26.94145743082284}}]},
       "\"Thailand\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Thailand", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.262539022051294, 22.74807103421901}}]},
       "\"Togo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Togo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.34756458111878, 20.04680798971358}}]},
       "\"Tonga\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tonga", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316420877575887, 23.792705009380917`}}]},
       "\"Trinidad and Tobago\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Trinidad and Tobago", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338205355125032, 24.39285219207351}}]},
       "\"Tunisia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tunisia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.330206885944085, 27.30265761184669}}]},
       "\"Turkey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turkey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2702567338308715`, 24.53505800453673}}]},
       "\"Turkmenistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turkmenistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.389498649512583, 20.644853383020145`}}]},
       "\"Turks and Caicos Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turks and Caicos Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.22053658745986, 17.704378547256315`}}]},
       "\"Tuvalu\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tuvalu", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.228000947034774, 24.344188469052874`}}]},
       "\"Uganda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uganda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.292922159591061, 25.770438816796247`}}]},
       "\"Ukraine\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ukraine", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.374120463102784, 26.766236542136767`}}]},
       "\"United Arab Emirates\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United Arab Emirates", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398146016553765, 28.627136849505767`}}]},
       "\"United Kingdom\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United Kingdom", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.387387240915977, 30.672519939515322`}}]},
       "\"United States\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United States", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.382651439442724, 22.105552176668763`}}]},
       "\"United States Virgin Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United States Virgin Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.359141762136423, 24.705352585826752`}}]},
       "\"Uruguay\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uruguay", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3178880335576375`, 24.778647611803486`}}]},
       "\"Uzbekistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uzbekistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.315753276242594, 20.566370641215006`}}]},
       "\"Vanuatu\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Vanuatu", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.279717015849312, 25.628246412642785`}}]},
       "\"Venezuela\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Venezuela", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3208159036289855`, 26.325969144025354`}}]},
       "\"Vietnam\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Vietnam", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.387635873438392, 17.909855120186375`}}]},
       "\"Wallis and Futuna Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wallis and Futuna Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.332311042427949, 23.468052899764594`}}]},
       "\"West Bank\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "West Bank", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.207375584184147, 23.939553982219266`}}]},
       "\"Yemen\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Yemen", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.188441885601216, 23.684409453474256`}}]},
       "\"Zambia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Zambia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.140432666414855, 23.542768765002787`}}]},
       "\"Zimbabwe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Zimbabwe", "Tooltip"]& ]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"LifeExpectancy\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"GDP\"", HoldForm], TraditionalForm]},
  AxesOrigin->{3.953184471635454, 15.612913660723805`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{3.953184471635454, 4.493120682179469}, {15.612913660723805`, 
   30.672519939515322`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {{{4.0943445622221, 
       FormBox["60", TraditionalForm], {0.01, 0.}}, {4.248495242049359, 
       FormBox["70", TraditionalForm], {0.01, 0.}}, {4.382026634673881, 
       FormBox["80", TraditionalForm], {0.01, 0.}}, {4.499809670330265, 
       FormBox["90", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.9512437185814275`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.9889840465642745`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.02535169073515, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.060443010546419, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.127134385045092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.1588830833596715`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.189654742026425, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.219507705176107, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.276666119016055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.30406509320417, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.330733340286331, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.356708826689592, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.406719247264253, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.430816798843313, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.454347296253507, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.477336814478207, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.5217885770490405`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.543294782270004, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.564348191467836, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.584967478670572, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      16.11809565095832, 
       FormBox[
        TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {20.72326583694641, 
       FormBox[
        TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}}, {25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}}, {27.631021115928547`, 
       FormBox[
        TemplateBox[{"10", "12"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}}, {29.933606208922594`, 
       FormBox[
        TemplateBox[{"10", "13"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.206072645530174`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.611537753638338`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.89921982609012, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.122363377404328`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.304684934198283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.458835614025542`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.592367006650065`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.710150042306449`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.815510557964274`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      14.508657738524219`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      14.914122846632385`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      15.201804919084164`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      15.424948470398375`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      15.60727002719233, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      15.761420707019587`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      15.89495209964411, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      16.012735135300492`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      16.811242831518264`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      17.216707939626428`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      17.50439001207821, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      17.72753356339242, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      17.909855120186375`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      18.064005800013632`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      18.197537192638155`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      18.31532022829454, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      19.11382792451231, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      19.519293032620475`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      19.806975105072254`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      20.030118656386467`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      20.21244021318042, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      20.36659089300768, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      20.5001222856322, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      20.617905321288585`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      21.416413017506358`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      21.82187812561452, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.1095601980663, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.33270374938051, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.515025306174465`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.669175986001726`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.80270737862625, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      22.920490414282632`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      23.7189981105004, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      24.124463218608568`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      24.412145291060348`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      24.635288842374557`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      24.81761039916851, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      24.97176107899577, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      25.10529247162029, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      25.223075507276675`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      26.021583203494448`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      26.42704831160261, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      26.714730384054395`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      26.937873935368604`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      27.12019549216256, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      27.274346171989816`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      27.40787756461434, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      27.525660600270722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      28.324168296488494`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      28.729633404596658`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.017315477048438`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.240459028362647`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.4227805851566, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.576931264983862`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.710462657608385`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      29.82824569326477, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      30.626753389482538`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      31.032218497590705`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      31.319900570042485`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      31.543044121356694`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      31.72536567815065, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      31.879516357977906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      32.01304775060243, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      32.13083078625881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      32.23619130191664, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.8988507064519587`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c7940a68-acb2-4377-a484-c07ccb8fe678"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Tooltip", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}], ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<InfantMortalityFraction\>\""}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"CountryData", "[", 
        RowBox[{"i", ",", "\"\<Name\>\""}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"CountryData", "[", "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8988508094666705`*^9, 3.898850811218705*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"22ffdd9b-2f67-4aef-93ad-d885cf647f39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LifeExpectancy\>\"", ",", "\"\<InfantMortalityFraction\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898850826825392*^9, 3.8988508341936703`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"11c18420-dfac-4eb6-80a1-1e59f788ff4c"],

Cell[BoxData[
 GraphicsBox[{{}, {
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], PointBox[CompressedData["
1:eJxlV3k4Vdv7P8ZzzHudgY4pom6ayBAprDiS6SqKSOWSLhFFJSWJIlIqokK6
UmSKSCnqTegW0kXIPF1ukaRr6pLv/v3h7D9+f+znPPt5z95rve/6TFvV3d/e
U5BGo30ir//7VWGq3auplcH6eroOtyoFwHGrTLrVKYRvK1ZtK2lEQJescgk/
gPDN9CfdeS9kIOKF6cYv5gj/7pzd3qfIhMeJ56ZLHyC84uaOE51nZKHEPeCk
+ykCT2f6ZvVVioBn6j3Bk7cRflU3PzvZJgv/uQdv3/k7wqfcT6qPvEVQGcbY
oOWH8JYvvpP6t5mgP77c58+tCJuypvVKkhB8sZ/fqESubymta3rejAndWWOD
53MQTrjgUCc0wIEn+3gPXf5AWEvt0jrPMlkI3Hrcs0gP4W3Wv+olrZaGg/Gz
05/J98WIpP/WRGNC1vter8lwhGsMpEKujzLhiJNlkbURwncelSomDEtAzWHj
ru2HEebsePSs0IcJnRVqZmH6VH/Tzx0ecVOo9Sr/LMkttUHYXWvZhvkCBGLF
N3bqnSbwgOeq5aVP6XD0AfeHyy2Er/QHnjSdkoPL8sFXVrIR9t9j4SE1IwEb
79X9e5dBri/jmc8RkIDDO3nvPnojfPd29IacPjbsEm18tLOEwEaC+21+9ZeE
5D9iCz7wEG5TWm+z156AofcxUbQwap5a/82sVPBH+FnjsWKBEibIG9yV1bZE
+H4V/XPoChbE9ucGXogncGWWBZtnQgcpE+v83AYC/zbidzWpQxQ8OiKZHtUE
3qpxbSw+lQEeS4TvLIsjsP3JH81B83Tw+HjiaEQxws5Vi8p2p3KgTnv0Mk0L
YbdDCV9XdknD0/FkwZNkvw0y5R9sc9iQdqW4up5BYNdIZdrxN0JwPSQuociK
wLeusK+KcESgRdNvRd4ZhJ/8XGNQqMuGwy1n25sdET6yvlJJrwJBsuap8fY9
CFuYbDLab4fAr+CjB+s9gd16dOqflonCw/LxyiSy3mCVtUbsNIJzgVERqacR
FnS18FA+wAJr74G9WXsRPmhrXsKrZfLrYmEj7W7FHJD/Mo2rQxD+I/d76ugv
wsClF/kMkfP8GqQ8tj2IBW1ynQHV5H1lyrgAt14OVMrmdzw9TmCLdL2lxH0R
GFLur0u8gfCEufT14B+ycFQjIf7qQwKX+Pb7Lv3KgM2a4SnPfRE2SUTMg7ZM
+EO89IPFYoRpa2fKTmyRBnnzJ0l90wTm1srNqbAk+HhnWednNF0m+PjbNZf7
pZtGgF9Ge23yZoQLmsa8PYIIUPXa7pj2msDto0YP17FFYY13SKnsWwIrjlab
RX1mgPPU29T9Xgg7iUWzw6xkQcggqZnXTeBH3+Jd5Y0Z4D+aO+iTgHDzBWez
+gk2KOXMNrvqU/hZ3S5zpPUmhd9wdcdmx7tUv1vq7JZm/4awNOo3eVCFoFko
t72CxN/E+fRFHZEcmKyzidOZIPCRdSu9ArdKQM6c20RUJYFlLXdYGpSKQo1+
+UlhCxKffUx57xgCdKrNeW4eCBttvHdGs5cA48iexKIkim/C72tudn8lcMG3
ylE2XQLs8s3OQzTCXR4ZhaE32HD77KBcYBKFzyJxpTAnHfL+QGuAzQ8mVCnV
/7hjjfDVzxXzUjlMcKy+/LdxPMJJjkHRQkos/vqtjT2fL5ci+GSwb6mhOlkf
cumTZEmDjIGBpVketZ/h9jmRZckENq90PTuynA5z0qti3yQSeOm6vODIDXSI
i5LccZRD6o3h1vmPmpJAK8xYr1ZG4HPphnOfyhjwu87h1nIzhGsbihdd3kPA
ouphq7FChPuHvJIDs+Sg9cCEyT4Sv4dtTJ0tdnGg53jbzMGHCDc2aK+uvb8I
AsU1O/7+SeDF7B+LlXTF4dfUHuGhZQgLBxpaT1yR5uv12sJlH4azCRBpW94m
upysn75Z7scT5+N3Qd8W+Kt++K+PMxxZOJYm0FueT/Ub0LFa/30Wdf7u3xiR
PaEE5gUYvptdIQp2mSseVZPzFYz0iPeJQyBo1V0q+ZLUxycF6yvaF8G1u2Gs
ZhI/NpttafWesnDclyFqY4fwJY1rsw4aCH6ObRBsV0aYbaOwurtYBgaH0y4c
+5fAc19q+lyuisN8Hs38WhuB7zhPu+e/kgAF43BLKw2Ee38GdmS6jb0oPT1+
WjgY4fH2/OaUSRZ0fpzl2ioiLBWgvaExXAruqVm16VYQ+PWfzrSu9QwYbv32
9JstwrkaFVPaShw4l0K30j2C8Ij9MXlOGQue8A5Z3rclsN8V4U/2vQw4WXH3
8tJiAqe1VQU3ddEhsOeUggp5PpH++g+erWeCiQxnz1QG5U/RvoWc320p/vUv
sXu7Kpua5z454Rf/VSAcyl7iMCsvB5sPZE4lulD6NWhA253dRWDltU596s/E
4EHpr6YJSgi/UaqQDHIS4/tbd8Dwi9NZCMJv+Ap92UXqzVK9Nx/fSsMoYV3j
HE7gcuWJRakXRSB8wP3iQC7C79em720+xAHbCvOY5I0IX07ddTTogwyoijxi
yJJ4cBrUVjDvYYHxuUjn3QUE3sXNzOjto4Os+bm1Mq6UXy/o5yWddZeuCdOh
BqzWmJLzqF+mr3RhFIEBTXNvyXqE+wJCaIuzZfj7X/CrO5U1t/+dRtirV7ft
rgUXeAe0NdSkSX/stcvDXBkQE5Dg/LUf8fVjAV8L/MxmWIduWkv5zw/bm/G9
SwjskpVVXDAnwtfXhrKzN9QnxCHwVv28JhDYIK+odTVXAmQMW66LtRN8vT+q
PTEkSO7vn7K7A+9GJEH8iqpyexrZb0GfbcktWaDd3BQ2S+IjagcrfasYB8yi
RjqSMig/qUk4b+dpjPCYyXSXoBoBzz282oJ3EXgqfl5bkScMD0yvZDr7U3oN
IkUXFZyovBMR3fhtqyzCavrXuaYvpSF2o0t0Swalv35KDRKmuyh+Lehr7vHG
zrFBOv88F/wmkj17xoP0Lx0Rj5nQa0z4hWdR6jVLYOPuVhUM4rBXQz1thsxf
NAX1+yqSBNCGCl7GkfliqqVj3kiJAB+9wtWqQqS+em9bm/dNms+PhX7tIv52
ik+i/DFCzWtFC4kf4mrUpb94bMjc3KLwjvT320Eiya+PsUFZemW4FJkPReb3
dhb60kHI+M3BTDKPyXs/nswPYwHaVBRWTPr/402vnrBeMvl4+XndNPJPETbM
9fRYKzwlcK9hcVq9tSSUln2ae3sB4YhYnbnIABFIn8n55BGD8InHdq3/+CFI
+sBUrdmNcLVk5ZF/1rHARN83KPYYwtd5J/pFtZj/7/nEYKfvhxKpPJKhEvMq
YCeFV27LnQ9C5Hw617nM1iIC+gW+h5g8QniJrpvvcA0HHrNilLfVEfjfyYkq
72kG5GwnPkrspPiZ/lmdNpNG4Fqz+skOKwYouhrytFyovOQoIGgTQfJZZ885
v74YJuSU03NbPai88eyx+tfwRrL+/szxDJtFcMjQEBWfIPnDjRlbIinMz9MO
KQkKJ9ZywIj9Gd9IJv9/8cvUJuDCWLGiy2NyP7u3MCP95wjIjWtSDZQi85+9
Qd42mhAcLLzTqlNEYA67oYrHluTrVdfzgR9xG+XgCbEkz28Lga+XLF4nWtv+
Qjdb+TT3DpXvO0c1I//zpubtcyZFYN87Ass8/byp+jsDVMfzVTxJvg77L76l
NSYF7Z3c8XvbCKzgnLIkJIoBFa47fxnPpPC04LcL/rSQh/Ilkp7aTJJ+Jn4/
ZUs8NX9Jh5dBqWMEHmp44Xa+RQKSaqVe/yTxbujJ2jMiJA7fL2zICvVEWCF0
veu1Fia4REfSWyQRHsjcUlCUJAbVKbrTQ6T/L93hXRnAYvLP20E9cUo3Xxoc
3dacsXeh8DC4ivZS1Z7K44Z2nmuek/neUW9oQIwnAdHTfz9rvYTwS70A+C2M
CWmtbU5NvaR/OGhWLIuVhId9F9jBnwjcGnPUX8iMDme79rz5vpLKn+81LPy5
ZF41yHmg1FvP5uch/vdPSLbRg1gKP/OFXq8/RFHPL+Qxlczy2eNmLOjNqz90
lswDCmozzLO6BOzn5TZuJ/MHN83hWYg8glNNq9T8lCl9VQttnYzYQuWT4IeK
PmOx1Lzj7S7utNyOcHFC/bEmLQRe+jmvTqVRfmFs1GPm0kT5p9WB7n8mSf1t
Ga9QHbwhCv0rShLqyO+LEeXzPtlxEvA/gpuHBw==
       "]]},
     Annotation[#, "Charting`Private`Tag#1"]& ], {
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{3.9749978045895347`, -2.221005106001623}}]},
       "\"Afghanistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Afghanistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.372355014977151, -4.456750180869818}}]},
       "\"Albania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Albania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.354012888218683, -3.96859335691654}}]},
       "\"Algeria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Algeria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.318287793706875, -4.528209144851963}}]},
       "\"American Samoa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "American Samoa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.421607859758004, -5.626821433520073}}]},
       "\"Andorra\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Andorra", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.122445992332976, -2.7211354406508654`}}]},
       "\"Angola\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Angola", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.406719247264253, -5.713832810509703}}]},
       "\"Anguilla\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Anguilla", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.350922889622548, -4.448166437178426}}]},
       "\"Antigua and Barbuda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Antigua and Barbuda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3576058601322, -4.656463480375642}}]},
       "\"Argentina\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Argentina", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3288895362607525`, -4.398156016603766}}]},
       "\"Armenia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Armenia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353627160152183, -4.56594947283481}}]},
       "\"Aruba\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Aruba", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.417514427603435, -5.472670753692814}}]},
       "\"Australia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Australia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.4075725416416205`, -5.683979847360021}}]},
       "\"Austria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Austria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.302442155331039, -3.7722610630529876`}}]},
       "\"Azerbaijan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Azerbaijan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.329021349349984, -4.500810170663849}}]},
       "\"Bahamas\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bahamas", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3778931033922746`, -4.733003557497976}}]},
       "\"Bahrain\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bahrain", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309859086371819, -3.4900285953687713`}}]},
       "\"Bangladesh\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bangladesh", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.360675308762846, -4.605170185988091}}]},
       "\"Barbados\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Barbados", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, -5.626821433520073}}]},
       "\"Belarus\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belarus", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.402441819416474, -5.683979847360021}}]},
       "\"Belgium\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belgium", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324927042633309, -4.422848629194137}}]},
       "\"Belize\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Belize", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.124226936703971, -2.9661734713124464`}}]},
       "\"Benin\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Benin", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.4046439245392905`, -5.991464547107982}}]},
       "\"Bermuda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bermuda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.269697449699962, -3.4966075664668135`}}]},
       "\"Bhutan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bhutan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.258445572902527, -3.3755296349135775`}}]},
       "\"Bolivia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bolivia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353369925424077, -5.221356325411908}}]},
       "\"Bosnia and Herzegovina\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bosnia and Herzegovina", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.178072777752813, -3.55434856115633}}]},
       "\"Botswana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Botswana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.317221411307766, -4.080441657053109}}]},
       "\"Brazil\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Brazil", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375002019736917, -4.448166437178426}}]},
       "\"British Virgin Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "British Virgin Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.358502089626924, -4.677740878822926}}]},
       "\"Brunei\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Brunei", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.321480134805848, -4.7914997641795845`}}]},
       "\"Bulgaria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Bulgaria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.144086654116915, -2.9058915695542016`}}]},
       "\"Burkina Faso\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Burkina Faso", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.205736850111646, -2.8577109756566164`}}]},
       "\"Burundi\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Burundi", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.193737306100135, -3.076942328979534}}]},
       "\"Cambodia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cambodia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.139795825126018, -2.99974029495153}}]},
       "\"Cameroon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cameroon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.426282725928419, -5.403677882205863}}]},
       "\"Canada\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Canada", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.296877159632186, -3.858482238500116}}]},
       "\"Cape Verde\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cape Verde", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.404766121643371, -5.1672891041416324`}}]},
       "\"Cayman Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cayman Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.00860510327439, -2.4733734139743273`}}]},
       "\"Central African Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Central African Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.072950669534428, -2.6352645313765626`}}]},
       "\"Chad\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Chad", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3766371373894435`, -5.051457288616511}}]},
       "\"Chile\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Chile", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.334803991301542, -4.439655747510518}}]},
       "\"China\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "China", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342635907068963, -4.327538449389812}}]},
       "\"Colombia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Colombia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.203198967134183, -2.8421531856256905`}}]},
       "\"Comoros\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Comoros", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342375829044089, -4.374058465024705}}]},
       "\"Cook Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cook Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.37462430490712, -4.853631545286591}}]},
       "\"Costa Rica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Costa Rica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343415735546226, -4.699480865459333}}]},
       "\"Croatia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Croatia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.37462430490712, -5.426150738057921}}]},
       "\"Cuba\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cuba", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.371850028222321, -2.5194980945576195`}}]},
       "\"Curacao\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Curacao", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375882799913392, -4.866534950122499}}]},
       "\"Cyprus\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Cyprus", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375757021660286, -5.9522438339547}}]},
       "\"Czech Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Czech Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.117898315175836, -2.707550326060559}}]},
       "\"Democratic Republic of the Congo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Democratic Republic of the Congo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399989335048054, -5.744604469176456}}]},
       "\"Denmark\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Denmark", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.174387269895637, -3.116770601931047}}]},
       "\"Djibouti\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Djibouti", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.35619587463936, -4.575611383746547}}]},
       "\"Dominica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Dominica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.280547465724028, -3.78539035449478}}]},
       "\"Dominican Republic\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Dominican Republic", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.243051882383293, -3.3843402645957323`}}]},
       "\"East Timor\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "East Timor", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353627160152183, -4.141436169755951}}]},
       "\"Ecuador\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ecuador", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, -4.000854219134761}}]},
       "\"Egypt\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Egypt", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.31895370569792, -4.11659017116942}}]},
       "\"El Salvador\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "El Salvador", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.194943760778217, -2.7598699498320065`}}]},
       "\"Equatorial Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Equatorial Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.19735231229633, -3.114515809543958}}]},
       "\"Eritrea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Eritrea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.351953950417589, -5.572754212249797}}]},
       "\"Estonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Estonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.21803603456465, -3.03032371832361}}]},
       "\"Ethiopia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ethiopia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.394942859940428, -5.240048458424061}}]},
       "\"Faroe Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Faroe Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.30406509320417, -4.677740878822926}}]},
       "\"Fiji\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Fiji", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.401216329067023, -5.991464547107982}}]},
       "\"Finland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Finland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411464070327499, -5.744604469176456}}]},
       "\"France\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "France", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.345375617023201, -4.443051336511656}}]},
       "\"French Guiana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "French Guiana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.359141762136423, -5.381698975487088}}]},
       "\"French Polynesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "French Polynesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.23945449739721, -3.414282621210811}}]},
       "\"Gabon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gabon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.191924890560965, -2.8404393891479556`}}]},
       "\"Gambia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gambia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.319353040145823, -4.135166556742356}}]},
       "\"Gaza Strip\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gaza Strip", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.347046915777855, -4.219907785197447}}]},
       "\"Georgia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Georgia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398146016553765, -5.683979847360021}}]},
       "\"Germany\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Germany", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.234251421632511, -3.3784578946926658`}}]},
       "\"Ghana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ghana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.384523514872469, -5.149897361429764}}]},
       "\"Gibraltar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Gibraltar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.397899983830172, -5.403677882205863}}]},
       "\"Greece\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Greece", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.300138475201197, -4.744432253321599}}]},
       "\"Greenland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Greenland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.32386772050035, -4.667045589706179}}]},
       "\"Grenada\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Grenada", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.393794619523382, -4.77833380499728}}]},
       "\"Guadeloupe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guadeloupe", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.347046915777855, -4.431216878864653}}]},
       "\"Guam\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guam", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.285378059618076, -3.759301918410482}}]},
       "\"Guatemala\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guatemala", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.419201988273939, -5.683979847360021}}]},
       "\"Guernsey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guernsey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.1515122352784415`, -2.894982370453848}}]},
       "\"Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.147253217877503, -2.9040650850281673`}}]},
       "\"Guinea-Bissau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guinea-Bissau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.270955399408094, -3.523365015636363}}]},
       "\"Guyana\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Guyana", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.1837281233567865`, -3.092243173934835}}]},
       "\"Haiti\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Haiti", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316153890523174, -4.092346559559427}}]},
       "\"Honduras\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Honduras", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.42376820625352, -5.914503505971854}}]},
       "\"Hong Kong\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hong Kong", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343155860284888, -5.339139361068292}}]},
       "\"Hungary\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hungary", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.424247650107844, -6.16581793425276}}]},
       "\"Iceland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iceland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.248923721667427, -3.275446176356595}}]},
       "\"India\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "India", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.287990642747287, -3.8212686421596818`}}]},
       "\"Indonesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Indonesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.318287793706875, -4.166915255056936}}]},
       "\"Iran\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iran", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.289088639014612, -3.283414346005772}}]},
       "\"Iraq\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Iraq", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399989335048054, -5.626821433520073}}]},
       "\"Ireland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ireland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.404766121643371, -5.521460917862246}}]},
       "\"Isle of Man\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Isle of Man", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.420646205638937, -5.683979847360021}}]},
       "\"Israel\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Israel", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.414856779264584, -5.744604469176456}}]},
       "\"Italy\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Italy", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.123903364463645, -2.7709900008760844`}}]},
       "\"Ivory Coast\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ivory Coast", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324000197151533, -4.390058806371146}}]},
       "\"Jamaica\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jamaica", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.438525108579144, -6.214608098422191}}]},
       "\"Japan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Japan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411949448325136, -5.599422459331958}}]},
       "\"Jersey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jersey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.327438444389479, -4.290359446148058}}]},
       "\"Jordan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Jordan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2801323269925415`, -3.9633162998156966`}}]},
       "\"Kazakhstan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kazakhstan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.238733464847405, -3.3214624136433017`}}]},
       "\"Kenya\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kenya", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.213460043112263, -3.4705474597969483`}}]},
       "\"Kiribati\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kiribati", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2903224454635405`, -1.023597584862664}}]},
       "\"Kosovo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kosovo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.368181227851829, -4.990832666800076}}]},
       "\"Kuwait\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kuwait", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.27763786893635, -3.6888794541139363`}}]},
       "\"Kyrgyzstan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Kyrgyzstan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.189654742026425, -3.028255465259551}}]},
       "\"Laos\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Laos", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.326117440234365, -5.278514739251857}}]},
       "\"Latvia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Latvia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.363480717386783, -4.933674252960127}}]},
       "\"Lebanon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lebanon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.075841090657541, -3.1100214199561185`}}]},
       "\"Lesotho\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lesotho", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.175924549214524, -2.9838037026887174`}}]},
       "\"Liberia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Liberia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.342895917470844, -4.55638002181866}}]},
       "\"Libya\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Libya", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.411099882159589, -5.472670753692814}}]},
       "\"Liechtenstein\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Liechtenstein", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3255885495701785`, -5.572754212249797}}]},
       "\"Lithuania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Lithuania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.416186486320586, -5.683979847360021}}]},
       "\"Luxembourg\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Luxembourg", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.440413460373609, -5.7763531674910364`}}]},
       "\"Macau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Macau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338466519921502, -4.853631545286591}}]},
       "\"North Macedonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "North Macedonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2174467593560845`, -3.2163789446696134`}}]},
       "\"Madagascar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Madagascar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, -3.167707538293801}}]},
       "\"Malawi\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malawi", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.329021349349984, -4.414549826379441}}]},
       "\"Malaysia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malaysia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.339771321776768, -3.8490482062667577`}}]},
       "\"Maldives\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Maldives", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.127295662361787, -2.694147295933219}}]},
       "\"Mali\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mali", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.418840607796598, -5.360192770266124}}]},
       "\"Malta\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Malta", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309187088496924, -3.979231755121596}}]},
       "\"Marshall Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Marshall Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.399498115585886, -4.969013619405437}}]},
       "\"Martinique\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Martinique", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.172231100879172, -2.985781942700823}}]},
       "\"Mauritania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mauritania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.33990170837321, -4.656463480375642}}]},
       "\"Mauritius\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mauritius", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.371850028222321, -2.8772383795062018`}}]},
       "\"Mayotte\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mayotte", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.343025897324149, -4.482952553263842}}]},
       "\"Mexico\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mexico", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.306359755748467, -3.958066943929553}}]},
       "\"Micronesia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Micronesia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, -4.448166437178426}}]},
       "\"Moldova\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Moldova", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.493120682179469, -6.319968614080018}}]},
       "\"Monaco\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Monaco", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.263806003286451, -3.8873303928377747`}}]},
       "\"Mongolia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mongolia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.35040696029342, -3.414282621210811}}]},
       "\"Montenegro\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Montenegro", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.324000197151533, -4.431216878864653}}]},
       "\"Montserrat\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Montserrat", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.298101399736121, -3.858482238500116}}]},
       "\"Morocco\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Morocco", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.034063631337171, -2.7488721956224653`}}]},
       "\"Mozambique\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Mozambique", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.243051882383293, -3.3696987146027846`}}]},
       "\"Myanmar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Myanmar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.187683102652602, -3.387294476493164}}]},
       "\"Namibia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Namibia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.21390379727974, -4.866534950122499}}]},
       "\"Nauru\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nauru", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2783313983351166`, -3.6156289923743437`}}]},
       "\"Nepal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nepal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.406109305189839, -5.654992310486769}}]},
       "\"Netherlands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Netherlands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.364244464878084, -5.259096653394756}}]},
       "\"New Caledonia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "New Caledonia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.410735561310335, -5.426150738057921}}]},
       "\"New Zealand\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "New Zealand", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.310933344565636, -4.034190639402354}}]},
       "\"Nicaragua\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nicaragua", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.089332020398556, -2.533256910729047}}]},
       "\"Niger\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Niger", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.108740442505833, -2.7598699498320065`}}]},
       "\"Nigeria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Nigeria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.335066045810379, -4.398156016603766}}]},
       "\"Northern Mariana Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Northern Mariana Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.271793154274181, -3.844364356954331}}]},
       "\"North Korea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "North Korea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.410978456623649, -5.991464547107982}}]},
       "\"Norway\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Norway", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.339119133662605, -4.390058806371146}}]},
       "\"Oman\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Oman", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.23945449739721, -2.987764103904814}}]},
       "\"Pakistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Pakistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.309187088496924, -4.575611383746547}}]},
       "\"Palau\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Palau", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.375379591952088, -4.645992180508347}}]},
       "\"Panama\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Panama", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.246493239378686, -3.343872315042886}}]},
       "\"Papua New Guinea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Papua New Guinea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.358374106008653, -4.011843340710357}}]},
       "\"Paraguay\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Paraguay", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316954637930166, -4.028556821684098}}]},
       "\"Peru\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Peru", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.253056253376921, -3.868006120011372}}]},
       "\"Philippines\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Philippines", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.363480717386783, -5.426150738057921}}]},
       "\"Poland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Poland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398023007758481, -5.9522438339547}}]},
       "\"Portugal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Portugal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.400234854322551, -5.06720564558465}}]},
       "\"Puerto Rico\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Puerto Rico", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.376762804998783, -5.115995809754082}}]},
       "\"Qatar\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Qatar", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.122121843221548, -2.928073625080176}}]},
       "\"Republic of the Congo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Republic of the Congo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.377591815383769, -4.875667433685772}}]},
       "\"R\[EAcute]union\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "R\[EAcute]union", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.334672938290411, -4.688551794927142}}]},
       "\"Romania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Romania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.278885875754368, -5.005647752585217}}]},
       "\"Russia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Russia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.181744752502934, -3.5370171048046903`}}]},
       "\"Rwanda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Rwanda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.386516539946734, -2.6809215337139576`}}]},
       "\"Saint Barthelemy\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Barthelemy", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.385146762010125, -4.358310108056566}}]},
       "\"Saint Helena, Ascension and Tristan da Cunha\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Helena, Ascension and Tristan da Cunha", 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.341595188879544, -4.803621124711929}}]},
       "\"Saint Kitts and Nevis\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Kitts and Nevis", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3657702121543585`, -4.546901277864116}}]},
       "\"Saint Lucia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Lucia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.386516539946734, -2.6809215337139576`}}]},
       "\"Saint Martin\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Martin", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.396915247167632, -5.051457288616511}}]},
       "\"Saint Pierre and Miquelon\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Pierre and Miquelon", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.336375289254793, -4.448166437178426}}]},
       "\"Saint Vincent and the Grenadines\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saint Vincent and the Grenadines", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316420877575887, -4.017383521085972}}]},
       "\"Samoa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Samoa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.427000000316613, -5.44914025628262}}]},
       "\"San Marino\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "San Marino", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.200504758050491, -3.1212954965293367`}}]},
       "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe", 
       "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.335982696172475, -4.414549826379441}}]},
       "\"Saudi Arabia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Saudi Arabia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.156223299267966, -3.036554268074246}}]},
       "\"Senegal\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Senegal", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338074747144699, -5.1672891041416324`}}]},
       "\"Serbia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Serbia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.328625857946767, -4.6356293934728}}]},
       "\"Seychelles\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Seychelles", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.0975062255596795`, -2.707550326060559}}]},
       "\"Sierra Leone\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sierra Leone", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.456554161659308, -6.074846156047033}}]},
       "\"Singapore\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Singapore", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.369827527216884, -2.505926017012076}}]},
       "\"Sint Maarten\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sint Maarten", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3576058601322, -5.298317366548036}}]},
       "\"Slovakia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Slovakia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.401951803481151, -6.437751649736401}}]},
       "\"Slovenia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Slovenia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.336636932375072, -4.247495741716276}}]},
       "\"Solomon Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Solomon Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.013134506796558, -2.375155785828881}}]},
       "\"Somalia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Somalia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.175002465239555, -3.5098967985854963`}}]},
       "\"South Africa\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Africa", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.416186486320586, -5.809142990314028}}]},
       "\"South Korea\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Korea", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.070734696582967, -0.4343276527932658}}]},
       "\"South Sudan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "South Sudan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.409276949164042, -5.713832810509703}}]},
       "\"Spain\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Spain", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.353498551059343, -4.803621124711929}}]},
       "\"Sri Lanka\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sri Lanka", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.201553368737545, -3.1190304898984844`}}]},
       "\"Sudan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sudan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.298237333944173, -3.7422802308410517`}}]},
       "\"Suriname\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Suriname", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.079738409832738, -3.0661547378505367`}}]},
       "\"Eswatini\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Eswatini", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.414009680526933, -5.9522438339547}}]},
       "\"Sweden\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Sweden", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.419201988273939, -5.626821433520073}}]},
       "\"Switzerland\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Switzerland", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.304200219209375, -4.240527072400182}}]},
       "\"Syria\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Syria", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.393831680123644, -5.44914025628262}}]},
       "\"Taiwan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Taiwan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.234975691961846, -3.4802405890026082`}}]},
       "\"Tajikistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tajikistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.247065649239764, -3.2519156789464008`}}]},
       "\"Tanzania\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tanzania", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.349115971216622, -4.710530701645918}}]},
       "\"Thailand\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Thailand", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.262539022051294, -3.1990731975720212`}}]},
       "\"Togo\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Togo", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.34756458111878, -4.518992489747039}}]},
       "\"Tonga\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tonga", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.316420877575887, -3.835061964292018}}]},
       "\"Trinidad and Tobago\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Trinidad and Tobago", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.338205355125032, -4.448166437178426}}]},
       "\"Tunisia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tunisia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.330206885944085, -4.080441657053109}}]},
       "\"Turkey\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turkey", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.2702567338308715`, -3.40822199659912}}]},
       "\"Turkmenistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turkmenistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.389498649512583, -4.62537289330561}}]},
       "\"Turks and Caicos Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Turks and Caicos Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.22053658745986, -3.5684333010380693`}}]},
       "\"Tuvalu\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Tuvalu", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.228000947034774, -2.9077213962312776`}}]},
       "\"Uganda\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uganda", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.292922159591061, -4.866534950122499}}]},
       "\"Ukraine\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Ukraine", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.374120463102784, -5.2030071867437115`}}]},
       "\"United Arab Emirates\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United Arab Emirates", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.398146016553765, -5.472670753692814}}]},
       "\"United Kingdom\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United Kingdom", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.387387240915977, -5.1672891041416324`}}]},
       "\"United States\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United States", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.382651439442724, -4.866534950122499}}]},
       "\"United States Virgin Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "United States Virgin Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.359141762136423, -4.815891217303744}}]},
       "\"Uruguay\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uruguay", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3178880335576375`, -4.051285072761654}}]},
       "\"Uzbekistan\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Uzbekistan", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.315753276242594, -4.275866438845491}}]},
       "\"Vanuatu\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Vanuatu", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.279717015849312, -4.431216878864653}}]},
       "\"Venezuela\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Venezuela", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.3208159036289855`, -4.092346559559427}}]},
       "\"Vietnam\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Vietnam", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.387635873438392, -5.44914025628262}}]},
       "\"Wallis and Futuna Islands\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wallis and Futuna Islands", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.332311042427949, -4.29768548624013}}]},
       "\"West Bank\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "West Bank", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.155753190350744, -2.985781942700823}}]},
       "\"Western Sahara\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Western Sahara", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.207375584184147, -3.1100214199561185`}}]},
       "\"Yemen\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Yemen", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.188441885601216, -2.8251459729784574`}}]},
       "\"Zambia\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Zambia", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{4.140432666414855, -3.4451492691913383`}}]},
       "\"Zimbabwe\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Zimbabwe", "Tooltip"]& ]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"LifeExpectancy\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"InfantMortalityFraction\"", HoldForm], TraditionalForm]},
  AxesOrigin->{3.953184471635454, -6.907553647107684},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{3.953184471635454, 
   4.493120682179469}, {-6.907553647107684, -0.4343276527932658}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {{{4.0943445622221, 
       FormBox["60", TraditionalForm], {0.01, 0.}}, {4.248495242049359, 
       FormBox["70", TraditionalForm], {0.01, 0.}}, {4.382026634673881, 
       FormBox["80", TraditionalForm], {0.01, 0.}}, {4.499809670330265, 
       FormBox["90", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.9512437185814275`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.9889840465642745`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.02535169073515, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.060443010546419, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.127134385045092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.1588830833596715`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.189654742026425, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.219507705176107, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.276666119016055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.30406509320417, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.330733340286331, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.356708826689592, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.406719247264253, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.430816798843313, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.454347296253507, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.477336814478207, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.5217885770490405`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.543294782270004, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.564348191467836, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.584967478670572, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.005\"", ShowStringCharacters -> False], 
          0.005`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.010\"", ShowStringCharacters -> False], 
          0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.050\"", ShowStringCharacters -> False], 
          0.05`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.100\"", ShowStringCharacters -> False], 
          0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.500\"", ShowStringCharacters -> False], 
          0.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-8.517193191416238, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-8.111728083308073, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.824046010856292, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.418580902748128, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.264430222920869, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.1308988302963465`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.013115794639964, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.898850835597224*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c0c1f72c-2aa8-421f-8e7d-ca9f381904f9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.898850971223997*^9, 
  3.898850996293178*^9}},ExpressionUUID->"f094ffec-5ef3-47f2-856c-\
0654804018c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"plotFn", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"CountryData", "[", 
             RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}], ",", 
            RowBox[{"CountryData", "[", 
             RowBox[{"i", ",", "prop"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"CountryData", "[", 
           RowBox[{"i", ",", "\"\<Name\>\""}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"CountryData", "[", "All", "]"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<LifeExpectancy\>\"", ",", "prop"}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"prop", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<InfantMortalityFraction\>\"", ",", "\"\<GDP\>\"", ",", 
        "\"\<LiteracyFraction\>\""}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plotFn", ",", "ListLogLogPlot"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ListPlot", ",", "ListLogPlot", ",", "ListLogLogPlot"}], 
       "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.898850901152049*^9, 3.8988511259775987`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9227b841-b691-4f05-945e-fa704b30fa27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`plotFn$$ = ListPlot, $CellContext`prop$$ = 
    "InfantMortalityFraction", Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`prop$$], {
      "InfantMortalityFraction", "GDP", "LiteracyFraction"}}, {{
       Hold[$CellContext`plotFn$$], ListLogLogPlot}, {
      ListPlot, ListLogPlot, ListLogLogPlot}}}, Typeset`size$$ = {
    450., {107., 113.51064481442319`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`plotFn$$ = 
        ListLogLogPlot, $CellContext`prop$$ = "InfantMortalityFraction"}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`plotFn$$[
        Table[
         Tooltip[{
           CountryData[$CellContext`i, "LifeExpectancy"], 
           CountryData[$CellContext`i, $CellContext`prop$$]}, 
          CountryData[$CellContext`i, "Name"]], {$CellContext`i, 
          CountryData[All]}], 
        AxesLabel -> {"LifeExpectancy", $CellContext`prop$$}], 
      "Specifications" :> {{$CellContext`prop$$, {
         "InfantMortalityFraction", "GDP", 
          "LiteracyFraction"}}, {{$CellContext`plotFn$$, ListLogLogPlot}, {
         ListPlot, ListLogPlot, ListLogLogPlot}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {172.91754141980783`, 180.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.898851130101759*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"324292cb-ec91-4fa8-824e-a2b7378e5f98"]
}, Closed]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "data", ",", "dataAfrica", ",", "meanAfrica", ",", "dataAsia", ",", 
   "meanAsia", ",", "dataEurope", ",", "meanEurope", ",", "dataSA"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8988512220639358`*^9, 3.8988512591635056`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ca45ebe5-bf0f-43d1-9edf-a8f628f93f77"],

Cell[CellGroupData[{

Cell["Chapter 3: Input and Output", "Subtitle",
 CellChangeTimes->{{3.8988514837061977`*^9, 3.898851491009716*^9}, 
   3.8988515450422883`*^9},ExpressionUUID->"9e3fddf1-a86d-4aed-a6b1-\
d404139de3a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "100"}]], "Input",
 CellChangeTimes->{{3.898851577330434*^9, 3.898851581104883*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e84532b5-a772-428e-856a-9230f4007270"],

Cell[BoxData["1267650600228229401496703205376"], "Output",
 CellChangeTimes->{3.898851582381687*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d3f67be1-e27c-4494-a011-5bd18055776a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "1000"}]], "Input",
 CellChangeTimes->{{3.8988515869313107`*^9, 3.8988515924443283`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9d9f5f28-d473-4aaa-a288-dc773cdc2089"],

Cell[BoxData[\
"10715086071862673209484250490600018105614048117055336074437503883703510511249\
361224931983788156958581275946729175531468251871452856923140435984577574698574\
803934567774824230985421074605062371141877954182153046474983581941267398767559\
165543946077062914571196477686542167660429831652624386837205668069376"], \
"Output",
 CellChangeTimes->{3.8988515933272915`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c5b017ea-213f-43fb-8f8c-92ff290abed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", "%", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8988515964662924`*^9, 3.89885161413087*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7214f1f1-82e3-4d1b-abc0-ab5a6d5dcd74"],

Cell[BoxData["302"], "Output",
 CellChangeTimes->{3.898851615960432*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"129ecb8f-50bf-49c3-bc3d-9d10accf93a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot sin(x)", Typeset`newq$$ = 
   "plot sin(x)", Typeset`chosen$$ = "Plot[Sin[x], {x, -2*Pi, 2*Pi}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["plot sin(x)", 
                  Defer[
                   Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot sin(x)", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[32]:=",ExpressionUUID->"13082b06-05b5-489a-9c52-34636b479050"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwtmnk0Vd/7x02VmXuvmU+iSNKcBsk+hDJTQkVKERKV0qCUIVMqU+aISIYM
mVLYx0xKlCnzPFz33m0erul3vmv9/rl3vdZZ5+zneT/vZ+999joyNi5nbdlY
WFhKiZ///evq8J9akRHHr0dpNw4ph6idKHgyxblVHO/Tk5USD3MBSjKT70Qk
xPHN6tqjVaHPAP9y7dIBsjjerL3Oahv6BjR/8syyZxPHI2Vm6VYhCcCCc168
bVAMtyq7xOXxKhvcqO2ayvkghutmHLkh7QGBj1ZavJ2cGB712LK8H/sN7rQw
yWEUUVz5X37uzYd9IOKs0cVwAVHc53WBL0dOHyhp+pD4lkcUt9aehU/H+sDm
X/r7o9hF8bGjixjn7n4QVx1v8G5WBNfbsS+hI6of1BVq+Kf+JViSh2Z+ZwBs
jQ5c+x4mgt9181QTFh4CmqJ9mqVvRPA1i73heXuHgMPbQ0FlL0Xw7hrHWrUz
QyA/pFui3FsET18sviLpPgR0Avceq3EVwel+G9HUviFwz/3P3aZzInj/gxH1
hpRh8MNKYnyYIoKPTt25SpUZBUYJqoApIILr53MJeh4bBS39lyMEeEVwHo7K
22xGo6Dn2gdNFQ4RvKDdeqbKfRRMOSglvpkTxkUpignaLaNA1E3tokqrMO46
naio6DkGrr+2+fkmQhjftguvHqwfBxO/fbanhArjITcyvVJ7xoEzKfXxt9fC
eBXT0950ehw8CJ9UGPEVxpeevrxmJzYBAmPuvVB5IIwb3wzmdbCdADkffdVG
zIXxQlEz2X/MCbBWlp6jIi6M+3m7z4+TJ8HPzn28K0LC+N8XNYpLOyZB3EL+
je+Cwjjp5zN8/MgkUN0Lt6pyCuO3eW6W3Lo4CR6/+xt0clEI/3ZmvZbj/SRY
cF+1x1qF8P2fKvaZydFATaRnFUuzEL5imXrirjINvM3bvK38pxCuei38nrMW
DRyeFGxXrxLC/aP95bbY0oDrRTmtU3lC+FJgdVhREg1MHTOU0Q4RwjWZ5KhN
YnSAm/59svmVEB7lmGkkJU8Hb25bdNT4C+GPlxp2kA/Twd5PNm9OPxfCZWQr
x2OM6OCW6IO1My5C+KGJsp3SL+iAOp/wT89ACNcLPe4xMkEH30hyyrw6QrhK
O9/66DwdBOxJD/6pKYQLLqzk1LAygIJt/mkDVSFct6Pw8TZxBrBrqSsw3C2E
T9Ss7lPVZoChL9MhJlxC+PGyNwe5YhggbjPT6+ImITzrU+B17AMDmF1ku3eN
VQi/OJrqfiGTAepYKWb3lyk4PS5Z+UAZA2QZH5aInqDgadJJI/f7GeBGsipP
0ggFvznbpf99nAG2LWmupg9Q8OinM6aDUwwQlnC+t+QfBR+Ir9vZyoLAQ4Zb
Un89BZf/T2FDXxqBAxrPwiaqKTjH4ouweHkEqG/9fGbKKfginHrZvAcBq5NR
dhzfKLirPwzqOoGARlCxokI6BW/cESPwzAyBlb5yyQMfKbiG7ghHlyUC+Yd+
8KokUfB+yxkFsWsI7OzqZOjFUPCXWyeHlV0Q4FVc/eISSMEfaOz0X3+BQPVT
juSHvhR8SMnD8NpLBDyaed96elFwhb4e4bRgBKYf/vcg7DEFN+yUCmuPQaCt
Vu1EkSMFF8/kKoOfEQiWPK2E2xH5aGiwKX1BQMfF6L96GwruE3pD5lEhAiUi
VzY6L1LwTZLZfQVlCCTaelau61LwF/bX6V9/IXCxOCB/y2kiPgPr6N3NCAjx
haYInqLg/ueaWZ+1IOCbn+Qne4KCRwjtXKntRADjzHi4+ygFL2/qeVHag8Dy
pTyHw4co+P7CXDysHwEn9io97d0UfI9l2onBEQTkzH+qGu2k4DLqEW4XxxHo
TW/ZY7GdgoN3B83zqAhErXdvvSpNwSvY9nfRaAiYnB0RcJSk4NSWyyxbEALc
H+ksrqIU/D/drCrWaQSqluen3SkUfPaWknzPDAJHEje3vOKh4Efk/IqVFxBQ
+X2nXn0LBV9/u922eREBtbXusnk2Cm4zc1npzDJRv91n8tPWyTj9qz9fDBMB
7Qt5aVZMMn5kTWJL7QoCun5bE0gLZDzV4Zvo71UEDAsCwqunyTiP+hG1L2sI
nB2aC3hEJ+NUa/9Ht9cRMCddebZngozjJ1vruDYQsAQN9waGyfgc/eZuD4Kv
3Dri+LafjCdvq3n/i+DrsYnWOt1kXHO7v8ISwfb1vOfX2sk4x8DzijWCnRYf
6Ob+JcYbSnPuJfi23BCw/U3Gnxnv3BND8L1zhsriDWTcgnF6fT/BDz2LFX/V
kPEt0i8Gk4h4nmTv2OZZQcYnB7w6ERHv8543wsplZDz8j8CYKME+PCvcE8Vk
vGmnHJckkZ//cTuWdwVkPOTLqPoyoUfQjeZ541wyHtOdFPqF0Cv4reokx2cy
vvrxz6r2EgLhlan9Xz+RcdtP4l6FhN5R0+Q2p2QyfpxHewfrPAJx0h4N296T
cc+XxiPyswi8N5jAW2LJeMI9y9qdRP2S3U0L/SPJeHd80U92or6f0mCGahgZ
/+7UufiNqH9mu2Li1GsyLlN3Q8+A8EfOpoiI5EAyriu958e3MQSKrzp58nqR
8akVh/M7BxEoe9Puhj8l436txvbyfQhUlGo43XtExj/pGeaxdCPwQ1zcvPs2
GZ8vVmM53YpA42kf/WAnMv5f5BxXHuH3P/eRuqY9oUez9iUm0Q+dzdVKmdZk
/KKz2KhEDeHXjf2yVy6R8bLCzwpz5QgM7okTFTIn48bSPNWfSon5IuAu2xND
Mm7gKSmdnI8AU126Q+8kGeesLaEPvUdg3SXw18YxMh4p8DY0KhYBtvj5irzD
ZDw67FGpQgThb2bDZ0klMr54Mr2sKxAByS8PvSclyPiJ8hyFV3cR2NY/9DBB
hIz3pfwo3OqEwA5+I+dzZDJenfeNNcgWASVHuQvfucj4/dx42rI5Aqqyf/a+
XCLhLBHb57cT89V7Cs/hc3MkXLRp31jRIQTYN2kel5wi4W9DTXbsUiL0GSs4
lTFGwidC4hI/SCFg8TnaoqGNhK9a7X23vMIA945d9eIpILhQufRAPgN07Irx
+5tDwtWT3FPi0xnghOTfoNhMEn4v0OzOxHsGYFvXjNydTML1YmT7xF4xQHCl
QqZeGAmv3F2m23+NATINp1pf3iHh+06zxUryMIAgtqvr3C0S/ruGvtVpgw5c
D9j0SzqQ8P2PuzRjZ+lARaiFmnGFhJuu3Mt420UHdf+KNhqMSHhvb4nlahod
DF9/tot3LwlP/U8/5B1GB1Lu/E+DqIL4udb+2qjzNOCQ/EP03aggztrHmjOh
TQOFv3y/fB4UxAUOiKpIH6MBk20bY42dgnj0d/dbxyRowLcanSU1COJ5c0/G
d/RMAiTQrBCRIYhvTekGs1aToCI5rCXBSRBvgCWaf/WoQKDRyCXHXhBfqe6Q
bjtOBZaLPNzl1wVxEz+xaLiTChZ1fMCgpSCOWGQztdmpQAndS99hIIiruQZp
7iyeAG+Pmz1P2yOI/w79IqCxbQI0xR2wsOsRwCON0h5c7R4DLMkuET0tArjM
klJdePUY2J/xucX0pwDedEuN53PWGAgu3mVy6rsAfvvyreag52PAuE1Gd1u0
AD74wRLwbh8DTQJk1U5TAbzn3hsB2WujoMlrRtrwJz9+bj/OdGwaBr/t88aU
v/PhfJOM4/9sB8DHXc3HjEt58EOBYueznrSA/TFNt+/Wc+GRdpe1Jsfzgcz+
k50iGVvwrdRrem36tZD6TWvT5txN+KCfvNa5nE6YEVL0w/XTJjyhYl90BKMT
OtnvCh5I2ITLuU2xfVfqgnRhPsnS15vwf/I3mCmfuuDU7Zb995w24epdX/NX
47vhgvw1y8Gdm/DZB9qfXV70Qraw53ll8Ry4Ko/HwUrJAVjpMPNQKYIDZ+tx
ff3l2AD0wa6rxbziwDOTP8u9Pj8ANzFO199/woFbbPP25HozADl1BPqULnLg
BnfaTflYByH/xjvuWGEOvOOZ0rjSwCCUvPn96oMgdvz1tec5tOBhGFNXp83n
w46nxbC8Tk8fhhLybbs/uLPj9qvOr02qCB6Ymm90ZMdTzDN8Ly4OQzFz+UB5
HXZc7KQ+dt5yBAqdCvnSuokd1xV5E9gqMwp5JW+wH37Ghgv3d77QjBmDQQ/v
jde7seG7yvUrpnPGIE+b5y9rZzacJCVa71M7BrlD4iJfWrHhd5i05ktzY5Bz
y5/dQyfYcDstP6kG/XG4aVbVNHSJFVcr/34+emkcrv8gp0zdYcVtSq68ND5B
hSZR8gWijqy4zsYrTTUDKky2ValWs2HFqZWjWWRrKtRlsRkJOsuK33cJO+vi
RYURyrlyuw6x4qc9nq/M11LhnvdGH6/OseBjrP0mioaT8Pmta4X+NBZ81n3s
jPvlSfhH5UFN9jALzu66n5rrPAkftsaPrrWw4Ovcx+m/X0/CKm6GfEwBC27R
8Vb7169JaHk/KPWPGwu+KLBTHtemwWyN90XLziy4N0Mu7fp5GmQTzK/ddoMF
r1VvHqdfo8FP6V1jzuYs+KM1U7us5zQ416eowHOMBR/JnugY+UqDIsTE5Tez
AUXkOKiyO+jQFfCaOiyuw3Ru+bSnI3SoeQq+uDa6DgMqh94ET9OhyOm7RVat
67A7tzXEc40Ovxp2SJzNW4dFD2/mrgkx4KpV8oCKyzo0qr3MsNRgQJ8nqi68
Y2tQ+oqWWWYEA55/jt5vbluD/B3fGDHvGVDeJ+kPS/UalP+r0W2XzoB1LzmP
zCetQSl/s8CIUgbki21Z7bm8Br2MSzeZDjJgRLFTYHbbKrznFReuJofgjVLp
krTqVeim2Jq4poTgsfI/9A/5q5CRcsw2+jCCnXXHTKJCV+HwCWWa3SkEt3Zw
iHkarkL6VDHlgjWCqKtIx/3kKvQaGp1YtUUQ73N0v6+0CoN9vik/dULQZqyp
14F7Fabn8JMojxBMXYhLOVuzAif36JDDghF8yDRq1y9Ygbzpt5vEIxDUXWfj
Op28AsvE6389iUWQtsnB6YTXCpQuaL7VnoJgKZdUvPKdFcgeUc/xOx3B13y/
f++7sgLlBj0rk7IR3C+sfGiH2gqcOO2Z1PsVQVbx8etb96zApgzTr9qlCP6R
io0Qk1qB5yRZBwLLEby3g5XJy2RCq+4S89R6BL8e+oXPFzDheOkrq/0dxPNE
X50hf2TC00H/ctS7EPzE1G/aG8GEqlSpmEO9CEaV/+y74caEJ1/ybC8eQlAw
JeiGjx0TmoxoluqPIujvr4/emzGhLVvoID6O4AOjn+v/jjAhX2dHlS4dQcbB
IN8FeSYc/mvx9ApC0E5En58iyoQ5lOUis2kEe5d5IvZtYcK/5j/u7plF0Kyn
4T/9xWUY5LyaMTyHYCP+MsV+bBmWHO29+mQBQe1kvT0v2pfh2489oXOLCJb5
8RQk1i5DuUq/kwbLCB652aBaVrQMqzL8r/gyEcwyfFnVmboMbSIymAkrCMof
1NNfjFyG35s7uWNWEYwX5mmh+C/D6zXSwffWEBRZ/nFp/8NlWL6YFLBvndC/
O3BI334ZdnJkLvwgeDOue9PBYhkKpCW2aW8g6PGBe/bFmWWYW8K16wPB874/
HicdW4YPlQPofQQ7OQayQYVl2Cc/vJ3Yb8JhA93ALrFleKVirYFJsOUBbvIS
J5GvecdIB8EtQj+ihZaXIJ/p2zuRBOsvBcgcmFiC3qfuuxwhuKpLJ83g3xLU
+t3eV0DEowq5DjjWL0H2shOVwgTnJ9V/9S1egjqzahJmRD5KvgHYh7Ql2O8c
P+JG5JvsoFMHo5egpP4R+YeEHlIGXMbdAUtwDmftuUDoFb6/vn3p0RLc+p8k
jxShJ69QgLWw4xKcqPueW0bo7bN4ZuzAxSXIr6n6R52oh2tZ3YKjyhLUEOr0
nZhBkJro7+GnuAS1m09t5Sfqa/PizOZkiSVoqCh/hELU/6x+nXAPcxEyj55C
ZVQEf+zzf7dMXYQeTRXhtoR/NChn5ES6FuGrOs1K2giCBztrDxt9X4TOa3ur
4/oRTC/1K7mZsQizzFreVfcgKJt4WtM/dhHuOrXA9bsTQZJ97bly90VYvu7x
ybuF8KeeX1fPzUV4sEliYG8zgiz7Tl9jXlqENw69K/72C8Gp+Zq7h1SJ8bYJ
WdyrQdD+ny/TSGkR1u1XlkuqQLC/RNvLSWoRGna8fZ9ThmCTd01IyuoCPN1Y
ketSiGA2qSZHtHQBmhpqfXFLJvK7TNLtz1iALtZnTDUSEFxItxz6FLMArU9b
XZiIJuqlOSus8nABJu7MSKl/jWCd2zZ3y0MLUPJrwvpfNwRvVt4UkpMlnifS
7OJ+G0F+waLPdMEF2LTn5ON1BwRN0wz6PRjz8Cdl9WGkJRFf12OtxDSCB2uY
whiC3go1vQ5R89Bl1IIUe4zw+33Sw4N+8/D3p3bW1f2EH/k/pVden4fZyqRw
ExkEl7BWgVHpebjPqMlDn4XQ7+O+TsWIObjtyipLYBED5s88dp31mYNV3k6H
mz8zoAWo4S1xnYOltMeDcx8YML7DEhiYzEFSsHZ38xsGVOQJTHbhnYNxzpeD
h2wZUOP2sHO+1yw8freq8TYPA46U7ON8emcWXvsaZf1igw79udwTta7Mwman
f4cfzNJhYxKppe3kLCzXfzc800mHF1vVji8vzcBE1v4JvU/E+qMSza7mMgNr
U76EhajSYXi4ZLfZ5Rn4+fk2hcq9dJjPeJfvYjADv43/VGzZRocLSUm2ibtn
oJDL8eJwDjp8yJNZyzE+DdM/FBSG/KBBj+6ylw1XpmGx7WxQgDEN+nsMUy6c
nYJKe/4UUDUn4acOO9od9Smovsw6rnhoEtYfnKgK3D8Fp39OlenLTELuMfr9
Ev4p+MF0Ol15jQolEhjZgJjn83rkvsTnUaGcutCxX34MSFfUet8nQYUqL6zP
jDvSYIn6wd/5f8dh/dLTlMt6NGjC1z9SAcehhVMcW+tuGqwJDp75mjEO75/7
V1JOm4RX/qOdsPIehzky5w7EEvsAy+3qBf4HxuHOMm0Jw7tUou8sKp8EjEGh
xT20vEfjkMphOu2gMAqR/eqbZ/7DMC1s5ciOnUOwJeuAoKHdMNzlptyVzzME
v83ZBUtpDsP5uTv4vqlB6PO8Obh4YwgWmn1vGP46CCWiPobMug1BZ13HS0Y6
g1Cz1jjshu0gTI/9z0rDbgBGyaVEGGn0w0hVrSNc2/ugd1WsClhqh3u+qpg0
OLTDtu+qVensOPzb/uDX/DSE1kraa6YhZSD+8DQv7lEGBs5YnHeO7wDGrM8q
5Dg6gNrIk6u/ejrAFqOL99rVOkCMZ+Itpf/+Aexb8ZU7jzrA2W/UF9TYfyBi
iy67FaMDVOx+WmgX3QnqJWuU+Nr/gST+JFHr8G5wo1dAN+FDFzhInaft1OoH
OY0bZawKfWAuG2SLnRgGFQ6T2dTxQfBz9wnybathUPw0bzmMYwh8SD1yv/bZ
MHhgbm+5c9sQOJuw54Rb1TAwR5/oPOZDIPe1ZO1fgxHArv36Z13lEHC+tdj7
+sooeKR9+fhC1DAYU8zm3+Q7Ds5sHVbROzAKyj6m37H8NA4StBTEV3VGQYTs
x5a8H+OATXZSL8xmFGhLvIuxEZgA53QrTt4LGwXJXC/l8agJcMmcpL42Owqu
jNupuWdQwYGAg3GUnDHQmbLVebqJBiwFUVYEZQIUbs48+2mGBtTbdl59rDAB
wm4cP2otRAcZjcbyGicngP4uU5Zf5nTQdNzw1VO7CVCWGRD6qZcOltRqjBKL
JkBi3lyhNY0B+gYCpQJMqSD/ysjGqPcUGI0pFdd8OAlkSUp3K8KnQKoP58Cz
gEkQXH53+F3KFBCbUBV9FzMJbsmy1JvWTgE9ZT8f95JJID8sEVrBPQ1eJ0iY
16xPgqgbxjviQ6aB3uHiKe+nNODu/P3M+YQZIH3yeJn8NTrQAPPX+bNngMdo
p1egCx1wC+7zrC2bAQNh/p3N7nQQlZtUfLx3BhSFFFB4wumgcC5Acet/s2DO
QdJevpIOZh5b8I7FzIJJbvKPBUkG+KYXqvA+fRb4tGy+9VqeATylfmpe+DYL
Xj/Wm+E8QLz/loGnDf9mwYdkO/ePWgywl3UnI1tsDtCUn7l63WIAR7/53w8j
5sC2gtn8giIGOGixj3bg4xywbXuw6oYzwLKCA+dkwRwwMM0IkahnAP8f3ZhV
6xy4YNHrzdnJAB/5qnLVhebBljco2YPJAM69a7+Y2+fBuFiimwkbAsrZR6l5
h+aBIaej2WZuBKqMM2Tlz80DYYsYWRFxROQdGsYdOg/qlg/v+KWMwKfrP7Mr
E+dBfXZkXLYqAreVN/98kjsPSmzzqa6nEFhve8SBmuZBvr8wI9EYASmJq/f/
CiyAlKzMgVAHBIapMSFB0gvA/6OOubcLAhnfWz5r7VsAH2xf3jl/HwEVqzOj
RYYLoCU7/mn8cwQs3u8zj3u1AOYzO60q3yIwt6X3alr8AqjP6G5RjEUg2CXI
qTB7AQgsDdo5v0egXm3Cs6l5ATQnnKgKSEfA7mNkUM/gAih8Q/G5mo0AG792
JHV2AYyyrZwWzifG60nK5BBZBGWLVTWCpQi0aZoUkXYuAoMV1wcW5Qjczdwo
33psEQSENIg+qSbidbdsP3ZxEYT8+y1k/ut/+Ymw3YpfBH3Oyb6XuhD46lnF
+zh7EcRwTR/36kXAdOKuqB++CEo9ar/7DCDw6utvpcTBRWAy9Pq//8YQUNzm
cTRrdhGoiMktfplAoMZPSeM7xxLIKX4TuoNG6GkWYN4qvwTgw2n22CkEYsqO
2gweXQKc29tbEv53/ik/6oTOLAGWC85Wz+cQ+PMq/MHqhSUgZP02VnUBAed5
DS+um0vgU865Vy2LCHBbTQeJPFkC5myd+/93HvqxKiFy+yvifk0vn0gmAhpK
hkn745dAStJv34oVBPrCVjNPZi8BqUDnI/WrCDxZSS/SxZdAyMfDoRlrCIhd
u1Bh3rwE2ke2RTusI5D/Y8uv64NL4PXDS7rsGwgYHyxsvzO7BMT+Kqc8JJgW
fX3Qg2MZWGUpptUT7M9Kob8UXga2nL3nFwje4VC+GCW/DOCO/zLWCcabXNg+
Hl0G34N6Pw3+73z12Fa+vDPL4L6AhlESwUsJP0XxC8sgtzw4/iTB4VvcZX85
LgO/NdXIfCKeAy679nS6L4OBq4PHtxDc2NZ+dCxoGfxq1vJTJuJ3VPPVmHu3
DGJczz8HRH6bPx42YM1eBg3ZCvJyRP5JfEPm/Pgy6NzH8niU0EvtfoiNZPMy
+Nmt9dR7CYHObnBLYXAZRPQEHVgl9HbTZDxQnl0GRm9DooznEaBkxnlpcDAB
lng8//ksAjkUvVdGwkyQ1xbmGzSNgL77cqSlPBOkYB2kewgBH12zz25nmICv
65dlGxWBbV84vnpfYAIDkVIZk3EESsTzKoIdmSD9LTk9dQSB+XGBjvQgJrio
eoA03odAqHHZYNE7JnBK9Vxo7kZg71cnelUWE+S0aWdG/iP6wa+era+JCS4c
YIsq/EPoKXCzqL6fCXxPRcsY/UbAJJLXKX+KCazOme+va0BANdWoNUBwBYz3
Wk1eqkKAXNuaeth4BSj+Xca4if7hNHpgKX1lBZxvOmeZSvTXWpsYifv2CtD3
VpCSy0BgfPTS4743K4CspBJbkYhA6eZB/cDfK4Ci80bS9xUCX157s97vWwGz
Zm69Cv7E/CIiV2iNVoD4d7pTpheRj7y9tLLAKgDD19jMHiBgr82Y7jNcBd0Y
V/YhawSEfJkRyo2rIDJ3y52tuwh/88fpbetdBRIrv743ySCw8fYkCw9jFdDW
nY5el0CAmvLcoZ9vDQgOF/bu5SH8Vb1Z9aXBGsj+L6vi3CQDOG2iDPT/XAOd
qqb0wRQGsHmV/7ahew1svPqynBHHAObCZrqFtDWQ1Zr5zSyMATTkovNe8q6D
FpEXz0yeM4CYlrTvEf118LivdGuPBQNU+uzeHdSwDlhXOq+f52AAlY237+W7
1kFas4+32zIdfHnEIlJOXQdNvQ+2uTPoIMm5lWWBawPsCpHc2NtBB14Wz9qs
z2wAt3+3H2ukE+uT0l/PQ9UbwMDYTEJWhw76HU463bJmwZzrW9dE7tKAVOrM
R5UbLFgzyFUou0YDFsOpA1tcWLApk5xzuudpoOky2TzJgwWreb1ngHSMBvBz
Y+rt71gwuWe6V61XJ0HCyRBR9W4W7MyXOC+W55PgMmmkQugCK+b7DPtT5UoF
HDEtcy+vsmKCib++pV6hgnTZKnl2R1ZM5Eaz+C0DKlg89CFw+jEr9ojnWUiC
PBUEm1092xjHigV7uf5IaZ8AlbE9A379xHW9zyO6hyeAgnwby8oNNsyWp8Mu
pmMMzKrUqg24sWPrW8Ss6v4Mg5pzOVq1HuwYTfFyF/5tGEQ5Ret/9mXHJjKS
d6QkDQO1+JsXH0WwYw82nXY7cHcYBLIKupEK2THYkJd5SXAYyNZZfFafZ8dq
z3Rd4tEZAibnqZJJrhzY3ggLTe/MAZDtwrdsc3sT1jO6Q7PVqxtwPBv1tAnf
grnXFF1Mz60DntHbdUTDubCw0XWeI96ZUI/j2a6qAB4soctH2mbuD8zSudXB
SOPDjofQh7N3D8CpUFmL3lw+7EsCj/9t7QF4sLu9/VcxHxbUm79729UBWOis
0Z5Zz4c9b8zl0Y8YgDBMtM1xgg/77Hn63N+NAdjUU/53VIEfexTMdTXg9yCc
vSPyuzeVH6M9TZcZvDIMj3xvMGzM5sfk4rR0TR4Nw4ccno2lRfxY0ES2QWbI
MFyNmPwVV8uP3VZVfCFXMQw5SvCfF8f4MSG1BClZ2REosvnmjzZ5AUxnzsV6
X+8IPBYDqxtTBLDkH17cTK0xOLw3W9U+SwCrFGXT8bcagyGV8XmsRQJYsfS8
38q9MUilPU08XCeA1e+YjQn+MAbjgOrTGKoAJshxQf7uxhh8ftdSIk9UEMsv
9a9cyR2HI6L/mj0sBbGTRca6D1ipUHXQ+FXDFUHMQHvd11WYCkMz686I2Qpi
MIDlvckuKlRT/wpzbwli2kFnefKMqTDKMfLzsIcgttjFasAZT4W6pecDdBMF
MUbMCemJg5Mwy+YPJjIqiOWYJd2b0qTBFIcnNEOqICZPTmjLM6XBuNvyUX4M
Qcx6ZCrd/DoNBno8RksLgtgTXm5bzJsGbWNk47u2kDCDC5uxcEiDUn/urrzf
RcJ4Gi/yHT1Ih5R/Uqn/9pCwR/GzRcuADrn7a86SD5KwkLKOxlgDOlyiS6R7
q5CwO6uIw8OeDv9yVVrY6ZGw8Q2Zma9xdBioTincfYuEVUcdPb26ToeeZ0qv
Xr9Dwi4dfTKexc2AD41u8L27T8KWTHSEMBEGtLP6fp3fg4Q5npfoWFNiQPVH
1yjTr0lYsSg5d8SCAZdy8m4X5pCwlqwrOy3TGRAVWUmhfBLGnn6qeDqPAUfL
ttTtLCZhaXG7xW1LGbDl5yXp6HISFn1KRHzkNwNmj7M3uv8hYXYO7KtnZonx
tpnuVp8jYfLplwYiDyHoih6rH1giYZs+c5D9VBB8XpZoLrNKwipkCtbN1RGM
tUTerBxkrFivZzreEMGmqMDucgoZc3N8/Qq/gWDPjdyZXFEytidmYrLkFoLU
Ix2cSZJkbP5LekuMK4IcrXLKXtvJGLWxdO+KB4LHSeWvNA6RsaOPjt8yCEdQ
u3/sw8GjZMzg2Bbf89EImmbzf5M9Qca+PGKuq8Uj6GxgOcp2ioydv3t9vSAV
QXcp79UZbTKGDWe5n8pE0H8yjTykS8YKzWq0v+QgmBSwqFZ5lox9+qNbcKgY
wWyLrefzzIjxwx8Z/+98smSn1s0PF8mYevOSgko5gu3VoZHeNmQsazXPq7oO
QV62vVOn7pKxMO5D9x3bEBRvNt182I2MbSDFCN9/CMq/d5fa8ZiMyYuQ/3l3
I6iuVn+Gw4uMtdxSLpYZRNCQb+ry3Asy9lKUxaRiGEHLbpH7wwFkLHOxbePU
GIJuj68nVoWQsSkoEE2dRNBb52VR/lsyNlKDPAQYCAaLffmVHE3GgHbHXeEp
BN+NdQyFvyNjt079vbs6jWB64cayTyIZc67kfFo1i2DRC3nB+ylkLPxn2Ztb
8whWmRrI26aRMWX7C2mLCwj+2X5P9fxnMnYk+WKdzRKCfTMxZ7VyyZh3uM1k
1jKCtPJye+UCMmZluo/UzUSQGTzuIVdMxqK2vDtGXUFwyxWBt8KlZCy/K+XK
v1UEhfYdydhUTsbaOW3809YQlFm3LJ+vIq7/2ZJ9cR3Bvb+820fqyJhewORf
GsEn4tLprT/J2OuAZwvWGwieudnMXtNExhgnTUXyCT6vsiRe2ELGqraKHZog
2IZLev/HDjKW+CVSf4Pg2x1a2hHdZMzrdakNsV+ET1OdLH37yVjf+dD7jQQH
uoXddRsmYxnfVF/4ERyl9c3fbpyM7XzKGipDcIrQQLwZjYwl3zwVF0fE82Vo
S4H2FBnbZuOdvETEf6+joeblHBmz+D7ctJ3go7/edDQtkbGDNxUDFYl8meXn
qMJrZMzI/XYzL6FHSaHo6kVWCnb1yWrqD0I/j4wuvvebKFiBz0mB64S+2PsE
6REuCha29yfnP0J/trfXDijyUzD7CMeIXUR9qgN2nnIhU7AGC45v54n6+XtM
muaLUDCd4Kz7VkR9dV2z7ZYlKBjn39QGDCHYaHk00Hs7BdPdY2IcQyX8YbIS
W7eTgklVGvgIjiN4Tht+5lOiYJUXD1rZjCDYse90c+RhCqZpIsQd3YdgzA6e
oe5jFGw9PG34KeFXK/HfczInKdivOLM7aoSfB9nMxTK1KJj1GCP77B8Ekxcl
FKd1KNi1tRKHj40I2tF6TxwxJO6/Zz/S+gPByVY7a9yMgg2HDR2qq0Aw64fi
nU2XiHhv9Qu8LCPqBRleutYUjI1VGN/1DcG5T24fW25QsM+YVi6T6M91d1/6
+EMKNoOSnCbjEMRv627seUrB5uB/z15FEv1gy09y9aRgsrUnQ3lCEeQ0iji8
FkDBzifk/I31RZAk+9GdFEvB/qruecrnjGCLiOMrswQKZnbIwyCYmI8iePYm
xH6gYHbfZc+jKwhKzBdUyGVSMNfsagWNcwjuqKvmUimlYI3zc2UnjiA4WhIg
+aycgkVEacsn7kUwLddgT1U1BeO/27BpSJ7wc2yrsWEjBcuzHDBeFSH84TwS
adNHwc42HRHznWdAXaFN8i9ZhTBhm7uL6xkMuL1ZK8lvkxDmtPmzQkcSA66+
8t3qwyWEceFNtNBoBvy8hVP0KUkIe/28+uxnXwYUXOHmdJERwty+xcS7WTNg
64Ag9ay6EKbSt2fwGg8DZsWb2BlpCWELK29aLrIwoO+l0EE9Yulwsjuxcmie
Do+1UrqIWmPPmjtIr3rpMKZO5OeRq0KYLNurxK5sOrySLZUl4SmEkSV3R8zp
0+FxJytF0RfEeDIeakIYHZJ3xX+kBAhhPpkCnSKH6LAySTqBN4RYmnxStlaL
0aF8hGzw+nshLPX9uEHtIA1OPlG4O4gLYQfnmTuc79Cgm+7hI+kswtjO4VHP
9EeTEJ1KTQrlEMZis8deRDhMQvuTEgLunMLY6Qu4tf2FSXhpP8u4nqAwphLX
8af02CTERH5G06WFsWiw/9aBBSrkGby2th8IYx5n6x/oOFHh+0dhVUVPhTG/
/fbcX7QmoLjr5gPvPYUxvXstbx4enIChTo/e+b8QxjQF7Dh3Sk/AF9bWbhde
CWNTbc1Sqkvj0FFrt8JKnDAWp1PQfSZtHB4mVb5UKxHGhE9Knl3bPA7rP82c
rWYKY/IWXxwu5Y7CpVq272wbwti5h8ZPr0ePQvkx8naMXQRT2t6vZOo5Cr3k
Ds1+4xHBjDOFf44Zj0LVJNewHCkRzKquZfMQYwTmxM79jVUTwRTNedPU5Udg
1OsF07teIpipcgzvDe8haH+PaSbNLYrpZKb8V7nSB2O1DjPPbRHDbCq/pII7
zTD9s3lkGY8YdtDwE/exPc3wq7D74V2CYpjhVcmnkhNNsG2k3HldTAxrSs7v
Tr7SBAV9jYY+KYph9C6nU2/fNULfGsefawZiWJWhaJOZ0Q9493RifGq4GDZ1
Vap4a1w59MyuOkGOFsPa2QqeiAmWw2DR8Y4n78SwUyz6rmveOPw8tpdy9qMY
1iDtoSPaXgbH/Ur8VovEsA28PzrS9Ru8XNd+26RLDNtkwXNo8GMuvLV/ha+k
Twzr4L0Z3R2UA59Ebc2QHxbDLkUGpLwYyYLR9rYjKzQxLKhnj2rOk3TYwjl7
4eO6GBZQb+camZYIh26LLAqyi2N7H6fY7ZqIhzMdx8Pdt4hjG5cbj657xECB
tOeNxoLiWDh28rx+egjcSkq++V1IHJu0GP/x/lkgVHpUyykvLo6pZCe+80/3
hCcGqCnB/4ljiqcVGgvS78D//34X+//vd8v+D6jrLro=
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
            0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
           0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwtmnk0Vd/7x02VmXuvmU+iSNKcBsk+hDJTQkVKERKV0qCUIVMqU+aISIYM
mVLYx0xKlCnzPFz33m0erul3vmv9/rl3vdZZ5+zneT/vZ+999joyNi5nbdlY
WFhKiZ///evq8J9akRHHr0dpNw4ph6idKHgyxblVHO/Tk5USD3MBSjKT70Qk
xPHN6tqjVaHPAP9y7dIBsjjerL3Oahv6BjR/8syyZxPHI2Vm6VYhCcCCc168
bVAMtyq7xOXxKhvcqO2ayvkghutmHLkh7QGBj1ZavJ2cGB712LK8H/sN7rQw
yWEUUVz5X37uzYd9IOKs0cVwAVHc53WBL0dOHyhp+pD4lkcUt9aehU/H+sDm
X/r7o9hF8bGjixjn7n4QVx1v8G5WBNfbsS+hI6of1BVq+Kf+JViSh2Z+ZwBs
jQ5c+x4mgt9181QTFh4CmqJ9mqVvRPA1i73heXuHgMPbQ0FlL0Xw7hrHWrUz
QyA/pFui3FsET18sviLpPgR0Avceq3EVwel+G9HUviFwz/3P3aZzInj/gxH1
hpRh8MNKYnyYIoKPTt25SpUZBUYJqoApIILr53MJeh4bBS39lyMEeEVwHo7K
22xGo6Dn2gdNFQ4RvKDdeqbKfRRMOSglvpkTxkUpignaLaNA1E3tokqrMO46
naio6DkGrr+2+fkmQhjftguvHqwfBxO/fbanhArjITcyvVJ7xoEzKfXxt9fC
eBXT0950ehw8CJ9UGPEVxpeevrxmJzYBAmPuvVB5IIwb3wzmdbCdADkffdVG
zIXxQlEz2X/MCbBWlp6jIi6M+3m7z4+TJ8HPzn28K0LC+N8XNYpLOyZB3EL+
je+Cwjjp5zN8/MgkUN0Lt6pyCuO3eW6W3Lo4CR6/+xt0clEI/3ZmvZbj/SRY
cF+1x1qF8P2fKvaZydFATaRnFUuzEL5imXrirjINvM3bvK38pxCuei38nrMW
DRyeFGxXrxLC/aP95bbY0oDrRTmtU3lC+FJgdVhREg1MHTOU0Q4RwjWZ5KhN
YnSAm/59svmVEB7lmGkkJU8Hb25bdNT4C+GPlxp2kA/Twd5PNm9OPxfCZWQr
x2OM6OCW6IO1My5C+KGJsp3SL+iAOp/wT89ACNcLPe4xMkEH30hyyrw6QrhK
O9/66DwdBOxJD/6pKYQLLqzk1LAygIJt/mkDVSFct6Pw8TZxBrBrqSsw3C2E
T9Ss7lPVZoChL9MhJlxC+PGyNwe5YhggbjPT6+ImITzrU+B17AMDmF1ku3eN
VQi/OJrqfiGTAepYKWb3lyk4PS5Z+UAZA2QZH5aInqDgadJJI/f7GeBGsipP
0ggFvznbpf99nAG2LWmupg9Q8OinM6aDUwwQlnC+t+QfBR+Ir9vZyoLAQ4Zb
Un89BZf/T2FDXxqBAxrPwiaqKTjH4ouweHkEqG/9fGbKKfginHrZvAcBq5NR
dhzfKLirPwzqOoGARlCxokI6BW/cESPwzAyBlb5yyQMfKbiG7ghHlyUC+Yd+
8KokUfB+yxkFsWsI7OzqZOjFUPCXWyeHlV0Q4FVc/eISSMEfaOz0X3+BQPVT
juSHvhR8SMnD8NpLBDyaed96elFwhb4e4bRgBKYf/vcg7DEFN+yUCmuPQaCt
Vu1EkSMFF8/kKoOfEQiWPK2E2xH5aGiwKX1BQMfF6L96GwruE3pD5lEhAiUi
VzY6L1LwTZLZfQVlCCTaelau61LwF/bX6V9/IXCxOCB/y2kiPgPr6N3NCAjx
haYInqLg/ueaWZ+1IOCbn+Qne4KCRwjtXKntRADjzHi4+ygFL2/qeVHag8Dy
pTyHw4co+P7CXDysHwEn9io97d0UfI9l2onBEQTkzH+qGu2k4DLqEW4XxxHo
TW/ZY7GdgoN3B83zqAhErXdvvSpNwSvY9nfRaAiYnB0RcJSk4NSWyyxbEALc
H+ksrqIU/D/drCrWaQSqluen3SkUfPaWknzPDAJHEje3vOKh4Efk/IqVFxBQ
+X2nXn0LBV9/u922eREBtbXusnk2Cm4zc1npzDJRv91n8tPWyTj9qz9fDBMB
7Qt5aVZMMn5kTWJL7QoCun5bE0gLZDzV4Zvo71UEDAsCwqunyTiP+hG1L2sI
nB2aC3hEJ+NUa/9Ht9cRMCddebZngozjJ1vruDYQsAQN9waGyfgc/eZuD4Kv
3Dri+LafjCdvq3n/i+DrsYnWOt1kXHO7v8ISwfb1vOfX2sk4x8DzijWCnRYf
6Ob+JcYbSnPuJfi23BCw/U3Gnxnv3BND8L1zhsriDWTcgnF6fT/BDz2LFX/V
kPEt0i8Gk4h4nmTv2OZZQcYnB7w6ERHv8543wsplZDz8j8CYKME+PCvcE8Vk
vGmnHJckkZ//cTuWdwVkPOTLqPoyoUfQjeZ541wyHtOdFPqF0Cv4reokx2cy
vvrxz6r2EgLhlan9Xz+RcdtP4l6FhN5R0+Q2p2QyfpxHewfrPAJx0h4N296T
cc+XxiPyswi8N5jAW2LJeMI9y9qdRP2S3U0L/SPJeHd80U92or6f0mCGahgZ
/+7UufiNqH9mu2Li1GsyLlN3Q8+A8EfOpoiI5EAyriu958e3MQSKrzp58nqR
8akVh/M7BxEoe9Puhj8l436txvbyfQhUlGo43XtExj/pGeaxdCPwQ1zcvPs2
GZ8vVmM53YpA42kf/WAnMv5f5BxXHuH3P/eRuqY9oUez9iUm0Q+dzdVKmdZk
/KKz2KhEDeHXjf2yVy6R8bLCzwpz5QgM7okTFTIn48bSPNWfSon5IuAu2xND
Mm7gKSmdnI8AU126Q+8kGeesLaEPvUdg3SXw18YxMh4p8DY0KhYBtvj5irzD
ZDw67FGpQgThb2bDZ0klMr54Mr2sKxAByS8PvSclyPiJ8hyFV3cR2NY/9DBB
hIz3pfwo3OqEwA5+I+dzZDJenfeNNcgWASVHuQvfucj4/dx42rI5Aqqyf/a+
XCLhLBHb57cT89V7Cs/hc3MkXLRp31jRIQTYN2kel5wi4W9DTXbsUiL0GSs4
lTFGwidC4hI/SCFg8TnaoqGNhK9a7X23vMIA945d9eIpILhQufRAPgN07Irx
+5tDwtWT3FPi0xnghOTfoNhMEn4v0OzOxHsGYFvXjNydTML1YmT7xF4xQHCl
QqZeGAmv3F2m23+NATINp1pf3iHh+06zxUryMIAgtqvr3C0S/ruGvtVpgw5c
D9j0SzqQ8P2PuzRjZ+lARaiFmnGFhJuu3Mt420UHdf+KNhqMSHhvb4nlahod
DF9/tot3LwlP/U8/5B1GB1Lu/E+DqIL4udb+2qjzNOCQ/EP03aggztrHmjOh
TQOFv3y/fB4UxAUOiKpIH6MBk20bY42dgnj0d/dbxyRowLcanSU1COJ5c0/G
d/RMAiTQrBCRIYhvTekGs1aToCI5rCXBSRBvgCWaf/WoQKDRyCXHXhBfqe6Q
bjtOBZaLPNzl1wVxEz+xaLiTChZ1fMCgpSCOWGQztdmpQAndS99hIIiruQZp
7iyeAG+Pmz1P2yOI/w79IqCxbQI0xR2wsOsRwCON0h5c7R4DLMkuET0tArjM
klJdePUY2J/xucX0pwDedEuN53PWGAgu3mVy6rsAfvvyreag52PAuE1Gd1u0
AD74wRLwbh8DTQJk1U5TAbzn3hsB2WujoMlrRtrwJz9+bj/OdGwaBr/t88aU
v/PhfJOM4/9sB8DHXc3HjEt58EOBYueznrSA/TFNt+/Wc+GRdpe1Jsfzgcz+
k50iGVvwrdRrem36tZD6TWvT5txN+KCfvNa5nE6YEVL0w/XTJjyhYl90BKMT
OtnvCh5I2ITLuU2xfVfqgnRhPsnS15vwf/I3mCmfuuDU7Zb995w24epdX/NX
47vhgvw1y8Gdm/DZB9qfXV70Qraw53ll8Ry4Ko/HwUrJAVjpMPNQKYIDZ+tx
ff3l2AD0wa6rxbziwDOTP8u9Pj8ANzFO199/woFbbPP25HozADl1BPqULnLg
BnfaTflYByH/xjvuWGEOvOOZ0rjSwCCUvPn96oMgdvz1tec5tOBhGFNXp83n
w46nxbC8Tk8fhhLybbs/uLPj9qvOr02qCB6Ymm90ZMdTzDN8Ly4OQzFz+UB5
HXZc7KQ+dt5yBAqdCvnSuokd1xV5E9gqMwp5JW+wH37Ghgv3d77QjBmDQQ/v
jde7seG7yvUrpnPGIE+b5y9rZzacJCVa71M7BrlD4iJfWrHhd5i05ktzY5Bz
y5/dQyfYcDstP6kG/XG4aVbVNHSJFVcr/34+emkcrv8gp0zdYcVtSq68ND5B
hSZR8gWijqy4zsYrTTUDKky2ValWs2HFqZWjWWRrKtRlsRkJOsuK33cJO+vi
RYURyrlyuw6x4qc9nq/M11LhnvdGH6/OseBjrP0mioaT8Pmta4X+NBZ81n3s
jPvlSfhH5UFN9jALzu66n5rrPAkftsaPrrWw4Ovcx+m/X0/CKm6GfEwBC27R
8Vb7169JaHk/KPWPGwu+KLBTHtemwWyN90XLziy4N0Mu7fp5GmQTzK/ddoMF
r1VvHqdfo8FP6V1jzuYs+KM1U7us5zQ416eowHOMBR/JnugY+UqDIsTE5Tez
AUXkOKiyO+jQFfCaOiyuw3Ru+bSnI3SoeQq+uDa6DgMqh94ET9OhyOm7RVat
67A7tzXEc40Ovxp2SJzNW4dFD2/mrgkx4KpV8oCKyzo0qr3MsNRgQJ8nqi68
Y2tQ+oqWWWYEA55/jt5vbluD/B3fGDHvGVDeJ+kPS/UalP+r0W2XzoB1LzmP
zCetQSl/s8CIUgbki21Z7bm8Br2MSzeZDjJgRLFTYHbbKrznFReuJofgjVLp
krTqVeim2Jq4poTgsfI/9A/5q5CRcsw2+jCCnXXHTKJCV+HwCWWa3SkEt3Zw
iHkarkL6VDHlgjWCqKtIx/3kKvQaGp1YtUUQ73N0v6+0CoN9vik/dULQZqyp
14F7Fabn8JMojxBMXYhLOVuzAif36JDDghF8yDRq1y9Ygbzpt5vEIxDUXWfj
Op28AsvE6389iUWQtsnB6YTXCpQuaL7VnoJgKZdUvPKdFcgeUc/xOx3B13y/
f++7sgLlBj0rk7IR3C+sfGiH2gqcOO2Z1PsVQVbx8etb96zApgzTr9qlCP6R
io0Qk1qB5yRZBwLLEby3g5XJy2RCq+4S89R6BL8e+oXPFzDheOkrq/0dxPNE
X50hf2TC00H/ctS7EPzE1G/aG8GEqlSpmEO9CEaV/+y74caEJ1/ybC8eQlAw
JeiGjx0TmoxoluqPIujvr4/emzGhLVvoID6O4AOjn+v/jjAhX2dHlS4dQcbB
IN8FeSYc/mvx9ApC0E5En58iyoQ5lOUis2kEe5d5IvZtYcK/5j/u7plF0Kyn
4T/9xWUY5LyaMTyHYCP+MsV+bBmWHO29+mQBQe1kvT0v2pfh2489oXOLCJb5
8RQk1i5DuUq/kwbLCB652aBaVrQMqzL8r/gyEcwyfFnVmboMbSIymAkrCMof
1NNfjFyG35s7uWNWEYwX5mmh+C/D6zXSwffWEBRZ/nFp/8NlWL6YFLBvndC/
O3BI334ZdnJkLvwgeDOue9PBYhkKpCW2aW8g6PGBe/bFmWWYW8K16wPB874/
HicdW4YPlQPofQQ7OQayQYVl2Cc/vJ3Yb8JhA93ALrFleKVirYFJsOUBbvIS
J5GvecdIB8EtQj+ihZaXIJ/p2zuRBOsvBcgcmFiC3qfuuxwhuKpLJ83g3xLU
+t3eV0DEowq5DjjWL0H2shOVwgTnJ9V/9S1egjqzahJmRD5KvgHYh7Ql2O8c
P+JG5JvsoFMHo5egpP4R+YeEHlIGXMbdAUtwDmftuUDoFb6/vn3p0RLc+p8k
jxShJ69QgLWw4xKcqPueW0bo7bN4ZuzAxSXIr6n6R52oh2tZ3YKjyhLUEOr0
nZhBkJro7+GnuAS1m09t5Sfqa/PizOZkiSVoqCh/hELU/6x+nXAPcxEyj55C
ZVQEf+zzf7dMXYQeTRXhtoR/NChn5ES6FuGrOs1K2giCBztrDxt9X4TOa3ur
4/oRTC/1K7mZsQizzFreVfcgKJt4WtM/dhHuOrXA9bsTQZJ97bly90VYvu7x
ybuF8KeeX1fPzUV4sEliYG8zgiz7Tl9jXlqENw69K/72C8Gp+Zq7h1SJ8bYJ
WdyrQdD+ny/TSGkR1u1XlkuqQLC/RNvLSWoRGna8fZ9ThmCTd01IyuoCPN1Y
ketSiGA2qSZHtHQBmhpqfXFLJvK7TNLtz1iALtZnTDUSEFxItxz6FLMArU9b
XZiIJuqlOSus8nABJu7MSKl/jWCd2zZ3y0MLUPJrwvpfNwRvVt4UkpMlnifS
7OJ+G0F+waLPdMEF2LTn5ON1BwRN0wz6PRjz8Cdl9WGkJRFf12OtxDSCB2uY
whiC3go1vQ5R89Bl1IIUe4zw+33Sw4N+8/D3p3bW1f2EH/k/pVden4fZyqRw
ExkEl7BWgVHpebjPqMlDn4XQ7+O+TsWIObjtyipLYBED5s88dp31mYNV3k6H
mz8zoAWo4S1xnYOltMeDcx8YML7DEhiYzEFSsHZ38xsGVOQJTHbhnYNxzpeD
h2wZUOP2sHO+1yw8freq8TYPA46U7ON8emcWXvsaZf1igw79udwTta7Mwman
f4cfzNJhYxKppe3kLCzXfzc800mHF1vVji8vzcBE1v4JvU/E+qMSza7mMgNr
U76EhajSYXi4ZLfZ5Rn4+fk2hcq9dJjPeJfvYjADv43/VGzZRocLSUm2ibtn
oJDL8eJwDjp8yJNZyzE+DdM/FBSG/KBBj+6ylw1XpmGx7WxQgDEN+nsMUy6c
nYJKe/4UUDUn4acOO9od9Smovsw6rnhoEtYfnKgK3D8Fp39OlenLTELuMfr9
Ev4p+MF0Ol15jQolEhjZgJjn83rkvsTnUaGcutCxX34MSFfUet8nQYUqL6zP
jDvSYIn6wd/5f8dh/dLTlMt6NGjC1z9SAcehhVMcW+tuGqwJDp75mjEO75/7
V1JOm4RX/qOdsPIehzky5w7EEvsAy+3qBf4HxuHOMm0Jw7tUou8sKp8EjEGh
xT20vEfjkMphOu2gMAqR/eqbZ/7DMC1s5ciOnUOwJeuAoKHdMNzlptyVzzME
v83ZBUtpDsP5uTv4vqlB6PO8Obh4YwgWmn1vGP46CCWiPobMug1BZ13HS0Y6
g1Cz1jjshu0gTI/9z0rDbgBGyaVEGGn0w0hVrSNc2/ugd1WsClhqh3u+qpg0
OLTDtu+qVensOPzb/uDX/DSE1kraa6YhZSD+8DQv7lEGBs5YnHeO7wDGrM8q
5Dg6gNrIk6u/ejrAFqOL99rVOkCMZ+Itpf/+Aexb8ZU7jzrA2W/UF9TYfyBi
iy67FaMDVOx+WmgX3QnqJWuU+Nr/gST+JFHr8G5wo1dAN+FDFzhInaft1OoH
OY0bZawKfWAuG2SLnRgGFQ6T2dTxQfBz9wnybathUPw0bzmMYwh8SD1yv/bZ
MHhgbm+5c9sQOJuw54Rb1TAwR5/oPOZDIPe1ZO1fgxHArv36Z13lEHC+tdj7
+sooeKR9+fhC1DAYU8zm3+Q7Ds5sHVbROzAKyj6m37H8NA4StBTEV3VGQYTs
x5a8H+OATXZSL8xmFGhLvIuxEZgA53QrTt4LGwXJXC/l8agJcMmcpL42Owqu
jNupuWdQwYGAg3GUnDHQmbLVebqJBiwFUVYEZQIUbs48+2mGBtTbdl59rDAB
wm4cP2otRAcZjcbyGicngP4uU5Zf5nTQdNzw1VO7CVCWGRD6qZcOltRqjBKL
JkBi3lyhNY0B+gYCpQJMqSD/ysjGqPcUGI0pFdd8OAlkSUp3K8KnQKoP58Cz
gEkQXH53+F3KFBCbUBV9FzMJbsmy1JvWTgE9ZT8f95JJID8sEVrBPQ1eJ0iY
16xPgqgbxjviQ6aB3uHiKe+nNODu/P3M+YQZIH3yeJn8NTrQAPPX+bNngMdo
p1egCx1wC+7zrC2bAQNh/p3N7nQQlZtUfLx3BhSFFFB4wumgcC5Acet/s2DO
QdJevpIOZh5b8I7FzIJJbvKPBUkG+KYXqvA+fRb4tGy+9VqeATylfmpe+DYL
Xj/Wm+E8QLz/loGnDf9mwYdkO/ePWgywl3UnI1tsDtCUn7l63WIAR7/53w8j
5sC2gtn8giIGOGixj3bg4xywbXuw6oYzwLKCA+dkwRwwMM0IkahnAP8f3ZhV
6xy4YNHrzdnJAB/5qnLVhebBljco2YPJAM69a7+Y2+fBuFiimwkbAsrZR6l5
h+aBIaej2WZuBKqMM2Tlz80DYYsYWRFxROQdGsYdOg/qlg/v+KWMwKfrP7Mr
E+dBfXZkXLYqAreVN/98kjsPSmzzqa6nEFhve8SBmuZBvr8wI9EYASmJq/f/
CiyAlKzMgVAHBIapMSFB0gvA/6OOubcLAhnfWz5r7VsAH2xf3jl/HwEVqzOj
RYYLoCU7/mn8cwQs3u8zj3u1AOYzO60q3yIwt6X3alr8AqjP6G5RjEUg2CXI
qTB7AQgsDdo5v0egXm3Cs6l5ATQnnKgKSEfA7mNkUM/gAih8Q/G5mo0AG792
JHV2AYyyrZwWzifG60nK5BBZBGWLVTWCpQi0aZoUkXYuAoMV1wcW5Qjczdwo
33psEQSENIg+qSbidbdsP3ZxEYT8+y1k/ut/+Ymw3YpfBH3Oyb6XuhD46lnF
+zh7EcRwTR/36kXAdOKuqB++CEo9ar/7DCDw6utvpcTBRWAy9Pq//8YQUNzm
cTRrdhGoiMktfplAoMZPSeM7xxLIKX4TuoNG6GkWYN4qvwTgw2n22CkEYsqO
2gweXQKc29tbEv53/ik/6oTOLAGWC85Wz+cQ+PMq/MHqhSUgZP02VnUBAed5
DS+um0vgU865Vy2LCHBbTQeJPFkC5myd+/93HvqxKiFy+yvifk0vn0gmAhpK
hkn745dAStJv34oVBPrCVjNPZi8BqUDnI/WrCDxZSS/SxZdAyMfDoRlrCIhd
u1Bh3rwE2ke2RTusI5D/Y8uv64NL4PXDS7rsGwgYHyxsvzO7BMT+Kqc8JJgW
fX3Qg2MZWGUpptUT7M9Kob8UXga2nL3nFwje4VC+GCW/DOCO/zLWCcabXNg+
Hl0G34N6Pw3+73z12Fa+vDPL4L6AhlESwUsJP0XxC8sgtzw4/iTB4VvcZX85
LgO/NdXIfCKeAy679nS6L4OBq4PHtxDc2NZ+dCxoGfxq1vJTJuJ3VPPVmHu3
DGJczz8HRH6bPx42YM1eBg3ZCvJyRP5JfEPm/Pgy6NzH8niU0EvtfoiNZPMy
+Nmt9dR7CYHObnBLYXAZRPQEHVgl9HbTZDxQnl0GRm9DooznEaBkxnlpcDAB
lng8//ksAjkUvVdGwkyQ1xbmGzSNgL77cqSlPBOkYB2kewgBH12zz25nmICv
65dlGxWBbV84vnpfYAIDkVIZk3EESsTzKoIdmSD9LTk9dQSB+XGBjvQgJrio
eoA03odAqHHZYNE7JnBK9Vxo7kZg71cnelUWE+S0aWdG/iP6wa+era+JCS4c
YIsq/EPoKXCzqL6fCXxPRcsY/UbAJJLXKX+KCazOme+va0BANdWoNUBwBYz3
Wk1eqkKAXNuaeth4BSj+Xca4if7hNHpgKX1lBZxvOmeZSvTXWpsYifv2CtD3
VpCSy0BgfPTS4743K4CspBJbkYhA6eZB/cDfK4Ci80bS9xUCX157s97vWwGz
Zm69Cv7E/CIiV2iNVoD4d7pTpheRj7y9tLLAKgDD19jMHiBgr82Y7jNcBd0Y
V/YhawSEfJkRyo2rIDJ3y52tuwh/88fpbetdBRIrv743ySCw8fYkCw9jFdDW
nY5el0CAmvLcoZ9vDQgOF/bu5SH8Vb1Z9aXBGsj+L6vi3CQDOG2iDPT/XAOd
qqb0wRQGsHmV/7ahew1svPqynBHHAObCZrqFtDWQ1Zr5zSyMATTkovNe8q6D
FpEXz0yeM4CYlrTvEf118LivdGuPBQNU+uzeHdSwDlhXOq+f52AAlY237+W7
1kFas4+32zIdfHnEIlJOXQdNvQ+2uTPoIMm5lWWBawPsCpHc2NtBB14Wz9qs
z2wAt3+3H2ukE+uT0l/PQ9UbwMDYTEJWhw76HU463bJmwZzrW9dE7tKAVOrM
R5UbLFgzyFUou0YDFsOpA1tcWLApk5xzuudpoOky2TzJgwWreb1ngHSMBvBz
Y+rt71gwuWe6V61XJ0HCyRBR9W4W7MyXOC+W55PgMmmkQugCK+b7DPtT5UoF
HDEtcy+vsmKCib++pV6hgnTZKnl2R1ZM5Eaz+C0DKlg89CFw+jEr9ojnWUiC
PBUEm1092xjHigV7uf5IaZ8AlbE9A379xHW9zyO6hyeAgnwby8oNNsyWp8Mu
pmMMzKrUqg24sWPrW8Ss6v4Mg5pzOVq1HuwYTfFyF/5tGEQ5Ret/9mXHJjKS
d6QkDQO1+JsXH0WwYw82nXY7cHcYBLIKupEK2THYkJd5SXAYyNZZfFafZ8dq
z3Rd4tEZAibnqZJJrhzY3ggLTe/MAZDtwrdsc3sT1jO6Q7PVqxtwPBv1tAnf
grnXFF1Mz60DntHbdUTDubCw0XWeI96ZUI/j2a6qAB4soctH2mbuD8zSudXB
SOPDjofQh7N3D8CpUFmL3lw+7EsCj/9t7QF4sLu9/VcxHxbUm79729UBWOis
0Z5Zz4c9b8zl0Y8YgDBMtM1xgg/77Hn63N+NAdjUU/53VIEfexTMdTXg9yCc
vSPyuzeVH6M9TZcZvDIMj3xvMGzM5sfk4rR0TR4Nw4ccno2lRfxY0ES2QWbI
MFyNmPwVV8uP3VZVfCFXMQw5SvCfF8f4MSG1BClZ2REosvnmjzZ5AUxnzsV6
X+8IPBYDqxtTBLDkH17cTK0xOLw3W9U+SwCrFGXT8bcagyGV8XmsRQJYsfS8
38q9MUilPU08XCeA1e+YjQn+MAbjgOrTGKoAJshxQf7uxhh8ftdSIk9UEMsv
9a9cyR2HI6L/mj0sBbGTRca6D1ipUHXQ+FXDFUHMQHvd11WYCkMz686I2Qpi
MIDlvckuKlRT/wpzbwli2kFnefKMqTDKMfLzsIcgttjFasAZT4W6pecDdBMF
MUbMCemJg5Mwy+YPJjIqiOWYJd2b0qTBFIcnNEOqICZPTmjLM6XBuNvyUX4M
Qcx6ZCrd/DoNBno8RksLgtgTXm5bzJsGbWNk47u2kDCDC5uxcEiDUn/urrzf
RcJ4Gi/yHT1Ih5R/Uqn/9pCwR/GzRcuADrn7a86SD5KwkLKOxlgDOlyiS6R7
q5CwO6uIw8OeDv9yVVrY6ZGw8Q2Zma9xdBioTincfYuEVUcdPb26ToeeZ0qv
Xr9Dwi4dfTKexc2AD41u8L27T8KWTHSEMBEGtLP6fp3fg4Q5npfoWFNiQPVH
1yjTr0lYsSg5d8SCAZdy8m4X5pCwlqwrOy3TGRAVWUmhfBLGnn6qeDqPAUfL
ttTtLCZhaXG7xW1LGbDl5yXp6HISFn1KRHzkNwNmj7M3uv8hYXYO7KtnZonx
tpnuVp8jYfLplwYiDyHoih6rH1giYZs+c5D9VBB8XpZoLrNKwipkCtbN1RGM
tUTerBxkrFivZzreEMGmqMDucgoZc3N8/Qq/gWDPjdyZXFEytidmYrLkFoLU
Ix2cSZJkbP5LekuMK4IcrXLKXtvJGLWxdO+KB4LHSeWvNA6RsaOPjt8yCEdQ
u3/sw8GjZMzg2Bbf89EImmbzf5M9Qca+PGKuq8Uj6GxgOcp2ioydv3t9vSAV
QXcp79UZbTKGDWe5n8pE0H8yjTykS8YKzWq0v+QgmBSwqFZ5lox9+qNbcKgY
wWyLrefzzIjxwx8Z/+98smSn1s0PF8mYevOSgko5gu3VoZHeNmQsazXPq7oO
QV62vVOn7pKxMO5D9x3bEBRvNt182I2MbSDFCN9/CMq/d5fa8ZiMyYuQ/3l3
I6iuVn+Gw4uMtdxSLpYZRNCQb+ry3Asy9lKUxaRiGEHLbpH7wwFkLHOxbePU
GIJuj68nVoWQsSkoEE2dRNBb52VR/lsyNlKDPAQYCAaLffmVHE3GgHbHXeEp
BN+NdQyFvyNjt079vbs6jWB64cayTyIZc67kfFo1i2DRC3nB+ylkLPxn2Ztb
8whWmRrI26aRMWX7C2mLCwj+2X5P9fxnMnYk+WKdzRKCfTMxZ7VyyZh3uM1k
1jKCtPJye+UCMmZluo/UzUSQGTzuIVdMxqK2vDtGXUFwyxWBt8KlZCy/K+XK
v1UEhfYdydhUTsbaOW3809YQlFm3LJ+vIq7/2ZJ9cR3Bvb+820fqyJhewORf
GsEn4tLprT/J2OuAZwvWGwieudnMXtNExhgnTUXyCT6vsiRe2ELGqraKHZog
2IZLev/HDjKW+CVSf4Pg2x1a2hHdZMzrdakNsV+ET1OdLH37yVjf+dD7jQQH
uoXddRsmYxnfVF/4ERyl9c3fbpyM7XzKGipDcIrQQLwZjYwl3zwVF0fE82Vo
S4H2FBnbZuOdvETEf6+joeblHBmz+D7ctJ3go7/edDQtkbGDNxUDFYl8meXn
qMJrZMzI/XYzL6FHSaHo6kVWCnb1yWrqD0I/j4wuvvebKFiBz0mB64S+2PsE
6REuCha29yfnP0J/trfXDijyUzD7CMeIXUR9qgN2nnIhU7AGC45v54n6+XtM
muaLUDCd4Kz7VkR9dV2z7ZYlKBjn39QGDCHYaHk00Hs7BdPdY2IcQyX8YbIS
W7eTgklVGvgIjiN4Tht+5lOiYJUXD1rZjCDYse90c+RhCqZpIsQd3YdgzA6e
oe5jFGw9PG34KeFXK/HfczInKdivOLM7aoSfB9nMxTK1KJj1GCP77B8Ekxcl
FKd1KNi1tRKHj40I2tF6TxwxJO6/Zz/S+gPByVY7a9yMgg2HDR2qq0Aw64fi
nU2XiHhv9Qu8LCPqBRleutYUjI1VGN/1DcG5T24fW25QsM+YVi6T6M91d1/6
+EMKNoOSnCbjEMRv627seUrB5uB/z15FEv1gy09y9aRgsrUnQ3lCEeQ0iji8
FkDBzifk/I31RZAk+9GdFEvB/qruecrnjGCLiOMrswQKZnbIwyCYmI8iePYm
xH6gYHbfZc+jKwhKzBdUyGVSMNfsagWNcwjuqKvmUimlYI3zc2UnjiA4WhIg
+aycgkVEacsn7kUwLddgT1U1BeO/27BpSJ7wc2yrsWEjBcuzHDBeFSH84TwS
adNHwc42HRHznWdAXaFN8i9ZhTBhm7uL6xkMuL1ZK8lvkxDmtPmzQkcSA66+
8t3qwyWEceFNtNBoBvy8hVP0KUkIe/28+uxnXwYUXOHmdJERwty+xcS7WTNg
64Ag9ay6EKbSt2fwGg8DZsWb2BlpCWELK29aLrIwoO+l0EE9Yulwsjuxcmie
Do+1UrqIWmPPmjtIr3rpMKZO5OeRq0KYLNurxK5sOrySLZUl4SmEkSV3R8zp
0+FxJytF0RfEeDIeakIYHZJ3xX+kBAhhPpkCnSKH6LAySTqBN4RYmnxStlaL
0aF8hGzw+nshLPX9uEHtIA1OPlG4O4gLYQfnmTuc79Cgm+7hI+kswtjO4VHP
9EeTEJ1KTQrlEMZis8deRDhMQvuTEgLunMLY6Qu4tf2FSXhpP8u4nqAwphLX
8af02CTERH5G06WFsWiw/9aBBSrkGby2th8IYx5n6x/oOFHh+0dhVUVPhTG/
/fbcX7QmoLjr5gPvPYUxvXstbx4enIChTo/e+b8QxjQF7Dh3Sk/AF9bWbhde
CWNTbc1Sqkvj0FFrt8JKnDAWp1PQfSZtHB4mVb5UKxHGhE9Knl3bPA7rP82c
rWYKY/IWXxwu5Y7CpVq272wbwti5h8ZPr0ePQvkx8naMXQRT2t6vZOo5Cr3k
Ds1+4xHBjDOFf44Zj0LVJNewHCkRzKquZfMQYwTmxM79jVUTwRTNedPU5Udg
1OsF07teIpipcgzvDe8haH+PaSbNLYrpZKb8V7nSB2O1DjPPbRHDbCq/pII7
zTD9s3lkGY8YdtDwE/exPc3wq7D74V2CYpjhVcmnkhNNsG2k3HldTAxrSs7v
Tr7SBAV9jYY+KYph9C6nU2/fNULfGsefawZiWJWhaJOZ0Q9493RifGq4GDZ1
Vap4a1w59MyuOkGOFsPa2QqeiAmWw2DR8Y4n78SwUyz6rmveOPw8tpdy9qMY
1iDtoSPaXgbH/Ur8VovEsA28PzrS9Ru8XNd+26RLDNtkwXNo8GMuvLV/ha+k
Twzr4L0Z3R2UA59Ebc2QHxbDLkUGpLwYyYLR9rYjKzQxLKhnj2rOk3TYwjl7
4eO6GBZQb+camZYIh26LLAqyi2N7H6fY7ZqIhzMdx8Pdt4hjG5cbj657xECB
tOeNxoLiWDh28rx+egjcSkq++V1IHJu0GP/x/lkgVHpUyykvLo6pZCe+80/3
hCcGqCnB/4ljiqcVGgvS78D//34X+//vd8v+D6jrLro=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
         0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
     0.9999993650500513}}, {{-6.283185307179586, 
    6.283185307179586}, {-0.9999996658276197, 0.9999993650500513}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898851803088663*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d53f3f4e-1041-47e9-9806-ff6959945dff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "plot the sine of x", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Plot", "Plots", 2, 2, "Content"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[Sin[x], {x, -2 Pi, 2 Pi}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    RowBox[{"sin", "(", "x", ")"}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Plots", "scanner" -> "Plot", "id" -> "Plot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[Sin[x], {x, -2 Pi, 2 Pi}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max7881$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min7880$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$3621147$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min7880$\
3621152$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max7881$3621153$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max7881$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min7880$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$3621147$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min7880$\
3621152$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max7881$\
3621153$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621122[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Sin[$CellContext`x], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$], 
                    (
                    Piecewise[{{
                    0. + 6.717007633450854 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    6.717007633450854 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$], \
(-2) Pi], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$]], 
                    (
                    Piecewise[{{
                    0. + 6.717007633450854 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 6.717007633450854 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$ + 
                    Rational[1, 250] Pi, 
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$]], 
                    2 Pi]}, LabelStyle -> {FontFamily -> "Bitstream Charter"},
                     WorkingPrecision -> MachinePrecision, 
                    Ticks -> {{{(-2) Pi, (-2) Pi}, {-Pi, -Pi}, {0, 0}, {
                    Pi, Pi}, {2 Pi, 2 Pi}}, Automatic}, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {330.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min7880$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max7881$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$3621122]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621122[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621122[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVt9v0zAQbikwfjP4D5B4Ruo68YYEdDAmDShJea+\
XXBIL1w62sw3+efDZTdKsXaWYDtCUPpzqS/\
P57rvvrvfsRARJv9frqZvGfBAsTnbw9NSYsZjnouDxu/\
NcglJU8OQGPrtnTAj6ABj5AbHz3TbmvZBzot35Fb5PWFQwouGrpoxqCmp2KEme0UjVnomkp+\
YnMyYiwuhPeD56uTccjvYdDMYyIVqD5GrUFjLPJFGQ9BDoljFvGeHf3PFJefxUMBbC9wJ4BOqx8U4l\
iQ2M4IRhPt63Xm+mHmBimvCYyPjKabLyHLe9QGlJeTqFeY5vXE7WsC0wkaly3DwsudmkIBf+\
HXwgQhuT89ik7dkS6BfGNaPvoqz+OXcDPL9uCy/\
F2XriML83DHkjmp6CWqXzRes6OUaqrrXRL7i6qvmy1SAvnzL1/\
9IxVXo1jL22YcD8xNR4vfZW4ffbwoscu34h7kfGfHaOEnDdcKgE91HEBVtE0Ux54CTaPl2VG4fDuF/\
xHaLTp4IVTmDiLPvF9sduBV5vCiHWbrYF6fB6BgSQg3HFltsDmlI9zogkkQFeXNcvm2wq6lA87mxfe\
8pjagaYI2TT8oTmKFmqO9FR9uWPilvJ5UKTIe9HXEMKcqPo72J9pCGXx1PhGUmIFzT16s1hldSESG/\
ZD0qQMCecIiT9ZT72m3u4XAmk6lCiuqRjcWBLc+\
6fRL8s8DHwVGfNHdtzdHm3LWYTiLNadQFNkuVpsz2m+02mGzc0B7ovCb4l8R/o3abQbQp/\
dVNY2YO7NaFbE7o1oVsTujXh/10TbMT4r/Qbj7y4Pg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[Sin[x], {x, -8 Pi, 8 Pi}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max7883$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min7882$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$3621247$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min7882$\
3621248$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max7883$3621249$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max7883$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min7882$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$3621247$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min7882$\
3621248$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max7883$\
3621249$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621224[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Sin[$CellContext`x], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$], 
                    (
                    Piecewise[{{
                    0. + 26.868030533803417` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    26.868030533803417` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$], \
(-8) Pi], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$]], 
                    (
                    Piecewise[{{
                    0. + 26.868030533803417` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    26.868030533803417` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$ + 
                    Rational[2, 125] Pi, 
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$]], 
                    8 Pi]}, LabelStyle -> {FontFamily -> "Bitstream Charter"},
                     WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {330.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min7882$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max7883$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$3621224]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621224[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{
                    CalculateUtilities`GraphicsUtilities`Private`divisions = {
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3621224[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVt9v0zAQbikwfjP4D5B4Rlo78YYEdDAmDShJee8tcRIL1w62sw3\
+efDZTdKsXaWYDtCUPpzqS/P57rvvrvfsRARJv9frqZvGfBAsTnbw9NSYsZjnouDxu/\
NcEqWo4MkNfHbPmJDoA8LgB4md77Yx74Wcg3bnV/g+\
sKhgoMlXTRnVlKjZoYQ8o5GqPRNJT81PZkxEwOhP8nz0crg3HO07GIxlAloTydWoLWSeSVAk6SHQLW\
PeMuDf3PFJefxUMBaS7wXhEVGPjXcqITYwggPDfLxvvd5MPcDENPAYZHzlNFl5jtteoLSkPJ2SeY5v\
XE7WXltgkKly3DwsudmkIBf+HXwgQhuT89ik7dkS6BfGNaPvoqz+OXcDPL9uCy/\
F2XriML83DHkDTU+JWqXzRes6OUaqrrXRL7i6qvmy1SAvnzL1/\
9IxVXo1jGHbMMj8xNR4vfZW4ffbwoscu34h7kfGfHaOEnDdcKgE91HEBVtE0Ux54CTaPl2VG4fDuF/\
xHaLTp4IVTmDiLPvF9sduBV5vCiHWbrYF6fB6BgQkJ8YVW24PaEr1OAMJkQFeXNcvm2wq6lA87mxfe\
8pjagaYI2TT8oTmKFmqO+go+/JHxa3kcqHJkPcjrklK5EbR38X6SEMuj6fCM5IQL2jq1ZvDKqkJSG/\
ZD0qQMAdOEZL+Mh/7zT1crgRSdShRXdKxOLClOfdPol8W+\
JjwVGfNHdtzdHm3LWYTiLNadQFNkuVpsz2m+02mGzc0B7ovCb4l8R/o3abQbQp/\
dVNY2YO7NaFbE7o1oVsTujXh/10TbMT4r/QbCZ64Rg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "2", "datatypes" -> "Plot", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.6960000000000001", "parsetiming" -> "0.44", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP495319g5c0g0i5dea07d00004282c82g0aigh958", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "18", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa495419g5c0g0i5dea07d00006aa991ci4g3838ce1697175660060143921", "version" -> 
    "2.6", "inputstring" -> "plot the sine of x"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 20, 22, 24, 11.0723664`8.796815407915878}, "Line" -> 
    34, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Plot", "Plots", 2, 2, "Content"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "plot the sine of x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{700., {1069., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"9409b909-645a-4851-8f23-69c013fab236"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
            0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
           0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
         0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
     0.9999993650500513}}, {{-6.283185307179586, 
    6.283185307179586}, {-0.9999996658276197, 0.9999993650500513}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89885184614107*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"752c2ffb-0e8d-48b9-aa0d-252c93bdb940"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "graph of sinx", Typeset`newq$$ = 
   "graph of sinx", Typeset`chosen$$ = "Plot[Sin[x], {x, -2*Pi, 2*Pi}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "graph of sinx", 
                  Defer[
                   Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "graph of sinx", 
                    Defer[
                    Plot[
                    Sin[$CellContext`x], {$CellContext`x, (-2) Pi, 2 Pi}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[34]:=",ExpressionUUID->"44707c01-1a28-4539-bf18-52b703b348b0"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
            0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
           0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
         0.9999993650500513}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {-0.9999996658276197, 
     0.9999993650500513}}, {{-6.283185307179586, 
    6.283185307179586}, {-0.9999996658276197, 0.9999993650500513}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8988518839331636`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"dd746c71-5382-4283-bb79-886fc732badd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneBox[GridBox[{
        {
         StyleBox[
          StyleBox[
           AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
            BoxBaselineShift->-0.25,
            BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
           
           FontColor->RGBColor[
            0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
          ShowStringCharacters->False,
          FontFamily->"Source Sans Pro Black",
          FontSize->0.65 Inherited,
          FontWeight->"Heavy",
          PrivateFontOptions->{"OperatorSubstitution"->False}], 
         StyleBox[
          RowBox[{
           StyleBox["\<\"NthDigit\"\>", "ResourceFunctionLabel"], " "}],
          ShowAutoStyles->False,
          ShowStringCharacters->False,
          FontSize->0.9 Inherited,
          FontColor->GrayLevel[0.1]]}
       },
       GridBoxSpacings->{"Columns" -> {{0.25}}}],
      Alignment->Left,
      BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
      BaselinePosition->Baseline,
      FrameMargins->{{3, 0}, {0, 0}}],
     Background->RGBColor[0.968627, 0.976471, 0.984314],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 1}},
     FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
     RoundingRadius->4],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "\"NthDigit\""},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["NthDigit"],
   Selectable->False], "[", 
  RowBox[{"Pi", ",", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "100"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"365f6db3-ba04-4643-9743-5e9295e7859f"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    TagBox[
     DynamicModuleBox[{Typeset`open = False}, 
      FrameBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[GridBox[{
              {
               StyleBox[
                StyleBox[
                 AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                  BoxBaselineShift->-0.25,
                  BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                 
                 FontColor->RGBColor[
                  0.8745098039215686, 0.2784313725490196, 
                   0.03137254901960784]],
                ShowStringCharacters->False,
                FontFamily->"Source Sans Pro Black",
                FontSize->0.6538461538461539 Inherited,
                FontWeight->"Heavy",
                PrivateFontOptions->{"OperatorSubstitution"->False}], 
               StyleBox[
                RowBox[{
                 StyleBox["NthDigit", "ResourceFunctionLabel"], " "}],
                ShowAutoStyles->False,
                ShowStringCharacters->False,
                FontSize->Rational[12, 13] Inherited,
                FontColor->GrayLevel[0.1]]}
             },
             GridBoxSpacings->{"Columns" -> {{0.25}}}],
            Alignment->Left,
            BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
            BaselinePosition->Baseline,
            FrameMargins->{{3, 0}, {0, 0}}], 
           ItemBox[
            PaneBox[
             TogglerBox[Dynamic[Typeset`open], {True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeCloser"],
               ImageSizeCache->{13.75, {2., 11.75}}], False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "IconizeOpener"],
               ImageSizeCache->{13.75, {2., 11.75}}]},
              Appearance->None,
              BaselinePosition->Baseline,
              ContentPadding->False,
              FrameMargins->0],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{1, 1}, {0, 0}}],
            Frame->{{
               RGBColor[
               0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                0.5], False}, {False, False}}]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
        GridBox[{
          {GridBox[{
             {
              PaneBox[GridBox[{
                 {
                  StyleBox[
                   StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   ShowStringCharacters->False,
                   FontFamily->"Source Sans Pro Black",
                   FontSize->0.6538461538461539 Inherited,
                   FontWeight->"Heavy",
                   PrivateFontOptions->{"OperatorSubstitution"->False}], 
                  StyleBox[
                   RowBox[{
                    StyleBox["NthDigit", "ResourceFunctionLabel"], " "}],
                   ShowAutoStyles->False,
                   ShowStringCharacters->False,
                   FontSize->Rational[12, 13] Inherited,
                   FontColor->GrayLevel[0.1]]}
                },
                GridBoxSpacings->{"Columns" -> {{0.25}}}],
               Alignment->Left,
               BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
               BaselinePosition->Baseline,
               FrameMargins->{{3, 0}, {0, 0}}], 
              ItemBox[
               PaneBox[
                TogglerBox[Dynamic[Typeset`open], {True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeCloser"]], False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "IconizeOpener"]]},
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0],
                Alignment->Left,
                BaselinePosition->Baseline,
                FrameMargins->{{1, 1}, {0, 0}}],
               Frame->{{
                  RGBColor[
                  0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                   0.5], False}, {False, False}}]}
            },
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
          {
           StyleBox[
            PaneBox[GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Version (latest): \"\>",
                  "IconizedLabel"], " ", 
                 TagBox["\<\"3.0.0\"\>",
                  "IconizedItem"]}]},
               {
                TagBox[
                 
                 TemplateBox[{
                  "\"Documentation \[RightGuillemet]\"", 
                   "https://resources.wolframcloud.com/FunctionRepository/\
resources/0cd29d17-3be0-459c-b5ed-eb54aa6a2a91/"},
                  "HyperlinkURL"],
                 "IconizedItem"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             Alignment->Left,
             BaselinePosition->Baseline,
             FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
            FontFamily->"Roboto",
            FontSize->11]}
         },
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
              GrayLevel[0.8]}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open],
        BaselinePosition->Baseline,
        ImageSize->Automatic],
       Background->RGBColor[
        0.9686274509803922, 0.9764705882352941, 0.984313725490196],
       BaselinePosition->Baseline,
       DefaultBaseStyle->{},
       FrameMargins->{{0, 0}, {1, 0}},
       FrameStyle->RGBColor[
        0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
       RoundingRadius->4]],
     #& ,
     TagBoxNote->" "],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "NthDigit"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["NthDigit"],
   Selectable->False], "[", 
  RowBox[{"\[Pi]", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "100"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8988519094996843`*^9, 3.8988519497472734`*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"4a86048e-fc15-4653-a653-e400f3a69d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "integral of 1/(x^3 + 1)", Typeset`newq$$ = 
   "integral of 1/(x^3 + 1)", Typeset`chosen$$ = "Integrate[1/(x^3 + 1), x]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "integral of 1/(x^3 + 1)", 
                  Defer[
                   Integrate[1/($CellContext`x^3 + 1), $CellContext`x]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                   ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                   ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                    ",", " ", "x"}], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "integral of 1/(x^3 + 1)", 
                    Defer[
                    Integrate[1/($CellContext`x^3 + 1), $CellContext`x]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                    ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                    ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x", "^", "3"}], " ", "+", " ", "1"}], ")"}]}], 
                    ",", " ", "x"}], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[37]:=",ExpressionUUID->"85e75dd2-ee7a-4b56-8a91-07afb351a071"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "x"}]}], 
     SqrtBox["3"]], "]"}], 
   SqrtBox["3"]], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8988519686615705`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"95d7ef4a-036e-4b42-a2d6-88b50b2e3585"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot of cos(x) * 2y", Typeset`newq$$ = 
   "plot of cos(x) * 2y", Typeset`chosen$$ = 
   "Plot3D[Cos[x]*2*y, {x, -6.3, 6.3}, {y, -1., 1.}]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot of cos(x) * 2y", 
                  Defer[
                   Plot3D[
                   Cos[$CellContext`x] 
                    2 $CellContext`y, {$CellContext`x, -6.3, 
                    6.3}, {$CellContext`y, -1., 1.}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                    " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                    " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                     " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot of cos(x) * 2y", 
                    Defer[
                    Plot3D[
                    Cos[$CellContext`x] 
                    2 $CellContext`y, {$CellContext`x, -6.3, 
                    6.3}, {$CellContext`y, -1., 1.}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                     " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                     " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", "x", "]"}], "*", "2", "*", "y"}], ",",
                     " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "1."}], ",", " ", "1."}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[38]:=",ExpressionUUID->"a5c18691-a4e4-43cb-8a6d-15129a433407"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
5CPr3bDedZ26nHl/nOehz+z6ueqhI/Ps8IP1L+lWWMvjoMW75y8tqvGZ18ux
/fJp+yeccVi+x/Vsf/Gynee3qLXZ732z/Ui0Zz6B7T9o8e1nWZN7+/tIbP8J
+Jn2+RePD6xf0+Opdq+veLntBZukLi51zsJx8bz1vdu/e+iS5kt8XB7vzG9e
ucddH/u42L79roH/GpSX6+PyfO9xI1redNQGHxfbN0N7jovtN1XN//jRRc/5
uNj+O/DDcbH9TTnP99zYbr3Pi9+DnvRFztO3LXT+6eePaHNu9313fuj8s32i
6T/WVc1MOP9sv+juB+7uVn2t1gsF1AupXxfg13k9Ldv/CvocL9tfubRW3+M2
Pe3jZfvfwD/Hy/atazV8pHePNT5enhc/nLzX/6eP1/38cn/nHLH/TR8v28f3
Cub6eNn+yuuvLdpda7nWrQXUram/HeBv+3jZvjvoc7xsf2GrT4/9dO9jPl62
fwf8c7xs/0nm01PPOCtP3iHJxbuUU328zMOPGz35jIaDXpb3RnLx/mQqn8b2
q+dNqH/ikQmtn8Q7kyvkPDGB88Q18v5kLt6fnObjJf2/1lWoueOkbvLOZC7e
mZzq42X7DzLGjLit+0J5RygH7xaO8/EyT9hzevXaHZ58Uuty8T7heM0fBuQP
5Z3AHLwTOM75Yfujv1jX/MhOU+W9nUy8O/el8xPxb8L2y9a+Pvm11vKuTibe
lxvi/LD9jOK63w+rNkTeycnEe3FDXJ5sP+DPxke1/KW5vAuXiXfhvnT+2b7+
rIq3tNz/pfKP94K+DOQ/yuEP21n047p5/54v4R/vAg0J5J/tT3/wm2deqTle
3rvLxDs/QzwPzPbrzh1dt+jf8hH+8Z7Pl4H8s33t9tdc0bPFOHnHMgfvSo1z
/pnvfaLOtb9e92/7mf5OVA7eiVroeUK2b5J91qSuA3LkPagcvAc1XvPYhjy2
vPuUg3efxjn/bH/MUd+3XN0wR96VzcU7QlOdf+YBLsy7Y3+/G16X92Nz8V7Q
NJc/29d8t+zw6kfnyjtCuXhHaIVJ3t6Qt5f3gnLxXtA0Hy/bf1R3bp2razws
7wLl4l2gqT5etu+3t/aEKf9cEsQ+G+yzj5f5h/NO+3jwq8PeNbHPeE9mro+X
7Z8q/+6StcesClJ3ZKg7MjnXMJxrmNhnvCcz18fL9tsmnfPBU/+2J2KfDfbZ
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
4VezPfGsZL954odkQ08WuHxo9+45utWgwgenCz/Z0JMFTp/tv386NCjMnO70
9b1o0qedOTvpNw73fV/bkz7bryj+6eS3tg0X/ycb8lng8uF6fyfpxyakfUpv
Rc8Neq7vU/k7VHKP2HCP2M76Yednc6rX9XfJhjefec2U63eGw5DPJ75g9i3f
7vn40zD8+5d/LXvpKMe7/WPhjL1zSqy9vG9WGe+SIQ/v8WPjGbN2vzHrZbsp
iW92vPPQUxate2w39aqFt0/+loVOsb2/h3aoZW55213C/L/jGT80L35m+gtW
Psn/4f4eWna78t3ParTTbpf30yqBT5xfeBy6Jntt7W/OGhjOjvJx/OEnFnxQ
Y8HuQLkx7lheedVxz95Y7HIjviYxvVmb/R+53Ii3G9PxxiG3bne5ER+Fd9U4
XuI3N+la6cFB2328xMuNXVKybu8zPl7iAwvu6PzVqu0+XuIjQJ/88/20twY0
C6+v3eT8E88a99jrN05/z/knvmJX3aqta252/onfjvfZyD/xH8ceX7FdSz/H
cbzc9Gd2tTnnKeef+C8NRxZu6L3Z+Sd+G+iTf77D1q2k64cn/1Tg/BOPevuG
80+8a1JvC5x/4pXwzhv5Jx71rcD5J/5yUt8ecf6JR31b5/wTrwj66fJPQP7L
RP4JyP8FkX8C8s8T+SfCts2d8vf0XCPyTwSrvO6YJ7/LE/knIP8uIv8E5J8n
8k/RT+c/G/zPEv6zwf8jwn82+J8t/GeD/gL6Jy2I/4X+08eVHYY+8+nY13rO
knFlY1y3yLiyMa7ZMq5UvxyX2nOOS3GOS3GOS3GOSxGOS3GOS3GOS3GOS3GZ
L8N8mcyXYb5M5sswX0HmyyC3QHtO/Kc4LzqPhnkU/cw2zKPJPBrmMcg8GuYx
yDw6P7K+7NJBVUcf9luejDeB8b4g401gvHky3gTorxE9TFi0b3nCfwL8dxH+
E+A/T/hP0Rf7ZsOS+/I6E/tmsG8m9s1g34LYN4N9C2LfDPbNxL4Z7FsQ+2aw
b0Hsm8G+ifwLIP/NIv8CyP89kX8B5L9Z5F9g2F9E/gWQ/2aRfwHk/5TIvwDy
3yzyLzDsL7q/233lhtY4sWaxyf5u2N9N9nfD/h5kfzfs70H2d8P+brK/G/b3
IPu7YX8Psr8b9vcgfp3BrzPx66A/n5r4dQa/Lohfh/dL96s/Bv0pMfHHDP5Y
EH8M+rMziD8G/dzv/DMe6Rr9Luef+IKspJ/m9oT4bdGfdH6IZ8xJ+p9O/8UT
108sK/srdFnfteeLh5X6/vUJ4txGu+K9CdJ/Ae2Py7nxrnd+2en7zsdoP/m6
eO+D9KeMv+7bsd03hi9GPnJ5s5DyD5chbtoyN947IP0stL/goQ8bHni22Okv
RfuuuDdB+hXb/vR29/yCsK2o+pL3J29x+sehrv7+1rGunvN7wc9HLygrWxfO
r3HDwWPPTvk5FUCnf62ho/Pf2uL9NgSdarhfwHlsBjrXVal64ZVDU/5MlMOK
cFefPx9ofdN65ycgD3ngUKxLJz/bk/HpqvB72wp/TN+03v2B45HnvB3fvSKf
fUF/RtuzzwqN1jufk0G/yy2xbp98bgX9O6/s9Meb123wfb8h6LcHffIf5bYo
fGNH760/K9/5b4V8Qr9RsQ6c/D+XPG9aEvqc8uKO9S1XOv8/8L4wvjNF/uuD
ftHxD7a+9t/+IPlvCfpjtsQ6efL/DOivKb33tcFzVzr/3/OdcNAn/zck6UwL
VTbUvbJZ/lzn/3vkUdtMi/Xb5L98Mq87O3w2bMcjV2QtcP47I09b5/gVVxX+
tMz5vwb0Ry7uNq1ht7nO/zegf3iFWJdO/g+FSL/q/dX6nl5jofN/B+j/MOTy
NhX+WOb8r0/a4X7hH8k4d4jzvxx5znm4p0z+2yfpDAvfJb/7MMr5X4886o3d
Dsxb3jXL+R8F+ick8wZeR20LQP8Z3FMm/1eBfk7yOxSjnf88npt0DxvrvpXl
/J+c1Ktgj7Q50HjhB9PdXj2GvOXYLbH+mfyPTsptrL3zyQ3/OP6bLLe3e5AX
/SjSd/twHugPGbD42vfOmO727WnQf/fyWO9N/v8A/ZYPXv/Ls2uz3N6W/zbS
fzDKx+1hVvIcYaEtKj38wc1fL3X+myI/eV6tWM9M/mcm191caz59VOPf8hY7
/w8h/zk2zq/zPxX0vzv1uaaPX7LU+T8N9OuMj/eUyf8c0H/+qv2tzj1vifP/
OOifFPXT+f9HMs+23BpsnVCnzdAC578azmteWxrrisl/ftKuLrWajb9MnD06
5dddCjovHFahztxta53P6qAzs3GslyafK0Hn9Ad+OmHh3yn/bemuK6/OH7vW
vms/vM+GM1L+TxbOfbY2jfW65OfHz5cfaNlvjb21cl2dV3YVOj/LQGfT/ka9
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
YV3ftv6KOWeMmpvqF+9iffTF4EXLJy8UOgnQSdULMT7COjJZR4Z1JPtXPvav
dY4zPkIdrOOMj1AH69/Z5Hvg1TNCxwOH9vv3nanPX3xX8+kT/63PxC/ku4tV
73v3urKd/v24k7B/HYHv9LE98RfwPe4uye9/1XS8+9Xn3N55/5/+fVvix4y5
ZMsVmUX+nSnio8o+OOa0bUW2ONn+QCD+xfDh20vqzPXvMxLfVGPP4EvXr/Pv
NxFnHTK/X0Z8B9rPi/Qdfwz0+b1X4sPAD78/Rbwh+L83jtfx9zBefieReIV0
uWWo3Cjn5ag3Pjr5PdBVLmficb42upyJf5xZcNVbLaa5nIm3TX6PbIPLmfi0
5PfLNricifd8ZUrzsfOnu5yJd6r79F8dcle6nImzPohyJv4w2lPOxG8BfcqZ
eBb4oZyJtwP/lDPxnzFeypl4lXS5Of4l5EY5N8E5RfXkvCx2ORPvnZyX1S5n
4o8l5/d3lzPxukl9WOFyJj46qT8rXM7Ev0zq2ySXM/EtSf1c5HImzvp6ypn4
TrSnnIk/DvqUM/Hh4IdyJn4c+KeciX+A8VLOxCulyy1D5UY5n4p9oUay/TSX
M/FXku3nOx7HPWBi/P1xIuXP9k8m+fnZ5U+8fpL/OY6n0/muBeeF7X9NymGO
z5e253yx/ZCkPH/x+SJelJT/VJ8v4qfyHAy4jovzyPa7QIfzSPwp9Mt5JD4S
/BNX/jm/bH8C5ENc23Pe2b4v5Mx5J14lfR4z/sc8Zuh4Ob8NEd/1iO19vojX
iHz69wSJ/xTH6/IkznoiyoH4d2jP8RKvDfrkU/khnyeA7rNRn51P4jXjenE+
iWN9OZ/ET0C8SD6JD0V78kkc9sT5VH7I51Lc3/w82jfiGcQHAed6bAQ+quC7
vVxfxB+K+5d/V514rbjf+XiJ/xL3x8D1QnxQ3E/9+87EC+P+69/rJM68I9cF
8e1oz3VB/BHQpzyJ/wh+KE/ix4J/6jnxtzFe6jnxwyEfypP4c3G/dnnyfcvq
LSr3ti6bXZ7ET94y8eLjVi5weRIvOuq+m+/fnvqeO/G5dz93ZF6dEpcn8bV/
5Sypd3bC5Un861oXXdNq5SaXJ/H4u9PlSXw42lOexKeBPuVJfDb4oTyJF4N/
ypP4xRgv5Um8AuRDeRI/K/qZLk+e39WI30N3eRL/KLnvL3Z5Ev8XvjtPeRLP
xvfrKU/iTyf9kCUuT+J3Jv2WrS7PZZI/pDyJP4D2lCfxm0Gf8iQewA/l6e3B
P+VJ/EeMl/IkXhHyoTyJD47+vMuTdfhVfv7yiuem73B5Ej/Uq8q/Sj9f6vIk
PuqFkup/N0x995b4+EYra3Vpu9flSbxyvXEftXsyz+VJ/Igjb2815n6/3zSR
ePzd7/IkXhvtKU/iq+tG+pQn8V/BD+VJfCz4pzyJ138+jpfyJF4e8qE8nf8Y
N1nm+n2Vmj9Vy+Op8378uWj4yOn2+DUVipqNOdLx549cVL5F57/xndlKjl9z
2mGF2bfvs6N6XNV24MBDgXjHb6v/3nNagZ368N3VmzcvdnxKj7JLX79ra9iU
HNdExzOW33Ltwm/3h37J7+ruM+J/P/hTn04PzLbLk99NrpBBPL/Fn4lbh/xt
56978+RuhdUcv7fPykWdmu2z2r9O/GbOezUdr37WnnPaFKy193v+1rzbKcc4
3qd1r0MFp20LVS4ZMa0sHOv4gsf6tR7YZn/Ad5P9O8gH+tV59Obc3WF7Us5L
AuPKK8+5wHJ6loQHqzzeeWBevQzih67ZOfTwj0ugb8eIPzZ04n3Q23T86omL
/qu/N7jF6v/q1/3YIhd6m473b7ECepuOf4rf3P/w32ZAb5XPOdDbdPyMFsv/
q582pMW8/+qP/djiHuhtOv5Ji3zorfA/sf3/8LvGQG/p59zTdl/VPU99EZ6E
3hL/5L4HF776QE7oDb1Vv6s29Jb4kEWf9Fvb4ddwJvSW+M5Nlx3+/fVTrEmd
qLfEn+q397be7863D6G3xK8c8usbrfKGhMugt8S7HVFv2nXDcsK50Fv132pB
b4lvvffcTtNuGRPeg94Sf+fpt7dsnTDFKkNvic+YNKbO5n7z7ejkuGq4/zZ0
5qyvjliyLBwXvyvt+KrL7zpq4IYVYW/8PnUgftrBtt89/80q++Ls276YM6e8
+2k7Gp164utN88JH8fvXjq99+qHiub+v8PVC/KFXrxxT/Y9VxnVB/+2GHnde
ft9Dhbb92mfml1kdz8+0//mJbz6olB96vNb7im5Dj3b87IYZ2/usXW+R/799
3T3/XfuvZ42eEr5K8rnTiE/7bujEuVPzwtTPv3h8YP3DfD1++Mf8ih2e3GBt
j7nk4YG313a8qFaHbc1vnxa+TtKp7XmbrOd//ry08TzQT+HvAY/27WjHZ7z/
ZosGI9ZZU8EXAu+W1P/DHK974/X5h+qvR3yawqsDj9+z3uV5odAoo+9DVeYg
Dk3hO4HH757v8vzPSY3T2ju+De3vjv163uZw9NtFcPLTJI7L8aUY1ymCzwH+
ZZSb490htyGCfw2c+sD8xqS3pg1ZMXBBuCnOl+PvPnXu+Vtmj3U9Id6htPm6
ir8ts19wHkr8KHynY3rUB8dbXrO02sQuedYIeuX5pTPLimYPHAN92On4gjv+
+dGg0fPD59A34iXA60c6jg8EnWzoIfFL0O9hOG8lfhK+M4JxOd4R42oDvSV+
NeQAuTk+DnK7Iml/6vh6v3RX513FH86xaUl+ajp+7FHft1zdMAd+xQ4j3iz7
rEldB+RAn8v5ur6+6abOj9SZE7ZhvriuR8R+7WnMC/HOkX985/3vQLxPlI8N
gTyJL47yBJ+Hud24MsotcP0SfzbKAXRqexw3MurVf+ADgENvHZ8V9TYoDn0O
XbFOideM6wL5tBR+JPACrFOnE9cd8jMpvAD4MqxTpx/XL/IVKXw/2nfGOiVe
Hv3eK3hl4LBLjicwLsXnAYfdS8WJkJvifYFz/TIO6hLtuXH9Ej+qdtLeUs8d
bxrtfOA6Jf5ptNuB65R4x2j/jeuU+G/R/hvXKfGFwLlOiQ8AHa5T4m+iX9Qp
OZ6B7y9wnRI/HfxznXr8G/cXysfx2yEf+J9Z6n8y3iFeNfrztJ+On3/WhVVy
Oy53vSVec/Du0vb/2GH3QT+Jj7hnVdnk/jtsDfSQ+KqG/7ii05vLPB9LHPFL
WA49JF7luNj+Hugb8e9Bn3pFvB74of4Qrwv+Gafo+Q78iiz1wykH4hNXhKfH
Dch1ORAf3S7njlPf2OpyID6weEvLQ6dsczkQX1fvvKI2lZa4HIg/FONilwPx
SsfG9pQD8XdAn3Ig/jv4oRyIDwX/HBf9k5bv37B2wOKE49w3f8C+ufuVancO
rH+Etx9a7p5Kz03c6faN+BVP/JQzZOAmx3W/ZlzM9vNinsTlRnzJ8fX79W68
2XHSgT2En7PW/bTT7rurwWvLigPlTHxT7dMGXfXGQsdJZ3maP7PE/bprEGdR
/sQr1ol0loufUxX+z7ik/lRxf++SN6udO3f6TuN8EZ+Fcd0j/g/sp+eZ2R75
Ip9f4tdBzk3FL4K9tZyl5x9otrOut29b/bPurSrucHtL/ALM+1fiL72V7ke5
PzM5qT8zUP9c1eflLryf3+F/4NQH0slM6udKn1/ig5L6vMq2JOWwwufrg0TZ
pT0XFIUFgn8CnPNLOuuT62t6GB/b+3wNQvuE4KTD+SWdysdGOregPo3t704f
73/gnF/3JzEuzhfxPyCHuF/Uczojq3UqvqXa1tBQ8N+Ac75IZyjmhfPFc6Wf
kvM4OfyN9cv22Rs6lA35caPPC9vPTerPIp8X4rWS+rnYumPd+XnlUbvOWZW5
Dn7IEsefnlw26Yt3C31eSGdFct1NDH9i3bH9M2gf5bbW8SdAn/Pi54+NI52x
WHd+jpl58wdjft3o8mf7quCf8ie+COP9E+uFdJZ83+WCZ29a7/kW4oc/WGvs
NcMLXf6k8zbkTPnzfGd4Eh/h+wXx+cl+p7qciddJ8jnN9wviq5NyG+5y8PPB
xhHneIlXAx2Ol/gS9Ev+ib8HPsl/ej7krYnkX/Mw5F9x8q90yL/i5F/pkH/F
yb/SIf+eb4njcj0nHv3wqYH8E49x6DTXW+KLo/yN/BOvEOXv+ka8POiQf+Lz
0C/5J/4y+CT/jIO+jXrl/BOfHfXW88nEB8Tzax8X8RpR/31cxJfG9ejjIl4p
ri8fF/GKoMNxEZ8Pfjgu4q+D/wfiOvJ47eADyXXk+Xbi1WMdgsuB+B/Rvv1H
nPWdxFkeJ0a7+h9x1p+IO3bBHrJ9VrSHnrcnHs9BNrg8ifeP9txx0j8KcRDl
zPZr437k65rtlyLOug92le0fjXYP8lniceuT0U56/p/4/bFuxOeReMW4fznO
fish7uP8sv1bGNc9Et9VxLjGw96yfaVob/0cgXg8l9ngekJ8POZF48EFEg+y
/XeYd40H38C8x3i/nst/dNwf/wMfAZz6w/jo+uj/8P6Ot++I9287/A+cekU6
l0d/zPWB+OLo77k+EN8Y/VJbD3+G9OHnoF4ihfcFHuC3EO8PfI7g8Gd83tkv
/Fjcg6uaoeNq/z9w6gPpzMS4OI/Er4UcOF/Em0POD8EOEMf5Bf1Vx9tEf9Xn
i+d0iL+M/gzbfxfjEZ8Xth8V4yCfF+IDYtzk80K8IMZl9gjWo+cNYnxh9HOI
41zG6M8QRxyB/Mlax08HHc4L+0V8Z/Rn/Fw4xhEuf7Z/G/xT/sQnYLyUP/Hv
IbcJiHOJI851OfP87rwYL7tdJY543+VJHPG+y5P4yhjv+3j93DPG9W5/iCOu
93ERR1wfwH+G8s/xsv0x4L8q8h7EkffwOhA9r0T7DG3P81nmDaohX8HzUOI4
D/XzXMbdHRHXs73H9fE82s+RGZdtRdxHOsS/iXUIXidDPP7u9HNe4n8ivma/
Hs/GugKnQ3vLe7q0nxxXi4duenLzg3vDbbCHxBOJD9dPLttvK2GviF+x7Kun
7r9ob5gOu0T8auC3ws4QXwQ66Dfjf/VLuV2X99X5s/7/vB79Ei9aacNvG7zL
+yW+Azj7JX496LBf4jNmXVvae9Yu75dy+2P1yN4Ly3babRLnMu4jP2z/+brV
61sdXhJWStzaD/Em+WT7r9B+usSnA9Ce/LP9RPBzq8ShncEPx8X2bU69tGed
U0tCA4krxyCu5Lj8/CIpn40+LuJbk/Lc4Hz6OQVw8qN02C/xmUk5byA/7l9N
i/h/7OOjsI+TT7a/NtJ3/nX/Iv9svyXy6eNi+w+xb3JcbF+M9tNln/0U7Tle
5edW2U87gR+Oy/e7OC8+LuK/x/l1/okPinri/BD/Ejj7VTrsl/ZzetRz75c4
1pf3Sxzry/slXgyc/Sod9ku7ellc194v8YXRDni/xC+PdsP7JX4VcPZLHHbJ
9Vz7pb9BO/POVXVXTQ5/h9/j/uv4ybOvvqr7z/vte+T/PR9+49Cu799SEO7A
/u7tH1h720sv/x1Kon/idmzoI5lX/TZ4v+E8y/FjFp57YtUL13m/mj9kPQzx
jz/Ie7D17BLnh/iPOI9mPQxxa9b+UKMzNjg/xH9A/pb1LcRLb7nyqXHDS5xP
4v/EuTnrW4j3yjxv3Bm/bwinxfM7jzc74fzuFMFvAT4H8ud6WRbzLfYH5KDx
xfOQA/Fvcqf3bzq4MOyCP0b8McRH81H/Q7zWc4lGa0dsNMqB+BTEfc0gB+Kr
mt707C+9CsMHcbwpPUE9D8+hiB+HeTwxyt/1IYF6JNYPeF0T9Gel3MsowD0L
1qsQP3RuvAdxBuaX9rPX84/vG1Q9z+eF+B3FS1+7//c8xC97PW82/Nf4TtFN
gmf9EvGTcA5L/NI4X/ADU3g74B3xbgbnd0j8zoXLzePTyI81hnyI94v8/0ed
bSXUkc6TutatqGvFeN1O9ox6iPqB4pQfHvXfDOfUtEt7x1UZX/rwBtR9pfBN
wON56w63e99+tLb1PzPX24OC9wPeCefaxMcA7yL4N8DBT8b/4CdD+fkQ46Ud
+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
fKpw1pd3+tFx7zgOFHx53CNeX/CmuI+s5wcfKD026w7+kPqBr4L31Xfhq7Yz
xj1lewH4ROnPO6Z84Detivzb8FW/09smT9p2wXvF8oRfLBy+aj+N7o+f1fz1
LcXxCT+wPnD4Kvi0IyIf+EUJn39QDW69wTHCmxM+bZ/AsWs4z7nGc0zCdwqH
b+9lvoPyfOHb4Ce21eRRNz5MedTh27zfZ8Z7vPwN7R/wf/epyFfIacbfC/mq
OFD7Crw55KhihfgweOd4vxfztN/Abwl5rOgsfgs+Kt7v5X2132yHVf+Kn7L+
YU/IaZYbwUshHxY/FP8E/0Dj57yDLwy5rhgkPYz1DIrH76B8zuANyjNMvLzl
zNCrFDOlh7FdQHkAiPsAP0/tJ0jfAv4T5SVQ/tuq3Vb5kIkn2kteOMuH5IUj
3hx5bLLymKEnR/55WHp49N7g70rPT1w2+Cn9N5/Q5blt5BkwHx4QuPPwgJ8r
/8yTpdcFf0t2T/yIwF+QH+xt0seCPyA7LP5UOd8LeM5bAp7zb4Te+HCflzrp
7ack/FDhzIt1eTLyVzhfEPiSyHdhfbvjHU67sNPPdq4v3kj4OuFvJny18DXS
f4KfKH0v/mngEyM+vVgv/aHzPkVcv9+DtXLCg63Eb9bi97eSR4J+1kQ8vv3K
cj8PtusnP7uV71oOiTxajnMEn/dx6e+ldU/Zfwy8FPmsHG8IPmzIpR3HbHi6
LLuM5YTeP68f+3DdevcDHvmC1pYVR2ycOOKMDxWO/Y59+PScCYNa3n/X/YN/
Vf7k+DOAL1QcMfZK8Ktlp0avnv2HM46/seJ0/O57Wv5UXROuflgv4+Q5xD+W
c31e5DEoZBcw/lTMl3vceIvs/vh55n2IvQy8MdalwD4O3hx0Lk5L+KnCsY+D
Dwg9TzEu4d2EYx8HHy786oSfIBz7+F7GMyiPB76Xz8WoveTHw46Tzwv6BPqZ
F3kwHIcO/r3Y517HfL5+266ec3Yr+hz66fB+Je9Hgf4H/N44d8XNur/Ap4tv
jJIeGPzXyi+NPjnPC78Lxwfpu8TFgy/Ud1e128/9revb1a/eD93Ml35VSzfj
p4luur+W5bwirAv4vuIz7HPrXZWfZLvWBXyk+M8y0Q18kvKoQB/nPxHf+7bo
A75b+ViI7wZfLH5IvHDOQ8L4wfer5W/LMh9bIfsXeB/lRWGc4J9I79qS8ic0
Sb+a87CV5D9DPAv34LO6B2PdVrRan1b53+k4DvCluk+xV3Lu7pOeH34IHvGJ
m+zvxzgjnnGT7QXgs2T3pJ/sD4k9nf5f1v27KeGvC0d+AH9h8YAeS0duKKYk
/FXhzIv9GfEUKwviccDvLg0f0bmhzfMF/2NlXq8V3EfmG1tmnXvyxDb3n/kP
/ewNZ789Gv2bPpme4Hvxmx2U/WaxH7G+R7ad3XLXY/9k/NaXbv/aIz/4w7bt
xePKc2I59qARu7s0flj+z67IVwDeFPkKyrPlRwGd3428PfZbAN8ceYHKyJ85
HylyJvjjytuJ/wn0Gad6B+doXuBzVDdB6+592FdyyBrJdT5fssurPovl4f0i
r0txkexx4DcrPgs6gHeP/CoF7xToM1z04R1hv33RU3UxfI8fqzwtj6i9/XmU
Z0Z2bdP5ici/JL+sjsY79qzkU1J8REfTf2fkWSofIPs4+FL1c6Ps49D/95Hn
qnyG3mXgP458U+J7OW/Yg02ny65N+1vUfrzeWb531P+qdvN6zaMfr/t45bnS
OH1e5iofl/wHvO7/Ul6pi5O/4q4lYVeSv4TP12PKZ5X1Xd885P/r7nXwPump
dccuD16n/cP6wt/OUX4P1td6ntgP+Ld4P3RSXLP8bbwfliuOW3F57n+g4oZo
D75AcVKuu6FxXnHRzss/OmlzeYzyxvMe7xL8odwi3H534ht9lEcd/Kr3rpl0
+1c+K2jvPA+yU9Me/JrwH5Ndo+oH+4+a/OSlUvv+clX/2E6SnzUv02d0zKvI
/qXKx677t+pfqjzn5T7UXxAdWmJe4NZXXCYcvgFeJ3+M3eIP4N8KfQX6WPOH
gbIfkZ8QvKfsU7RnvXpJLzpL7cE/OSP0q+QxY13WLQ5/DPIage/uEX4gY5Ld
6nzZidqSvekC2ZvIjwedP7487DXkqQN/Lsbj8fveDP1zmXxN4N2k5/9bu+/f
3k3Ml/bjZUdgXuCyyxe/aff9O6SVPD/wjZe/G3Z28uo475/s+1n/3CJ978qk
N75SemPow7nrIr0r9AHfc1Poe6WnrfrXSQ/WReO0Pk16udnqB/xI6fGgA/ix
0iu+nOyJn+t8rU36cNUFQE6w/nm1/DORB5z/R3ow7kH72Uovt7pd/cZDvL8G
ZfwSfRf636N7nHMNPkb3PnyMdZ+gej1jxv7vN9/5JwdPPeCdi+ctaKUf5jVO
/quj9V3by1TXg/MOXqc6HVne1vvd9eagw3Giw6KkP6xL9RPRHza2juh31I7t
rlMJvqNT1NGmH/Anth0y95pF211fEvw81cUuJTnkTMkhi5Ic0iA5BHrmdaHO
V5JXm+g/3/u19Uqq/ejd0ZTXhTo17e+HTllObmL8WU6orW/y5fGzfwY/t6vD
5LUrTR/wKSefOvXFB6r1XJznU/uQ8fhduaNt14dtK12vEPyp3sfdcO8Z1Xou
WV5lPH4PVsaz0eMBn1oZzzrXJwWf+WTILYzHec4r49no8YAvqYxnneuTgp91
WMgzpSTP9JA8syjJM8jDjB8+P0zxfYwn49SPQ858McZjOrgOQozfdeLA7wo6
uH/wEUG3L/GBG8UH+C748lgXf9d25FhHf9d5UWI/+Lvg58T+cT/wk2cVZ0f7
jDMe9NjPxPk1PcHPVNwc4wE/KfiD+wcfqvb0k+PpaO+4ZuH4V8AHPr398Ce/
2PgLjxO8v/gDdW+dP+r1+sHdT7/FdAM/W3yGfcW9M2DghuM7fX+r+ZvluldW
fD5zxU3mS+D1R3x2ba9Ptpi/OU7qpc2H/q7hpz4X7Ldpo9+YfuiMcW4PPm/U
wUd8etR0z9d+TRdWcO/PLLfX1i9+s3zn9ZX+vS7gR+u8MF/uhX4xX48TvGfM
1+cLvGvM1+cU/J2Yr+nGvmp+pUJ/t7ddeFplHe0/w71z29u/fH5i82yvb7Zn
MV/w0q0fDql/6Xavb7a7ldK7Ve8g159ivd7a86MZw3tsdV0w8J6S5xeld+7+
eufCP2m/Q3UA+S584A7xB75LP8OXvrZf5+lVPkb7Z8V/GtN7YazeC/Rvvav4
APR3XY/e15V67RhputH/gqXh/8N37Z8j/sN6gddfcOCAupvHeX9meZX1yvcd
363FezexXvlepn/uo/7Nle96/4O36v5y/XHhG/tV5uv9Dz5D9yb9cL88r3uH
9uB36l7L79Ar9Q5FHgAfEutofsu5uFTx1KyX4/70vmY/0H597MNUt/ftcn3s
Q/N58EvU/6L0Tu+td3pDioe6LtWnA39T8jPfBT8p8jZ4vuB6L/tec7xG1D/1
PoSfbx1fOafVetlq/9Kuy/76wZqqfEj7bpsrfMDjRG5cEe0tt4AfrLqrjN/3
gvJOsO6c017i266fK/w74v+0d90unXfagx8jfsJ32Q/Uh6cf81XxT/oBP0V8
GBw6j0j7xPFE0ns0pvf+WL332Yc5Dwb0z3oS9lVuTz85r4XrswvXOrqf3J5+
WBfF+3s/Z5z20HOo8hXQPuPQx3Humldj0v9cK/0P7fnueul/GpP+50bpfxhP
zhvJeMCVP8H7gX0CPTgvrLvqxpqezkssPsA4OS+v6rw0JP3PaK07uPOg3tF2
9/Z+H/lcwP8Zb2N6b94g/gC/4rsNkuvoBzzW4QvfI85rJLnx0aR3Okx6J/oB
nxz2HZ8v8D7SR9F/1l9xX0DfDeG/5HsBfG3neJ9CZ+izSusOznqdqXs5+/ee
3rnG39X3yD2Be73Ax28a3G3Ja3/x/Qu+55l4H9Ge/TxM9wjt7X8S47ecxn7e
FnzV/NPx/sE/3Z75nh/ymNs730LIY56X87UuCzmW8YBftTLkYdpDt1Ehr7q9
/a5DLvW9AD23PBFyCPQHv7RS77X6HgSff1gt/ZFPmkJO8HyzvMF47DcbcoLp
kOUZ+kF+6BBylMfjuhUhF3lerOOUkPPdHnxOyPmmm/PLBZ297tbXBZ09X9dp
ineQ2zuPWbx3TAf2T9/9Y/8wHvDBf67xA/Q5nRRyuPt3XaFJtfc4+2Gt5Gf4
ieOdJQ/ABziPS6UX4ryD95d+iX44L92vGLr4zr5Vedj58M/e5/rVf6rK4dAt
1+92nYhUp5v9qX6Mu35ifNf8KtcBhA7gc+XnQD/sk2ulV6E9+H3S29A/eL3m
TT/QoavoQD/g14nP0A94vegBDn9QnSbzH+Y7WucOeoJPqNRNXuf2zHer9JCN
SQ/ZVXrI/wJiCkab
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNnQXUVcX3/u97T9fFbkUxsbsTO7E7CRNbsVAUMbCwxRYbFbsDE7DF7k7s
FpP/83mf+a7ff6171+wzZ2bOnHPmzOx49p55+h245QHtVqs1qmq1IqX9ilZr
m65W68u01VohabWW0/9v5Z+atVqXK38mpTPFOlbhf5TfR5UvUv6aoudQ/hnK
nyr6+LzV+k/psWpnLuWfReMq963aX03khk2rta7qXqm89XW8vujrRfcV3aju
ejo+TdeaT3XPVd1Y51ZRX1bSPxKdqszaKnOKykyv/7+qd4yu1UftJzp/kug7
RW+sMiN1fg3VW03/SufO1PHNSudR+rfKbKK6m6g/C+taF+pamc6dqvZTpaeo
nWEqM6vqnqB0BZVZXv8eOnebjjdQ+2fQT5XbTe2MU7n/lL+56NFqc2mVvUxt
1ip/ttrsKD1HZU8S3RY9TPSiKjNKZXIdz6q2upQer/yF9N9T7TypNoerzTmU
nqj0fNWdSWUu1fmybLV2Upltda31dH4d/afXub11fJTye+p8j9J9u055J6t+
T5U5Semp+vcSfYrS9/VfXGXWU5mNlbeh/jOrnbXVt+vVt1lEX6Trzqb0Kl13
1tJ9u1HlV1OZq1VmBp3bXPU203920Rsq/yblzyH6NLU/v/JHKL1ZdYar7nxq
YxvlbaV/T5VJdLyd8q/R+b6qe6vqzq38S3TduZRep+vepHPHqsw8Knu58nsp
/yblH6T8U5W/gPLP0DUWUpunK71F+WcofyHlL61nuwDvTeXPUd3pRF8oeoLe
4b2ip9F/XdUp6K/yz1SZUvQZojdSmbGit1Vb34peWf8hOv5bfTxS/++Un6n9
UxmbSk/Q/1flHai6he7leJX5jfGheqvr/7voJdW3rfgs1LdVdH6A6u6h/5Gq
+6nyd1LdH5R/oP6f6fg59edg0fsrvVttLKf/5/RH5XZUva+Vrq7+D1OZo1Tm
Xf2Hiz5G6Z8quwZjVeXa9E9pl9JHlLeq/j+rnSMLj+2fVf7qxvcaq2/vZ34+
CzI2dX6I2vxJ54bq+Eel++q6h6vuZsrfRHUfVHsr6f+9zr2p4+OUP1jpnap7
h/4nqa0fVXdoFw+t1XpV545WmUOVTtR/f9H7Kl1Rbe6pMj+p/aNV7isV3130
P/ofybNXerv6d6LSvTsal6KP4psRvVbh+WQO1fsh9zd4ltJNdV8X6dwjKjOt
5rxpdf440Rsp/wLlPyx6fdHniX5I9NY6/6fa2Urp+fqvKvoZXeNGXes4pXup
zOxqZ2buR/Q9ur+79T+f76TxfPav2rpM5Y9U+ctUZhmdv0L9aVTmUT2ntfT/
S+XWVd5hyjtY/99Vdl+lvyp9Sf0erHMHKf1S1xms/L+UP0T0t6o3UPR9amMF
/b/W8W88S/0nix6uMlOUHqYy6xQew72Ud5/6c6ry9lF/eqv/cyvvXJ6J+nay
6v7JPKy8s1W+VrqmvqfZEs9fi6qdz1TmMd6Vzs2l6w5Sepn+m+j8+2p3A53/
Svkr6v+N2vw6Nn1mGBuX6ZpfKu8L/ZfV8SU6nknX3E/9WrvWGFHem8q7VP85
lX+w8ier7FfMvzq3gMpszphW/j/KWyNyfj/mM6W7qB8XtL1GrK36l+p4HdHr
iP5U5Qep/NI6niJ6uch9WFr3taTSI3QfV+m6y/Hc1P4xavPb2N/8x5W/3yuV
bqJ6P4peRf8fdP772PTstdfFD9Xe55Xf79VK/1G6pv691e5RavOT2H04WvRn
opeh/dC3pUSPa9z/T9TOhnrW3/NNqW/XK91C/4fVTm9da0vR66mfK+o/mu9Y
1/pJ7fyo/1Y6d6Ta/0D0YqKnE72v2l+UZ8Scr3Sw2hzV9lq5g+rPW3u++03n
U5XflvVLx1vpuFHaX+UPVv5NbecvrvJDlL6o6y6gMj1ED1CZpZV/rOiXlH+K
rl+JnqD2b1E6TP+O/t/yHJVeo/TsMBddLvrxxv2ZovYuanud3VJ1f2F+0n9b
3lfktrbRf0fRC0bOH63/ZszXPGfV31752+n5bcN6EvmZ3Kz/1vo/qzJL6bld
ovQAXXeu2nzJF6p3Ydt8yEY6N3dtHuV75T/WOH+y6Ecbj6tPRY9hzWt7Tt9d
fXxY11pMeb8pbzX9e8HnqB87wQvo+c0lusUz17M6qXJ/11ZfNtK17ha9kegP
9H9R39P++jZ3Urk296q0k/kbHaxz86qdXPm7Ke+tcF/r6RrzqU/vqA8P6vxC
oj8Q/YjoU9W390SvqzIL63halR+outtFfpa8l0t0vIHOv6X2z1L5j3RuQx0v
qXa+Ev0k64vKbcfzUf75fMvK35TvTvfypPq2vfq+FDyDyuyn9j5QOi/vRmX6
q+wOovuK3gseTvSeSi9hrtC5LZV/hY63UPqJ+rCs2llQZQ5R3mH6Lyz6UKWf
KN2JZ65yF+u6r+i6e+q6e+hcqfzdlV6k/zo6/6ra+UTnplGZt3Ufd7XN636i
4+9Sr7G7KP287bmE+XdQ7jV2N+V/mnnNPUrpIbnXt32U/0fqubaf0gNzz8ED
aCfznHyM0u913Z7Kf0fXfaDtOfwbHf8VeW5nHv86zJesbf+m5in2Unpv2+vg
lzpeWe3vTF3l/xqZH2Bd/DbzvHqs0t8yf0fHK40yr9WDmP9r83jvqg/fR15n
4TMOz73+H6AyP4f5DP6gFXtdZo3/tO05Ej5j38Jz4XFq++G21/EfVOZi3eOh
auNSjdU8M79zsI4jvZdKxwOVv3xhPudH5fdT++PU/uI6Xomxq3TFzPPBe6JH
qv7f6vNfok9QG2+rbKpzfVhjIs9FjOFDmJOVvq3rD6l8/iPRr6rMv10+967o
grVA9MvILkpXYy3n2StdXv9I15qidKjamKj8b0Qvh0yivt6vvvykb3YbnVtG
eePV/psqk7B+6/gI5a/BdZR/tOg16aPod9r+vtZn3cz9fV2se+wV5iHG6Jtt
f7/0jXmSb5bxulDub3kUzzn3N/0mzy3zfb8uekv9H2XNV99eV72utvtxueg7
uyzv9NUcdR3yTuV5/o4u87W7VL7v59TPx3hvamcVtf0c71z5KzCfKX+M8ier
/Q+VP124l5XUnx2UTkbOCt9Rm3GitqZVGin/LbW/szKvVXpVWGcZuyPV1nQq
86LauJx1j3lb+R8rnanteWaa2tc6V3UnK7+36M3J173MIPo85X+VWmadoHa+
ibyWMW+8pDZf1D/jXtte05kfPlbdWURfqLoHVebl3lR/l1F/fhO9sv4DlL8i
bSCLiF5W9ETR/So/jxdEvxR5nKyi//6V09eVv2/lNl4VndV+F6dWXmt6hDl5
vPp8NfO8nvMLaudXnqX+m8DLMg+pL5+HZwI/cFvbfWaOfb3t9YL3e2bs+Zw5
+jnRz+r/O+86c3sT1N5RPIfI9/mq6v0R+jxrZN4JvnaiykzQ/3PR5+rbXErX
P0fpS6yBXR7r1+j5Lqz0brV5R+57fFr0qnqeZ6rs/fqu1xQ9krlNdD/d+/Yq
85mew4y6Vl+19RPfndIfwrgapGs+Ffn5tivrCq5R+dOVd0mX5fmjdY2llRa6
p5HKv6LLugX4usu6XOfzxuvp56r7XeQxyZw2NvfYflJtTMe6pDpf6fhQnlXk
d7xB5u/7cZXZTH1/Wvm3qt6sufmHc3X+VmQBtbeI2l8583p+n8o/peNxSm/W
/fZR/lLKf1jHH7e9TjFW4bl2bHutOjzz2PwsfC/bhXVn98Lr15U6f3HstZU1
79Hc7/w9ZJvM38Q76FIi83vwAffnnuteUf4DorfkHOtD5jlpkvJ7B56I9XV8
7u/gC+Ufr2u9Fnmemjs3P3mB6j2Re33+WGW2yTxHPif67tzz6Auid9X7Wo11
Vff+uJ7DA8jloqfPPXefzb3qvl5R+/co77zY8gKywQGZeYQPVWeJ3PzDpcrb
BT2B6FlZYwrzCQcp//22+YeNVecNtbN92/LGzoX5h8u5lvrwiJ5lqnH3jsoM
VFsL6FxVe84/C15e73EflZlTZbdFRousC/gvt45ilNL5de4UlRlJGX0HvRPr
FzZX+dtVZh7RS6mdHVUmh2dUH9ZWmYuVrq4y16rMjCrze259yLlKr1X5XZGl
VL6Pys6ZWO+wospfpTLTir5e9bdT/nVKF+QbUPmzla6KjCd6ks5dq3NbKr0a
nY3OHa/8EUq3UN4CifUjm+g+5+f9Vn6fyAn/6XgjXesWXWtO0fMiL6vu6UqX
ha8UPVH1U7V7J9+Y+nyV6E2Vd6XSFVXmMJV5XsftwjqZS1Vm7tJ9O0npJjo3
b2Ld0A2634HKn1n56+i6N6r8rMr/K7ce6QKla6buwxuqU6vNB5V/rfJ30/Gi
ieeaHVX3fuZ91k21dSHfvdKF9T9X9HlKc9W9V2VGow8R/Tpzi8bDNPDoyr+R
bwiZTvkPIiPDA4teg+9D/49Fr6l0feUvKvoexjHfo/pwI8+g8hg5W+NoL/Xn
icjf+VHK31T1dtCYn6hn/EKXn3vv0jzLueia9Bz6iZ5e9Ppqb+7EOrvdlX8Z
cgN6BmRY9fEC0QeqzfXU5jain1adR9WX/URPEv2U6EHoGXLP4Vuy/rOmq/1V
dX53tb2E/kvr3GFq5wrlL6f8xUuXuVBppPKR+nqazu+ishNVdkH9b0mtT1tc
bfZV/kNd1t1tgPzSZd3dKerneKVrq+5Q0Y+wjoi+WnUPUN2F4XPV/hM8T+Wf
pDJPil5L9FbKv0X0wqLnTf0tPKLrvKr8e5S/rPL/0v9W3rPS2RPno2e4Us/7
7i7rSU5Um4/z7liTVXec6FVF9xd9n+jlRN+u+5svyBcfNl5zz1F+p7a8+Zro
z/kOwnxSNpZJR6KLUH6vtuemXXPzlmcrf7zyvwzr4Bsq/yDfrvJPUJuPil5N
9Bui7xe9vOgnRN/AdyZ6n8rvpI/qXdx2P9EbL5j6G3lC97pjYz5tKZV9QXXv
Er206OdVfpLoJZh/Kn8HF+r8HpXzRoseqHf0cpfH986V+egrlH9Hav3qkozR
xO9iXt6ZrvUs71Zlt2b9FT2f/htWPn8mfUeXp7qLqu72KvO08hfS/3Sde0bp
+ir7UOo1cTmV2azyODqPb6Ty93GN6M1U97Eu629X0nUnKF2H6yZ+buh7R+vZ
PtDlOfDY2mNvJWTwxM+ZeXJE7bG6LnX1X0T0xcpbO7XM/rHK3ptax7sM8mLl
+WN15unK6/WlKv+snudzXa6/q/r2fJe/+fVS60w+Vzsfqc4SyIUd8+3wn8/D
Syg9Uf9pkK1zyyPIAq3a3+NqpfkreMJ7lf2jzt2HHkVtPVOZzzpe6ZDYssYt
LfNmtEO5J3XuO3gT5Aa1dZPy7uT7Vpt/K/8BHc9VWJbZLuh/jg1z+7OV0+Ho
zwq3v5HKHB1bfrm55bHEvHc2+mjlvyv6ctH7I2uIvow+iN4istz1vdr6ROme
fDuFy6+qNlfPPL/do7zbG/NBHT2rJyrX+4YxrGt9yLercp/pOVzFWlD4+fKc
mcv2RJ/Q5XPrpC77KXqmzPcKv3EtcnPbPO3TldNjlZ4Ym1e/C/lBdY5Rmqj9
5xKvU9enXruZi47Q8bOiD1XapTITEq93o1Ov6cwng3U8RvdyhfJaupfxKjNI
5L96z68o/zfW8I7tOHybu+jc/JntKSNTr+8XKZ2547HImGTuvp5vXunfSu9o
zBv26Hi9Zu46CHkfmVb0DkpnK3xfW6jtjTPP4WOVXo2+Qf/vu8w/I5fdqnNT
K/PSy5fWdx3Z9hj6Vu3fpvM91d7Eynw3+kDkCuQLdEnXqOwvyr9Dx5tnTpEX
Togtj9zZMp/8c5fbgn9gzj+wZTsa89XOLfPwk0XfGORD5ER046vq2sOVH2fW
j+4e9AmjE+s+0UWjWxjG3CJyb+WP5BvT8dCCF6rrK70q8fl3cuulaXMRHV+r
/CWVfqD8SPSmkeuiZ+vXtg3m/qBjQRZNVfcU5tKW2z5c5ffRt7tnYvn0cJ3r
D48VWzexrK69G99BsL/sKpouY3PZvavbZNFt96HMjMgt6IZ13F/Hf6Lnjqx/
ngneDz6ssk2kX5d13Ieo/VXhveETY9t+qDtAfbge/lX0PUHnw+P4GTsfYzm3
veBk5i4d/yJ6j7btKa/nzk+QWSrnHQofUVm220/plTyTto+3z6xvvA0bEGun
8hZnnOTWD8yn/D3QS4u+tmV5kHXwBtHTFc5fB7kk83yFDHWVynzd5eOvEo+L
2VX2v8qy5BLqz2G6v09ZI3Tum7afD3a0xyvLZ+hg0bX3V/7Nle1lxyp//pZ1
ZUeJnqdl28IubevKLk+sW8XWhj7qeNZYHT/Utm5qFtFniR6g/y1q87LEbbyR
Wxd3BOtUy/r13fQ/rss2u2N4DuhECtP/qf02tlH142gd7yX6jLbpl3P3c6rK
XKj8WVXvFeX9lJufWSAzb3wZtlPNAz9ix2X90zj8SvTZou8VPbi2ze42pUfW
tsXcrvRjlTkNnY7oEaq/LfKe6ENr2/tuVfpTaZ3hUTret7ZekWe2X20b5b/6
j0Q3pz4cEfLnC+V/KK2PJH/z2rrgLbDDqHyFDhh7fW0b381KR1e2Zcwm+ufC
eu95RF9RWdc9a+21jPVrQdG7dDzmTmZOCnbz3yrr0NGl/1rZzoG94xfRJ6v8
pui8VPcM0Xsg14resbbueCf08Wo/Rr6urX9HDz+n6EG19ZbMMWerbqn+H4Ou
pbSeEnr/2nbMKLZsiB38pMa8HbzHXqJXqMyfvKOy02JbVd2bE+vR0Kc9Vpvv
hK97rTbPj239RKXH6PgidFKi51OZG1XmKeUtKPom5nnlLyb6Nta32rZgMAZH
N+aV4ZmnIH/oX0d+tlt3vF5eojInip5fz2Qp5ee1dfFF7ftijjxWdaavrbed
QenvpfXA5B9U2x49VukBte2ztyidqbbue2but7ZufTr0r6r7R3inj4p+TvQ/
8Lql1/t/RafwIWE8zCg6jvwu6tp6/0ZpXNs+kSj9Nfdz7q0xsXtl/oR2Nq4s
T/1dmWdDphsBr6Jn81qXbfwfIXMjWxXuyxvKH6Xj3fQu3+zyOeQyZJbjRN/f
uJ2t1OaHut5LzPFKX08sh96uZzqucvtfkSp/mPKzwnacF5V/ZstYgrHY8zuW
uV5V/gUty4aviD6/ZZ027Z8l+nWV/xO5t2PcCOOkv/IjcA9K/9S1FsqMozg/
4BCQIwYw3yaWr29OjXm4Bl2n2tkh8Pzn6NyuiWUE+LqycH+WV3vvJT7fA1xH
YnkZ+Rdd1p1Ka2TMILfyfNCHwJ8PbRmbcaPKpB3L4PD8J7EGlbZ3YL/Fdjt/
oA9VuYcyz4M/VLap/Kj0YOUnaudMtXeY6CL1HDxY9GPYglTmj9J2B+x+23fM
9xxe2eaH7e930Ycrf1xm/gC74KKhPPM48zRt/lTZRvJz5XfMu2Z8HsV9qu53
9EvXeiLMOdsE/v80tfVW4rTSNd9OrHtBD4AuAlnpZB1/GcYkY3PHxHIEY3Lp
xLpj9KF8V0PCvPKgrvVk6P8toh8P89sR8MrYrEQfKXqC6MmV8QbLJsbeXIsu
PsyBedXqxkzdgEwQbNyDdDymMkbgkNL25fNV/jN0Eqnljx8S6y9HB57wyECz
3j8d9B7oP57LvOaur/TlgHMA7/BiZr5xs8zzNPZXsFAbpeY9v0k8Z2MfBcN0
KO+mbZ4Vey40ssD6qfmFLxPfN1gCMAVnKj1XZZZt2Q5yguiJyAa6/yXBrHSs
txyu/BeVfxd9VbqIzi2du/xfavPvxPLZMspbLnf5/5T3jq59attYgru5N5VZ
PLdNAn7wLJV5uzJOYJ/SNj3KY+e7N7ONC0zNtV2+R+y/6Ju78QQtvzdsVdis
WK/IRxf9deA/4UVu0DWWh18uPHfupf9S8IqZv51vlF6XeTz/qrRQ//ZVmZsS
z6PQK9JOZhwC9jPwM/B7c+n498zXugKeMfOz/DPzvLt323Xaua97fWL8DzzV
Asq/M7Pde8HceJU9lb9Yy7a/gW3z6PCA2IrAA6yVen79MPF3ST72owu6PPZW
aXlNY5xgo2e+vKTtOZNvBxqd5AKp57bH1c6/ma91NXrGxPzaavDd6v+iUdDz
Kh3atn0Lm87xop+C/898H/uo/C+Jdb+9dS+L5S7/e2L7J/ME88uupe/3AY2v
7QrreQ5UG4sX1hcdnNmegl3phZb1SOif3xa9fO02X0bG5VmpTwvpuNY19hA9
d9t6+0WUvodsk1hPPY+O16w9Jt9Q3V1q6xBeZ05j/MXWUfcqbNPcFXtQZZvV
mayDpb/lNraU3Lo7bHzo7aHHwavpeL/IWI6tWMeVTmIt1X0ugj5X39HzlW0F
IyrzS8h6d+n8r4nbWBDcQtvPlmtji0RnPl7ndlGfHmvZjnBj27wWx9ihsG3x
3Hct3Id9cts+sNO9q/zBav/d2M9q99LfaQ/18X314/S28TzYxqGxl2O7Zj1h
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
            "]], Polygon3DBox[CompressedData["
1:eJxNnXfgTuX7x8+zzvM8ZzyFSpoaUqm0o6HsEiUaoqwm33ZpSJLKjJC2NFAa
SJERkVDaQ1vRlPbe4/d+eZ8/fn+cz+e+zj3OeM657+t6X+/rOjv0Pb/Lefkg
CE4vB0FR/+9PguDbQhB8ovJnURCcq62ByreUgqB5LQguk3yO5BWSj5I8Tf3O
1AD/aftX5X3Ufyf136USBNeqfmY1CLqo/ZGqn6XyFLU5TeXftf2m8olpEPRQ
/ZMabwu1n6p9p6vuLzaVb9I4UzRevVwQTFD5Bm23ST5BfbYLg2CG+t2mur8l
15N8qc7vfyov1/4/NPaV2tdS8u1qU0/jnaNtT/VvqPHPVfkUtWlX8vjN4yAo
6ByP0424VH32VP292nqp7bfavlH5OR3/e/XXsMEE9btP+/qo7idtP6p8lPo/
pfqxXLPKy9X+C8lrJHdXp20lbyX5CrX/Sv1P0PFb6X9dHX9vHX+2+pystker
/jGV99H1dFJ5vMb+n+7Phep/mfp/pTYXqLylthkqH6M2DSjr/sc6//2oV/kd
7Ysk7yz5Px1/io7RUW3raX9/jfeLjtFB8liN30/y09r/qcZ/U+27qX1e+6/V
ud2oNk+p/Krq/1b95qr/TvXbS16k8nGqb6hyM53vsSrfxL3WeDvof1fVH6V9
Y1Qey/1W/45qe73qf+b3kXyujvFr6ON/JvloyUsZW+d3pe7PwerfX+XvNMaW
Gu9q1X+v8j3aenIvtW1Q+T/1OVrXe77aNJE8UX0P03iHajtcddO5j2pblRxJ
vkhyI8l7Sd5f8ky1P0fyrRp/M53Pk9r3vupaS16o8nE6/yPUpia5se7lR7rH
x+p4DSW3k/yI5IrkvXX88xL3f0/9V0o+XuP11tZC8oE6xkAd++6Sn/exnJPq
5qn9m5yrxntC5fvV5mzVFbSvIPkSHX+cxjpMbZfr/j2g/v1Uf63qa1n/1So/
xW8i+WGdQ6jzaSq5rcoPlN0+VJsyv4H2PazyvmrbqebndYPkzjr+MypP1D0/
QMdoof511OY87pnq10s+V+Vpqj9J9VdIfkn/L9T5jVS5udo+o/Fu1/E21fF2
UZ891L5JxeVrte9xfgttDVRuon37qO4u3cNDJf/CPEB/nV8TnctU1e0peZLq
m6v+a+YRyZdo/5Xq+52OebHKC9S+ka63leTvdW5fcLxM3lx9ztd57cj90xjX
IOt8T9B5b69jtNXYj+n5DVUewblq/KskX6T2q9TmX7U9U/v76Xh1JF+l8afr
/41qf732baKx+6n+f8xX2j9Y9RepT/eS7wn35lxt16h8AM+6xj9D8tGqr68x
Dov9vl7Fu6A2F6nNnTrH+jrX3TVmU9XdrTE7qX3/bI57TNv5qr9bfbZU+1Ya
YxuV91P5GI3fWP03kbxcbT5Q+Swdr6P6bKV9zdR2lK5vqMZarX3Hqv2ZarMr
77fan6Xyct3P/XT/UrXfWe0XqH2k8hidyx5qP0v9WEDG0EfHDNXnV8mj1KbM
76vjdVabrSW3VP+9Kr6W69VmjuoXa/w9Nf5ROoffdG33qH6O6q+WfKzKk7TN
Kvj3uVPlr7XtlbXfWv2Xqv/ekmPV76Dx8zqH3fJ+hplvJ6h+vNq2UPkWne9a
HaOV6oexbkk+R/W7qj5S/TjJvTV+X/VNdc5Xqm1z1Q9hrZJ8nepv5JxUf6r6
7MiYtFFdJ8kNJJ8s+V2Vd1Kf7irfpu0w1Z+ifTuEXr9u593T+Y5W+XyN/5Pq
LlV5J41/qv73Vn2sPgPVd7Du98Wqf17y0ar/Vvvaa+zRzAuSE7XvoPp22peq
/Lnq26o8kt9a9SxU2+Y9pzKfs+ax9nGNvVhLJdck7yx5V8mNKy4PZf1R3S2S
Hyj4+bxZ5S46nzo8jyr30fgv6v+v3C/WWM6Ra1LbHyT/T8d7UNf3s+q/kPwl
1yL5wMBz1Xj176mO7Vn71Wd//X4zVV8rug1tz8jmj0YFH/MSfl/VHaF916lu
C21tJLeRPELlktq0ltyaOU7l63TMKyW/XPL8dnvF8x3P420q36NjHs78qb5n
8Pvr/w6qT7Svj8p/szarvFb7TtSxf9F433Ntus/z1L6e+pc01nWqO0TyauZH
yT8yP2rfI+p/i+SR6l839DvFuzVT23sqX6Jtj7znjLMrfr7uKvh5HqtyOx2v
i+pvUbtza/59nmctyfv3Gqz7N0jHmKN9HXS/3qv4eb5OY7yPrqB9v0m+UuVG
6v+j5IG6vw9rX0uNfVVi/Wr30Prc31U/39+p/U2SZ2vse3Qugbb6avOd2l+i
/lO062B0Q7UfkMltdI5vaN/Bajtb/ffn+dP9+VPn+qfqBkn+o2yZNY21jTWJ
tSkOrQ88qv+7qv9z2t5Ev9K2u+r/Uft/1P51te8teRf6qv1hOn5jyUN1zi1U
7q7jnlLwmsLaEkgOCl7zWftb6Hy21NhNdZyO6j9Q969fyTrK3ipvi76R3Z8O
an+1+o9gPQ78+72r62uh/nO0/wD1P03/zyxYh0CXeEXnd5j6b6Y2BzMXJ9Y9
66pusNpvUvV8tFR9NlX5NdW3UPvNmbPV/mfJgyQ/ojateHZ1Tv/T+XWXvI/K
i1V+XG0TbTvpfA5SnwYq36Vye42/h47zNHOhtge0bxBrjvqMQB9UOdYxR6m8
kGdc5ST2/cmx7qh/uer14Antq6j8q87nGp3PY+izOp+7Euu3D6j9reh3tM/q
j9Oxb0w8fzOP36z63yVfq/rH0QHRzbX/PNV/LLm/yuu0r5XOdb7KB6p9qer3
9TF0bJXn6hr2UP2L2t7VdfykfbeobqTaT1D7UTrmFNVFBc9/Z3AfVG6m32OQ
6iZo+xZdrmD9eI7GmCb5Jslbqe1xOr+TCp4DX4n9m/HbNVFdB41/kvp0K3gO
QpfZU/V16M9aq/qtVL+F6i9V/Xr0eY13suR30I1V30ny8ZLfYB6W/KXaPKTr
21L7tlHf51TfrOgxGftoyV1V94za3Cy5rtpsKvkSjT9Dx9+dNVNtt9V2n8Zc
hA6Q85zBesR6wL24QO0fZn6UXC/r/0nJ9sJmmf0xS/XXJJ7f9wq9vmyrY1aZ
r9BTJQ/R/yN1LvdqXwN0ZdU/qPINKrdk/Sn73ZygfanK72m8NkU/kzybqyW3
LHr9OEDykTr+UTreZhrzW429QOc0U3UVbdtLfkftWxf9jvKuzlf9Izmvmdh7
rC+dmL/V/3fJQ7EJJbcNrH98W7at0EH7jqr4/WXu/Uv1g7l2bXUkX8icrrHn
antA4xe1ba3+7+v4Z6ntbhrnSF3fOGzDwM9U+4p1IHShsWp7hOrP0vNbV/U3
qt1Bki+Nfb/rq+1Q9IvYx9tc8jU1nxPnVj+wPdlLz/M6lXvofHqr/IKOf0jR
9ug+secE5obbdLw22GfoBDpWA21DVe7J+Wq80zXuGPQDveN90A1Vt0ryI9q/
XPXTeX81xga175fN1/ep/IzaXa2xtkG/Ufkz7TtF9RN5/lQ+SlsX9V+gcYZr
vG8kn6/6u1S/v679A43ZE91C5z9J11PVGD1Ufz3zleSXK74/l6rNKyp/pf7n
qn6S9u2n/pur/XmZfCi2ps5/iM6lr+R9VR7Oe66+xwR+X6eqbrjux9XMX6Ht
iRdoyztPWWMeqPoZKu+r872X9UXydMlNJa/U8a5B39c2TOWLdcy9C16DWYs/
Dn0/u0ueLPlfyVeq/y/Mnyr313g7sKyofGPN+uxrkk/KWz+/R+MOydkmQadE
H8jr+rZRmz9Y43RNQ7HZsAFU/k7b2So/q3N5XuM9pfYfqu9LgfWNfjreAPRf
3hdd2/O839gS2veCyqvU71qNtyNzvMo/Mo/qeKepTSP1/5T5qOg1B12Y52GF
+u6nc3yYtVL7Tpc8SH1v0PF76ZrLupbttW8n1X/JGoO+q/Zfq/yz6n/OG/MB
+5ms4+4UWOf/VfLN2OC8SwXjAVwPulN77VuMbl3x8Vgv71LbOjru2dnzdqDk
x1X/iuoPUfvHVC7oYp/I2XZpp/O7TvvGqr6d2m+h83lUx58MPlGwvF7Xc1r2
PN2h8vaJ564tWcvVf5naz5e8KfZ76Hma+fpEnc8davOJ2p9Q9Bp5g8o9GE/1
x6r96tjzOPN5VzAC9JGK8bGBzPEqv1Xx8zFY8tsq/1MxXvaQ5H9VzlWtz8+U
nK9aXy2pfK7Ge1DjPQTOxvOlfdWK5zdsq7t0/GtUHqDnpWfJGABYwNMqz2N+
xMbWuX3IO1u0DYgtyPvDWleQPEzl+9V+X/XNc3zJX6j9mWp/j/bdo3I78Aze
N9UN0/0q6pyuU98/VD8g9O/zsurnST4GvI35RmNOlXyIfqtU19RH441hflDf
Hmqzv9rvr/O7HH1X9Q3pq30DVO6WeP7ooXFHZ78vv+V/anOtyisrG9WT4Fz9
eVbl49hYH4vG127FllX90drXoWI8imdvsI43W8cbru3OnO8x9kCXxOv5Feo7
En0TfVryLMZg/dB4s1XeVvt2UF3/0GMfovGuLrv9C5IP0pizsLc0Xi+dy+3q
cxtYisY9DUxH9Qeq3E/3ZyBzocZZquPtrnt0LfaL5Bj7SW2uV/tG2kapfA7P
dNGYW0HHu4LnXeXHi9Zv+T3Qh2lzqOSW2hao3Fn7tgltv+6gc31b+7pVrR/T
F4wJrOk4yU+q7eu6hi5gs2q/TPI72Rzfhnq1P0n7Gmq8f/QMvURfyb1V3k7X
s7BoTPU7td1W8nzOBfuuaoyWtYs17Nfs9/taY5+kfV+EPifObbu87c+/NOaq
vJ+Xo1U+UfWvF415gH2UtDVBRdW+N9EdQ5cH8fxU/P79i+2UM0bdj3OWfLm2
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
vzc0drxI20p0VsmHMbdrO7Fs/sXvaj805/cJvs8Ilftm+D/2Pbb4wzn7aH8q
mxvJnMTchP0IP+CXnO3PEhzFvO/RtbqffyS2BbEJr8b3lZjfB89vYM06M7rz
p/gzVe6uNu+BN6pcU/1xYPSSI42d4p+T/Ink1qrfRHJnya9LPkByUjOf8Lu8
OZ43l2y/4t//J2d7Nyj73aQNfENsXGxdXdpGPmG7im1b5mTmZvBA+CDTtW0r
+QneXfCunPFZ1mPev6k565v1UuMt4C59a/ZfLNJ496vuIfga4Ft5Y1AbosyP
pb6nF80fqAteWPQ7MlFt72WNV/mkov332ATYBh8X7V+EozElsA+wruR62FPg
HeqzrmT+2p55r7GstSsj12+m8iPga+q/Dt266PeR95My/rMBZfvw8L3gg6mp
fj3+En4vyX2r1ofhui7MWf/FHsX3iE8MHxj+UM71CskLq8bMwM5OyRkfw2eE
LfF+0e9Dj6rLl6r9gqp9SPiS8GHyDGyVGl8FZ/0x4z+cKvkFjfeO+myeZvpo
aFsPniF8Q9rAj4Cvwb1+VfvWlOw/XYb+pHYP13z89wK/o7yrk7HX1LZr0fyF
t8peC8ET8K3BOYJ71L5of9B/GrNaMmflJJ3Dx/hbVVdU3weZb1NjhWCGI/T7
PhS6/lF8Quq/Vu07Sg7Ufjr2bGI863fVTauZMwd3rlPR/ib8T5SX5Mwpmxa6
/yMa7w4wIx2vNXZSaP40nC989/jw/1Q5p/2blsx5OTk0RwauDDoi8wv8Da79
mZw5V/BJeBafzZljeJO2P4u2gQ+r2B/I3FYr2QcJpgu2e07OePkafFKS/1b5
gZr5BPi78HvdX7N/jXv5ZM6c9HtCt5+u8W9lbk5te2CDPAC/Ekwub5vyT2xc
jVc/m78/0rH7VP2sDlTdkypPDM3NWKBt17IxgF4q759hA29WjR3slWEOY+C/
avz5zN06v800/id5Y8DTYrcHn7g5MN7wVWS+3MFVP5/oo+h2zCcPxsa34KM+
lDO+d0NqfGKa+rdV+cuyuc/otOi2bVKvB9jqC3X8V6rGJnbVdkPV8ylzJ3Po
/eBbkj/LG1OfHpvvkVP5Pubnsu0R1v9JOdtTIyPrr+ixxZr5d+Bj6IDogr9G
9hfim/pF5/JDZP85voCf4J7qGC9L3k9tq9n57aaxLguMn8AXZ+24Vb/fKPDY
qrGbJhlm8zH6no71jNpdBt4qebzkp1l7JC9UuxM11oyc/Vf0B+8ZFhj/GZEa
rwG3ydWMn8GlgHMAZ+LG0PyOOdoalY1Rg1UfHxhfxn6G+z03Z3u7HJmvv6xq
fPF77Ju8fR6fRtbpWD++KZq/jvOeeIilVeN7w1PjQ+BEf6f258CvnZ2z/Qm+
SF/8d8RGECdBvMShJfNJD4nNB4IX9FdqexHu2HMF27e9IvMj+lTs3z88Nj8M
nlgguZZYf1yX2TMNifnAHmCdQn8smasNhnyC9rVW/xXoY2pfqNkHgC+gYWD8
vnViPOrAivGr9vj30IfUPkS/1viXoP+zTkoemRqfA6cr12wfwz+apW0n9Wms
9oO4Xu2vqP6BxP66VRr/dslbwpkoWaffhGcttv70Cn4X1T0XW9/Ghh+s8hEa
86Ocbf4PwcliY99g4PgKJoNX5cxxuzuxzxPfZxvWMfwjkj/N2ee9Wu1Xxh7v
ucx+3VpbV5X/0L5VqhsUW9eBA/cRtnVs3QsO5juSL5C8gXdb461CN1Lfd9Et
dcwnsMcy/QXO5etq/zr2a97jv5ZhHmAf+FPfUNtXsdNU90Rg+xEMGCy4nupf
i81ZQi9BP4HL1CX1sw3HqqvKTWK/O8SE7KTrfwW9C12f+RxMJrYuAwe5oeqf
TszNwWZalvj+o5vCGVyr853C85DzmjlV5ZfQtyTPDGzfo/+ha+GTLibmyMGx
aMMYsTFjsONIx3s5NqcOzsaRqh8V29+EboqP4u/EHB90JPiVL+DrZM5Hl83w
gG20dVc5D6agusti+17wOeB7AHMCewJfeCu2zYPtAx7zuMafFpmbAOdsjuRx
2nbJmfM4XuVbtO0meT7rj8p3R45NgkM6m7ldYzZS/Uva1rOex7bPnsSurZkD
jg8T/shzOv8rEnMvwCAHMnfDp5XcEvsf30RkbhsY7pFqvy527EAL1X+k8oWJ
uUv4RC5S+afIfFliTS7RsY5JzV2HE3msyi207Z7znHl46pgLdCL4os8TqwQG
pfqbwLA0xr4a707mM5X3UdsXYuM3YKjDVb4otu0Bp/U9tX2ReRtbVPteUHlG
ZG4KPpWjNf6d4Hk568CTEsdg4NfBv7Mwsc2K7QqeNS9xDAJ+b/zfT8E9jcyt
x8f4JNxGyFI5c4bmSn6eNVzyA4Ht7ycicw+JKVuk+lmRuYBwzuYn5kyDgcKn
XpUaowSrhG+/NDVHknWS9RLuJBxW/Ib4D3/DVowcyxOofQ5dQPIJOa8R36n9
u5r3TsxZR/4YPh0+hpxjeH5R+zcjc6F4p4PEnGP8avjXfpL8tuoPzZmT84Pk
vqm5X+hIp6GfwO8KjBm8lZhDtabs+Dm4VfCFwJbg3H4A1ywydj9Hv9c2qTnc
+Pnw933PfKD6ZjlzZr6V3Ept9s1Zp2kNVyAyt4x7/K+u75LIviQ49nDtwQTB
BsEHPlP7iyPbhrN1vK0lXyh528Ac+g/U/n+Stwjsk3+P+wX+ljO3EP24bYaB
sx6/obp3tK3M2feKPkx8FlzyoRpjncrP4rPKmRP5ZWKOILgm+ObXzE+RuT3M
Uf/F5nTih8Uf21f1/SPHvqEDnp44fgjd9hrtOy81ZxSMH/vmrdR8WHTHs1T/
bmIOJ3oF+gXcTuJ/0MXx6Z2emv8KFghH7O3E8YnotvjweqTmHLMusj7CF26d
+WyIF3w6Nf8c2x3O2cuJ42/QxfEh9k/tw8SXSbzEEsmr4X/kHCuHvUAMAzgd
eB2xDc3Knj/BvN8rOV4R3QSd53iV/4j9LIGh/Rnbx4SvifiLp1S/VezYJGJS
ttP5NNf9u0/tV+jd209t34YPk3OsJfr9wMixe+g0V4P1xI7FI2Zn68QxCuj5
3BNiF+C8o5dzj+EbLy+bL8gzDx/uxcSxOmDOLyWON+FZ6aN9p6p8curYHHz4
3VPHBIDD8hvAP4afz2/VW21eZX2LjE1yz/ZPzREHJ+Gewx0nvorfHh/rmak5
1dhZ/MZwra+JHFuKDnat5KGRdV/uwUFq/wV4ds42/w+xYzC+rXiNJTYDThB+
B/wPcIWwgbCFuN43U2MGYAfoME9rrFNr5mQSn9k6MqY5N8Mk7knNaehcNb4O
1wGbFtuWd3o567fknyr+zYlPheMA14F7+jrnG9v/hx+wa80+MnxlrFGTInN2
4LlgwxIkREwAsQHg3+0T+7DwZYFx7pmaH8679Q33L3RM8O1V26TECk+N7UvY
NPB8iX0FtonPoV5iTBRs9Ax0ktTz96CK4/OIhdml5rgh4ofwP+5ccxwg8YD4
MxvXHCdMzAb+1edj+x9maLzrY8c8wBuCP9QzNuYE9sQa+GhqzAncAfxhVmrM
GOwYf8zc1BgwWDD+vjmp7S+wVDDrLRJjUmBTrK8zU/tI8JX0lDw1NYYFlsU7
NDv18w73E/4VsX5wHuA+oAPcrvtzLzZJxfYj8ar48PHlYxPXT22zwI2AD4At
M1djDMt7PQK7eTt2rN7rjBebAwQXaCX6c2obBq4C/ANsmxWSH8SOkrhbZI4F
XAvslU6pORNwJ8D/O6S227Df8GfDTcUni28WPvVJ6r+k7NhjOI/EAsGJghv1
EvN5ajsbexv7Hm4ZfF1i17B5uqOL1Ry3AAcY/gV2I/YjfAy4tugj9+TtDyM2
A/0Z38uvat9F5dnM51Xj4eC96MNT8uY/wBV9lPm8ah0W/BK/E/4nnoePS/ZZ
4ruEfwEXFI4JPA74HMSDos9PU/sFav9jyT5KfJXwO4gVRV/BV/AZc2jZfjL8
Zfz+n5fMsYBHAZ8CPjA+UXyj+GB7p9a38aURA9NR5WWqn1K1Db8jumzVvmBi
PJ9JHA+DLx6fS+fE+uhlFfPtiVU8GZ2xbHvgCl1vt5pjbIg/PyAyz5p7jQ+S
eFTuOff66tC/xQnMX2Xrf+fH5ih1rNqfA3cJ/SquOD4b3zAxJnA8yB+Af5/4
a55lbOjOqeNTsWXgQHH+rD/FiuOl4T6w3lUqjneGy0O8DWsnPt5nE89ZK8r2
tzCXYePB4fkwZ9svjOy7J0aH9sQz4suA8z09sc57pNp/mbMujL48Tcd7suDY
ZeyRByU/XXAsApxJ/Mz4m+FSzojtTyG2fkDNa+KxYOY5r5Xoa3Df4Vj+lulP
p6v/50X7WsGH4b4SE896AYYDlrMArFptX0qtSxF7AP9sVmy8fmmGl+AjO1Pj
fVG07+zF1LoWsf3Y16xHjF0KjWeh3/yl62lbdKwM+tdvkg8vOjYPfaROxf4x
uAvXqv/lgTEXsBfiH4hVgPMC9wX/Ebrx4sD+SOLdwIPhbA1VeRA2c2CMBKzk
mdj+v8nad0nseBFiOeBQwaUC/4K7A0YGVnZLZKwMeXRq+5y4K3zgT6S2B+F5
w2malxqTApvC/n4kNSYBNgF+9CXrl8a7JTBnaJTkGyUPDzKOUWqfH34t/Fsz
UnN6wLWHZteLDxVfKvPdJJUrZcdKw5klvoQYc2LNn9P2T2pMB2znPOZHlWtl
x1oxH8LHnxvb/7wsw8PAkMCS0FHWp+aUgWsNye4PPlJ8pbyTd6Ve4ziXgaHX
PjAdsJ2rmB9TY2RgZegoX6TG/EZWzVcHC6ybrZUtA+dLAOMB67lO8sOpMSaw
pgEqPij5iZp9zPibvo+cUwTeNs/wmdh+2uYHxjj24v2JzKV+OW97Apsc27yp
fq8j8IdGxmdezVtfx/6gLf6ME2Lr89TBB+0rOVKfNay32k6OHNOB7xQMDCyM
GEh4S9hAxEYSswoPDhuGWFZiOOuUzcGCi8Ucw1xDPOtjsePL4UblCtZX0V8p
n6X6R5mPItuer+dtz2HfUQaDAovCXlydNyYBNgFHFb4j5xwnju+GO1UuWJ/m
fjWEb6atU+QYRrhicMb2TYyZgJ3QhvvJ739paEwB3zn6OWP1V5snYnMgPi0b
gwaLZs5k7oQvP0flvPa9pXJF29GRfRL4Jt7Fx5HYZ0Begv6BfQlh4jpixokd
/z0yV4acFLeq3CYyFrQ6s4/x+eH74xiFxBxr+Mrr0Pkkb5K43Fhbb/WdFzu2
lyARfq+zEnNl4czCvb0AvDHjz1LH+3R76Jg6sFPwleEFcwi4H/iI8RUPz/AW
fG7rA+e84PlEh0SXhH9TjH3PuffEBHUEC9N2osqh7sExqnu/6tgtOL9tsF9i
+57ICfGk6jtEjvXEB0z8dofYsa7EIC2KzKmEW0nMSlfVj9Dvszr0MY5NjOmB
7TUGc5X8JzpZyRhuLbJ/YUPge3B24jWctZzfgN8C/Q7/IJgt2O3hid+ts7X1
jexz/bhsnwG+g7+0b2TOOU5ui4zpw9lHXwfrvyRxLhKel8dj+zTwvXEOnAs5
afC1XJPhUcTwNiw7fpPYXnICkBuAMQYkxq9oCwcFLgo+BWJkyC+ArwEOCjEh
xNvDTYFDQgzIt4G5JcQsEtdCfMs3qWPA6pfNyYWbCz8RfBucez/8cRnfBZ/Q
fXAldA1jcubITZX8R/b8wvGanNlTY8IsHlttF8fmhxBT0TT2nMDcAOdy89j6
+6LQmCi+6dO0rcs5BusZjdcn9lxFzM0yyctjx+7CCewVG28ekHdMxhmZ/TEv
NGaGLxy886K8Y0y6xc55gB8ODIBcL6wXvOtwMEPef/T/kjlUDSLbT5NCx9/C
NTk+9lxKTMsS1Z8o+e2cY56WRrbP8ElgQ3+VmoOFDwaOG9ws7JdbQ8dUw/2C
YzMhdPwd3BvWwwtDY5T8vk/F5r8Qo9JF5dnZ/SNnAPPvqcyROcegvqj2PWL7
/4kpfT7ynM/54rPGd70kG48YXGJxeWd5d8kxcUdkDhA+emJ44AYxx/HsElNC
bEmD2LE2xNAQS7MwdqweHMldYuPhccEcH7g+6KzorsxJ82Pj6bWCOURwici3
1D7wPvB1dCR0JZ4Znh3yexwReEzw9cN1zAcl1+d4kneNzbXC3/Ykc7e28Tlz
Yu6M7APAF7CH2hwCXph4bujOHBU5h8neFXM44XKSX+JRjb+N5N0kj4xdHpjh
40Nq5nVxzB2ZGxOP3UtbD/UdEvvcwHTxdxDjjJ2CvcL93iK27xCO7uNqX8ru
P5xFuIvYxzuW7XPg/jSMzY2AU7swMqYKtkqOmPmR7edtyvZBcL+Jscauwb4h
9jqOPZfDIXpI7WuSb86ZU/wI61Xk3DJghM1T58iBVwcGSrwk+jFrNRznPyP/
hht/S423Pb9VbG4tHFu4vmBkYGXkHJoteYzkuYE5fMQPoD+Ortr/in44IbJt
TAzjkbqX1di6GDbpJ1xrbO7zxAzfRx+bEjreH9/b1+r/pepH542PgpdSPgib
M7bP7tWSfWb48lZk8wcx6dyfvtn8AscTrif+BI7FPUpj5wdDt75L+75W+czY
tiY257fMLZF905eA0US2H+DaYRN9ntrmwPYYpfZr1P78yOUz1OaK1D54bHVs
9vdj65fDq1n8sur/0/ZiyT7CLSPbi+0yfAX7CnsRDi/+zU/U9sSaeUz41PCt
nRfbtiRnGrnT4FDDpeaauDZiDMeofEfe/hdyqi0JHXNHe3RudG9sjq9T+1Mm
5L0G5FT+J7K+DGaxVvLdsbnTtMHfgr47OXT+A3yt6OPXV22jDM/0Z3znPIMb
JH8V+15j0yyL7R/i3PCR4ys/Ofa1gyl8GdtHC/d0aKavcr2cO3P+07Hx8hHY
4truiI35gf3BMQa/6hw5dwycq2L2Pj/Lepz3fEGOmZdDzwnMDegDL2N/5a1v
92P9U7kvPvvU88sS7Pu89Y+rdIz7A/tc8b1eHjtekDXrWZVv1bY8MEcU/jg+
YmIdwJjQP8D3wJ7AoN7hemLPJSv1vO6Sej7srLqJZftLyTG3PPQxyD13AfN5
2ef4rvqu177PAt8T/AfDI8dm4cMentjmx/ZnjWDtQV8kVh9OBvoSz/t2gTnC
8DHOiJyrAU5tHdWfEzmXAxy1LVL7T4iFZc5ANwUTARuBc469CqYFtgWHsKL+
hdC86FP+3/USm8n5sHbhPyFWgzWQtRB/yZ6B4+9nxp5PwFKHZHgb9xtshhx8
3I8/E8dq/6l9f2X684uBYww36tOpsbTNkFOvyazNK/LG87HnpofOJ4MvH7yf
OjB2/Edw1uCuwbf8KPXvS2zANtpui50jareK7Xv0f9YXfK/kNGK9wT6gLpfZ
D9hnKwLHHGLvVFNjjbHkKHWMIjGC8CnXpo4pgQ9GToFTwae09cEW4J5G1mHR
ZcnpQK4M1izWro05KxJzND4OnJMG/06fxLHm5MCchi5PH5Ur+D4ir6GspeQM
OD4xXjAjtE+X97WX9vVXXV21P01te0bOBQaHPFHdaYljjeEwwGU4I3EuB3Jk
gScRAw+PmHeS8yOnB7xu3kHOf6zkT0Ifo7fkUZLfDX2OJyX2T11Q8DE4Fnyl
TwPvw1+VT50bsIB9lXq9gpv2st6vXSX3Yj2umD+AfQc+Brb/pq5vvuo715yX
CZ8a+Q7JGQevCx/YSI3fBbxK8ms8g7HnN7Dyjtl6MiZybhA4IaMTc0DeKjkm
Hm7IcTXn+cEGwhYiJ+WI0DoTuhP6BtwH5gD0IWIyiM3Apsa2Bp/slOHj4GfM
R2C5z+v6GqfmhMCbhaMAV2FsZGwHn+Ihqe1brv33nO1P/CPEaBAv/2nqHGFx
2e8k/kxyrA0ObZNjm4P/zArNCYALfqbG3ydvGwv8HJsV25Vck9gbcFrwq40O
zHUhJwC8FPgp5Ao4Jjb3kJwPiyP7F+aE9tHDdSUH3LWhdUZ0R3ImkqNjj8C5
FMmRSAxCo8C5E/lN+G3ICfJU5Bx4V4TGLMAuiHki9gmbHNscf8RjoTkNcGeJ
ESNWjHiB9qn1+QUZ5+q+1DF38ODgwx0h+b3UvlZyjcAfXZbaN4yOiK74fprl
X6g43oQcU8SnklMK//ma1L5tcoEQv/tMat8sOh+6H/j7Wzq/kWr/n9r/m7hM
vOixkfPVoCvAgcZe4Pm/oeiYcmLLQzC8ouOTT4zs32hSdXwpscLg/++HblOm
re5BR401oej5iHw2+I7hVGN/kA+DWDk4zvCDyJeG7xzONvwdOC1wW4YVPR/D
wYOLN7Xo9YP5+Laic8b2icwPvrPo+O7TJbeNnKvi6qL5Adswv5Sc0xF/400a
77icx2A+x1/StOp4b2LLWa84FjGdxHYSM09eETh82DusF5wbOUs7RuZj8y58
r/Y7Vc25gXvDPWT+ODR27r4dSvaHEk9+c9Hx2qeq/3vqM7PoeBjy1zCfc+/I
Mdtd8sTUvjpsUGxR5mzmbmK6Dk08hzKXEhPWkvkx8lzBHMRc1ET91xfNscT/
B4YNlr0BTrLqxkV+t5hTmFvYRx2cR/xtYOhg6YzBWOT/xRe7o7YH9bvfFPld
ZE5jboMjQL6iZaG5A+Q7Yu7gfXw8dP4T4j/wv84Pnc+LXBbEHO6emrNBfrkX
Q3M58LXCjSIHzmLtWxX5WcKngG/htcjPDj4BfAPwOzqUHANHLBzx5tgyzDcz
Q+f7IXcbOfR4v3ORcynBcSS/HWsYaxkxwgep7U2pfYtw6ODSwReEi0vOG/xn
E1K/29j02PbE45CLgJxp+IfAuMC6iPFtmjheBe4mMflNwX8j+wbJmYu/Bh0F
XeWBqn2F+Hw2+n7yxvbxQeOLxueK7xWfJL5JciTDN8D/zrPWELxGct3IZXJI
4s+vRM6thA+BfHnbR8YiiSE8O3UOMvjM3EP4MX1S30tysMK/6JjaVwnH8q9q
FiNeNUeK2HHiv8mFe3DJfCVyjpJvo0XJ/ClyYOCLbVkyn+7QyLkZ4eTC1yX/
ItwdYirg/xGvPFX1e5fMnwFTb5TZH/jnPk7NNeMd5V19JTWX6dos3g/+Fscm
pp3zIx/LvKJjKrFXiaeBKwWn96HM/m1ccoxVs9TxtnCZiEnAPiY+GG4IMcPg
VfB7ODc4j/0kH5Xad9sR+6jqHGJTeH8L5vfB31pcMCYDHoW//LCy84WRO3Dj
pvKSgvmV+MTwjWGTgn3BF2SsTzJ8DD4Uc92PkgdKXpya+wZGD1bPenRT1Tkk
12ScZ7jPzMHfp37+ye3YqeJ8RvDN+O2w4bHl8UffnP2m/Lbw6Q4sGeMD61uT
jc0++HXtUq99xMx9UDUnivyXz4bmShFPC/cFzjR4If4hbH98YI0iP/M8+8TI
X6yxdomcO5kcBORnhI/Js0OML7G+R8aei3YvWT95LTVXjdyx5HPBR4yvmBzG
8I+wsbG1iXlokNrff0DVNgrzPTYbthsxD5ul9hdPqpozxnzSTfvalJwTHb4R
8cDk7ibGHrwLHza+bHL6wieCP9O25D7VyP7le6uOuT0ndQ478gHRBn4Nv887
Vfvo8NWR/xfuHpxf8B3yN8P1I4YGPKWN+m+X8zMLXvNqam4euayIr4a/DzeT
GEPwWvg0O5e8Jh6I7pCaezk4i8dFP7mx6neOd498AHDx9yyZ70g+nMVFx1yD
3+I/RJfB57dXZP8fXHR8fntEjv+GewVnG7yKeHR81XD2wbvQL/nt4LgfnDrn
wJiqj8mx4Vty7DcyfW58am4OmCTYJHxk3hUwz1OwVXkfc/Yh40tGR0JXei00
97B95ouG0wC/8oiMSwJns2XZ+YnQ5YlxAc8lH9CSojk84K13pM69gA8cXzg5
QfBNkTOO/IHkL4J7BCcMfLlZ5iuFs9y8bJ2deNVDQq+3h+i+98zZBjkltI1A
PucDQ9sO2BDEvx4Uej3Hd4htgL45O3SMDv6SxwuOacQ3ie2OvfVI6Hwa5ELD
X0++jYmRrxcdGl2a/FxwV8khCl59b+RnBY4P/k64MnBjyZFPvu1xqePb4AjB
FYLLBPeWmMDLQnNQySc+LDQ3FU4w8X+DQnOF4aQST3lNaK7qg5HnXjgo8B+I
h64TOIcO8cjkqGHuYw5sGzofG9xlfmP8AfiiwYLA9+GDE2NNrPUNeXOGyc/F
tRMThr+AnE3kbuIbAeQoJH8TXAM46vgLiGHCnphXcE5s8kWMDPxMkL+BGDDw
c/gLrULnd74gZ8zxtNA5avBNkgONfGnko4N7QswZ9smA2FgsnBC4IZPTzDdc
NrewNTGzOfuD+sCp1/6/cubAwGc/JuM+wLGBb46P+Gu1Patq3zE2HlzYrSu2
/dBL0U/JGUg+uh9KxjrgxB4b+nsNvXPGgHqGtgkZn+NgK35T8toCp7Vj6PhK
uD0/ZToXORvgfzTXPbw5dDwkXB3O+YSyc0STC4KYorfLjq98KPA7iA4HZkmZ
9xIsE54/fH84qEeF5noRj4g/CD419hm62+Gh9c1hsWNr4fDB5fu5ZKyEbwSQ
3x8bDf7EdhXbbsSvEp8N/47n9e7UXBw4ynCV4W6BrfBNA75HgI2PL5dcj9j+
YKjoJs+HxlZ7qF8x7xwBq1X+pWTsAI5yl9DxqksDtzml7BxK5FKCD3JHaE42
+dpHh+Zqk3MCvtH+2jcuNOYC9lIMzbXl+WiFL1Jbm4rzoW+ft811SsU5KMkd
Ab4Hzsc3I8idBsYM7kw8PFgWNsr5VedoJFcjMdrnVp0zinhfMBOwEzhdxPJi
42HrEb8D15d3FH42OYewJbEpsTPJV0YYDxxN8peR85Tcp+Rs5/zIcYUtib3I
mOSUJLckMfqcDzlLyF0CXsM59M2eH/y5+HWZL5vxvGH/wLuKjIXDSYWbenlk
3y6cU7inxOwRu8c3L6aq/5TUvjc4wnCF4WwSb8mzC5eTmEFiB/nGCfbNval9
X8SEEBsypeLYBXK4Ys/cnnrubJ9xT+EQEv/Ebwe3EJ84vvEwNJeD72/AjWXN
5nymp1l+hrK5utdH9k3gc8H3Mi117A6caLjR5ANlLYR/ij20b9mxEuTUwr6B
20psADkmsa/IaUJuEzC/D0PH70ncyLEn3pT8HsylYB7YcI+lfj/xGfB8E78P
tohNzvNBzjLivfkt8LWTQ5pc0uREYA56PPX8AIYEloTPC98XnCK4RfjfwNL3
rTg2B3uZ96VbxbErN6aOt4ZzCveUHIbkMiRHLPni/8nmd3Ikw3/FB4cvDo4S
XCX4HHBjdq44Ngb/P9j7nhXH+oAvMP8dX3EsDTGHxB7yroCNkxOR3Ih8w4X8
duSYJFacnMrk6yfnLblv+cbFGRXHFBNbDOYI9sj3L5rkjTFQT845sAkwis9C
xwATCww+SR9ytoEFgAmsCx2TSWwm/LG7Q3Mmif3m3QLLIQcj2CXf2GG+hu+D
7+GAimNzyIEGl4NvDrAekZOT3JzkeCAnP99U4dsqYABnVJ1jhvmCdwr947ds
vmCOYf0hJym5ScEATqva5sL2QodFlz0i9rcy0CnhZxNfsmvRPmF8w59W/a2C
rYqOB2IOZS4lh1iTxDonuicxOvAFiEfZtmifbUX9n009X4HxgvXyzZJWgXUM
dA3iUXYq+htHdWPj28SukhepZ8X4Ot9FIAfXfonx8T2rvt9gMcSH8r0UYij4
Pg54/T5V/15gS8QnbV40p+PvyDYltiUxTvdn+CDfyiCG6Z7I+Q/gwi4L7L8g
/h3fo5ptzO9GPkR+LzgpfN+AeCnuDT5ffL/E2ML/QGdCdwI/5VsVxOhMj+yP
41tHrI/PRc6vD176fuB4Y/BOvn1BjM6jkfFhvl1EDM888JCqv73DNRFvhX+I
bxGxvr8amfMI5xgfL75eOHNwguFEwI0gvuWiojkZp0veO3Ju1/8VHS/C97GI
XSGnNf4BYv7g5OLfgptBfAlt4UicFBvzBPskJgY+AhgnWCcxJvhf+QbDw4Ex
IbAhcmITPw/GBNbUInLu7suLju85KHKuXs6R+Bs4l6y1rLl1InM24W4So4J/
gfwLfE+HmBq+T7Uy9XyHjwFfwzdVf9uAZ4x4J/KxEauzS+Dvb8GRB9veNLQ+
zLNALAZ4M9/bwgbDFiOGC384+b+wz8Gf+R7YZ1Xn6uCZJ/6KeIxD4dbgo4nM
uQd7TsNsPqyZ800+Hbix5ACBj4VOjW5NvgNydZAzoU7q+CfuDToVsZTYxNjG
xIDB1yDfGr5QHjHizeEDLak63x25zflGGTnW8IniG+XZw3cM5wL9jGeT2BX8
D3z/YlzZvgx8+OSnA1MgVzIYG1gDOcH5Rhf5zskVzjctyPlIvmO+dQGHubXa
blc2t5mcnOQjYe3ifSYfE/N5PtO3iFdnPYky/ZKcXG0CczLgZsBHhINJjEyd
2Hwq8m4QQ71bbL4TnGxicLaOnUOHPKJgeGB5jLFJxTY+Y5MvlFwnq3SMODUf
a2DF39fgeyzEo5BXlvyySxK/e8SKghGSv58YY+L4wRDBEsmfhK/u+cD+L9bU
EyqO2WStJT8l3EB8ksQX8w0evulEPm2+zcO7TqwpNvHW2Rp0VsXPAGsTfmB8
QXBG0ffxz5BHkHyChdg6CroK+ubKxByztoHncOID8Y/PkNwt069XJdb10fnh
fm/kLOX8zBI/RP5RcrM8jc6bOv51n6K/mUJ8zorEx0LHhVtPvMwvFedDJlco
Ohi6GMd4PnH8y2VVx+CC95AvAn18ReD8SXz3BV8pPnb0bZ5Znl3yvfDtF75f
ArZLzsghqfk95GCi//LU/me4D0dn9hj8TnJdMR88mfqZJ/a2UcXvAt9gOiqw
zo7uTnxkk6K/AbNN7LkU3zL8AOyln6vOxU4b4ifhC5KrhfVmYWpOHNw47hHx
wfhw8OUQ00i8NfkmiVXFP8X3AIk/eip0fhJybeAvZ605oerYkEGJ5w6+sUJ8
W/MMX+IbNsSDwemE2zmt4PixwYnnRnJikBtjCHN4wd+YIL4O/zsxL+iLxGby
jSryc/CNIPhycDjgcjxYcLwW32fBF0iOGOJZhyXWv8mhQS4O4tc4Nsfk2MzJ
lPnGC/FjxOdcHDofHLlKiRdeULANiH+N79fATV4dOB8InB+4PzMK5ivwTQby
m9CH+OKbEtvy2PT4CuHoExODfQJ3n/jkuQX7JPBHwn9gLM6ZcydH1N0Vf2+F
3FEjEuem55t2xEvyzSxwAo4xMfE3f8B7wTzBPvk+DLGuxNwT731d4lz35KAn
npR4N+4dOt/QxPgXeRzA0A5N/Q0lcnSRT4hvKy0u+1t45Exg0ub7acTKkFMF
viznc1/FPg6+Z0C+fs4dzAm+LDEOxDrA4YD/i88M/ZQcOawXN0TmpuNzxvc8
PjJ+hQ8WXyzfDGD9BcMm/nhYZC48nCq4VfjE8I2RqxZ/GD4u9FtyLDNfbh35
WvkGCvGeXDMyOUnIZXJY5n/gmyvEA9bL/DN3Vp0vkZgRsBcwGLiXxM81rtpn
j7+yGz6Bgn1KfB8GHyf2KTmXiX8fEplrD4cKLtUVkWMH4ATDDcbHiX1KDmXm
r0VlY0k7Bf6WA9/vGRv4mSGeHRv55IrnPGxn8n8SK0cMCfw4OCFwQ2YX7M+H
Mwp3tFXR8cbk8OU7hsRAE1+PDTKv7Jg9bJNFqd9/OPZw7YkP7FzxOXAu5K+D
W0JOVPg2xKgSq0qMKO/zxhiUou8x9x5+AeeCjTsqcYwwscLXB86tQ/5RYv+I
mYD/Sj4xYrvB/OBP8r1E1mpyiMNP53uOxOJjs8F3JmaeZ5TvTxJLT7zj5aFz
jJFrjGNybHL0cDy+KUj+HTBPsE9i/Lnn5MvaGPtfc8wY/C24u2MSY51gnnDF
ie/8o+L8O6uz9xUclDZjE/PtFpYdQ0jsD/GfC0LnXyKXFN9fgvtMTjfyTxBj
S6wtMag8j/C9WGPAcz6MHDNN7DQcKeYz4sf5LZkzt1D9B6lj0/lN+W35Xhu6
ATlC4dP+H4yHE5M=
            "]], Polygon3DBox[CompressedData["
1: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
+3DUgw741WrUjPXE15gvj5Yf4+ObCDX0reXtre/PeMbQTLuQpwjWxT5nPO21
x8BU+e7BH4/vQG4678a5t1WcwayZD9yDhrGO9C3h+QgOiPsSLuU7JP8Y2pjY
f7THQXP8mTjji2lZkL5z38U3LM7lYk6Jfxx4k+eDgHY/3oP6vrUm2sYzMq5r
6ddAmzg/x9nTWMYZSxlaNdodMW7aMPxuGIrP4Gts3RXHvgtr5J8gZzP5F8V/
ihq18Hn0SfhkGBD/b3GGjTVtHg2z6Z8o/o0uyKYz1GhjfwgORJw6tdSdE/8p
MBn/D/1X7Zm56QzZPP7VaO/infPSebaFfK/TjuK/5aXnPIvv3/FNEZvJT89q
Lm0mNDWPEr798Fo2nWHiLLM4ngUspq2ALdo989J/SBue+rF3xpkO7jLmeniH
0ulfpAtf51hHpdN7He93LfFPwNzY7+Fx7fHQR9+x2N/4muLPwR206vhDcW/w
OTCIVjX+IcSW4l9Iq2a+bc3hV1isvcpYdqr9S1E6x8V5bm6sN1iYTWfFODM+
H/948axozWjP0rbJ+Rl8n01rOtZ2dZ5xcS6OM4i5VFfjmThvwON49zhruh/n
x14C6/n+D/G6EkQ=
            "]], 
           Polygon3DBox[{{2586, 2585, 3496, 1693, 1694, 3497}, {2680, 1579, 
            1687, 3492, 2573, 2574}, {3423, 2459, 1471, 1472, 2460, 3424}, {
            2576, 2575, 3493, 1688, 1689, 3494}, {2687, 1583, 1692, 3495, 
            2583, 2584}, {3478, 1589, 1491, 1490, 2467, 3436}}]},
          Annotation[#, "Charting`Private`Tag$324254#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl00lIVWEYxvHXW5b33kyjdk4oZUZ5aYAguEJQq2rlwiaJaMSILDJTo7a1
rmiCCoJCIQJBaSJaFC1atMgGhyxtlQ2bIqKE7Hdyce7//zznPd93OOfc6l2t
jYcKIuKJ49fMiMSvYhMZSkeUynfkYV7FRzCHo9iAX3ETTuJ2zGQiso4DvAo7
sRbP4GPr1POLSVcc8Uy+xRfz57yf1/EX/Cm/lI0oT1mzMGJAHtCXyWl5yvFK
VyHHrIjXyX68y31knXsjt2G17oSumL/VDVqjdXZEjX5QPsIX8iF+z9wxc7Vy
CQ7r7uvaeZ2uFAvsNaJfIqf4O76UnzQ3z/lRuQPrdad08/l73Zh92+2V03+Q
j/PlfIw/MNdpbqW8AMd14+ZXyPs8r5fyxxkRWzLT72kD9mEeb2IOL+AyPI2L
sAMrscLRwotwGz6y7m/7beR3+Wee5+Wee1/yfngZ7+WV/Jvr2nwLU3KJfBuP
yn/xinudqzssX+Yui+RjWl8Usc79zpF7zP30nA7q1+q80ujW/dC16Cwf3/l+
nk7W97PHWnvlBvPnueXihmt26/7gOZ3HFzvls4X/X3/s4HmDa1yjiuvmvjjR
rF+tE+OanwndVp0qPvHNPPmEHtq3y4WrUtP/g38HKF0m
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzUkyg2EUheGrVKnSTqRjZsxcsww7SJBEl8ZEtwYLEFMES2BuxFw0EyT6
IlmB5x+8dc49597vmypUFyt9EZFHazDieSjieDjiDv0DES/mX/4Pr3xhJGJ2
LKLE5/kTnKJtbo9GzOnK/DQ/Lk8lO25r8hZd1W3rUkiji45s2d4aXaJNHNq/
0b3J7t2t0wa9lO3p0sm/5ox5Q7dDr+VZmkNT94ADvi5/t9M19/DBF93Pyzf5
Ff4M5/g0d9ws6Cr8DJ+RZ5Mdt1vyR1rV7eomMIkevmRlezVaohdo2L/Vfcue
3NXpEb2S7etyyb/Ju/If/AOJ6Duq
        "]], 
       Line3DBox[{2522, 2798, 3177, 1280, 2431, 1301, 697, 2799, 887, 3727, 
        3178, 1018, 2800, 3766, 1258, 1259, 746, 2986, 3699, 652, 1383, 1199, 
        3571, 2801, 889, 3179, 1021, 3572, 2802, 653, 2972, 3683, 749, 2987, 
        1260, 1403, 2492, 1261, 2988, 654, 3700, 2803, 700, 2804, 891, 3728, 
        3180, 1024, 2805, 3767, 1262, 1263, 754, 2989, 3701, 655, 1384, 1200, 
        3573, 2806, 893, 3181, 1027, 3574, 2807, 656, 2973, 3684, 756, 2990, 
        2675, 3355}], Line3DBox[CompressedData["
1:eJwVzcsuQ2EYheGvIaTVmhMToa6EGzA0lJi2qBZNOzR1GDltlKlDiYgJc65B
4uwa2hDi2YM338q71v736Gx5upSJiBk8ZSMm8xHrhYi1wYgp+RTbuYguyvIY
/6AvyWfY4X+wwY3rDgcihvhvri3XuGf3Bb9cYtfBn7xgt4h5nGPfdpfP2L7i
DUe4s2/oQr7Ckk3LneN63OvU+b6KLa7iXmDPrle3LBf5R+/U5Hb6L12/bpOb
0B3Lw3yfe5N+w727H8jiwK6LnLxqV8cKLpHYJt4r6D7xhRPc2zd1efkWVZsR
7h+QPzY6
        "]], Line3DBox[CompressedData["
1:eJwVz8suQ2EUhuFF0gSlISFEaWPkcA3EDGNzEwNmdQdcSZ3PDNqqkkhwBdyA
Y51NmUgkPHvw5fvX+669/70HZhemCw0RMSO3zRETbRGTcpaJuDFPORdbIn5k
WYr4FXbHlVsjVrBfWZU57h7P4u3piJJ0yCLehz1wg85rdv9kXSr4I36kh7gN
rNEzm/pL17lz941yneaKdEm//SfughvjurGq9CRtruPPfNXelnel8O3kH7hr
7oU75nawJm5Xz3OveA7vxWqSlSU8j71xw857dtP4vq7h7/iJHuEOsAx3qL/1
B3fpvnEuZz6VfPL92Cf3Dxr+OCw=
        "]], Line3DBox[CompressedData["
1:eJwVzklKA1EUheHr0L4DQbCpRBRF0QUIgjhSZ06dZRQnugXX4AKMG7BPYiqp
CO5A12HfJJqZXwaH897/31v1coWjvcOeiNiXl96I7cGIHcmGIp7dd53P+yKG
+yMudAl/xF652kDEJTbGXeki94YneB5LZQQrm5+Rd+5Ur2Pj3LWd1OwHXtfL
+A02wd3qlv7kNvF557osSM7sF36M550XsYYsyQn2zTXwsm9MYhV9hj/59w+X
cVVsirvTB1wLn+u+ActkFKuYn5U2V9Ib2DRXs9M0+4vf6xU8xZLuG3Vb/3EP
dra4VfemrEmCdbh/86I26g==
        "]], Line3DBox[CompressedData["
1:eJwNzcsywnEYxvE3pyS1cLiAJjNmjMgdNBatCB1uoAvIXgu0aI8bUF2HcVa5
IUT4LL7zPr/v8/wr1zytthIRUcN3KuIgE3GIu2zExLsiHyGXjnhYjrjHje5H
9yg/Ia9b4W7tpvyVu+r9K/fkkrxh82L7jD/+1X1DT7epO7E7RixFDLlz+QJn
KCLBd/myb9rY4XZRQJ+f0VflGrb83ic+UNbN6r7kCbaxxvXt5vhrd917Xh7I
+3LBZuQ/hljgx+47BrqirmFXR1I34i7lDtrYwyL/D3NgLC8=
        "]], Line3DBox[CompressedData["
1:eJwNzDtOQmEUReFDK0osLIyFCWPAYARBW9FY2GiCjUZa6Xi/KXAiYpyMFppg
Qa+FE0B8fcXK3nev89/0dfXsNhERp0iuRJyvRSxQ0y9kGZfYS0Z0VyOOUhF1
rqM/4Rk5rmRv2FP4ct+U65jqS+Td9N22bD35gntvXrl9bke2uYx8xzcm6Ng2
8Kn/4Bdd31fyBhUUvB/637H/9biBPsMbityJvW/fxJ/7gdzCox7cgZux26Ft
JOd4sM/4Q25Xjris/ECCu5Nj2zb+ASQAK10=
        "]], Line3DBox[CompressedData["
1:eJwVzk0uQ3EYxeG3w34RRKs+BpagWrUAwrAxkJDQppJ2xiKKDbCEKqtgjEpo
VaKW0IQteO7g5JzzO+/95663Lg7OUxFRp7VMRDUfcUXX9DIT8cdX8Tbv0HY2
4ovv235yESu2bz6hmm0Pf7CX8GX5Vi7K9wnTt5Lv3Y6pgI/xPv6pV21neosW
bU94U27Qo7yAleUuXdIz9svn8RN+ShVvjPiubejNOds7/6BN2w5+Z5/Fl+Qb
OS/3kv/Uy27e3A4ohw/xHv6qb9iO9SNK26a8YDvkGf0fwlwo0Q==
        "]], Line3DBox[CompressedData["
1:eJwVzslRQmEUhNGrOFThkIIimAPqSpzYCBQhsAJESIJ5ciUxoCahRqELFdxp
FB4XX3X/3X1fvVSlVW6uRMQ19pIR1Z2IezzvRtRoHTc43YrobNvJ23Zt/gOf
yOkK8o58H6t8l6bw6DbhfWbTs+3JuvQLc/mb/lx3RPu6LP3Bmm7gfYBXviGb
4YW/pU20cOF24FtF+dC2zy+wxKWuJB/J01jnxzSDJ7cb3lc2I9uJbEi/8SB/
1+d1J3SqO6a/2Pz/L3onO8QfuacoVw==
        "]], Line3DBox[CompressedData["
1:eJwVzrlVglEQBtAxk7UHExGlBJdQBVGgBAvAPdMGPKDsUARo6jmiCVqJCEWY
eAnumXnzvTf/v3F+UauvRUSFzWTEZSbiniGzbMSVes277DgV0UxHPNGTNdQf
prKirGrW0udY17fVLcbeJ5xP3FmwpMQfE1lSVta37GrzTN/sUD2iY0eeb7Mb
9x8Y8eV8q97xIT+1o7v6NwayjjrnU3Ymq5l19duk9D11hxfv084VdwbuD1ff
55dXWUZWle3rD9jjzWxXfaRvR4F/gr0rgw==
        "]], Line3DBox[CompressedData["
1:eJwVzkkyQ2EUhuFjqok1RDMUlqDZQZJSqFQEhZJBTFmDuSb6ZsSEGROClAH7
INGtgKo8/+Ct79z3O/fcm11cz9e6IqKEke6IbF9EvifiHi0UMhG3XMH8hwc7
RbnXa1/3qts1v6Ohm04dl9MNyEHMcA1scG35iVlc6zLcnHnf+weo4wOX/KN7
Jd2R52McYocvc0/4wjfOUeWH9PPmJupuF7mK+T/tu7UgT+2M8m/6E3MLz7ql
9A/cWLojh7HMvWCT+5G/WMGNrp9bTd/2/gXO0MYV33RvTTdpbwoTuOPH5Ra2
9Tl0AFY5N98=
        "]], Line3DBox[CompressedData["
1:eJwVzzlOQmEUhuFj67QHGltlEBUtdQMmBoyhIRZGCBQKkVJrl6IbsDFKACec
Ky3tHNAVqM8tvrznfO/9/3tvqtJYrY9EREmWRiNWJiIOZVlOJiN+cFHfwmfc
Hot4wlzixiMK5m98xC3uAbPcAq5jW9eXPZnX1XT3uGm/w6Gzc/jq/mPu1lzh
BviHeexwB1zL3pWmlOyz3K65IztS1L15Nqf/cu8NlvXXmOE+dVnzB17hBneJ
aS6Da9jQnUld0rqq7gKLyX/gu7Mz+OI9R1wvOZd8F/7iNJ5z+1zNfipVmdL9
AwqeNkE=
        "]], Line3DBox[CompressedData["
1:eJwV0KlOA2EUhuFTg2C7ATAVUMCDY1+LRCAoVNSzGhK2IFjCzdAEErgFWrBl
bVkSLIK1yD4jvrznf7/zT2YmXVidW0lFRE5mm6U1Yq8tIovH7REfycz/O7/h
TkvEKw7o6tyM+Q9fcFu3wJ+7M+3cx1+aO7kb3Yn0clO6Ze4Zt7ga/vKTWLNf
1FXNm7onTOkmMM/3JO/FX8uRLHHjukNzWQ5kkXv3nDH+x/4jbvAP2K/75kbN
X3iP67p5/sydEecMf2Hu4Eq6fenmhnWlpog15zvzJzeEVbundm+T79JVMHSD
mOO7kn/KX8muZOw3AI2XNrA=
        "]], Line3DBox[CompressedData["
1:eJwVz0kyQ2EYheEvIYnodqArE30f7CEhrTBTsQCWoDCJYKjKMmRgGbrl6D3/
4K1z7nm/unXvzMlZ4zQTER0cDUfcj0SURyMWxiLm8TQecWgfshVxy/dtBS6P
Njcoc7jheuneXRsH3I7cxbT9nd/WS2hxrXSDKa7HDXhHFk3uwRZ6Bl2u4C6P
BtfhNvUtvHHNtOPaXudreh2v3IZcxxVXS9+q59Iz92j7039R5b7lDy65LlfV
9xPcqlzDpP2FX9GXscdVUmKCu+C+9E9UuNlixId+nv5PZlG2H7td1JfwzN1h
zr/+AxwhKQw=
        "]], Line3DBox[CompressedData["
1:eJwVzTlWAkEUheFnhk03KK4At2DkPO3ASFCaFocQNmGm4ngctqGROWrumDns
xK+D/9xX939V1ewNNvpjEVHgIIm4q0Z8YT2NGNQinrKIff2kcwPX3J+ux03J
vdLJBq64ob6w18UutyrXMK3/5FfMy+hxuTzRv7h7yU3IOna4X/nA1eRF6ezW
UXAzlYgl84e+I7dxbLfLtc1beOdqsq9/9EbOpc4ZzrkfXcFlssNVZYozLvd+
q3xXvyAX0bT7xs2b58o/uE15pH9275RL5Dja3Le85ypyyFXtJmhxI90hN+v8
yt3gFv/s7Sv4
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzT0oxHEcx/GvwdPV3XY2ZHCpCyU2q8VosSHdQImcxUCZMB5ZnEkhKQ+D
gTKdhaJYPCzcbUwoxcbrhl/v9+/9+f/6t43PDE3XRETOWa+NuGqIGKmLmMJR
vMbNVMQHv+MTmMdJ/E5G3PM//oR5nMct38/xZ56ojyjjgnuHvsQXeQXTtjdc
ds/aVvkKf8dW2ydu6wWtwNfwCzO2Af2HF7WN6j/xF3f1rP2P72jFasNojNi3
ddtenCOtB48xob/yXifpuzNtz7sD/ZyntH5bGkvVd/qh/ZI3aYO2Zrxx77Od
2m55izZsa8cT/UG7sD1iRsvZxvROXtZKtgp2uc/a/gEdJTq4
        "]], Line3DBox[CompressedData["
1:eJwVz0krxHEYB/BHZhgHXoJywLwIo9zIMstlIi7cx1yJgxEiN4njlCI1hpRy
pCxZLt6B5WS5W3Lwcfj0fX7f5792TE4XSg0RMcFGMiKTiuhlpjnihWdm2yKq
8pU35vlgSv8ud/jkiwpz+h/5zS6NnpegR7/i3GROsm9up0+/Lg9bIuoccMa1
/lxWWOCCG92lvGKZJX5bI27lHfessUrCtQ/+KetdVTadczJPv/0Ae+Ytfcb7
awzqhijq6nYj5uH/77LLyhzjdid2BXOeI7tO50V9l9x2Tstujs0l/aN8osyY
e0Y55Q//JjbC
        "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/G3gTvp7ooSEzezksWPVWIw+JEzuDK44XQ2JSklREkM0g3X
qetckmRQohSZ/R9kR3kYnj1fr9f38/n0zeZXp4tNETGPk+aI0WTEWmvEGH+1
RAzKDbymIwa4koj4wLjvn7yJgv0BK7jQv/GDbSy718Y1JNxJYti2q3fiEmnb
li3Dh3oW+/IkduxT/OTfzr3/qJf5NxXxZqvIz7Yqv+s1ftHrfIcRbx2hwxsF
eztf6ROY04+529aF6/8Ni/ZT7rX14Eae4T37ujdn5TNbPw+hD7f6Eh84s+FM
Xi7bcnIJC7jHH86oLz0=
        "]], Line3DBox[CompressedData["
1:eJwV0DEvQwEYRuFPKCqpYMNUsVQYiPQXGKz8AEN1kqhJajGQmDAYEEJIOoia
GgYLJmFgIEzY1MREJMLg6XBz3u+cO9zcdG5mvFAXEXnPViLipjlisjFiBvN4
i9utET/2gz2Ns1jA71TEo51oinjGIjePO96fs1/sNu0VF9x9/JK9aFexW3vH
ZXe/tmqv2B/Yq31iiV/n1uwN/MKMNsr/2nvcJu7jHx7wA3p9MuKQ2+XK2FC7
tUEtaR9zJe0EU3wLl9Xa8Ywra0f8ud3BjWideOUe5iv6td3FjWlpvHNntVPt
3u7hJrQMVvgn7kJ7rv0LbkrL1b7JrnKX2hsOuYvaP4MsORI=
        "]], Line3DBox[CompressedData["
1:eJwVz80qRGEYB/DnLDQYxCW4AXZjaSEuYMROJOuZC5iUQjP5ZslCKaVsEGUU
ioWhfH9eADfgY4vfWfz6P8//nN7znvbRYr6QRMQQq3URvfURfZQyER+8U2qJ
2JCffDHBD2P6b7nJL39MM65PnBFs2Rtllm79jL3Z3MS2uVW20ePZon2vIWKX
Hc6o6c/lFJNccKWryUsqlEl01/KGW+aYJaO/k/c8sMChbl4+8sQzS1TTO8gX
XnnjSLcilznmhNP0m/qqe+fpZ0B3oBuUa/6jU9fBvrmoz5m7WLePeGc4PZt/
GdI5ug==
        "]], Line3DBox[CompressedData["
1:eJwVzj8oxHEYB+BX4lyirlDOdEw2N8lokIXld+XqDJdbFcMxS7Fa/GegdBYj
pqOUsyhlYrT5jUax8Nzw6X3f51PfvoXaarLSEREL8tcVUe6OqPRELGciiuaE
bPVHfOtKujdelTFe5aPml25e98oTGWGLuryZ6mZ1z3xGNvkgH5AP3bTuiZf4
pHmTjbiWd92U7pFfuhvyworsgZ27z6TFfvoixvmJ+1iG9E1eYEfue/dh+102
zA7sd2zfvGI5tmdvsl3zgvWybfecf66zNTnlGb5hr8uvPfXnT9nRdbpv7alZ
0y+135R/ODQwZQ==
        "]], Line3DBox[CompressedData["
1:eJwVzi8shAEYgPHX5m5nbgISCif5UxSbKBEIJsg0Nn8KjUZzmxPYcOUkN+FI
CAS005CQuITCFOb3hWfv+z7Pt+/7OqcXJubrImIGkY6YwlUm4hJ9DRG9qDRF
/KQiJrVz/gzdfA6f/Dh/wlVw7NkOvh01bUQr80coa618C160Ye2Q7+dLZpZv
xKM2pG3zRf4AaT6FqjbGD+i7/A7+8ItrbVTr0QruLXzjCyX+Qu/S8u5NfKDA
v5unWpu2YV9HkX8zX5P/1pq1Nfsq9rVn8yl5r5bVVuw5ftl8wD32tEzyPX7J
vYg7VJHXBvl6fc49i1vcoMb9A6zkOQ8=
        "]], Line3DBox[CompressedData["
1:eJwVzT8oxGEYwPHnhsMNbjumuxgMlAmxnDOYdIPEcCmFrERyx8RtRsomSoou
ZZGzCGUxmG6S0Wjw50YlH8O3532+3/f3e7sXVqaWExExi0RLRAmLbRFrrRGD
5gB+khEz/Au3hD5uPh3Raza1Sa3Bl5Dj5rSs+a5NaM98EVW+k+/AmzauTXMF
rZ6KuMYrn+cf+Zr9HA1uiHvgTu0neOJ+2yP6+SP7nXZo3vM93Lc3Kv93+bJZ
57P8tvMGdvV9rcvbl1pGq3I7uOLH3CngTEtre9yWtolRPo9jLaWta7f+E/jE
Bw60pLaq3di/nEd8M4wL/AH42TDI
        "]], Line3DBox[CompressedData["
1:eJwVzy8shGEcwPHf3ebuCE5C8if4k5xkUzSKYARBNNUJNBqNoLjZmCHYCeY2
GwqbkU5D4hQkJFOY4POG737P8/2+7/s8b+f03EQxFREzSGcipnCTi7hGf31E
ASeNEX91EZPaJX+BXn6T7zG/tXHtjD/FMd/Bt+NTG9UqiceR1sq34E0b1g75
Al82m/g8atqQVuL3+T3k+CwetDF+QN/mt5DmU6gm52l9ybv8Bn7xgwP+Su9O
/jHr7njGCF8zz7U2bc2zq9jlP8x3VLRmbcV6GTvaq/mCspbXlqy7+EXzCY/J
N7QGbZ1fsJ/HPe5Q0gb5jF60n8Utqvji/gGn3Dhc
        "]], 
       Line3DBox[{1769, 2105, 1627, 1912, 2403, 2404, 3640, 1424, 2119, 1637, 
        1916, 2407, 3766, 2408, 1437, 1647, 1921, 3620, 1549, 1445, 1657, 
        3686, 1926, 1555, 1453, 1667, 3688, 1931, 1563, 1461, 3602, 1677, 
        1571, 1469, 3607, 1687, 1579, 3658, 1478, 1697, 1587, 3662, 1487, 
        1707, 1595, 3665, 1497, 1717, 2375, 3630, 1603, 1505, 1727, 3691, 
        1937, 1609, 1513, 1737, 1940, 1615, 1521, 2132, 3613, 1747, 1943, 
        2413, 2414, 1529, 3723, 2139, 1757, 1948, 2140, 2141, 2426}], 
       Line3DBox[CompressedData["
1:eJwVzj0vg2EYhuFbE20NpOgg6RtJk46mMiAWadLuLYlNmbUkkkYi8R/8AaPR
yECkXXRgKAsxmqRMBkMZHIYz11eej+Lufr09FhF1fKQjVrMRixMRQ/4Tl5mI
g6mIK3o6HvFOf/S/uOYPbTf0zPZN08igi46tR89tKfdO8ye6GZp3/kJf8VZO
l+jW+eT/Tf2srsTf8nP8Aj+ajOjLS3xKN+DX+Cz/yi+7YwV3ONL16Zu+Sjfl
Gr3HA4b6xJ8K+oa8gUc84ctWss3bmvIOnvGCka1sK9r25Ba25S1/b9Jj+gfn
qSvY
        "]], Line3DBox[CompressedData["
1:eJwV0C1IQwEYheHP4F+RBUFMY0WjtoFFLIZxg9y0KKITdbqFpcG0GDRocDBh
iLAyWNMkGseaYBusWASjaRgHPobD9573wL3bze1V0rOpiEhkPBOxNRex69Zn
Iw7mI0qysRBxPx1RsB3bLmwn/Atfdju2Gn/Jr3AZ3OPO3UP9ml/Cz9yVe8Td
cln8yi3qd3hV+vqy/oDXJMHvXBfnZUcf6k94U1L9U3/DBb9lXd/G39zALetN
70rwD/fhnnItLsW/XNH/ynIjvc1XPKcqE9sNv2//sj3+fxNckob9D/ERKWs=

        "]], Line3DBox[CompressedData["
1:eJwVzjtLAmAYhuHXQE3KwCGSaFCnlqAlyC0l3Gpwq6ChocNS0IFoqb/R7NjY
poNBLglRSzUUNDoKgrl1uBpunhO831fcOaofJiKijq9URHU8opyJGPIjNNMR
x1MRLXqdjBjQBMbQxpntjjZs33QSWdzj3NahN7aMuzP8lS5P827f6mveyulK
ulW+oG/pp3XzfIef5Rf532zEo7zMJ3Vv/Ao/wX/+ezcqeMCFrkt7+jW6Ia/T
Jzyjry/605x+U97CC14xsi3YCrZdeQ/v+MCPbclWsp3Ip9iXt/39gF7SP6rI
K1c=
        "]], 
       Line3DBox[{1903, 2391, 1759, 1902, 1758, 2142, 1891, 2387, 1749, 1890, 
        1748, 3720, 2133, 1878, 1739, 1877, 1738, 3670, 1865, 1729, 1864, 
        3633, 1728, 1851, 3598, 1719, 1850, 1718, 1843, 3593, 1709, 1708, 
        1838, 3587, 1699, 1698, 1834, 3579, 1689, 1688, 3652, 1829, 1679, 
        1678, 3648, 1821, 1669, 2370, 1668, 3643, 1812, 1659, 1811, 3623, 
        1658, 1801, 3575, 1649, 1800, 1648, 1790, 2363, 3571, 1639, 1789, 
        1638, 2120, 1774, 2356, 3569, 1629, 1773, 1628, 2107, 2108}], 
       Line3DBox[CompressedData["
1:eJwVzzFLgmEUhuETiSWUzrZFS0GDEC0iDaU0FBThkuigi0WSk6266tBSa622
1mqrrbXamr8gCB27HA73/TyH7+U7m432xe1SRJyau5WIWipimozo8B+8T0c0
VyOu5bLdt+6KT3Bgd2lXk7/kKn5iRX/OP/gZ7sljfsQz/J0f8hHu45rujb+a
nJyUX/jQ7MohP/Mnc8y3dY/8YfGOvCUPeMn/9fFAt6Hr8SzuyF2e4fN1d/I0
72ACC77707fkZfkGT9w1x7zdr12Dz0x9cYdd0fwD6mIlfw==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
RyOjezQ9iddRvEA2XoRSPFpFeKoIzyiOZ8Jl4pn9iGd2pbgmpHudByiuudM9
I3u6ZzSR+CrFa2TjNVKcHUtxNpribDbH3+AC8bfnxN9SKV4/oO+K6FG8jqf7
Vkl03+oH8UCK48jG8SHEH5IJzxfCM5rjpTCceOlC4qXmxEMa0b3LFcRDDtM9
steOHL+9RfyW+BWy/KoP8aKuxItOEy8yav6H78E14ntK4numxK8K6V7hNuJX
fnSfzmZvdd5IvAtZ3uVJfO844XEgPGKOx4KIeKwh8Vhf4o3frnC88SLxxpN0
r3A33StUVOfDwPJhWhey6yI9IKsHWhey6yI9IKsH4snA8mRaF7LrIj0gqwda
F7LrIj0gqwfKX4DNX8hukbVbsnNk7ZzsFlm7JTtH1s4prwE2ryG7RdZuyc6R
tXOyW2TtluwcWTunfBPYfJP8ErJ+ifwYsn6M/BKyfon8GLJ+jPJQYPNQ8kvI
+iXyY8j6MfJLyPol8mPI+jGqDwBbH6C4g2zcoTiFbJyiuINs3KE4hWycoroB
sHUDijvIxh2KU8jGKYo7yMYdilPIximqzwBbnyFegSyvIB6CLA/RfqeO5RXE
Q5DlIVTPAbaeQ7wCWV5BPARZHqK9Z8fyCuIhyPIQc+JpucTTIoinEW9EljcS
z0SWZ2rvzbG8UXtvjuWZtYmXniL5y0g+8UZkeSPxTGR5pvZ+HMsbiWciyzP9
iIcbMTyc8gJk8wLKI5DNIygvQDYvoDwC2Twih/IOYORTXoBsXkB5BLJ5BOUF
yOYF2vtubB7RoHfhYK+6Uvww3N937hcZyr/rSTIKBdr6LbL129/DvfyOr5Oh
8Gfh1vQqKcR5h/yp3+Z5cr//qP19zFH0+4/PR3G/56j9vcv69HuOdfb89/mW
Aw19wgZLQX1CHHMqWQalurNnHBQJYB7VpcOoLv2A6tLaOrbUoXodu/KxS5sF
tf/TL63tT2h9ecfcPYulONEivd7aIBkOulQ6frxMoK0/I1t/nhTa+B9sIcOB
t+MvVM3X5HHPn/2pbxsfqP57oFr8tcdzv++5k/n9yniv6vNH0/yA9iZeBoek
sOnRDmGOiwyaZ+1yKlcIwJzq/HOozh9GdX7tucBdj+rnAm9A7/VdQzHW+f1z
UeO6cry+MH1rnd0ae9vE/X6r9ndpQ+j3Wyt4xteKBiYFjRJDacLoofZFxWDf
54LbwMNF0IjONRTMuYb2HCTsRfVzkNICmzj7lWLc5TNn7eDHxRiSEzdz9Zki
2ORS/Xdytc/txYyH0bh7adctn0+IYaBfgwd7jxdDvXZm3cKvFMF6OsfxZM5x
XOnc5/mp6uc+p3dwvy/M/m7ynR3Vf3fYgcbz+zX0f50qgKgnhlcnlMlh+qLN
sZEBInhG51N2dD7Vhc6ntOdZPzyqn2ctLvq85oAt1rDDze7c7zizzx1J4+dp
fBmNT7k8SzLHRQhB4y6Gp4TIYZ/V3ifp4SIooPO4UDqPs6fzuL/nd/W48ztz
Or977Fe9bq/9XW+533+v5w84LlrZenEuBI5tUzX1kwLi3aeOibAXQ2c6ZzSl
c8b3dM6oPZfUCax+Lnl1m+pxyc0nNfTw/tx//51xn3P/vf5/yEO26OqXXEht
syxk2X0FrI5z++q4Rwzt6FzVi85V19G5qvYctsNj7hz2BJ3D7p763+v/fej8
15XOf/Xp/Lcn1RtNqd74neqN8+kceURU9XNkqk8iW58cZKBrl+1z/68eCrX3
cWZWPy/Q4pHSeXc2nXe/pPPuyXQ+/imp+vm4/lTu/H0Jnb/L6Pzdgs7r90yr
fl7/aNa3c8fDcjGon94j6zs7IKmVz8xIr3cQRH0FBtRXsJn6Ck5TH0LBaq4P
4Qr1IWj7GXypz6EH0+fgZf3f+yI+UD/GZ6YfQ/m5ev8GrQt51oXsugg/8uBH
Fr9WD0s7V9cD2QOy9kDvHdn3Tu8Led4Xsu+r7vcffeooM2Dl3BkrOpUoMam8
NlwtF2vPp2rYw+2p1cef0biHyVonc+M3WC/ZqKQkTQlzXep6PzOUaPcp8uxT
ZPcp2Tmydk52O4a128qJd/Uzlr6BovIT8Z0fKPHS9EcDOhj/Pf9C9vwrdUb1
cS3+R837375+4Q02CTcSPA9Qwn2rp90SRkq0+xp59jWy+9rOb+y6hs1yYZVp
k1mFjZW4y99+zrlZf88rgfVv5PdqjJPfQ9bvkf9HHv+PrP8nv/d/6vruuJzf
7397z2zxJjt7zziIjAjZUTYhIzJCREnIXmUWJYUGshonK4oyCpXmXd3t7BHi
d3+8ni/f333d7vvPc1+P8zrXua7rrOuccxmIcu+bYvVuY594OvN8wK5Wsdn8
a1eXk9+s/957sij3IA814JCHLMpD6AXWohdY1Av3w27p59om0zffqg1b1c3m
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
V7pPOIfty7fcMyIngyL/rNcRjfWS8K/sJ8IfSnh4MvBsBJ4b0nf5Hr7rge8O
l+jni6A/TZ3+kI+g/zjoXynxh6qAPxfV+WNwG/yZAf4MlvhMXuCzLfg8R1pH
ao51zFZfR9ayjiHiOtppGb8ZdMrrGAA6W2C+4nrdkfgcIvJzANZX5M9C7BOR
D3Za9qGhsJ9dsJ+rSeed5PPeHeflAc6XeN7vSedXg85kyAfxPH6SziOL59FQ
kEsyPf21yLc3WvTFZugjUY/Pgv46Dv31HfprA/RdEvTdT+i78dCP3tCPz6Ef
70Ofyvp6E/TpXuhfUV/fl/S1Bn+2Qr+L+joS9kA29PUW4F8E+0HU17Nhb4j6
egbsEz9BX+/Q8q5xR8HOMYKds/3g8JEdF6fRkfQxvecfzuKWlXTLVyiVTnZD
W5oZ5maTX+duAcrtzyih4qs+B10zSC/JcHG6p8pveuH7/PHPPDr6ff+rLg1T
6GS+2bPT5Z5x0+hgw11NVHyu9K7H95/JNGxaZIFxWDZ3+r488r/w52RWZ/6m
Bs4ZtFdv1Jhnt9M4xamx/YohWdxRN2t2RsN0ut6rrn6Pl7c1+OkkjacsjG+P
8SMl/FQH+GcAv69EDzUGPb9Bj45EPy8G/QdB/0ZpvhwuzHenxB/eD/60kvkj
2JlLYWcujnS7t0Clt6OHV643enkmn5ydFDS5YRodMLvbfXhQLp2c5X+u7clo
0uvZv9XHvelUo0h6d3Ut3l29i3dXdbS8X39r2nXnhvtzefOQWPvtiU/pxa3U
uLlO6RQQGbVo+FcFH1185apJvUwO7rX5rW3btL/v3Yv8vCCNp9MYfxvjQyT8
NAb4Y4G/Jd6NrQJ6zEHPL+ndWBbfjd0nzZdDMd/mmO8yiT/8CPw5Bf7I9nx9
wZ4v83Bh7/QdmRR7z6Nn6ZEZbLK+Z5vSc1LIIbfH9ptl86lMyqMaC72jqGGf
Vd0WnUylulf616x35BUFua/Le9gmj9aMCjFz1k+mxnaRIzs8eslNPlStFTop
j47smRdc3CyZjr+yvPw7I49rH8q1mXjtCUUXt+7idySV6m0ba/MtPpNHVp/+
OiRPwSPPdb9/dnkKPZl25+TKR3c1+FldGk/jMX4Exp+S8FPmQQl/DPB3lOih
hqDnKOgpLdHPt0C/DejfKs2XmwvzrSjxh2ME/szW4jcdHTdnwP39+dzM/8iE
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
rw357wr5TxKc9AE/Avgw6JFxgh4xkr5L0fjuR3xXfjfKD+8v3Mf7C0bQU51B
f0vQf02aL/fBfJWY70bou3eCvoP9yaL9CX+HZX9nLOz5ttNtD4yIzeNmN+f1
2nErmrNbrHve+mAqtWnhv6Ry6SweFlvHZ1WwgmLXnLi1ck0KfXHrbHwkIJNc
ajZvd6xRBkVXOxP8YlEKbes97WTrT3nUWD+pjJHfY65Wd/byRm6pVAP+juy/
GMF/2SKN5xEYXxXjSyT87AD8McDfXKKHRgv06Ev0U1nQnwv6cb/Dop8CO5xF
O7x7snm1PZtyeXa7Vh2ebnzG28+c98zamk71V2TUX9A8g29Y+5b8ylbtgy7D
u9bukkZuim38NlpBZp12D9cZmkmLhm/Jz2qWRi/dfTqXPpdLw1a2r1g+JIYP
WZdND9mVTj7wo08JfvELaTyvwfiDGO8h4ecJwG8J/LUleihYoKeHRD+NB/07
QP+1Zg5VH3pn82mH46VdZ7zgx9Wu/t6wJUOWY9xfsE+GHH+6q+3HAG51K2dS
+IYC8phldOtRahL1XOL8eVtGGt8/3+rR7/pZdGX/xU+WrdNlfc2Wwnk/hTiJ
GLfZXdapc6WDaZT0YW77AUtV8unTpMdW1dJpCuSMkyAPvzhdcp+1J47WXerd
NLxiHvvMCdm4rXIq5YZVaaAXl00j67TJ2t3yOU+vtUN3zf4MWU7SbEG+zZX8
LN4IPysTflaWhIfnAc8U4IGc5M2C/VMlx/nq/GqX+bJFNfv0rQVkHmGxLCo+
iQ5J8+KXmJcz5jUf8nyLID/rIN5liXjRIcSLukh8pkjwORB8zoAesRLk7VYd
a6u7ubGUrtd80u5uebxzzYqAVdkpdENad3LBuj/BujeA/mor2J+v+3edfu5Y
Ol+yvjKz84NXvO7SWJ9+XXLI/uS/+8WVOvZv+O8+A/23mL1iT524+5WHZVNw
32a/R+Yp6Gf9nL668S9p+f5CdnXOpuvZV80nqc5x8Lft7d9aR5Gi9bqAJbPy
eUNaYKm2C1PIHfBMwNcCHnG0g/XJqHS6uCnW/PXUl2xTa0FaLfMc2imN5xyM
t8H4c4BnAb4O8LsSHn4MPCuBp/kB9T57Csxr1DF1eAbgFRv8mRdbYl7BmNdX
iQ90AXy4BT7sLXUzMsYykq7/eFdx0/p8vrzkYES7YSm0GvCbgPsAniCtCx3F
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
Aeb3my0=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{302.57190231280924`, 267.63535361934436`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-6.3, 6.3}, {-1., 1.}, {-1.9999997142857142`, 
   1.9999997142857142`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.006912618213662489, -2.164094007289786, 2.6012784055771303`},
  ViewVertical->{-0.0024555474217052954`, 0.7687442435958116, 
   0.6395516071633025}]], "Output",
 CellChangeTimes->{3.8988519846839795`*^9},
 CellLabel->"Out[38]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4VNX2Bjw3lZreC0kgQEACAcTuFbvXjiIWQIIgvShSREE60gMKSFNA
akAsSC+hSy8BpENIpDcZes361trt7H3mTMB7f8/3fH98PE+GZDI5c2bv9333
WmuvtfZrjTu2+Lht444tmzROfrFD409atGzyWfIL7TvgU77/crl8uuBX1WSX
H34PLpfzQ1eX6/9/wssT59i3vsn4kIlfPegnH3r8mr+oNXv0139PX7Xp2UXs
dwH08wpxPfrKE79fZl06T76dH3v0zXRp//rw/1q51K/klVy+/DFPf/k8fkfy
dfS7ierO+etr66/nd+mn3wa91sfzafqzvvyPWrLH4snam/QQ10sW38vnxQ35
6a9NVm/gqz/tWuJS90fPrWB/6PA64y585eBmai+fqD/3O38us4jXsSFZbL39
RPmcP39OjgHdhpyRltYlVogPL18O4hLs31zzNmtrby9vib12lcMtibeqb718
onx54ER1t+pfcevtFShsb+/S3r62w9sbt2m+vZxWdplAB6gW469LdmlzJQZf
QVx7e/k6NnqLrecyXeYkGdcz516+XL9spn5Z9vYM9/4Ob7pE/dYVqAM402Wy
wXzXEjq+M7U/05+v/Q8+O78Nepk/H1V5L+yfCTf56XS90PlX1JvW9nhTC27J
7B56qPeoLf+2H/+P60+ghIv8uFJb2J/Pd7ik7a17eHvrQdrbsKEQL5Jjmqld
TD5XW7tYpv46/WLW+7i0l6thYO/Hn0t2aThbaj7HXstU1Ua53o5vxV7oX1uN
STEdGj1cJsLoe7YaCE4p5fC8vvyU7IUCLMbt8NkP0Kmqv+1y9jbePwZbzzgV
2EdX/9jH8EmWb/0qfxbUw//hwhvrUm9fW3y5Amt73pL1h28bf1hb+9yOQ+rx
h3H8D+V8sLkO6KEudq8/9JPvKHm/g56tmhwVFZVee/PmzemZM2bMqNLjm2++
qTqxV69e6Ss6d+5cJa9t27YIw2bNmhXi16Nbt251vcIvGs8vmmm7aBA9G0RX
SVdXSaerVKGLRFnXo+/YT5H0GEyv86HvEui74vS3/HX0HfsphR596cr8F/Qd
+6kcf45+TRdgP6XSh+HP0fXYT4H0mEgf1YeeD6Lvounj89fR37Gfwvhz9EF+
wr8d2rt3b/mhS/EpoA890WWucMak+5qDI1VA/Dm90wF5p6XoMZDfLt0q3Qr7
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
b9dIUkL1bo1Yes7XozUHD0Tp54v4Mbn6oKofZESxeKfAE/MAp9QNYDLFAujM
nkLBcj3gKFlkR21uE48eYDKMr1dJ2VFSsi5pESryAm+J/M3bsixJeIEqf1ML
pkvJymqcbpUQeEmWUmcQ5fLecD60iPEeoyW1/uNai0HZ9kc0DZOHDzi1GBRq
Y7hs9xIsFqdKcLgYf4MUJlO30aa/jjb9Jdawkle3HZsTB3koUwd/iIY930VB
7vAI2DowHDYgKNfg0rniMwSk6Fz7CwOkVeFGO35DX7WKZmm3r94jaWwUP3gk
1aiPRJnCUULcuUqY1pT9GELL3/MVHYGeFrlRKFBkSTGfz1+IlN6WsqG2Dorj
SRG2p7lEdfPw8fB2UKF8SKJY9oGruqVQpE5fcnXa3ylB5ZDrCnVbUyhVKXkv
D2+cLTBl2+GTCpX1cVXI6ZdmFdMuib2/fPL9ooGxtUymWGdgWOdg8JhEBStI
hYp1FxXrBirWFVSsvxdyu+q4UKyDuIbtxTVsNypWLmsTFAabqNmHON98SQup
WOJIE4dDzfqLOHrXZ8LhGVQrAols+mGLpXPFKnmvcLqnYUXpm1ZVAg+pU4S8
hspL0JXLSjUnV08lnX9gNYpxNeCQYutePX7+GekThdHpW19LpFS46iEmVBRK
X44iRc4eZXIyzNnORJEOn9ovHsiF6jZv72AlSWlC5R4Vy3b9sjLTPU9NLapN
yA6BFNkT2bEnXVmz3dBRQ6uKkCrDMBJSVYzLkvWHTlaWUZwrLmbU3wlnUMnX
DZSvy2twXV2GCJ2PCP2Zd9A8NBEROiYKdrJ+eOGwERG6lnXQDIal1C+1GT82
bRaV14k2yqP0kxS0sxNfeagKC7XfK1x1L2dQSRhPG6aI1Ys10ngpt0hV8MzG
q88+MNu2yWtRwwdymhQj0fJjOuar65hIpQow/EHN5uKiFsh6RRxDUZOCtoD1
jWCChpdASUMhYCEr2YXdw+QqwiUc6yBqWrTd/QOu1T15qnfu8NSis6uMlHQr
RkHxKXv3swPME+ABV6uLootvBlXlyNWD8KhvVK5wB/XtBurbZTp/A/XtNOrb
cdS3o6hvB1Hf9gyPhJ2ob1sQPRu68d4zq9pThTNfAK1mAaIVmqjslY0C1IGN
z/KUF7LKWj4eq/TNKaNBCZw84t1qx2pzHpnE+Vq+o78hbO9xUXMxVfNTbd1l
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
Xbo0nBqPN3U2LcuKDVw6ZGZlJuPaU9asGJe44LkYj7gx9+nJgnJPjc3LfHhP
Uu43SMG0sQNp10/EyTQb6kKu8r2Uovq4ViRZVdrkhFo7PuZLZh1pMSuRalZp
qtuyehdy5bXhJB1ActUyznetiVklh2ZyXVQiUFJjXv3AqVnqvchcNZwuuacy
151MTgXk1PsHCsBfe4WI+fZWzBeQU2+8kxuuI6defS0JLiOnXlyRCOeQU88s
iIeMWXFwAq/R0fHCEJ50m6yhMXwT1IoP5U9JYuZ5TwhONbfdTTO8zag3OaJ+
LDxRrTS0qV7c4tR/l6Qiz/nMoVlm1srlTTVMH84+TWrlXmWEuJtKqCmINJr7
JpSlyqFYvmqN6QpWjwlKpGMlkSKBeolBMZRRddqZjUVbUololiLSrELEeQl5
9LW22WCd5NHNXQWPbkMe/aRfDvh8UCR8izz6M97I43gjz06OhqszouHmnBjY
nloUNvQqKW6kGeU9CI+q/mZa1jzqHDig1BJ51EuNSS9VcX0yPZ0QKfiUK7vE
nT5+Kaq91MWkrWjm2iiaKqBVJFcxRHZWbu+biamq3NpWksRC5vPJkNa5DKSP
KWZVgtYZLLpJqNSYRbcaqpxPXVQ5jgW9XrXaTC6MDBEaacWcp/RCnYwUft9D
cGpvPspJtJ0PK3Kz8WQZ70DVM2YGn6oiLQb7OknNkk8j7J/LHx/i0VzsyqcO
iyGpMSW2bz1x4kRev0rMStYQd5BZf0dm/W1HXlbtnEFmPYFh9mGEhB8REg69
hMyKkPDF88isCAmfzI6DnVORWScgs2KYvXkoMiuG2Ov7ILP2QGbthDDQ1vKA
G9mgIHRFZlWLrk2TINKZPlsnBpoiu3aonqKZ9dksZht8ssikbVEqx3hUqtpL
CnVIweNzZVbL2ZA4tiJ/FQIH1aihRWvMsVaLk8tRapZhvINjZzPHhgVwLN3s
t/BmU0K7qzfeaOTYQ8ixhzEyPo2R8ZXJUXBrZjSkNirPi6ohDc/3c/JG/3uO
FWXhELeyMB1YJNoovk5uFKstLBAIMpBi13ctwRS7E0mS6JVo00uX1celXp82
tNAdUn6Tx6fVqn/NkqogwbnZTc51LpXVsiDJuyQpQNItHWhP4VYbDtAGWb3S
zBfzQFqPspA+uZjdpk66RevlRdty20nXTR9k6lgV6ar1LKf59+wMDqUEXLgw
LyDz3tuXn60p7iDz/vFBHriJzHtjQzJcw2t2Fa/ZZbxmF5B5z+E1O4PMewqv
2TG8ZqReVaogciwSLdJIo0Uq93g/bTEvSbvNFulU6VpkWFTgz+jxaqU94Tbm
5WKSPaN1M4qWJWJhYeTx6zXf3EGRwlaTfCnfFXmtvUTcR/nb+Q3xKuuN6OtG
8cjEw8joiogp3nYSMWsPTBmryGTxvzetYZingK4VuwmEqFP6OqLV+g54Xztn
h3eRiT/skR22P5MD9vTPAQeQiQ8Nywm/YCZ7Apn43JRo+A2Z+NbcGNgxqKhc
Lh+UienyrYz1JP4jE99TTDzXzsR6FwfZgyETfyQ3jdKOGORYryJdq2kqisOe
Krp5qh71+mnZTKUpQnNXLgllKUb6SyW3xrjGfbeasRr6w/9a5mKk5U5Iy6OL
BdoqGU3VjDWFWEBua6p+midQOO40DDuuLa5ZlHBKOoWFCXfIMyniyUgRtPxp
vl06qxSczAMc9uFA5lB29gn/b6w7KZB1XSY7KhALDx41apRg3UOCde8i695G
1s1E1r2CrHseWTdDiYgQDr4j1l2FrLsEWTcNWXcOsu70WNg6MQY+HIOsOywa
3hoUBesxCH+9ZyS8jDCwup0QBhLrjkLWpWlVtQRdtVjHGQ6sg2oL5m1Zrbhm
XdOgyRASGfVjET/zUg92J7NmC1Wr9alKKR6vC/uGWMRbXWuKusjInMh3gCRe
XVGuzRVl7gMR8U50EO8CJF66zMtN4m2HIXVHJN5u2SG9d3b4bEAO+PbZSExo
c0IGEu9lJN7f8QKv61ZSFFBN4uViqVko/QfidS0pM/N6mXrDgg2XGIOM4dJY
O1EY+CFL7pQ5rnSStbg31IVnffRS8GwIf8ZOzbNRRtXYZ3Itvi09tajIbkPc
slv6pKWxniJWQuEmSpJkmz6hGKQ+WR4OzUsJXLFjNmJlUevQ6iKwYUppce/N
XcOmGNd9WJF3WUZIb6gzKaREyngoS8oFpNx7SLl/bcsLfyLl/rFJmJ9lvp4E
1/COXUXKvYSR7QXpR58h91n+Mkaokg4OpT3YUbCrv70jq9a6032b/2Q8PCYp
d57qyDa2F5GVWSDdvc41U6AeyRxqJ9so10h4TTEuUa6eHfFLvjW4Nku+9bm0
ZMPtVCsovAlfeerEEt3So2hWTiryP085AwabGFGFY6c4abUhTtqAt/NtpNr3
8IZ+hFS7A8PjT/tHwpeDI+G74Tnh19FRcHJCFJwnqsUQ+da8GFjYpgxkTMnv
TrVmwqtu4z9R7Twr6eXJlBlOqs3JY4xUAFbGVddVessZsPijshfH1+jdFbjS
PEvtiZgsvpDKe69MSISBmPuqvNesHt9X4njnPCRewMxFSZDarDykjyoWuDfC
0ZSlmci0/mXtq4DcVEtayVvQWst5UvdnMoT5GobubNFJ3HpWPqcDeFY3S90G
Jt0ETpJb6z0gt8p994FzKGLzW1nOqJlYDwpivYPEeguJ9RoS6yUk1rNIrCeR
WI8gsf6El/5bJNYvlybA/kUJ8Mm8eNg5Iw62To6FD8fGwLsYZ789OAo24IV/
/RkkVrzsqzG+XkFLtJBYJz+WG1rVLM2et7opaxSL2fcWb8mgWjHQBMm1RdXi
mlgdKS1fQSky7FvFUiGREzktAnKM7mslk1orHmrxaVnNp8rmlvhUeX0qR36j
S8tFYyoYk0wwGKeuxgD5ldbEqRHwFt7aD/DG7nwmO+zHwPgbvK0/I6eeHJsT
Lk6KghvTo+GNrg/CqXEmp3rpDcSBWdeMvcSp9GHB5zWJ3ASjhuhVFew1gXx4
n3c6433zMVH6teRJPm4JbIjgXryo+PdqUuUrG5DA8siNQapl/nPJWCv0kVAp
g3U1WXT0Y6nGZSNVp7rJqfYNJFW2WvfR5qNQfJGC8Rnf9QcgV9idD+4huf71
YR74E8n1jzeT4Xck18w1ueDaykS4guR6cWE8nMMA9jSS6wkMYJXkl+wW9xvL
65QLwLpO1uK6BUSu1cvDwickuWJOO8NRTeb7Z7gADKgtYsp+tZJt5PoAOe0A
ndOGQDc7x/Jt9RuO7AbPMsFGBOFVYy9G32oxzK09qye7cyupngwLANs0pkxh
leRpiZQ8vagkT+3tkqePe+JtRW7dOyASDmIE/D1y6+ExUXAKufXC1Gi4NjMG
/kBuTWvrwq1uxeQH5NZ788TE51/MrWL4knLLP6cJA44vUguxC/ZNyxRS0KdX
kCv/id5YmWdhlP6X+rH7+xfSaSuzqkxbSXARwKzOtJX+iUrqhDcxMw1ZtSmG
rZMfshQRbhVlunXvIbO+Ipn1QeRO9r3sSlfPPteeSLK8FvfrnHzOG9x6SnDr
Nx+w5EUvT3UbC82CWx80bw3KrZ6KqoJsp9fPkF735IPbSK+/I71eRXq9gPR6
Gun1ONLrr2uEK8HXSK9fkOYJ6XXXzDjYNgXpdTzSK177t4cgveKVX9s7El7p
jvTaEem1jZjxnKLoVcbQ1It1VoxNU+EmVUrDY/gM1sKLAHcCW+r6uMmt0jOV
nPnU/tXKFDKLbZP4jjI2WjUd5OneUz1KUauzHztOpauPhnI3yKTWZc0Ftao6
MfVi3++aHbb3yg57++WAr5Baf8LLSn3YCxOjkMmi4auhhWFD95LCuDcral0T
T/HbS/GUewbvx9LHLI8ljcCDmSEIL4RQsTd7uvCa591Qcw3bY7/effK3ylxl
hmoohX3ybUo3JavL+DJCX9304GwrXRmqaMcD2t6dPshlg/fzD1g2xmtPYwCp
T5SHDYNLBm6kcisbK+sqIt4XJfHuzWPf6m0G2s4xG2uzt8CCcw8RBtD390IK
bTw5r+pZD8a/sB05GPn37ubc8Cfy7x/Iv7/jRcxE/r26JAEupSXA+TnxcGZ6
HJycKOXGo4TcmJbHkkKK1nvTxsFNeCHXy24uOeAr/qWpNLObG6SmrDu5z9aJ
5SS3Y/UUG/8ag9lZcbDSUxgc7HG3RrYcFIwmr6wr4/vCHHxc3sbHfH3xrydO
blsthaN1xcdUfRruwsk0iGNKkCnXVUKppVIopRu8qqwsc10qK5NQat9Awck/
YAR9BDk5A6/5ReTk67Ni4Pb8GEh9DMO/uUkWJ1uho2j15Ao+AaDo2NBKmZT8
l0HJtASLnHoOD8/L+1QkJXuYf/1EvX5m4mraf59VUT2K8MQrK6OmiKRZMTGJ
jhe2LKPVUffMArJztRb+qzNm5mcWzpid330ri5rKkb1din0DmNjs2tjc4wrY
r51iYhHvimt3jmqVdPmy0eUTdOxOxQ6DBhIlr1EN1nh+yX503TzWr2C6KN3z
9dsZ3IWZXcZSS9qY+b6TmXfmhT8+zgOZyMyXkZnPITOfQmY+ioDwMzLzd+QX
hMz8GTLzHmTmnaSSQmZ+HwHhnaFRsD4VmbkvMnOPHPAiAsHKttlhactsMKVx
bmiNzExW/6qX66wqjzKYeQj5nCM14/9YKyLVxRaZb4gt821ZOYXY2WMO8Tj3
ANSuVN5nqJKthTH0srQ9BzbJujJN78VwoNC/eoyNrEc53IR0U1cOrdIszxq8
zWsxB6a68uYuQji1A8n6UyTrg4Mi4cdhkXB8dE44j7f4+jTaIi/JmpwOFsUa
4qk40dgV61Z89Acf0bLP6uFm+3c2D+Ec39LaF+4kIzXT70oxdS8oNYcQDfuJ
hQX5htkGWS3yZQKWNeQadou7ByFgN23KKjsBZy4X5EtzeBx7B1svFtC3FRUu
i4D/QYl82DHnejqAgJl+8WdxMYX+r5eK0J/+ExnDR3nh781IyBuRkNcmw601
SXBjFSbESxPhMpLxhbnxcBbJ+NQkS64cQMaGtEo1eNOaSzJ+MsLW4M2q2qya
u4ORkKnbQ0UpScZkrVWLNFWOze5erjdrMtYuDUTGjSqX9rvwsBrzUe2cLiy0
Em9TZg/9xMYnmikiJq5hZ2HKjquLO0pZce8ayVCPpFw1RQ7vbPIGZMey6rwA
mXgxZcYtpVwZWfgNZOGNyMKbZXN3G7LwLmThTzEzJqnVV0MEEx8dGwWn8Q5f
wjuciUx8aUYSM7EOuJ3HWd/S2GC3lOe+2Y3FhYpVdsyj5y3K4MdifozfNkXF
cm2CjznYr1dZ3phkvLk+t4KpJXxDfoZKjlVPl4wjjitaNsvO86IDy874Pzg0
rjCkNpGUHGxdsaOvSxeTzCjJFCxLIyQ3Wj5p0DJfxhRBxXT5Lhb5J1q2DCZ4
oDbBYmLT5MGNiU/It5lMrBTK9QKZ2DYTJJi4lBpW4i91fX++QCbekhduIhNf
Qya+iEx8Bpn4BDLxYWTiH5GJv10UDweQifeRFxIy8XZk4o8QDd4lVRUy8RuI
BK9gWP5iF2RiDMmXPp2Nc2RiYjruZn9XlaHH6mk/22p7j6BjkSO7bNrUfi3I
nGQpRmTsy4KMG1Qq7dUVaGs1rKe4XqGptsP2qRYD/fBuU3Tdu3oyi6q0cFkJ
qh4V3DurkRAtL20uero8IYT3953Oov68tacQLe/rnwO+TMV7OzQSjiH3npuA
9IUR9MXJggKDcu9KYtsV9IJj6WWxotcZbmWI7vwrlMqhtvg6c2YuLninDywq
8lI/Z8ZUepaZsZ/p15nuIvfym/wGORvc6+URXb/Ifefq3NerS800BIR/PcmU
N/QsKQd+8V9X3l0t5aw3I/OSUENPIri6zWbdxBXMWxQ2TC2dteOsbetbFsxL
l/1SCv5ULhch8v0fiPf+u3ngbyTeO3JP8+8viD3NVzDovYhX7dyMODg9WWia
fxwdDV9LL9o9SLw7DL8lpawi84lFTwniXaSI1xi8ncZlKrsnrdOPlhisPWbC
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
NiZEHN8LCbVVteIBhDrTINSlTwrt1ettRTuXhJLbZSv3AEbA38kZXZI1U0mZ
xoVuzoiGhURmGP0ioRJCL4oVQt8ImfnFBpalLPUkfcKqODEJmC1L/ymSfNAV
x1shDJ0inApnMSY7vLC1/Uwxq5fumEhoRYrLznP3RDJLLzTR0pI0YVUcxQYY
PvpiXl1h9oww1slEc19Xp7kPkOLSKKA1rRBv7M940CqzXWDFPLtG8mxQ30YX
zWWgwMqe5hK/XpKvX/hvPHsfefae5Nm/kWfvvJoEf7yYC35Hnr2+OAGuIM9e
nBUH56YK4fMv2us4CvbSnnk5yPteD8vnkYTPiyXPkjMN9Xrny14vXcZ/El9p
njVsNJBrZffHb3JtMBEWRatPVinu8WuyDZW3lww2JLMGsuoAWcviXFask89h
Y9Qu1QuwyirQQUME7OPrh3mhe60UT15NqGKgSFSTFzhdNFoLkZUmVBJY9SZC
zcHV5K+G5ITvRwhCPTFBuGhcni5EVjy/myrnd5+L5Svt8Vl1HAwnfbLr83yM
mD4wy8smuUbDtemJcGhoIdhOxCqHdw1yZft+klgxuU7BTJaYs46NZ+mh7JW4
lV2njCKy4laVyt6VqSypnalgRVZ0NrWzUmYMktw6L8k2rKsdkE3F8xuOyHez
ZU2j+TUrNypT9ezUWp3Vt09orXwsuwoLINm1aXGbmjVrxvznNkuUbNWFT6gc
Nge/jcvLqlasPI8LBrCratca7MrjuTdLlSoFJ7cRuxa02DXdzq40qX8d2fUK
sut5ZNdTyK5HkV1/nhcH3yG7foXs+jmy6x5k1514wbcgu76P7PoOsusGNaXf
Wjgg0x2a3yxciKlk6diUOgcRVNkmicjgjXSLonxkt5/Cry92gHrFikLBrt2l
yrl7lRiPWtGh9nQU0vRKI/d4+10nhgbWSubC03hDLeWkV1JM0dTQhg5CLbUF
r+VujHNpEvebZ0W+StLm87Jje2uGnhyiO7cghkgyzSgfuyZ0cZJTX4ijuC1w
GNfDvV16n8xc058tqmSV0nXK5xRqLKCaL2mpmGClLcZ9TkJF6jonKpRbsyGC
R1tpHuVJW7+dR8UXzKZJlJ6MKaqAFkCiouZdkv/9JL3QHKpuqsPfwjVXdevW
qknAXS486iZUNnnUXahMN9nLyWp9O32eN5QaD0ij90m7LGn0b0pX1yfD3deS
4DbS6M0ViRhOJMBvC+Lh0uw4OI80Svplmh/6Xs4PqZUBW4hGlV2ynB96XtHo
U9l051YN6M567B9SVunw6BzQpVtIOgbq5ParEUNU6vG6EakkUWZEvlgRhkkV
T7xXLSAY1kGfXos+S8purOV5QRTaLgiFajdH/G8Mqyv2Y42on2zj0IVu/heU
lHYQbo6aQ/sJN0eSRjGHjhbVYMWhJI+6bQ3meiWJLo71WYXhRHG0l8bYq0cO
Ar02Q4wT7OhfFO6aI7lIoHekTpn8/o8ggUoXDC9RJ2WeVA82WBS/dcid8m2S
PfFt+FmYoZqtWHNvwEKMhslZjhybXdmTZNhLrGlcXQx22XFti2mVuRvGs9SO
PfRCkUAnqqwY1CmLEsXgc8SeZ4Ow5wFkT56JdWPPioIKhVTZdeKHqPBatWrV
4OuNSexnbqPCrYFUeA2p8BJS4VmkwhNIhYeRCn9EKvwWqfBLpML9SIW7kQq3
IxV+hFT4Ll1Qqid1EHtIyeWYJudnNInjLipXchtZldwHTTZJr0DroyQdeg1T
GjWs07NqDBNiqMwtybuitlhk5VG+5apyK+pJFPGW1paqzSUjau1wHUu/NKJu
DDxZrTQMxUtnY8RmFiNSFfeNdhE87EOmUNRIJQ0TVXF/GBYJR2UFl/0p8IJR
LJk+sKjalibYUOWZbmy4UjHi6jiPz7SokB40YbbMk1obG3qXZFa0TKJ8Lgt1
fHwjiBXxsXlWmMu376kl3Py2aD/TpA+uT9W2Fh4r12QLY9rU45ASW/9XyZTt
ypgsKRj9WR3Hpg8vxixJVd0A60UzrjU25mRZ1ZVNVdoUd+hlyZTB7BeDzdKa
TGlmmyZNKopUF/gBqPI+jdlKqvz7vTzw19u54S5S5R2kyj9fygW3VibCjecT
4NrCeLiMVHlhWiyriw8b6mLnZoG3u1pmyM+3FFRJy0/N5qqq7tqyTpeRW2d1
1xy3Jc6qK4deefRWs6UwuKAVAK2rpgjiCzGWo2rPZIs0O1QtoGeDTNIUfdNS
Nq6kh7iyK/79Q4PwpVIu0Yze+EdjoUX10tDn4RTt2hhgYuHYLcCujTTUg3xJ
HVRSMCkTC+bLSdGsYCK+/NM+bPv/mHsP6Kiq7o171kwSgtJSSUKAEBIgmEBQ
X0WKgFixK4goKtIVEKRK70g19K6gNCMWrFgw9oINo752RSIqxTZ2itnfLuec
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
WrEuhylXdnsL95jmLmdS2iGdzzbqyPY6t9C5sinbG6pBONYg/CeCa0Z3Llxr
T7kgfPVUAzj+tptrv2Mc/opx+POOLPjx/kw4jMfOgxiH32Ec7l+Lf+XKNNi7
JA2+WIRcm5cCH89Khg+nYfxNSoJyNb9CzTttNKabd/06F8GSyxvAXT1k699y
NZtJMyy0Ob57u0K4Eq9YhmPehM7eOUaBM6BtJh8fh7NNQyTbSFDHnn6iHa9B
nxQknAXyTdWSnKivPL0FjOiQpAz9ZDaTgNYVk7oxnTMN0BZeIN4pnMhdKh6c
BLTtaopF24vRbObrSnBHlUtefTveWmU0x1IkONMski7xPArFia4++snV3OYp
qmIZ51p+i69DjhghJD9QdAQCuJoGa3HKuppSPoU1xcVa7hKNj0pcoU2ncZLF
nRQ9i/Nd6+7O4qgsQkuliWyusUztzfC6NAjCL1hk82vUeTeH6dFM95aiQKyO
HdmGCdmqbNgde7ERHCtrCMcwoo493gCOPexsfD+6OQOObsRrfX04ujodjiLZ
jpSkwa9qRJPI9pXe/E77bM1Gvzq8vGjnwNpw1zXZMOCsIt7qR07wUqyU6NJW
YvMvSmGyUcmETpBSsEz0mWKJtHBAugUEb4k23kwLnfGGUeKyWRG+1TB866mE
cxSaKntDMoo8XbPNFCoFnIVuz2mMPTpQDke42ULyGUpIPu6sTDgHAUfPH7PP
T3EPbuJzDKnsbDH59t5uMTmncUMxjcPY3DMS07gx0rSj6RVaWkRr/X5QC25Z
aXdesVctxLoE9rVNdqaeXZZCJzpQcc+UcYZHI5WUIdr2DZymLWCzaMnu5tnL
HHSGVx3gFUaUL8VHs55UdAh6/zS1uzcNwvcgzGY2h2GX40nzrpzIEWpVwqQ4
pdWa5ZuauZt43nUNzhaxoFlv62Gebt/t2lR/qierox23fbZt2+aT1fmoEk5x
0+91RT+M1d+ezoZfMFZ/ejgLfsBYPYyxegBj9duN9eHrdemwD0+hezFWP8dT
6KfzU+CjOcnw3+nJ8N7kJHh3PMVpXXhzhLTwnruptjESG3VuAcy9OIe3NdDp
k8qZWnGu1QmU2dGdPK5rlmNC7dHlaUOx0U4rT/rdeCsMURs3dTuvKgLix0MM
vziT1Q2XcU7KE+MDTWUzA/6Ufmc0huva5kX4qkzokgyX4wFzUMc8PFwKD0uI
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
h9bmMfD3lbLwvVHp8MzgJvAghuNd1xbA4LP1WvWa3OSg35tDkCzJEEwEwbJR
zdkdkNSFMhOuehLU5VijdjEHjVknr5+lgs5IiWoiYYK1mc9TF1XJYJtI8NkJ
IYMvheOT1L1k/e5qIFY3IbSEg+GdjaFsGUKvF8bZqgKJP93dV/vTXfCLtcDZ
5QHzv6If2Ihz088ltxD6nVoF/bRfrj/9Kpl+MnFzfFUaHMOT6p9LVH44P4Wl
F/8Pc+8BXlW1rX/vZ+0koHRSwJBACCSQQDR4zr3/e5odK4ooUsSColIUFaUo
IkWK9NA7okiLvSuIERR7I9Zz9FiIeuxlAyI18xvvmHOuNecqOwnqvZ/Ps1J2
dojZ2WP/5jvKOz6/rbn4hPThv25pyu1v267NEhceX+pOz1cMkuVFOJ5NIbV0
7t9KxbgzC1w7T7e82EM+wc3yotl5owgoAVifq/E4W4486SirCWfCyUrrEQKZ
eTEGHTfnKKv3OO7kqJEmLQZ1dxvuE7VLVmPP3XdiYO8+36513XCqd63/czjF
2Q1Z4tVrczjOsG999cVF4uqupRxj6GTbMKCYx2tx0OSqvGneuVyf+DJilpBT
SlBfrAgbKKq5Y7XWWvaUJDpQsi81hH0ZqlZ4TFALqgMmhlCZfw+F5ElNLRjo
rsmO1IKJLXl8+IQhC/iXeDnf6q6RdYo8rhe6/NuRH1UzxO8gt8j+X/LvAWUc
s0HNXNyt+LeCrqVZ4tdFWWLnPOn5+d1M0oRT5XS9rk88MjBflBH/3h4hJ+zN
bptHr8gSM86THBx1RpFYe1GmKiA2sBYTrdR5U7WsQXbcHOFnoIzCs0kfEgTp
BRs9L8NPbmMGJOLRo2CazJ+CbxR3XdPF+X/pzEfJm0/Ojst7IX6P4e+cfkZ9
a3oe3QSwhcHMbqj/tOIdii1hwu9+OnY+dKmcpterF1AxfFFXDNU0PWZ6P1XT
9Lxgb4LsquGuUjVOaC2U9daqe7yLhxvFLHU93dkpFz01xDWjsSbFTnwqjed4
my2PDc98GlMUDDvsNzlMlZd4rLWomFvEpikVC4pE4pk8a5gw4CQYVhAMs6rQ
B0wZTHVNgq4tS+/vkcserfgfC3TWaIW8+3H4VrF2ajMPdK8kAd2DHuiq19B1
Vwserzi4nEBHR9ADC9FHQ1KvjKTeDCX1JpHUG99MjT5h2XMW99Ho+fktgxup
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
g3eze5aIHbfmui2beravms6T1YuMLKZdrQu6f67KwGQucpNEsbhnjyZVHbpP
TFWX4gEuxQ84hwl3TGgVzpxWCGXcE8mFHU6XZdcdLYsDC4tq7fDibwVzGRfe
iaIY17dmxn1Ve8aJj/Jlpqc2jNuo9sQ+qmxfzKrcuqMk41RVDvYvBxbRsZIY
hxhLzJSplG8mp7P14FOKcfC9Rg18u1rvAIH34rUyqak9QDeqiQazY3Nhz1bM
OaRWJnXLY4Gn3Sg8zh0RyrneqkmEk5vd1NifCTp9DFXlcwYfzqbHsHqbfHo6
T+lhJcPYU7M9rqkIw4qGMyj8I5cO+TOYF8oWsPtCspiw9tS7YV9TE3x6bcO/
1X7YL3hsoYn4Qa9uMPftTXX37fF0gdy6F7etmZqbPSMMqTR3/15M1vfl6ILM
ampBV1vElYavGlKz657Fkjm/bsu6xH25omzI0Yy4qvVtvcNl2A5L01zCOFRW
VRSKsluOid5fGY253065WBwLY7E4NkTaof9kk67aybv/zeNdZRLePUmse4yu
h7PFIYrFg/cS7ygWD9B5c/9qYh3F4r4VWeyAthdzCiqtuXuWGnWfQvLuNinv
PrqFeHdiqXjh2iwp7671SnSQd3CBeWKALNNpN7T1PMknN/At6JHBzLvw73TY
Ozvdjbcw5g1XVkiqVBfT0Jtyqqv00AzWtV5cz80qzqm52VOx5XLQcXLl0OiT
j3LH9KDrBvyjY2g+c7kvn4kulFDWXSXH2bWj9duqSvdvg3XueAKvcSjyVhIZ
I3vK9cUB9GJHMPaqzdV7VoOKgTrVWQmfFnzGxTy/aRmzUAm6eDLelYYnMs2K
wUOKefPbR3eeGPsb3EI4Kgnzi4Kdl1GaLiSZiRBk5r3UIar7RCLvlP8b5G1W
yHvSqOE9aNfwqu8m5Kka3sFlEnkHKMz2zcnkMPuZkPfdlHTx1cTmYtPV+WJB
n2Lx4ehmEdKuMUu7Cp/7mR7k0xYwc3u0cpBSiTUXM8/Jdkt5yainieeW9DT1
5JxtCsIyDu6lurBj5eYgZinYsE8PuLv8uI7spKvnDJC0BOqAOb+By10REu4+
JeHCWi2fH+IV7LarYXW5oaix2KENzZS3506FOmNCz3ENXZh13C4Z6uiS5kIO
xs2GwZn2/kQyU0k7L/sZj0Rcl/Btsca4HT/h/E0nSsklynNExbSOvEMESs4e
uauFknvb235e9azGXEjjCQKjLmrOs/SsNeesSQPFuVbyS9akQVt+e3weODeg
R5rNuRcNzj2dI6qfIsY93koceoQYRwF48D65eW//OuIcBeA+cG5lFk/P/qo4
t2eOTGMmZihtN4m03XjSdmOaiUuJcy9flyXeuqFJUm33cH+U8RrwbB6sXdzp
A4q04V29lSVhrMNBEXkQVAGmG20pU0+T8myKHO05tV6q0ng6TzmFGQcgtme2
gXEoI9x6ylHMt170D0YNFuhRdM239X3MVXuyZmdqOYtvqmb3H6XlwDesKcKQ
gVpTJC1bGgYsW9jcbKGPb55tCxCW0VhlLg22sQ8ZPgfToOWCOs5BHCHiPLDF
JNmOTE42b76OpOOUjrH84EiBIeas8jjBzQ04/7kyLOgCCcu27u5YeOi6cJOB
53C28mIv7szpgmRw+8/vCLctRnvXk0be8sFsa9IAbV6H7tJwayEOLM7ifub9
cynGKLZ2Tadz5O10jqTY2nxNvljYt5hbvVxNN9wr2rmaboiXu9SFu4eMDbRr
1cq+m5X110XHlYj5dLZMRrg+f5cNkHO97ktFuPpMOKXtYoy0+i7cKP5mnuU1
oNDlIHwJdzedItsfYBg/k9QcFjOcqTDnV3OBSQKl5tD5Bb8ys7syrD5XeUNj
a1mD9i37Vvt2+gfRUTuXviyMO1QDklizyG2WGnZpPIDAc0HKyoxEHO6b4ko4
TnOiHcUsy/lLcyE6LnFHK9ZygZYUOmBW3ZEnhp7fhSGXeCA3uc3Ky6Y1Z7At
BW3MVVsU5PxtKWGQcxMnKV4wyYByQDjcrN3hZWyFUW7ABfXyDMpZi4lsylkT
BZJyJySnHB01qzeDcjniEEXiQYpEUA570/cryu0D5e5sIfZSJP4Kyi0mwi2Q
fp6/zJYZzJ/oqPntZCi6ZuKzsc3EmLNL6IU7V1Te2IR387mKboit6NCs8qDO
YqoFD6vdKQP0NKezqsM5byKP1tikQzoEO5dnqApAgHSn1TNwJ/OTMkfp4D6x
Y61UJVCHkybCb25Eee4OX3lufd8g5gIlOhNzNwcx5y4ogvvKrKADi5W+NDWc
V7k2OJfGlgu8Q09pNjBPDwt4us3i21qTb0am0r95yBdcOEES4kTF7R2DbSik
3hIPoxZeJMqGHs2Q41q4DrgXkqg3f8bSr97U6ZIh93IHsxUlJinX+/+Gci+2
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
VQrVDwrt7pywQfyQhGviOWLi1nai6tECUXk3xed8is25FJvjKDavPoZdfPjn
n9+FzyUVk4pExYQiUbWoreSlbyzx0BLZpVNxfQfWlL9SXO6eKfda/OxLvH5u
NKpy4tVXmEzWrRNg5qWSmXf1ZV46cJGiZ6CuUSp56QCc9BJpoJP+PnibxjoR
YxYanTj7zu6ezbx0EOsUpncb0ERadeF52WLACSXWGL4Jzcd97Tgamlx9VG05
rxpa8j1ferXKqECa4NwTBKdKr0amWP3ktNOrnphkWtJDVDW7NW/+BChTDFxq
VOKqmtfG9CV1LMeoiHSq4cVWuahAlN/SKTiKmGwu4zA1JSqQQwd0CWhK6ETE
JGKKYism0ZjG1Kzc0klUvUXP9TeLiKcdKGJxdv2ap6MCw8A6weqFoI+c1nii
TU5rWkOS8yQm59qpzYL5VrbPaO31023NFYnH8kTlskJRMaNIlA06WkZsD/ma
+cy4jmLzrR3Fp3PyxIFVLcR+rJ2nKN1L5NxL5ESE7iFy7qYIHUTkrBrXUvxA
Earp+TkXKJvy1P6/SF++T/ry7eFe3vWV6/Ryp0auITim9x9X0/uIhzB6XndK
kZh8Vp7M8MgyCJcyTK253OsO17NRKWJe93QxQnGU3vPXYn920am9aWTbnOxX
jVSUWI6mCpJ6w7w5qc/4VGlXNhG+yRtRxPKLHzU+KSa/n9CCDb9dfGo/t5BF
GCY+q6118y4+45F1SUVPLkmi+oH2tzs4oROLm2McrhUiLKCG01N5aZ4a4/iT
bVfzUIvkBLV2zXtNAoyVsA6ew5WXvlNumLxEyHoY1fIy8XFh7AJCZjEjs2xS
KeMS7/E5UFpVWWSkZZPOeARrlrXAqEzLRnjbGMvqE/e0EVUr2zFG8TfhQO3e
RZT1J6TfQhp4UntRvcLr7akYJjG6d47c64v65a5pXn/PNxN90pPTs03d9KxZ
w3zp2iYyEaRROjBafq7plwkzUXpsyy9qQLob41frVYLIZiqOvQRVJiTrUqjT
3vJwjOuW0+lF8+y/lMY6iznnZrsEZYr29YYZZ3bPE8NPLXKbWjVFHw2hKOY6
KhRF0dy6jeSnNrd5S2dlh8tNGWah8j+apKqXByY3mqSf6SFHj6QO7zg8srYg
9clOzVHMcyiWys9USRK2VNrPv2puG3OWnzNE8HdzV2hnBr2mfAbDCNiK6R3l
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
t7k1nX7qB5g2KpIPuihyUcipNu0tF0Oaou1tlEMhTzbbQjPPVtreGsmHLnVy
HKPLadwKNpYU8B5MlvSxPuVvCOcXLuwLMs8QNw0u3noeWYitsMlb5Z+SCEyu
6NXzuJ6XDHIOQd4hFhT15NdsFvW+IP5JyvCGGd37xEllg3vegFPtiDK6TXZ8
FuYYhMZmddYpxfRljMI0nYPip7SGze4BchxTbkk7D0HDWxPxGtcNd8gmjAP+
+KowMJ1MrIcvF4nFyKDLZL95FpsD57bYWfx1m873ctClEmAPyR9SJPO7ZFmA
wDvRTi64CYbnOecl0r9xefOAzeshs9UNnoS2sNXRFtZqrbMtrNVaJz3bYIUp
uSZ1eK3QNlaUM+KBkRXS+h0bWCtE62Afl3O/+DEoZyHK0jrOLZwGrDblb7uR
89X5hRuN83udYWWvisov1Dv5Xj4xHufMJgd+w8+GSx/fVLXybatk7UIZVrx1
AL/+VWBUozIHIec4f3oLT1oOy5IVdRVCjWqZB/leaVBVpPaAaVQ7woxqYQbh
yS51sKVLGZcnW9TG4tL6Bab1UWFa47Jlju2mtK/4FDrguV8PsmmdhNdKMsb9
E2CR4WHQb4Zlzd4wVbxFX0n+kT4//7B6ev38QyiM5B9EAJj/Db39AJ4e8dwP
TeXv64lN8/P/RW//upuTgbkb+7j7DyXH3PX0XNfHE/hy1/TyWuNMaqqfS/f6
uS30XEHP5T1+7lJ6LqHnYnouoj/jwm5edpc7r5uHvOR+2c13xHJndfHa19yZ
XTy7JHcGPRu7xAztVCevd8it7+Qxwrm1nYxWnmh/+DCv3M2t4gGpK1BCyS2X
Q1MxPJWH4y/jWaoYsEqmFCNXk+j+n4gWUNznO3SY7Svemsyv9OF5PX52vnxO
6kEgF+Ox+vT52FMPMWSX8PuW4n2ZuYPsuGZP4c84Ffeasit6eVJgdnUfj5jM
LBnyM0vpWUbPyUNkL04dor8qs5zeXEHPyiHeVoZmQVGvnCAcKWTGkZ2hb2/m
NHpOn8r7WHk2VebMYfwRm4f9zFnDopFZXHCJiaF3SZ7+zSH3+fK5YBq+3gvh
DmYuorcvpucSfui3XDqNfsdl02RAlT59RDxnjEymlxn7+elNM8JtKFoaLlTl
MNuGWj1qpg1de3wbfzlJvNazixrnBs05B81GhhY/m7UjcdTN4hgc4WEUURxr
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
+xigelAVJGUyNlXM7SpjZQixa1vvdNn9aNlYETcAKQQnWqkWd82SIJUQDaHO
z48KqvQ2VJ0fu0qvnMXUmZ1y+HtNJEG6RQlSPolaLF3VqwlPIEBqtiqWHrRY
qtOypkw50V2mfN9Ky2ojzzeL3Uae9+cEcVTPDcgKtrZ6ZwbYBh49K8C7lVGl
Y3eVpVkcdXV/KKl5ns3DJDc3t1nPDVQcZUyG+bnkHEuOnmeedv8vWydG0kOb
MtxNJrE7kmObxNw2WnbQis9VD/Vn+bE3Bl+42pr1DCxBZ6hZcaMoG91WVO7O
9d3cGi2nG8YlKHS15oJnAFhDMu9bzZv3dbVeSrAmsVCtXN4cg0bkDSXsdGCm
OGhV+whIvqo5zclexIb5BtMydkyltgktcwgrj+KZ8u6hXLTvsTFeLrzShH3S
46CFe3afqn5uuzyNCQt3zlQ5hofzvpv57lBDrCeyItqZrqBpN1iDVnatQT/0
iq418B6zlp9LwVNh/vhiZu+U9s35T48jNbtO1Uc1c/n/2itd3j8CmIvGa4e5
dWJqos/omqhncsF7Hm/Qq5ObiYXE238vlZtev8XqnrUZkrdbiLfbiLfbibe7
iLd7iLd2L6Zfuwmfs5vJc/bzZ8TbMG9XrWkh19c/61GwmGbxifqkT7rXl7m/
hoA9HCtgcT6tvDVXlI1o6wjYfZK3o3uWytasW9T0jljehtUQAvdw4wZc7ExW
XZVM3BWSuExVHF2n5/HzuEi6JhnYYvE45Ova+ixh+VILr+wdHrr38nPVd4kh
PV9agQO/7DsTnYl1L4yp49jPR9Tm4f8Pqzro3dbcR2jXWeqoCuTBH2vbCIBc
HC/Ri7WwS5bBaxgBkYQcD+x1gC/SPevkJVEc6sjgXdkjTdyossATZV1U3KKA
exvBdkG3HHH9RUWyFnplEHDryAl3ug5KAfQYhveozO9zrr4S6ZzVdVDuvrQ8
QboGCtjK0R+tnWE9W9W4c923ZfeR7PcZ0OOdSqBHm2sv0Kv+sF00qe55Dmzh
kt2mUadge0SR8TxLpGrhyv9VdxN0m/V1GsoAcajYRVVYig5qfSy/fQa+TOy6
ub6Hqrn+60G0FdCtTxVFC+Tbz1UDttSrKa7xsCgLVT7fSi01aO1x2p6pl8hv
Xpe/XgVWy2e0FhWbChy9qs7fkZtbMVKhV+UZ3OugTxypYW0TVF5B5TF2Zvvc
4ovUtY3ZZK/rqkGrDwJ3hVhWiWfH5PKY2M/1rSEeU9F6PUh2pNzpqaVu1iPu
5BwfVqwbZBaYfybFU2YogTNZlHVBerhMfshvy8BTejos36OniazEV7G4s6Vo
O2eZPDFuEqt7ppmTuS4V7VBk3aPnynqKqge9PZ2eoupbVj+n3h37Mqh6aYn4
Zonan66pqoqpP6li6kk6eZ/aTVT1m4x3sGlsZ4pejvWiRdVXq1Cx7yuy1qhq
GJ4F1Xb2gjkLqAFQtesrv0TE2o4E61xauS1HQlXZ03UfF0RszHifGAHrT1S2
DyUp+xD/MCoWSLByyVThFPeY9dyKgmzwuvoSpwqpp7049WR6/mZ5Eb6c5c72
6BJqhUoJm/aT4XLGHc6jsBV5xyjvlvtzzNweWInW90ozZ1Oo1870Wocrfb0C
59oeNauJNT2YpT1qMk/pCsGvUDOMTzBjQ50kZXspux4TNp34rFLE3bOYrpC0
mINwE13sNgqg6z2DJF2169a/rlqP+1JcddUZDYzj9jNLymKw1vGyALLGcRY5
C0SyPcMMLNuenpWuXbY+riJFVsk27s6UWeAkIzN9QJljAVVni23wDrQhq4Da
Vn7K1cqSwY9pDlBfCQCqd1pQMFARHp/LoE9yFGqyF6eSpm1+njXJb7tWkEC1
MllM040FxmAYWdRKmqWJplUOkLUzv8nBIFXa1GpPoUe1LU95EKPrHJSWX1fM
aIVuTdZjT3jbpM+OWVNlXeXoU++9wbYeynKR077yGg8NcnjqtK5Ily546qqs
9paV1XVqIFBn5byFEanj/5QyE8FS5uXyLpCoyzvXEMvkRccO+dyyLjXwHn/E
XA1dKFZ0YxlrBOsNSrDiW+D8LY28qaZ4ZJB6pbwb3HFV/JLrU7rkyo0sMjls
C1UkhismNRM3A6eL08S/6Xz9nafU+hPdAY7f2lCcpLP1KTpbny734tQzUs8v
MXysSpziNfJei1BqosNlObSAUrOv1Q+pzhmVX3p+liScUb1RlahGfSRWo8Ka
UHkLIXV4W1G5Ocd0eqHAyg0q3vmxfhZdB6chL0+rsURlqWqxNDK+sJqWpvWR
B64PfeqBqBMo9Ywu/WkhgXSKBOk3xtQnZwHpaQevqdqqnrIl+1Nqmf4UeJBi
BkzqIXjsParJ3iPekEoBtIpe2Su6qxKKBCgwKVZ3BzVXd8dpFOWTVd1r6ivM
n0wSq9WXArfJ+CjUWX4soWuyPcDrhktSxYT2ajHrOZjPJycoTCG0csZY4VWb
eTmgrnbwep+yLdmZ4r+OPks8df1Z4tlxnqqrJ1P8yVwtXCmg6Jz60/IMcWhM
SxEZS4eqdZlnblXyq7YGZYk1Wv/mJ1pd7Z2Kkzkhq7Ka4ubpQIuxWtzmBP1Z
N2NdvTCSsQ38GettF42ZNxTDWOC1wGl8SdKTNFuEzpaN3YeLY28DAauHYhxL
dstLPJn6uFumikNZIrKslYgsaSUqNhRw31r5lNac+XUcig3jlVRDCZNVTkhQ
wzWryWGby5qJyGQXUTkVnBJIVN3Ypkek6PEodJM4vsw9GuX5cXlix1VFTNR/
aaJOsYlax5+oGASmvEp+Tt/NlwCBaeJK2Hb/RzbLLSKilklUhsHQsFjKD53k
e0nmudBFErMKrVrCaqU69gLZJ8PzCuiGo3PALqSqKUS3654YuJhUregBn3or
Bmzaud83uS/UUajvTm/EyxfQB4O877ekUL9fTTilqP+Rov4nivrj2win24HT
RhKn8eqsJu/b3J33fdkXp2GEPAZEntmo9rAurtg01b6/4vgwtbWpd8jemWhT
n5oJoqZyiyz8sUWeG8OsyUG7XMleydFqfhw1FOVKh8zuQnzWZ4zy/19iFH98
ff1kcBTpckuLnvLBKEUIhSzFSCjXrK18eHihsSkZW+8k24EgK6to9eQUr2p1
wRgEWHnv6OdYk+yK6m1Wehd+vIntJVKvVIZ3MFHiM0nmd7qZGkk3JHG64RPy
SdKe3VFqlWTtAfOvIagRqKkUL6mcAsZ3wcKEuV1yTPo3lp61mZ53sem3jrh/
qK6z1mV6Bra/6IEJPsL03yRMf6Qj6SMg5/VETsxnT8SnFFRfDWr/1LGk57Ar
cg7pXZ3lZB2FRFKlwCfnfKtxmZX7X0wraBycaik60wenIevrXHK3yIXTbfQN
f3f06NH4kvV1j2z1DigKkqyfF1i5X6lWWzi7wehyU7WK5O+bPgfrmPtBYnIV
h2ySq/QyJp6GaonK23Jjl/rdHa+W6ukejV1tG4NUmeslgarXuWMmp8r1bk2z
FGotp2tcKVTvQE5r3Bh9yxPL6tOdQnfT6AVhrFIxZswesqBH21pZX81U3CX2
WhlfP4+SzvjO7SibkjoQW2e2z2JeLu1UnX7KJfSYLBZ3qi4Wd6wu3wKwSzrh
/E1wFUtwdeK3krbd3aRV95jFXeRRHo03oOwG7W4iwm6xKLszoML60FB3HthP
tL6tRCs8wn+b1ohnwkfVoDGsN4Jo/WGtbKj5STXUnKC7w6ldRNg9nim33spq
vBywn2A1hoWEEWslf/+7yuSvC7BBDiY/g0JVStVeHMSGBOn049PRsLbKCqyO
ojpgYiupVdOVEdpAwnW5NCzx97iyhIlbjdmawmw9rdkqnfIUIRQrYeA11NK1
E/OEKZLkGePBP636KWxLL5th7k791JgPBkiN6vX8SquSVTe1Er0obIw4T04T
QNGDEz3d+IUf4qJIdU7jJHEkrABUu6GhdCUrVQhXpVaRCu5ZM3ShZCsxFWyF
PxiJX3AVcxi2Ka5u7+NuMdVc9Sun2glf7QPmQUSTfRSpKqWinRQNNAeJqYfB
1DWZiZVRNVP9yqhVJXutUQrE1BzDVC6hVmN+ujtJFUnPC1kJ3DgkdVVYqyap
q4VGkZS/1aLra8eu20yUpJ96SOoI0yQWpm0chFbl941nSXrRE/HewZyeljks
AIwsVVE+sq17S4rfyFuDz8wq6RlKsifAWw4kRU8tRrlaOpmndrrUqENP756U
U9Y4MqVK5b2B6InbwsklchQZLBXfaEVahQ/JS0/O7/aWnTO2GtX+o7XKezT0
L61E7z+2YYJeRm/ndUBWjpiZJBZ1rE4/1ELC5yLrWtyxBoMVj+DnUkeiysRv
V75j4JYy7Nwik/h1+m0cbt6muGnXT+1kL6b8JaJM376pkRhOzPyaT9Vp7AD+
bkU6J3p/pOj/aRMxk6L/BBK9O4mZetdmFT01gYneX85Me1mKPI+m+CV41di+
Egeb3kDS51A/E5I+g8bTpFZyF8iE4QDJXfSbIbHr2jmrk7uJITNkMbO6w8sb
CrmdFG8rF2SDm4gU5HUJl2HwkgLvtO4vW4nIADtbiVOqW/ukAiaaTN+cmG28
8Dqp+5bVMKOH80mPr53UtZwFrgYZCcttymS05VIHlqiI4pWMvMv1qqOsN73K
FyKfA6cBRQAXQlAiQUB05UuWQ1KAUBKiK5Hx7aHg6RKlEpyomM7qnCP6/6WE
4TmPRWktk9LV4Cy/qra4MyaVWzfG9JuQGFVHzZ2DizmNe3p1hkrjVj17wXiP
dIU00aYZnca1oJmhBKbdLeNx+f6qqAxjuVhmIoD0tsQkAsgkV0u5JTUjd7bh
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
LSOYurOgYwOxxLGzStRd0MCkOWdeUC3ElEsS08+vRgSfdn41vEdXdTGd6Nb3
D63Ehb8rFZPObxCSJLzIod5FinoqOQqP7FV/amWOsDHEs8yuhnjqyHpLb7mI
cGvvdDHk/BI+pm7t04RLInK8nVNolN2TknYI1XdnkPCb00B8RGH6+aI08TWP
5yHarSHarUeYZorTcBX4FhlVQlQXGc+cdmEevX6ezyLbBGHnY8dh2L3Ugjdq
+zZIkt6LPoociSoirPEpIgTpvYCiQfnYYlFxcwv/HKgFOr3Uyw90YVCsGuNN
7StYUc9clbOz0eTBeJPJUR4SS1Kv2JF21vkPZcQfrTyIPgNiCM+bEzTa5FR1
e1rdvaoBBAMFdl4Ra1pF+XB51zTRl4IEKwj0wGSFNS4bXk3Sbiy9nucr8YbX
NxNN1g1QdZ/l1N9Z6w0lXYf4mnB+YxUSNQA65hzLPAqdBT6UG3ROkbjxohyx
PKiVUplzYiin8p6yL6S22KvmDewZkCEW9SoQl59TKsouK5CzBv4fbecdWFWV
tf07994kIFLSE0goIQkkEggqHaSJvQsiFnqH0HvvEFooAnZsKNHR0bEjE9vo
OPaMvWvGio1rQ1r2t561y9nn3HOT6LzfHzeEJAQ0Z+3fXms961moe1rZnfYZ
eHO+HDr+anWyOFCaIr7fmCJ+pND5aXua+I2drdLF8ViCnFgdRFsb/pI/4V57
sOluB3CuSUkFuGL5KdfMRooXcF4X9P8dcDF05iUjO4rIm3kxVwpF/p0jKm4m
sF1FsXhDoYg809LfptWO0Yra0jkZr5VbCHCzT4o9yuiBm53GceEyGm4mmWM4
xavpLY5XnnR2NvhpuOFX+kg9fH2IP5fvXnVpm7V6VnPpZsWX6lqqNTMvcQ1T
5m96HRdmNu4cLJWmPKthqUz1tP8ZFGQz+7bgeydql7hWzuqdqYFGmOpLb8Cz
EPNsYR9+0X8TvQ3iQ4GzxPieLUQ/AtvU0zIN7Jb4pHMlvSXU9B3V3bWoZ6Y4
/Cqa3gmOXYOaMdjG9y+iSE3liiancZZnK34I78ASANNay5PE56uTxNfrkjky
f1Ijjgy16xXUaury/a9Q89kn4g+1oPah+qq1r1ZGx0zkVc20aK1M5d42XAIp
X9NORJ5o6T/wr+PEm7zd60neVG2/fCoxbU1rx6HYrl9CRG2thMZwv8Uz4ImT
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
kUb30U/1aHISjVYbB1VT97Aqs62g1VubxxBpRiGZhmgC5lBrj9Y6Q72+TUZM
RGaNcbqzd2kvKT08vsDZwC0rj5XH3LowsQb1B0xXFkkV+wMY2ahKQDXwh9IH
BFVkHlXChpG11ebxsWo75Au7Z2i7qENAqkffgXwhDyqyT/4PpLodI3Ibqda9
jdggAXCQGIGvZxS/z3wqG7FCNYZFEs4AUJmulTBi99srRPDMw/C00il+nNFP
AM1msCVwKFLqarg0Rq1/vK66t3OOWjOgLvIpZa8QJpi0buGfVY9VU3c0jeru
RlYnSapVkSNNh/+uNk6saG1itEuepzsLfVbX1U1N9YTrvApnpYYzsebv3i5D
XXROjurfKcFX9z99tT3ZeqAzbxHdAVWSWLyQnBkk4w0DZx6cro+LYd//6Jus
e/kwQZ0EzjwFnFnyLXPmb8iZqRZn8rV3zkhRwuvIde2M1NJ46Yz0LJtGV3ho
VDZYZT9rO890m0Zg04C2lpAYYAlGbHp7K1tiIGdbXPiHZyWp3PtaqLzHm9lX
kXynqj39VXuupck0xnbfwHt+wKahaqoUsgfi0ok1ne5qUEp6mEQFhyglRRKd
eEM2kijEJLJotGZPLcsBnttLFLoBKHRkZxKzh871ZA+3NIum7BMpVNLnPa1r
UjTf0TpeU2hVSaGO0uBiW+QVEo2As33kKbNSeb4FyRMLMKsJIJqrD3fS5Pnc
DfqIhBEXfAbh/Q1LcC03DUwJgDw3jYtV2yC0d0E6sA+KrQO4SgHkeQzI8wSQ
ZymS5/wKk2c0RmIMibjO9TRRIzCmd3QlGbN3i8AmKpY8+U810VNTWe6YYl9m
n5IxOfss4Z4Rxg0u5ON3iKWLKfZl9omFPhb5aHK0Dgr9MVDo59+fCl+izjqp
a6q5En5vyyD8vaEddByJWHLaSLfp9jzPRqP1X2n6xE4SFjH3ns3SbrN76Sn0
5TUsFthqZ7xQe5OFBtpyl5eFGjZFncBDF6aoi9vmqAGdE7jGr+pephMzK8Om
M2+v5kppy3K/YyktKrbwXgnewcJTjYeBTY++F6+OAZse/9SoCJNVyQ8eNl0W
xKaWSarNppZai+t7+jLokKph09WCTV0tYhTFcYzbUNV5aRSpEy+wydS7/m8J
Bdx+FrUxvcMq0UUNz05WfW9spfLHZnou/ghPI8cOtY5/XzlShc8irYLH9TWi
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
7dPrqt1oWgLwPgDwPjwnQR2fm6hOfccX3lx4m68RK+1CfMGL0vHxXufKEcO/
AjG/0pSyrYJ3Ggcv87MgiGA9zAtrUXEzrHGJ7PgU7Vk+/8HGZNYgPUlMxW1S
cllxD26vFyz7CNI15uTRjplliNOoNpVkRs7jT51OIZzRc5l3WisE5/7iVh/q
SgddFAs1tgtn/WZXo4658d/FbYvZ3eoSnG+9MEe93TVN/QFw/ntYbbWI4bwS
vrFC+MY2AZy3A5z3AJwPfJaojgKcS2in2QdnmrVXomZ5tDM082PaGpxpTFfz
Y9qsz0tLI33xHQcrWxuiUsdgmiWC8kh38fxGYnunHEw/0YyMH6x5WqSSGzBd
KjC9n88YFQ9Pdh9uxvSxAJWO94oVYnpxX3oW9OcVI99sD55zrGQco+gGdkS9
LwjPnustBs+Y5eE1KuyimbkZqnFodsZXP1GBPOY6XcLl3tpI5T8SR8uD6wHP
2yfGqt25ddU+iI6Db8SpI+/VV8ehXCuZi+rLJD+e1zhzM7zig79sTMcmeTF/
vUDF4X8aqvyZTfUdoEnN6cUOlN4YaH8ooP1kE027Ac007HiemKrdawuHJJFu
/KjHn8NXbfNrvVy/1o94UvIKPNZnWym5aYQgum86J8OR2Hhd0HwdNOEjhMh+
onOsNo+6ykU2PtI4DUcNn5yI46p6Xo8k9egV2mT+7oty1Jv3NVE/DU1RGwDZ
W+C72wXI3g/IRgMpdF1R37BbAWTk6LriRXYMJePUKXfQfbuFbKtTrpHdOTKy
jQjYOCwKUwy8IFwwL0vlPeceLiv4LNO/ElMWsj8XyA6alklkvyyQ/Ryj+ooc
OgCrxJlzRLZJyY94kO1NyYsGuem4jiF2T/T6WZ/NyXgl67U2gtBbz04JtBsL
QjbuvWALDZW9465wlb2YiJux2Hs8FvsA+D/3Fo3wezrnqJ8HNFBbJ8Sq/bwR
fvT1OHXi3fqqFJCtvigD2WbjdoOzQ0B2Fqi342Xw8BLg5Xeb0cmmvKnZqnhe
RtlKGAny9yXIRcdcFN8lDPI9Y7RCct3gJHV0TA3HuUJ/IxrkJiU3IH+yPb3X
BuWpoZB7J0683Wc5jOvtphl09zinFh2R79o2Xqp0oxDeoSZWya17aa49K04z
UaSLR5Noq5uTK5OBv3nHmZSFS9t89KHA8cbfA2uq356or94BcI/gE8wPXNVK
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
S7wPUuavYf+MPwh1+H9FwFZR\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"fe0cbe8a-7f32-499d-bac8-717bf6c042c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot x^2 + y^2 <= 6 and y > 0", 
   Typeset`newq$$ = "plot x^2 + y^2 <= 6 and y > 0", Typeset`chosen$$ = 
   "RegionPlot[Evaluate[x^2 + y^2 <= 6 && y > 0], {x, -6., 6.}, {y, -6., \
6.}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot x^2 + y^2 <= 6 and y > 0", 
                  Defer[
                   RegionPlot[
                    Evaluate[
                    
                    And[$CellContext`x^2 + $CellContext`y^2 <= 
                    6, $CellContext`y > 0]], {$CellContext`x, -6., 
                    6.}, {$CellContext`y, -6., 6.}]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"RegionPlot", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", "&&",
                     " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"RegionPlot", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", "&&",
                     " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"RegionPlot", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", 
                    "&&", " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot x^2 + y^2 <= 6 and y > 0", 
                    Defer[
                    RegionPlot[
                    Evaluate[
                    
                    And[$CellContext`x^2 + $CellContext`y^2 <= 
                    6, $CellContext`y > 0]], {$CellContext`x, -6., 
                    6.}, {$CellContext`y, -6., 6.}]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"RegionPlot", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", "&&",
                     " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"RegionPlot", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", "&&",
                     " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"RegionPlot", "[", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], " ", "+", " ", 
                    RowBox[{"y", "^", "2"}]}], " ", "<=", " ", "6"}], " ", 
                    "&&", " ", 
                    RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", "6."}], ",", " ", "6."}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[39]:=",ExpressionUUID->"caa007d8-7a68-4c3d-a018-832d8b06289d"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxdln9o1GUYwO/HFJI2xxpkQ92urXm4aZvtFMfy+8XZqCax1Ppj0dHKYmTU
KqFmUia2CBEDrWA6cbq/1uGhTEE7+H4LmdugkXB01cKkTsl+bO6cy7W8td1z
n2fwDsbL533e58f7PM/7fC/w4htbXvZ5PJ6/Zv/n1u5FBzcHo1634N6BG8lQ
3KpaXFsWrp9y4EcLIuFE06hyjazK5lop55WDYk+5S/zZMP7Rwz+Mfxj/ph/Y
XPEP49/0xzn8wfgz72Hahc0Ve/jFnpkHMy54fYbTTnHm3IRVLWzBK2R1zH14
+/6KIx0pn+vN7F+0XhC2YewXZTipTFzYRw5r3mVf5TByT+bvcgw5jJx9c0XO
fdiHkXNP5LDZX8h/+SR1d3CHR/NBfkozelesSK734+7YpIO8JlPHG8qPyaqM
HtyZ8TeuHMl/++uioWll6ko81AM75I97wOg1yDkHPfLJeZjzxGvWHTbzBqNP
XJwnn9jpk/tpPnhP8EnJhzLvAeY+mu/s+4DNlbpq/qU+yrwfuEfqqcy7hEek
H2yzPmaezDlDvqg3duhPmPeEHv2HHu8JPfIHk1/uoX2RtYcf0x73pJ/pQ/KP
Hepjxm+u2CMO7KFHn3AOPc6hx32Il/vSd8ixR7zIiRc5/YKcfkJuzhnz3ZJH
5PSTeR/k3AM5+cYO+eZ+p3bWn2163a/f15E91xqDi336vdP59Oyd1tRPNy1f
3qc/JG/f1frpvMjKyde/uZlzVpns63xADzn5S4hf/f70Slza1zBxcT5n366q
8Fafe6IyPTzj/GnV7bueSD6TdkqnL83qbbM6ehsPdFf63WMfff9OIv+qtfJ9
30up2gmVr7lZ9/OMlVQuXTbnb5tyYXDrP4MVs3nP8tLOA22Jqgnl1cffvDbY
mFbe2DpQ0v6Z3+5/b6K4PbfP2iv+bfyH/sj7qqnc424ZXu+NVk9ahZe+tOsH
5/u6WfadajlnX99Ycz4Uv6PvKip2HOw+tTvjxzH9wvjlPPU86Z/zt13rBVMP
mHrA1AOmHjD1hak7bNZ1idzf5f7MI+5Nn2CXPCAflVXnBf1u5hVukLy45OlE
feU90dNel/pdqFvV2bHX77YGfvsxGfrWog7Ui5X9Y6Jvo39O9G30h3LLqsO3
vO53yz3jp1rGrH5hGx4YW9oXOjftuLJa5vqrnHNMPZh8kV/ur/XJfp9hvr+w
zq0sky9Y53CWWx4YD7T/7dPfKzU9gYuhHp/7ylsFA0WLfreOXx4/2B2Zz+eS
C88tjD7hd/ccXbng8Bcj1qqumd6mDVP6vtauXvdarGFUObjpSk40EFdeHj89
XPRkXN/XmsmSp1PNo8oVH+7s2vH4lPLzEp/+bigU/zb+PTIvbOZFlcRvEz/5
ws4ZOeeg966cc9DrEbsOfsjvNzn3fxD73G9HpA8csy9g4sQfcWKPOPFPnPhf
K/NH8/WI5EO5TOaV8ibJn3K5zDdlW/I9Pw+NdaHUR7lE5qdyudRT+UGZt8oP
Sf2Va2ReKx+V/tH3xJxnzrS1rXg4fN8tqz+2YSy5bP67w5zhu5b3av5/g7tn
38vVBS2p5tv6O2BI9FzsHKk94zlcnHb2r7P7iwqm1C7yQ7LvHJJz1i7ZdziH
HnJW9v8Hsu4ARA==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], Opacity[
       0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwNw+VTWgEAAHB5jweP7g55dNuKICh2J4ogIoIiKSLCufTO9eacq89rN7eZ
H9edt+5yc/F/zN/dD/EnOv1AVlbW+mZwcySMxKKy0bhiLKEaT2omUrphkyHk
FrgIdAaByCSSWCRy0E/xiehmBtfK5HU7xL1OQViGjyoIcRUxoSEldeSUgeJ2
0Rx2FpHJILGYfhZ5JCj0mTlWLsPOY+YgOAKD7hFSivWYgJjVKYGlCMqJ4HOl
qIgUkMuAtIyQLwdiclCpAAkKYoESHFWi1Sp0Th5qwCsaU0NaDUTSkIu00LgW
o9dhyDoKUUWa0GONBqzHQC0xYoeNMJKDqs5FFarRSBgvCwONhejmIqi1GNNe
gjWYqKUmuKsUZpjpFjPXbOGUWbhMK8Nm5Vlt3Aobz1bONXbAHZ2wvZJXWcXL
rkZJa4CaWkBeB9bVgyw7s6ERrW6CmpohbQumpRWjb8O2tWMr7fzafEDSBQeG
xGIHy9HN7+kWI05cyIl39uIyaZfXRe9z0zJuvLtPYPBQ+j1UT7/Q5aXVF4B2
B3/QxzH76L5BEcVPDvjZ/gBrKMAWeemmYdg4bPAH2cIgJTjCdofwzpDAO0BT
NqDDEeDO/sJoDJTHZIo4MT6KVkRBVRwtixKS4xjlqEKVIGnHNTNXJa40IZ3B
T+7CGVJYWRqfmsDqJ3S6FMWdcb08UaFLYtRjqg8f6969r9lzM+/tq8pPnxt+
rLf9/NXx5WvTt+8tmiR5/mL2kQXh6VmBJgElxqDr13LOz4lOvq6afsM/ell8
/EX582Nl0giyvJW2ZRE3d070dIqzNs2/f6hkY4n6+2/3mRX2k2eWKzOShbPC
lZ3sS/PZU6ucpW3UxUnc7CnBnzX+9mXa6g7Ojd25Dx6bHh4ufbRBvXew+O6B
on8Xem7tzb+9r+A/qCa6vg==
          "]], 
         PolygonBox[{{141, 196, 56, 57}, {131, 187, 47, 9}, {125, 234, 97, 
          23}, {159, 230, 88, 27}, {189, 119, 1, 49}, {128, 203, 60, 24}, {
          186, 133, 49, 47}, {153, 192, 52, 74}, {146, 200, 59, 60}, {119, 
          168, 31, 1}, {157, 171, 32, 82}, {165, 226, 85, 86}, {156, 195, 55, 
          80}, {154, 193, 53, 76}, {155, 194, 54, 78}, {158, 197, 57, 83}, {
          123, 232, 93, 16}, {150, 188, 48, 68}, {163, 233, 95, 29}, {151, 
          190, 50, 70}, {148, 204, 62, 64}, {199, 198, 16, 56}, {126, 235, 
          100, 22}, {152, 191, 51, 72}, {232, 143, 28, 93}, {170, 229, 86, 
          30}, {209, 210, 66, 26}, {179, 211, 69, 34}, {204, 147, 63, 62}, {
          218, 154, 76, 75}, {182, 217, 75, 40}, {216, 153, 74, 73}, {212, 
          151, 70, 69}, {181, 215, 73, 38}, {205, 128, 24, 63}, {208, 129, 25,
           67}, {231, 160, 27, 91}, {230, 121, 9, 88}, {207, 149, 67, 66}, {
          184, 221, 79, 44}, {234, 164, 29, 97}, {167, 150, 68, 31}, {183, 
          219, 77, 42}, {214, 152, 72, 71}, {180, 213, 71, 36}, {122, 231, 91,
           17}, {138, 184, 44, 54}, {137, 183, 42, 53}, {139, 185, 46, 55}, {
          136, 182, 40, 52}, {202, 201, 23, 59}, {233, 124, 17, 95}, {162, 
          236, 103, 28}, {135, 181, 38, 51}, {134, 180, 36, 50}, {172, 158, 
          83, 32}, {220, 155, 78, 77}, {235, 145, 30, 100}, {132, 179, 34, 
          48}, {228, 227, 26, 85}, {222, 156, 80, 79}, {129, 206, 64, 25}, {
          224, 157, 82, 81}, {185, 223, 81, 46}, {236, 161, 22, 
          103}}]}]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2.], 
      LineBox[{132, 179, 211, 212, 151, 190, 134, 180, 213, 214, 152, 191, 
       135, 181, 215, 216, 153, 192, 136, 182, 217, 218, 154, 193, 137, 183, 
       219, 220, 155, 194, 138, 184, 221, 222, 156, 195, 139, 185, 223, 224, 
       157, 171, 140, 172, 158, 197, 141, 196, 199, 198, 225, 174, 123, 232, 
       143, 169, 162, 236, 161, 176, 126, 235, 145, 170, 229, 165, 226, 228, 
       227, 178, 130, 209, 210, 207, 149, 208, 129, 206, 148, 204, 147, 205, 
       128, 203, 146, 200, 202, 201, 127, 177, 125, 234, 164, 144, 163, 233, 
       124, 175, 122, 231, 160, 142, 159, 230, 121, 173, 120, 131, 187, 186, 
       133, 189, 119, 168, 166, 167, 150, 188, 132}]}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{-6., 6.}, {-6., 6.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898852036482565*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e94ae0d3-b77b-40ec-88f5-4f4d924f58b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "number of turkeys in turkey", 
   Typeset`newq$$ = "number of turkeys in turkey", Typeset`chosen$$ = 
   "Entity[\"Country\", \"Turkey\"][EntityProperty[\"Country\", \
\"LivestockPopulation\", {\"FAOLivestockType\" -> \"Turkeys\"}]]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "number of turkeys in turkey", 
                  Defer[
                   Entity["Country", "Turkey"][
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  InterpretationBox[
                   
                   DynamicModuleBox[{EntityFramework`Formatting`Private`open =
                     False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                   EntityProperty[
                   "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}],
                   SelectWithContents->True], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  InterpretationBox[
                   
                   DynamicModuleBox[{EntityFramework`Formatting`Private`open =
                     False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                   EntityProperty[
                   "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}],
                   SelectWithContents->True], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}], SelectWithContents -> 
                    True], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "number of turkeys in turkey", 
                    Defer[
                    Entity["Country", "Turkey"][
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}],
                    SelectWithContents->True], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}],
                    SelectWithContents->True], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Turkey\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    
                    TemplateBox[{"\"livestock population\""}, 
                    "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"FAOLivestockType\""}], "\":\"", 
                    "\"turkeys\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"LivestockPopulation\\\", {\\\"FAOLivestockType\\\" -> \
\\\"Turkeys\\\"}]\"", 
                    
                    TemplateBox[{"\"turkeys\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "LivestockPopulation", {
                    "FAOLivestockType" -> "Turkeys"}], SelectWithContents -> 
                    True], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[40]:=",ExpressionUUID->"54e1759b-7e55-4965-924c-7e1d035a3677"],

Cell[BoxData["4.798`3.*^6"], "Output",
 CellChangeTimes->{3.8988520742435007`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"0981b2d2-6099-42b2-a392-0b08a2b91fd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "population of China", Typeset`newq$$ = 
   "population of China", Typeset`chosen$$ = 
   "Entity[\"Country\", \"China\"][EntityProperty[\"Country\", \
\"Population\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "population of China", 
               Defer[
                Entity["Country", "China"][
                 EntityProperty["Country", "Population"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "population of China", 
                  Defer[
                   Entity["Country", "China"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "population of China", 
                   Defer[
                    Entity["Country", "China"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "population of China", 
                    Defer[
                    Entity["Country", "China"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[41]:=",ExpressionUUID->"f315f513-341c-49d3-9eab-5b6a95da87ef"],

Cell[BoxData[
 TemplateBox[{"1425861543", "\"people\"", "people", "\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898852103189349*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"df2e3afa-9b04-4707-b01a-4116e6b12f93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "population of the USA", Typeset`newq$$ = 
   "population of the USA", Typeset`chosen$$ = 
   "Entity[\"Country\", \"UnitedStates\"][EntityProperty[\"Country\", \
\"Population\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "population of the USA", 
                  Defer[
                   Entity["Country", "UnitedStates"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "population of the USA", 
                    Defer[
                    Entity["Country", "UnitedStates"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"United States\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[42]:=",ExpressionUUID->"665a8181-5b79-4bcc-9af2-29ce4444c932"],

Cell[BoxData[
 TemplateBox[{"336495769", "\"people\"", "people", "\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988521285290923`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c88fa97f-c725-4984-9a30-028a0aefe0f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "caffeine molecule", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Chemical\", \"Caffeine\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"caffeine\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {ChemicalData, "Caffeine"}, 
                 "SRString" :> $CellContext`GeneralData[
                  ChemicalData, "Caffeine", "SpokenName"]]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Chemical names and formulas", "scanner" -> "Data", 
     "id" -> "ChemicalNamesFormulas:ChemicalData", "position" -> "200", 
     "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"formula\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  ScriptBaselineShifts -> {0.5, 0.75}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"caffeine\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                  "\"IUPAC name\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"1,3,7-trimethylpurine-2,6-dione\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalNamesFormulas:ChemicalData__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Structure diagram", "scanner" -> "Data", "id" -> 
     "StructureDiagramPod:ChemicalData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Caffeine\"][EntityProperty[\"Chemical\", \
\"ColorStructureDiagram\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               CapForm["Round"], Null, {{
                 RGBColor[0.8, 0.202, 0.192], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"O\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {373.21, 
                  200.}]}, {
                 RGBColor[0.8, 0.202, 0.192], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"O\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  200., -100.}]}, {
                 RGBColor[0.292, 0.438, 0.889], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"N\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  373.21, -100.}]}, {
                 RGBColor[0.292, 0.438, 0.889], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"N\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {554.43, 
                  80.47}]}, {
                 RGBColor[0.292, 0.438, 0.889], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"N\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {286.6, 50.}]}, {
                 RGBColor[0.292, 0.438, 0.889], 
                 InsetBox[
                  FormBox[
                   StyleBox[
                   "\"N\"", FontSize -> Scaled[0.0822749198162344], 
                    FontWeight -> Plain, ScriptSizeMultipliers -> 0.8, 
                    ScriptMinSize -> 8, FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False], TraditionalForm], {
                  554.43, -80.47}]}}, {{{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.8, 0.202, 0.192], 
                  
                  LineBox[{{{378.21, 173.355}, {378.21, 150.}}, {{368.21, 
                   173.355}, {368.21, 150.}}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{{378.21, 150.}, {378.21, 100.}}, {{368.21, 
                   150.}, {368.21, 100.}}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.8, 0.202, 0.192], 
                  
                  LineBox[{{{220.57507765729275`, -82.34720689532752}, {
                   240.8, -70.67}}, {{
                   225.57507765729275`, -91.00720689532751}, {
                   245.8, -79.33}}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{{240.8, -70.67}, {284.1, -45.67}}, {{
                   245.8, -79.33}, {289.1, -54.33}}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{396.11620394203015`, -86.7747090403983}, {
                   416.51, -75.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{416.51, -75.}, {459.80999999999995`, -50.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{350.3031348502217, -86.77585431833604}, {
                   329.905, -75.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{329.905, -75.}, {286.6, -50.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  LineBox[{{373.21, -126.45}, {373.21, -150.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{373.21, -150.}, {373.21, -200.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{529.2532224519496, 72.36244967354583}, {
                   507.11999999999995`, 65.235}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{507.11999999999995`, 65.235}, {
                   459.80999999999995`, 50.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{569.9586494608319, 59.05823814062461}, {583.61, 
                   40.235}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{583.61, 40.235}, {612.7900000000001, 0.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{562.6472966342419, 105.61117212909686`}, {
                   569.9649999999999, 128.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{569.9649999999999, 128.}, {585.5, 175.53}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{309.5068651497783, 63.22414568166398}, {329.905, 
                   75.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{329.905, 75.}, {373.21, 100.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  LineBox[{{286.6, 23.549999999999997`}, {286.6, 0.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{286.6, 0.}, {286.6, -50.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{263.69379605796985`, 63.2252909596017}, {243.3, 
                   75.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{243.3, 75.}, {200., 100.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{529.2532224519496, -72.36244967354583}, {
                   507.11999999999995`, -65.235}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{507.11999999999995`, -65.235}, {
                   459.80999999999995`, -50.}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.292, 0.438, 0.889], 
                  
                  LineBox[{{{565.9351494608319, -56.140238140624604`}, {
                   579.5865, -37.31699999999999}}, {{
                   573.9821494608319, -61.976238140624616`}, {
                   587.6335, -43.153000000000006`}}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{{579.5865, -37.31699999999999}, {
                   608.7665000000001, 2.9180000000000064`}}, {{
                   587.6335, -43.153000000000006`}, {
                   616.8135000000001, -2.9180000000000064`}}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{{464.80999999999995`, 50.}, {464.80999999999995`, 
                   0.}}, {{454.80999999999995`, 50.}, {454.80999999999995`, 
                   0.}}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  
                  LineBox[{{{464.80999999999995`, 0.}, {
                   464.80999999999995`, -50.}}, {{454.80999999999995`, 0.}, {
                   454.80999999999995`, -50.}}}]}}, {{
                  AbsoluteThickness[0.55], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{459.80999999999995`, 50.}, {416.51, 75.}}], 
                  RGBColor[0.4, 0.4, 0.4], 
                  LineBox[{{416.51, 75.}, {373.21, 100.}}]}}}, Null}, {
              GridLines -> Dynamic[
                 Map[{{#, 
                    GrayLevel[0.7]}}& , 
                  MousePosition[{"Graphics", Graphics}, None]]], 
               Method -> {"GridLinesInFront" -> True}, ImageSize -> 144, 
               PlotRangeClipping -> False, ImagePadding -> 2, ImageSize -> 
               131.26722, 
               PlotRange -> {{175.025, 625.1737}, {-212., 222.5}}}], 
             ImageSizeAction -> "ShrinkToFit", ImageSize -> {440.}], 
            TraditionalForm]], "Output", {}, NumberPoint -> ".", 
          CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "4"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Skeletal structure", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Skeletal structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Skeletal structure"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All atoms", "input" -> 
           "StructureDiagramPod:ChemicalData__All atoms"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Lewis structure", "input" -> 
           "StructureDiagramPod:ChemicalData__Lewis structure"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Show bond information", "input" -> 
         "StructureDiagramPod:ChemicalData__Show bond information"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show graph properties", "input" -> 
         "StructureDiagramPod:ChemicalData__Show graph properties"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "StructureDiagramPod:ChemicalData__Step-by-step", "stepbystep" -> 
         "true", "buttonstyle" -> "StepByStepSolution"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "3D structure", "scanner" -> "Data", "id" -> 
     "3DStructure:ChemicalData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Caffeine\"][EntityProperty[\"Chemical\", \
\"MoleculePlot\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             Graphics3DBox[{
               Specularity[
                GrayLevel[1], 100], 
               EdgeForm[None], 
               AbsoluteThickness[3], 
               GraphicsComplex3DBox[CompressedData["
1:eJwtVAtQU1cQjZ9aREUGUBQtCPUTEcYiCCggiwoWU4QkkITwMX8SCEhiVIpi
5eMoVQSVUEWnIAqVgiBKDdRgt2AdtaCMKH4KClj/+AWsiNq+92535s59c9+9
u2d3z1ln2TqecjSLxVpOrTHU+lD5+lqYiy+8ZcfmN2fIsDw1wPLmAjW0DFEH
b3R46yh1IOSglydl/Hi0qJ4pVsiF+Hiuh0X1xHBg0fZYgm2tlG3RQNGKXdpH
I6th+liBlbsNFyxvUg7eS3CzXc2qXlcxVhw6P+ukfgU4bX/GbYiXkjguSrLz
YlGs8LsXPiUS+rkNjtuT3OD4BY5Pbh3A4vhfQyfarISy4DMDHxVR8GiEAm7k
ozCm7rf+eBdMoQ/EUUjiisj7L1UELwcwGy8fCS7ioYq2h8nA4CmTQaaRArzD
B4/Rea+XIoO3TwK96dSFvevI/Tc68NpmgizZFKBhOxpVoKOuHxVp0ZUq29BO
DXbPHpdplItIXlcMQLuxtNcAk+8+X6RusWM3acl+NYHULU1L6uavIHVJj4Di
g5TVGfDVT3Ti4UihTLdbo4GvaUBXdQSP1XpSrz4R0uHZs5VAp5OekwyXNp4r
cXjpDfPpH9Y6oGGmXtoEevoDvyFxS1WkPiMakveuRJI3T0PiZxqQwW9Sov3t
K//w10eCyZFKLCIRGRyn9bh/GlXojFCIOVfQZQ5aDqebrrfvqpbiwbT8uCJX
NaSyGxdV542HJ9bP3XIa+DjK7n191WQRbK/Jvr0iax4sKbwfNrxGjnXqZ2fs
3dWg3GYRUlawGAeaLOet/ShAj8G6hBo7EfRFmEt+uOMJ7BDOo7adMRgWNG6m
93QZhPDyTrFKbHHRgLr3eFs8Kj1kG0wzZJBQE1Y7PE2PFc0H+uw+j8BAadyM
yVdj0LNl1B/RqSrcnNfdmz06GPe8GMx1tolAp4Cx4+e06lDZXPvL05IQLMzK
Ka9KkmB5T0rayU4luhpNx3LZPpi2r7RR4xCFrIIre+dyk1GRu6NDsHM1PpxX
yTvwKgr1J/yCM0xazLjw2Xl7hyBs/zMyq+edGLuGtyaa65cirYrKDTwY/Hg9
7ckpMb7j3y8/9FSCSPcxyx2WSx60u3iKkeH7nDikVaIuFwHdnqP+aswIpBTQ
IgWGzxOCIJnme2Lo/3xJAvr5X9Jo0meJN9C0aj2ZAoc9y+p9jgfAvudbAhc7
rgXs/9HfbRYPGRzNQmR0/yCC6GGPHBmhsbnI+Gv0wGU0MSpVRP/hchQtqb+4
0YoLNAw/uQAKaR7cWAs30p7M9RgU4ugA46fDQhkMWJszTwhUkBxVMOI7FIeh
jta2nHspULUwKPnfTjmw7XotbG2WoX9bUHmHUgL77xi9dS/kML3od/ODWjFm
15gbM59rgTPs4NKSIoU7UysmXfjwFVacuGZhOKSG8NKtmzqnKsE/7O+7d808
7An4rvbnShW81Ijcimtk0D5jAdi/XINPt/Syts4XgtdK6YTqbi/YX5R5tqoY
QJA/Lk+9dDXodpt476yE8No2vzboCB8vc4xNzqO40OcdG6bwcYSmt1NOqy4C
sMVdEyUdftDxqb5wzFk+dN8/76n4no+Mznp0RG9dSlKPSb7I9GVIhUwfRArS
x7Ep2EDr6JaMzAunaDJPAvRY6rCwe7Ygmuh5mhKYvTWV6H2bHjDjC9+E3auQ
8UPFYfyIU6FT0L/w7Co3oucYLfDoH90G+Nbd2WlQGwj0uMkvVgEzR1yTMIH2
Z5mIZgOl4GYZwS3QIZkLCfieoqshSUDmSWQSxtE40tYRve/lwX9x9/DZ
                "], {
                 RGBColor[0.65, 0.7, 0.7], 
                 SphereBox[15, 24.], 
                 SphereBox[16, 24.], 
                 SphereBox[17, 24.], 
                 SphereBox[18, 24.], 
                 SphereBox[19, 24.], 
                 SphereBox[20, 24.], 
                 SphereBox[21, 24.], 
                 SphereBox[22, 24.], 
                 SphereBox[23, 24.], 
                 SphereBox[24, 24.], 
                 RGBColor[0.4, 0.4, 0.4], 
                 SphereBox[7, 34.], 
                 SphereBox[8, 34.], 
                 SphereBox[9, 34.], 
                 SphereBox[10, 34.], 
                 SphereBox[11, 34.], 
                 SphereBox[12, 34.], 
                 SphereBox[13, 34.], 
                 SphereBox[14, 34.], 
                 RGBColor[0.291989, 0.437977, 0.888609], 
                 SphereBox[3, 32.], 
                 SphereBox[4, 32.], 
                 SphereBox[5, 32.], 
                 SphereBox[6, 32.], 
                 RGBColor[0.800498, 0.201504, 0.192061], 
                 SphereBox[1, 31.], 
                 SphereBox[2, 31.], 
                 RGBColor[0.65, 0.7, 0.7], 
                 CylinderBox[{57, 15}, 15.], 
                 CylinderBox[{58, 16}, 15.], 
                 CylinderBox[{59, 17}, 15.], 
                 CylinderBox[{60, 18}, 15.], 
                 CylinderBox[{61, 19}, 15.], 
                 CylinderBox[{62, 20}, 15.], 
                 CylinderBox[{63, 21}, 15.], 
                 CylinderBox[{64, 22}, 15.], 
                 CylinderBox[{65, 23}, 15.], 
                 CylinderBox[{66, 24}, 15.], 
                 RGBColor[0.4, 0.4, 0.4], 
                 CylinderBox[{26, 29}, 8.], 
                 CylinderBox[{28, 30}, 8.], 
                 CylinderBox[{32, 35}, 8.], 
                 CylinderBox[{34, 36}, 8.], 
                 CylinderBox[{37, 8}, 15.], 
                 CylinderBox[{38, 10}, 15.], 
                 CylinderBox[{39, 12}, 15.], 
                 CylinderBox[{40, 7}, 15.], 
                 CylinderBox[{41, 11}, 15.], 
                 CylinderBox[{42, 13}, 15.], 
                 CylinderBox[{43, 9}, 15.], 
                 CylinderBox[{44, 10}, 15.], 
                 CylinderBox[{45, 14}, 15.], 
                 CylinderBox[{46, 8}, 15.], 
                 CylinderBox[{48, 51}, 8.], 
                 CylinderBox[{50, 52}, 8.], 
                 CylinderBox[{53, 54}, 8.], 
                 CylinderBox[{55, 56}, 8.], 
                 CylinderBox[{7, 9}, 15.], 
                 CylinderBox[{11, 57}, 15.], 
                 CylinderBox[{12, 58}, 15.], 
                 CylinderBox[{12, 59}, 15.], 
                 CylinderBox[{12, 60}, 15.], 
                 CylinderBox[{13, 61}, 15.], 
                 CylinderBox[{13, 62}, 15.], 
                 CylinderBox[{13, 63}, 15.], 
                 CylinderBox[{14, 64}, 15.], 
                 CylinderBox[{14, 65}, 15.], 
                 CylinderBox[{14, 66}, 15.], 
                 RGBColor[0.291989, 0.437977, 0.888609], 
                 CylinderBox[{3, 37}, 15.], 
                 CylinderBox[{3, 38}, 15.], 
                 CylinderBox[{3, 39}, 15.], 
                 CylinderBox[{4, 40}, 15.], 
                 CylinderBox[{4, 41}, 15.], 
                 CylinderBox[{4, 42}, 15.], 
                 CylinderBox[{5, 43}, 15.], 
                 CylinderBox[{5, 44}, 15.], 
                 CylinderBox[{5, 45}, 15.], 
                 CylinderBox[{6, 46}, 15.], 
                 CylinderBox[{47, 51}, 8.], 
                 CylinderBox[{49, 52}, 8.], 
                 RGBColor[0.800498, 0.201504, 0.192061], 
                 CylinderBox[{25, 29}, 8.], 
                 CylinderBox[{27, 30}, 8.], 
                 CylinderBox[{31, 35}, 8.], 
                 CylinderBox[{33, 36}, 8.]}]}, 
              Method -> {"ShrinkWrap" -> False, "ShrinkWrap" -> True}, {
              Method -> {"ShrinkWrap" -> True}, ImageSize -> 319, 
               ViewPoint -> {-1.2985340659744273`, 2.397324699208737, 
                1.9977596367099957`}, ImageSize -> 289.74800326355773`, Boxed -> 
               False, Lighting -> "Neutral"}, 
              Method -> {"ResolveAsTriangles" -> False}], ImageSizeAction -> 
             "ShrinkToFit", ImageSize -> 400], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show bonds only", "input" -> 
         "3DStructure:ChemicalData__Show bonds only"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show space filling model", "input" -> 
         "3DStructure:ChemicalData__Show space filling model"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Basic properties", "scanner" -> "Data", "id" -> 
     "Basic:ChemicalData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"SOLV-DB"}], "\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Caffeine\"], \
{EntityProperty[\"Chemical\", \"MolarMass\"], EntityProperty[\"Chemical\", \
\"Phase\"], EntityProperty[\"Chemical\", \"MeltingPoint\"], \
EntityProperty[\"Chemical\", \"MassDensity\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"molar mass\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["194.19", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "194.19", "SRString" -> "194.19"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"mol\""}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                   "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"phase\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"solid\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"MatterPhase", "Solid"}]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"melting point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["235.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "235.3", "SRString" -> "235.3"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.23", "SRString" -> "1.23"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                   "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step", "input" -> 
         "Basic:ChemicalData__Step-by-step", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "2"}, {
           XMLElement[
           "unit", {
            "short" -> "g/cm^3", "long" -> "grams per cubic centimeter"}, {}], 
           XMLElement[
           "unit", {
            "short" -> "g/mol", "long" -> "grams per mole"}, {}]}]}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Hydrophobicity and permeability properties", "scanner" -> 
     "Data", "id" -> "HydrophobicityPermeabilityProperties:ChemicalData", 
     "position" -> "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"experimental LogP hydrophobicity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.5", "SRString" -> "0.5"]]}]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "-0.5"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"predicted LogP hydrophobicity\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.23", "SRString" -> "0.23"]]}]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "-0.23"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"experimental LogS\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["0.97", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.97", "SRString" -> "0.97"]]}]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "-0.97"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"predicted LogS\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["1.25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.25", "SRString" -> "1.25"]]}]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "-1.25"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}, {
                 TagBox[
                  PaneBox[
                   TagBox[
                   "\"experimental Caco\[Hyphen]2 permeability\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    TagBox["4.41", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.41", "SRString" -> "4.41"]]}]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "-4.41"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Basic drug properties", "scanner" -> "Data", "id" -> 
     "DrugNamesProperties:ChemicalData", "position" -> "700", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"approval status\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"approved\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"small molecule\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"drug categories\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"anorexigenic agent\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"central nervous system stimulant\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"phosphodiesterase inhibitor\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"dosage forms\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"oral: capsule\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: elixir\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: liquid\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "\"oral: pill\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: solution\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: solution / drops\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"rectal: suppository\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: suspension\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: syrup\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: tablet\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"oral: tablet, extended release\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "DrugNamesProperties:ChemicalData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Solid properties (at STP)", "scanner" -> "Data", "id" -> 
     "SolidProperties:ChemicalData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CRCHandbook"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"mass density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.23", "SRString" -> "1.23"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                   "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"vapor pressure\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["150", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "150", "SRString" -> "150"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mmHg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"at \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["80", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "80", "SRString" -> "80"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"refractive index\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.494", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.494", "SRString" -> "1.494"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "1.494"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Thermodynamic properties", "scanner" -> "Data", "id" -> 
     "Thermodynamics:ChemicalData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n    ", 
         XMLElement["microsource", {}, {"ElementData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n    ", 
         XMLElement["datasource", {}, {"WebElements"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"specific heat of fusion\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.11", "SRString" -> "0.11"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"kJ\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"g\""}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"at STP\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "Thermodynamics:ChemicalData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "kJ/g", "long" -> "kilojoules per gram"}, {}]}]}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Chemical identifiers", "scanner" -> "Data", "id" -> 
     "ChemicalIdentifiers:ChemicalData", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"PubChem"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Chemical\", \"Caffeine\"], \
{EntityProperty[\"Chemical\", \"CASRegistryNumber\"], \
EntityProperty[\"Chemical\", \"BeilsteinNumber\"], \
EntityProperty[\"Chemical\", \"PubChemCompoundID\"], \
EntityProperty[\"Chemical\", \"PubChemSubstanceID\"], \
EntityProperty[\"Chemical\", \"SMILES\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"CAS registry number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"58-08-2\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"Beilstein number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"17705\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem compound ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"2519\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"PubChem substance ID\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\"148854\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"SMILES identifier\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ChemicalIdentifiers:ChemicalData__More"}, {}]}]}], Typeset`pod11$$ =
    XMLElement[
   "pod", {"title" -> "NFPA label", "scanner" -> "Data", "id" -> 
     "NFPALabel:ChemicalData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Caffeine\"][EntityProperty[\"Chemical\", \
\"NFPALabel\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{
                InsetBox[
                 GraphicsBox[{
                   EdgeForm[{
                    Thickness[0.009], 
                    GrayLevel[0]}], 
                   RGBColor[1, 0.87, 0], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{
                    0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, 0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.9, 0.25, 0.1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {
                    0, -1}], {{{-0.7071067811865475, -0.7071067811865475}, {
                    0.7071067811865475, -0.7071067811865475}}, {0, 0}}], 
                   RGBColor[0.1, 0.37, 0.9], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{-0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, \
-0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[1], 
                   GeometricTransformationBox[
                    GeometricTransformationBox[
                    RectangleBox[{0, 0}], {0, -1}], {{{0.7071067811865475, 
                    0.7071067811865475}, {-0.7071067811865475, 
                    0.7071067811865475}}, {0, 0}}], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    NCache[{2^Rational[-1, 2], -0.05}, {
                    0.7071067811865475, -0.05}]], 
                   GrayLevel[1], 
                   InsetBox[
                    FormBox["0", TraditionalForm], {0, 0.6821067811865474}], 
                   InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    NCache[{-2^
                    Rational[-1, 2], -0.05}, {-0.7071067811865475, -0.05}]], 
                   GrayLevel[0], 
                   InsetBox[
                    FormBox["\" \"", TraditionalForm], {
                    0, -0.7571067811865475}]}, 
                  PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, ImageSize -> 167, 
                  BaseStyle -> {
                   FontFamily -> "Times", FontSize -> Scaled[0.24]}, 
                  BaselinePosition -> Center], {87.675, -87.675}, 
                 ImageScaled[{0.5, 0.5}], {167, 167.}]}}, {}}, {
             ImageSize -> {40}, ImageSize -> {187.35, 187.35}, 
              PlotRangePadding -> {6, 5}, ContentSelectable -> True}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Table", "input" -> 
         "NFPALabel:ChemicalData__Table"}, {}]}]}], Typeset`pod12$$ = 
   XMLElement[
   "pod", {"title" -> "Safety properties", "scanner" -> "Data", "id" -> 
     "SafetyProperties:ChemicalData", "position" -> "1200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Chemical\", \"Caffeine\"][EntityProperty[\"Chemical\", \
\"AutoignitionPoint\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"autoignition point\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["600", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "600", "SRString" -> "600"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "SafetyProperties:ChemicalData__More"}, {}]}]}], Typeset`pod13$$ = 
   XMLElement[
   "pod", {"title" -> "Toxicity properties", "scanner" -> "Data", "id" -> 
     "ToxicityProperties:ChemicalData", "position" -> "1300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"ChemicalData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"MacmillansChemicalAndPhysicalData"}], 
         "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"lethal dosage\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["192", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "192", "SRString" -> "192"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"mg\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"kg\""}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], LineIndent -> 0, 
                    ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"oral dose for rats\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ToxicityProperties:ChemicalData__More"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {
            "short" -> "mg/kg", "long" -> 
             "milligrams per kilogram"}, {}]}]}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "2"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ChemicalDataSourceInformationNotes.html", "text" -> "Chemical data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ElementDataSourceInformationNotes.html", "text" -> "Element data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "13", "datatypes" -> "Chemical,Element", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.718", "parsetiming" -> "0.094", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP93712cf80bg0iba265400004g182giibhc75650", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa93812cf80bg0iba265400003010399fde4c0dcb7794153569472399936", "version" -> 
    "2.6", "inputstring" -> "caffeine molecule"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 20, 22, 29, 40.6046695`9.36115085997767}, "Line" -> 
    44, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {
   "3DStructure:ChemicalData", "3D structure", 1, 1, "Content"}, 
   Typeset`open$$ = True, Typeset`newq$$ = "caffeine molecule"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{700., {3186., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"ec93eb03-fb0c-472b-882c-22378d40f891"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Molecule",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                14.670575741384177`, {0., 14.670575741384177`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                14.670575741384177`, {0., 14.670575741384177`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               AbsoluteThickness[1.], {
                RGBColor[0.800498, 0.201504, 0.192061], 
                
                LineBox[{{{3.79209869902163, 1.8272037753821582`}, {
                 3.79209869902163, 1.4136018876910792`}}, {{
                 3.6721013208147957`, 1.8272037753821582`}, {
                 3.6721013208147957`, 1.4136018876910792`}}}], 
                
                LineBox[{{{2.096436010722458, -0.8750399779748617}, {
                 2.466217970792783, -0.6615399855113666}}, {{
                 2.156436023111233, -0.9789599918791183}, {
                 2.526217983181558, -0.7654599994156234}}}]}, {
                RGBColor[0.4, 0.4, 0.4], 
                
                LineBox[{{{3.79209869902163, 1.4136018876910792`}, {
                 3.79209869902163, 1.}}, {{3.6721013208147957`, 
                 1.4136018876910792`}, {3.6721013208147957`, 1.}}}], 
                
                LineBox[{{{2.466217970792783, -0.6615399855113666}, {
                 2.8359999308631076`, -0.4480399930478716}}, {{
                 2.526217983181558, -0.7654599994156234}, {
                 2.8959999432518826`, -0.5519600069521284}}}], 
                
                LineBox[{{4.2265861101150515`, -0.7145}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{3.2375621880030865`, -0.714503071058709}, {
                 2.865999937057495, -0.5}}], 
                
                LineBox[{{3.732100009918213, -1.6079976403861511`}, {
                 3.732100009918213, -2.}}], 
                
                LineBox[{{5.003619333775719, 0.6305873020970953}, {
                 4.598100185394287, 0.5}}], 
                
                LineBox[{{5.899504924166603, 0.31492393235529803`}, {
                 6.127900123596191, 0.}}], 
                
                LineBox[{{5.7332019761533894`, 1.3826536160625205`}, {
                 5.855000019073486, 1.7553000450134277`}}], 
                
                LineBox[{{3.3605377589726215`, 0.785496928941291}, {
                 3.732100009918213, 1.}}], 
                
                LineBox[{{2.865999937057495, -0.10799764038615117`}, {
                 2.865999937057495, -0.5}}], 
                LineBox[{{2.371513960302062, 0.7855000073300253}, {2., 1.}}], 
                
                LineBox[{{5.003619333775719, -0.6305873020970953}, {
                 4.598100185394287, -0.5}}], 
                
                LineBox[{{{5.899504924166603, -0.31492393235529803`}, {
                 6.127900123596191, 0.}}, {{
                 5.773010113643557, -0.2849500489356847}, {
                 5.972050587141657, -0.010502036155947234`}}}], 
                
                LineBox[{{{4.598100185394287, 0.5}, {
                 4.598100185394287, -0.5}}, {{4.7180975636011215`, 0.4}, {
                 4.7180975636011215`, -0.4}}}], 
                
                LineBox[{{4.598100185394287, 0.5}, {3.732100009918213, 
                 1.}}]}, {
                RGBColor[0.291989, 0.437977, 0.888609], 
                
                LineBox[{{3.8550720348358154`, -0.929}, {
                 4.2265861101150515`, -0.7145}}], 
                
                LineBox[{{3.6091244389486774`, -0.929006142117418}, {
                 3.2375621880030865`, -0.714503071058709}}], 
                
                LineBox[{{3.732100009918213, -1.2159952807723022`}, {
                 3.732100009918213, -1.6079976403861511`}}], 
                
                LineBox[{{5.40913848215715, 0.7611746041941907}, {
                 5.003619333775719, 0.6305873020970953}}], 
                
                LineBox[{{5.671109724737016, 0.6298478647105961}, {
                 5.899504924166603, 0.31492393235529803`}}], 
                
                LineBox[{{5.611403933233293, 1.010007187111613}, {
                 5.7332019761533894`, 1.3826536160625205`}}], 
                
                LineBox[{{2.9889755080270306`, 0.570993857882582}, {
                 3.3605377589726215`, 0.785496928941291}}], 
                
                LineBox[{{2.865999937057495, 0.28400471922769766`}, {
                 2.865999937057495, -0.10799764038615117`}}], 
                
                LineBox[{{2.7430279206041246`, 0.5710000146600508}, {
                 2.371513960302062, 0.7855000073300253}}], 
                
                LineBox[{{5.40913848215715, -0.7611746041941907}, {
                 5.003619333775719, -0.6305873020970953}}], 
                
                LineBox[{{{5.671109724737016, -0.6298478647105961}, {
                 5.899504924166603, -0.31492393235529803`}}, {{
                 5.573969640145457, -0.5593980617154222}, {
                 5.773010113643557, -0.2849500489356847}}}]}}, {
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, 2.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "1"], 
                Annotation[#, 1, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"O\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FrontFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], BackFaceColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], GraphicsColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061], FontColor -> 
                    RGBColor[0.800498, 0.201504, 0.192061]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2., -1.}, Center, {0.5999868910341732, 
                  0.36999191613774013`}], "2"], 
                Annotation[#, 2, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {3.732100009918213, -1.}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "3"], 
                Annotation[#, 3, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, 0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "4"], 
                Annotation[#, 4, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {2.865999937057495, 0.5}, Center, {
                  0.5999868910341732, 0.36999191613774013`}], "5"], 
                Annotation[#, 5, "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 InsetBox[
                  PaneBox[
                   StyleBox[
                    StyleBox[
                    "\"N\"", StripOnInput -> False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], StripOnInput -> 
                    False, LineColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FrontFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], BackFaceColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], GraphicsColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609], FontColor -> 
                    RGBColor[0.291989, 0.437977, 0.888609]], Alignment -> 
                   Center, ImageSize -> Full, ImageSizeAction -> 
                   "ResizeToFit"], {5.544300079345703, -0.8047000169754028}, 
                  Center, {0.5999868910341732, 0.36999191613774013`}], "6"], 
                Annotation[#, 6, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, 0.5}, 0.2]}, "7"], 
                Annotation[#, 7, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{4.598100185394287, -0.5}, 0.2]}, "8"], 
                Annotation[#, 8, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, 1.}, 0.2]}, "9"], 
                Annotation[#, 9, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2.865999937057495, -0.5}, 0.2]}, "10"], 
                Annotation[#, 10, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{6.127900123596191, 0.}, 0.2]}, "11"], 
                Annotation[#, 11, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{3.732100009918213, -2.}, 0.2]}, "12"], 
                Annotation[#, 12, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{5.855000019073486, 1.7553000450134277`}, 0.2]}, 
                 "13"], Annotation[#, 13, "Tooltip"]& ], 
               TagBox[
                TooltipBox[{
                  Opacity[0], 
                  EdgeForm[None], 
                  DiskBox[{2., 1.}, 0.2]}, "14"], 
                Annotation[#, 14, "Tooltip"]& ]}}, DisplayFunction -> 
             Identity, Frame -> True, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> None, ImageSize -> Dynamic[{
                UpTo[
                8.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])], 
                UpTo[
                4.1 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Formula: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    SubscriptBox["\"C\"", "8"], 
                    SubscriptBox["\"H\"", "10"], 
                    SubscriptBox["\"N\"", "4"], 
                    SubscriptBox["\"O\"", "2"]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Atoms: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["24", "SummaryItem"]}], "\"  \"", 
                  RowBox[{
                    TagBox["\"Bonds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["25", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"SMILES: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "\"O=c1n(C([H])([H])[H])c(=O)n(C([H])([H])[H])c2nc([H])n(C([\
H])([H])[H])c21\"", BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, ImageSize -> {{1, 300}, Automatic}, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InChIKey: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"RYYVLZVUVIJVGH-UHFFFAOYSA-N\"", "SummaryItem"]}]}},
              AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Molecule[{
   "O", "O", "N", "N", "N", "N", "C", "C", "C", "C", "C", "C", "C", "C", "H", 
    "H", "H", "H", "H", "H", "H", "H", "H", "H"}, {
    Bond[{1, 9}, "Double"], 
    Bond[{2, 10}, "Double"], 
    Bond[{3, 8}, "Aromatic"], 
    Bond[{3, 10}, "Aromatic"], 
    Bond[{3, 12}, "Single"], 
    Bond[{4, 7}, "Aromatic"], 
    Bond[{4, 11}, "Aromatic"], 
    Bond[{4, 13}, "Single"], 
    Bond[{5, 9}, "Aromatic"], 
    Bond[{5, 10}, "Aromatic"], 
    Bond[{5, 14}, "Single"], 
    Bond[{6, 8}, "Aromatic"], 
    Bond[{6, 11}, "Aromatic"], 
    Bond[{7, 8}, "Aromatic"], 
    Bond[{7, 9}, "Aromatic"], 
    Bond[{11, 15}, "Single"], 
    Bond[{12, 16}, "Single"], 
    Bond[{12, 17}, "Single"], 
    Bond[{12, 18}, "Single"], 
    Bond[{13, 19}, "Single"], 
    Bond[{13, 20}, "Single"], 
    Bond[{13, 21}, "Single"], 
    Bond[{14, 22}, "Single"], 
    Bond[{14, 23}, "Single"], 
    Bond[{14, 24}, "Single"]}, {AtomCoordinates -> QuantityArray[
      StructuredArray`StructuredData[{24, 3}, {CompressedData["
1:eJwBUQKu/SFib1JlAgAAABgAAAADAAAA3Lqbpzrkzj+XkA96Nqv3vzlnRGlv
8P4/f4y5awn5BsBXfa62Yn/hv5zEILByaPO/AKlNnNzv7b/Ik6RrJt/jP6Rw
PQrXo/W/HVpkO99PAEDbxMn9DkXhPwzSjEXT2eU/z9VW7C+79b86kst/SL/w
vzHw3Hu45Ng/elioNc079j+TOgFNhA37P+M2GsBbIPK/aam8HeG06T8cfGEy
VTDCP65kx0YgXtU/G2SSkbOw2T+nRBK9jGLrP+B/K9mxEem/mLwBZr6Dt78w
Ub01sFXrvwH76NSVz+4/LiEf9GxW/L/s+gW7YdvUv9Fcp5GWyue/iUFg5dAi
A0DRs1n1udr3PyC1iZP7Hc6/n82qz9VW9r+xUGuad5z1PxWMSuoENATARbbz
/dT4BkAuUigLX1+rP/JBz2bV5/w/FR3J5T8kAsCBJsKGp1cAwPIk6ZrJN+8/
4L4OnDOiCkDmP6Tfvg4AQMCy0qQUdM+/R3L5D+k3AsCYu5aQD3r+P7gehetR
OALAgZVDi2zn+b9kIxCv6xflP7FyaJHtfArAH9ydtdsu5L/gLZCg+DEAQFwg
QfFjzAbAMQisHFpkCEBgB84ZUdrvv8iYu5aQD/s/+DHmriXkAkDtEtVbA1vN
PyqpE9BE2AVAbcX+sntyDkDYEvJBz2biP/YoXI/C9fw/jblrCfmgAMAhH/Rs
Vv0AwL8OnDOiNABAc2iR7Xw/CsB6xyk6ksv7v1sqb0c4Leo/D3o2qz7XAMAA
kX77OvAHwONrzywJUOA/+3wsEQ==
        "], "Angstroms", {{1}, {2}}}]], 
    AtomDiagramCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQQO4bd5HRigbFT6w35UeTCfIVZXDMR3kDrw0h5I
J0x8ywaVf2CPJg9Sn1CSIoQsj8xHNx/dPLD8jyYJmLvQ3XsAiBVas8VB/Iat
on/s0dwP4jfc/CuFrH/BlKccyPph5jUc+soC4j/oyRBEll/w7ZgkiP8gg+En
2Px9BmD3LNh7kAms7ye/KNi/M7X+g+QdHlZBxFWm/wDbfzvjuz3E/C9g2pbr
N4hWyFt81x4AjFdTAQ==
     "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8988521546439266`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"f58bdfd3-0676-4963-be87-adf609967776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "toast + orange juice", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "EntityGroup[{EntityInstance[Entity[\"Food\", \
{EntityProperty[\"Food\", \"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\
\", \"Toast\"]}], EntityProperty[\"Food\", \"AddedFoodTypes\"] -> \
ContainsExactly[{}], EntityProperty[\"Food\", \"CompleteItem\"] -> True}], \
Quantity[1, \"Items\"]], EntityInstance[Entity[\"Food\", \
{EntityProperty[\"Food\", \"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\
\", \"OrangeJuice\"]}], EntityProperty[\"Food\", \"AddedFoodTypes\"] -> \
ContainsExactly[{}]}], Quantity[1, \"Servings\"]]}]"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Data", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FormBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"bread\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center], 
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"amount\"", {
                    GrayLevel[0.6]}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    StyleBox["\"type\"", {
                    GrayLevel[0.6]}], "\"toasted\""}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                TraditionalForm], "+", 
               FormBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    "\"orange juice\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], {LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    StyleBox["\"amount\"", {
                    GrayLevel[0.6]}], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", #& ], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"c\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"cup\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                TraditionalForm]}], HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Total nutrition facts", "scanner" -> "ExpandedFood", 
     "id" -> "NutritionLabelMultiplePlus", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"serving sizes (total: \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["298", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "298", "SRString" -> "298"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\")\""}, 
                    "RowDefault"], FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}, {
                    StyleBox[
                    TemplateBox[{"\"       \"", "\"bread\"", "\":  \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, "RowDefault"],
                     FontFamily -> "Roboto", FontSize -> 11, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    TemplateBox[{"\"       \"", "\"orange juice\"", "\":  \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", #& ], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"c\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" (\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\")\""}, 
                    "RowDefault"], FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxDividers -> {"Rows" -> {None, None, None, 
                    Directive[
                    Thickness[10], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[1]}}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                  "Grid"]}, {
                 TagBox[
                  GridBox[{{
                    ItemBox[
                    TemplateBox[{"  ", "\"  \"", 
                    StyleBox[
                    "\"total calories\"", FontFamily -> "Roboto", FontSize -> 
                    11, Bold, StripOnInput -> False], 
                    StyleBox[
                    "259", FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}, "RowWithSeparators"], 
                    StripOnInput -> False], 
                    ItemBox[
                    TemplateBox[{"  ", "\"  \"", 
                    StyleBox[
                    "\"fat calories\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    "20", FontFamily -> "Roboto", FontSize -> 11, 
                    StripOnInput -> False]}, "RowWithSeparators"], 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {Left, Right}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, 
                    Directive[
                    Thickness[5], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.5]}}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                  "Grid"]}, {
                 ItemBox[
                  TagBox[
                   GridBox[{{
                    ItemBox[
                    StyleBox[
                    TemplateBox[{"\"% daily \"", 
                    
                    TemplateBox[{"\"value\"", "\"*\""}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"total fat\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"saturated fat\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["443", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "443", "SRString" -> "443"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"trans fat\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], FontFamily -> "Roboto", 
                    FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    FormBox[
                    TagBox["\"\"", 
                    $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]],
                     TraditionalForm], FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], Alignment -> Right, 
                    StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"cholesterol\"", FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"sodium\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["270", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "270", "SRString" -> "270"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"total carbohydrates\"", FontFamily -> "Roboto", 
                    FontSize -> 11, Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["53", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "53", "SRString" -> "53"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"dietary fiber\"", FontFamily -> "Roboto", FontSize -> 
                    10, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15", "SRString" -> "15"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"     \"", 
                    StyleBox[
                    "\"sugar\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23", "SRString" -> "23"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    FormBox[
                    TagBox["\"\"", 
                    $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]],
                     TraditionalForm], FontFamily -> "Roboto", FontSize -> 11,
                     Bold, StripOnInput -> False], Alignment -> Right, 
                    StripOnInput -> False]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\"", 
                    StyleBox[
                    "\"protein\"", FontFamily -> "Roboto", FontSize -> 11, 
                    Bold, StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    ItemBox[
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, Bold, StripOnInput -> False], 
                    Alignment -> Right, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {Left, Right}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, {
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.5]]}, 
                    Directive[
                    Thickness[5], 
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}, GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.72], 
                    Scaled[0.28]}}, 
                    GridBoxSpacings -> {"Columns" -> {0}, "Rows" -> {1}}], 
                   "Grid"], Alignment -> Center, StripOnInput -> False]}, {
                 ItemBox[
                  TagBox[
                   GridBox[{{
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin A\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6", "SRString" -> "6"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin C\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"calcium\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"iron\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin D\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin E\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"thiamin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["24", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "24", "SRString" -> "24"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"riboflavin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"niacin\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"vitamin B6\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"folate\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "27", "SRString" -> "27"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"phosphorus\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}, {
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"magnesium\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"], 
                    TemplateBox[{"  ", "\"  \"", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"zinc\"", FontFamily -> "Roboto", FontSize -> 10, 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], FontFamily -> 
                    "Roboto", FontSize -> 11, StripOnInput -> False], 
                    "\"\[ThinSpace]\""}, "RowWithSeparators"]}}, 
                    GridBoxAlignment -> {"Columns" -> {Left, Left}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Rows" -> {None, {
                    Directive[
                    GrayLevel[0.5], 
                    Opacity[0.5]]}}}, GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.6]}}, GridBoxSpacings -> {"Columns" -> {{0}}}], 
                   "Grid"], Alignment -> Center, StripOnInput -> False]}, {
                 PaneBox[
                  StyleBox[
                  "\"*percent daily values are based on a 2000 calorie \
diet\"", FontFamily -> "Roboto", FontSize -> 12, StripOnInput -> False], 
                  ImageSize -> {Full, 15}, ImageSizeAction -> 
                  "ShrinkToFit"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> Directive[
                    GrayLevel[0.6]]}}, GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.5]}}}, 
               GridBoxSpacings -> {"Rows" -> {1, {None}, None}}], "Column"], 
             FontColor -> GrayLevel[0.2], StripOnInput -> False], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Individual nutrition facts", "input" -> 
         "NutritionLabelMultiplePlus__Individual nutrition facts"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Calories", "scanner" -> "ExpandedFood", "id" -> 
     "CaloriesPlus", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total calories\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["144", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "144", "SRString" -> "144"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["115", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "115", "SRString" -> "115"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6", "SRString" -> "6"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["109", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "109", "SRString" -> "109"]], 
                    TagBox["122", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "122", "SRString" -> "122"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["109", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "109", "SRString" -> "109"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["122", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "122", "SRString" -> "122"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["259", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "259", "SRString" -> "259"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["13", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "13", "SRString" -> "13"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"fat calories\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.2", "SRString" -> "3.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20", "SRString" -> "20"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Cal\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.965], {{7, 7}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "CaloriesPlus__More"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Carbohydrates", "scanner" -> "ExpandedFood", "id" -> 
     "CarbohydratesPlus", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total carbohydrates\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["26", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "26", "SRString" -> "26"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    TagBox["31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "31", "SRString" -> "31"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "31", "SRString" -> "31"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["27", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "27", "SRString" -> "27"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], 
                    TagBox["29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "29", "SRString" -> "29"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["25", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "25", "SRString" -> "25"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "29", "SRString" -> "29"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["53", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "53", "SRString" -> "53"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"dietary fiber\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.8", "SRString" -> "2.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["661", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "661", "SRString" -> "661"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    TagBox["744", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "744", "SRString" -> "744"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["744", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "744", "SRString" -> "744"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.5", "SRString" -> "3.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"sugar\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.4", "SRString" -> "2.4"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["0.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.29", "SRString" -> "0.29"]], 
                    TagBox["4.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.4", "SRString" -> "4.4"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["0.29", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.29", "SRString" -> "0.29"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["4.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.4", "SRString" -> "4.4"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["23", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "23", "SRString" -> "23"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.965], {{7, 7}, {2, 5}} -> 
                   GrayLevel[0.965], {{10, 10}, {2, 5}} -> GrayLevel[0.965]}},
                GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "CarbohydratesPlus__More"}, {}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Fats and fatty acids", "scanner" -> "ExpandedFood", 
     "id" -> "FatsPlus", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"total fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.1", "SRString" -> "2.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    TagBox["3.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.3", "SRString" -> "3.3"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["3.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.3", "SRString" -> "3.3"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["368", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "368", "SRString" -> "368"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["149", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "149", "SRString" -> "149"]], 
                    TagBox["670", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "670", "SRString" -> "670"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["149", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "149", "SRString" -> "149"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["670", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "670", "SRString" -> "670"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.5", "SRString" -> "2.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"saturated fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["400", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "400", "SRString" -> "400"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["182", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "182", "SRString" -> "182"]], 
                    TagBox["808", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "808", "SRString" -> "808"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["182", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "182", "SRString" -> "182"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["808", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "808", "SRString" -> "808"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["43", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "43", "SRString" -> "43"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], 
                    TagBox["72", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "72", "SRString" -> "72"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["17", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17", "SRString" -> "17"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["72", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "72", "SRString" -> "72"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["443", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "443", "SRString" -> "443"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"trans fat\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.965], {{7, 7}, {2, 5}} -> 
                   GrayLevel[0.965], {{9, 9}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "FatsPlus__More"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Protein and amino acids", "scanner" -> "ExpandedFood", 
     "id" -> "ProteinPlus", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"protein\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.5", "SRString" -> "5.5"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["4.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.3", "SRString" -> "4.3"]], 
                    TagBox["8.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.1", "SRString" -> "8.1"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["4.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.3", "SRString" -> "4.3"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["8.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.1", "SRString" -> "8.1"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.2", "SRString" -> "7.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "ProteinPlus__More"}, {}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Vitamins", "scanner" -> "ExpandedFood", "id" -> 
     "VitaminsPlus", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"vitamin A\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8.2", "SRString" -> "8.2"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["116", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "116", "SRString" -> "116"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["116", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "116", "SRString" -> "116"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["267", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "267", "SRString" -> "267"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["104", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "104", "SRString" -> "104"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["275", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "275", "SRString" -> "275"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"IU\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"vitamin C\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["93", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "93", "SRString" -> "93"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "75", "SRString" -> "75"]], 
                    TagBox["124", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "124", "SRString" -> "124"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["75", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "75", "SRString" -> "75"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["124", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "124", "SRString" -> "124"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["93", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "93", "SRString" -> "93"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["155", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "155", "SRString" -> "155"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.965], {{7, 7}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "VitaminsPlus__More"}, {}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Minerals", "scanner" -> "ExpandedFood", "id" -> 
     "MineralsPlus", "position" -> "800", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"calcium\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["46", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "46", "SRString" -> "46"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], 
                    TagBox["83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "83", "SRString" -> "83"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["18", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "18", "SRString" -> "18"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "83", "SRString" -> "83"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["160", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160", "SRString" -> "160"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["16", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "16", "SRString" -> "16"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    TagBox["498", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "498", "SRString" -> "498"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["498", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "498", "SRString" -> "498"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["206", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "206", "SRString" -> "206"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["21", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "21", "SRString" -> "21"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                  "\"iron\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10", "SRString" -> "10"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    TagBox["2.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.3", "SRString" -> "2.3"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["2.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.3", "SRString" -> "2.3"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["340", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "340", "SRString" -> "340"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["496", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "496", "SRString" -> "496"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Mu]g\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> 
                   GrayLevel[0.965], {{7, 7}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "MineralsPlus__More"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Sterols", "scanner" -> "ExpandedFood", "id" -> 
     "SterolsPlus", "position" -> "900", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"mean value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"% daily value\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"range\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "\"cholesterol\"", 
                   BaseStyle -> {{
                    Alignment -> {{Center, Center, Center, Center}}, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{"0", 
                    TagBox["28", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28", "SRString" -> "28"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], "0", 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["28", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "28", "SRString" -> "28"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False]}, {
                "\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{"0", "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"g\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox["0", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0", "SRString" -> "0"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.7", "SRString" -> "1.7"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mg\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                   Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0, ZeroWidthTimes -> False], 
                 FormBox[
                  TagBox["\"\"", 
                   $CellContext`TagBoxWrapper["Missing" -> "NotAvailable"]], 
                  TraditionalForm]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Center, Center, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {
                    Center, Center, Center, Center}, {1, 2} -> {
                    Center, Center, Center, Center}, {1, 3} -> {
                    Center, Center, Center, Center}, {1, 4} -> {
                    Center, Center, Center, Center}, {1, 5} -> {
                    Center, Center, Center, Center}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{4, 4}, {2, 5}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {7.2, 6.8, 4.6, 4.15, 8.25}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "SterolsPlus__More"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Physical properties", "scanner" -> "ExpandedFood", 
     "id" -> "PhysicalPropertiesPlusCalories", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"ExpandedFoodData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"mass\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["248", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "248", "SRString" -> "248"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["298", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "298", "SRString" -> "298"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"grams\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"serving volume\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["263", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "263", "SRString" -> "263"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["237", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "237", "SRString" -> "237"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"total\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["500", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "500", "SRString" -> "500"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mL\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliliters\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"serving density\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox["\"bread, toasted\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.19", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.19", "SRString" -> "0.19"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"grams per cubic centimeter\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {"\[SpanFromAbove]", 
                 StyleBox["\"orange juice\"", 
                  GrayLevel[0.3], StripOnInput -> False], 
                 StyleBox[
                  TagBox[
                   RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.1", "SRString" -> "1.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"g\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"cm\"", "3"]}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"grams per cubic centimeter\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{3, 3}, {2, 3}} -> 
                   GrayLevel[0.965], {{6, 6}, {2, 3}} -> GrayLevel[0.965]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {"Columns" -> {8, Automatic, 12}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "orange juice", "template" -> 
        "Assuming orange juice${separator}Use ${desc} or ${pulldown} instead",
         "count" -> "5", "pulldown" -> "true", "pulldownlabel" -> "more >>", 
        "pulldownlength" -> "3", "default" -> 
        "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> {\"OrangeJuice\
\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "OrangeJuice", "desc" -> "orange juice", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"OrangeJuice\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CapriSun25PercentLessSugarOrangeJuicePouch", "desc" -> 
          "Capri Sun 25% less sugar orange juice pouch", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"CapriSun25PercentLessSugarOrangeJuicePouch\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CapriSunSunriseOrangeWakeUpJuicePouch", "desc" -> 
          "Capri Sun sunrise orange wake up juice pouch", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"CapriSunSunriseOrangeWakeUpJuicePouch\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "OrangeJuiceDrink", "desc" -> "orange juice drink", 
          "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"OrangeJuiceDrink\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "TropicanaTrop50NoPulpLessSugarOrangeJuice", "desc" -> 
          "Tropicana Trop50 no pulp orange juice", "input" -> 
          "{\"DPClash\", \"ExpandedFoodE\", \"orange juice\"} -> \
{\"TropicanaTrop50NoPulpLessSugarOrangeJuice\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "Attribute", "word" -> "Bread", "template" -> 
        "Assuming any type of bread, toasted${separator}Use ${desc} or \
${pulldown} instead", "count" -> "18", "pulldown" -> "true", "pulldownlabel" -> 
        "more >>", "pulldownlength" -> "16", "default" -> 
        "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"a\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "{a, {Bread, {Food:Variety -> Food:Toasted}}}", "desc" -> 
          "any type of bread, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"a\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Egg, Food:Variety -> Food:Toasted}}",
           "desc" -> "bread, egg, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Egg\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Rye, Food:Variety -> Food:Toasted}}",
           "desc" -> "bread, rye, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Rye\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Toasted, Food:Variety -> \
Food:Wheat}}", "desc" -> "bread, toasted, wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:Wheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:OatBran, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, oat bran, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:OatBran\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Oatmeal, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, oatmeal, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Oatmeal\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:RiceBran, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, rice bran, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:RiceBran\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Toasted, Food:Variety -> \
Food:WheatGerm}}", "desc" -> "bread, toasted, wheat germ", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WheatGerm\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:MultiGrain, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, multi grain, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:MultiGrain\", \
\"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Pumpernickel, Food:Variety -> \
Food:Toasted}}", "desc" -> "bread, pumpernickel, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \
\"Food:Pumpernickel\", \"Food:Variety\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:Enriched, Food:Variety -> \
Food:Raisin, Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, enriched, raisin, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:Enriched\", \
\"Food:Variety\" -> \"Food:Raisin\", \"Food:Variety\" -> \
\"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:NutritionalSupplement -> Food:ProteinIncludesGluten, \
Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, protein (includes gluten), toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:NutritionalSupplement\" -> \
\"Food:ProteinIncludesGluten\", \"Food:Variety\" -> \"Food:Toasted\"}}}"}, \
{}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CalorieContent -> Food:ReducedCalorie, Food:Variety \
-> Food:OatBran, Food:Variety -> Food:Toasted}}", "desc" -> 
          "bread, oat bran, reduced calorie, toasted", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CalorieContent\" -> \
\"Food:ReducedCalorie\", \"Food:Variety\" -> \"Food:OatBran\", \"Food:Variety\
\" -> \"Food:Toasted\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:White}}", "desc" -> 
          "bread, commercially prepared, toasted, white", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:White\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:Variety -> Food:French, Food:Variety -> \
Food:Sourdough, Food:Variety -> Food:Toasted, Food:Variety -> Food:Vienna}}", 
          "desc" -> "bread, french, sourdough, toasted, vienna", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:Variety\" -> \"Food:French\", \
\"Food:Variety\" -> \"Food:Sourdough\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:Vienna\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:PreparedFromRecipe, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:WholeWheat}}", "desc" -> 
          "bread, prepared from recipe, toasted, whole-wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:PreparedFromRecipe\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WholeWheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:Variety -> Food:Toasted, Food:Variety -> Food:WholeWheat}}", "desc" -> 
          "bread, commercially prepared, toasted, whole-wheat", "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:WholeWheat\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{Bread, {Food:CookingMethod -> Food:CommerciallyPrepared, \
Food:SodiumContent -> Food:LowSodiumNoSalt, Food:Variety -> Food:Toasted, \
Food:Variety -> Food:White}}", "desc" -> 
          "bread, commercially prepared, low sodium no salt, toasted, white", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", {\"Bread\", {\"Food:Variety\" -> \
\"Food:Toasted\"}}} -> {{\"Bread\", {\"Food:CookingMethod\" -> \
\"Food:CommerciallyPrepared\", \"Food:SodiumContent\" -> \
\"Food:LowSodiumNoSalt\", \"Food:Variety\" -> \"Food:Toasted\", \
\"Food:Variety\" -> \"Food:White\"}}}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "Attribute", "word" -> "OrangeJuice", "template" -> 
        "Assuming any type of orange juice${separator}Use ${desc} or \
${pulldown} instead", "count" -> "8", "pulldown" -> "true", "pulldownlabel" -> 
        "more >>", "pulldownlength" -> "6", "default" -> 
        "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"a\", \
\"OrangeJuice\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "OrangeJuice", "desc" -> "any type of orange juice", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"a\", \
\"OrangeJuice\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "{OrangeJuice, {Food:FoodConstitution -> Food:Fresh}}", 
          "desc" -> "orange juice, fresh", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:Fresh\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:Packaging -> Food:Canned, Food:SugarContent -> \
Food:Unsweetened}}", "desc" -> "orange juice, canned, unsweetened", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:Packaging\" -> \"Food:Canned\", \"Food:SugarContent\" -> \
\"Food:Unsweetened\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:ServingType -> Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \"Food:ServingType\" \
-> \"Food:Chilled\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> \
Food:FromFrozenConcentrate, Food:SugarContent -> Food:Unsweetened}}", "desc" -> 
          "orange juice, from frozen concentrate, unsweetened", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromFrozenConcentrate\", \
\"Food:SugarContent\" -> \"Food:Unsweetened\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:MadeFrom -> Food:FromConcentrate, \
Food:NutritionalSupplement -> Food:Calcium, Food:ProcessingType -> \
Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate, with calcium", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:MadeFrom\" -> \"Food:FromConcentrate\", \
\"Food:NutritionalSupplement\" -> \"Food:Calcium\", \"Food:ProcessingType\" \
-> \"Food:Chilled\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:ServingType -> Food:Chilled, Food:SubBrandName -> Food:California}}", 
          "desc" -> "orange juice, California, chilled, from concentrate", 
          "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \"Food:ServingType\" \
-> \"Food:Chilled\", \"Food:SubBrandName\" -> \"Food:California\"}}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> 
          "{OrangeJuice, {Food:FoodConstitution -> Food:FromConcentrate, \
Food:NutritionalSupplement -> Food:Calcium, Food:NutritionalSupplement -> \
Food:VitaminD, Food:ServingType -> Food:Chilled}}", "desc" -> 
          "orange juice, chilled, from concentrate, with calcium, with \
vitamin D", "input" -> 
          "{\"EAC\", \"ExpandedFood\", \"OrangeJuice\"} -> {{\"OrangeJuice\", \
{\"Food:FoodConstitution\" -> \"Food:FromConcentrate\", \
\"Food:NutritionalSupplement\" -> \"Food:Calcium\", \
\"Food:NutritionalSupplement\" -> \"Food:VitaminD\", \"Food:ServingType\" -> \
\"Food:Chilled\"}}}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
ExpandedFoodDataSourceInformationNotes.html", "text" -> 
        "Expanded food data"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "10", "datatypes" -> "ExpandedFood,Math", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.1360000000000001", "parsetiming" -> 
    "0.224", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP80922a9fg7f6gh57g1g0000163hh9a85ghcb2i1", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa81022a9fg7f6gh57g1g00005a180601693898018884920455003441207", "version" -> 
    "2.6", "inputstring" -> "toast + orange juice"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 20, 22, 31, 13.3630063`8.878479126858517}, "Line" -> 
    45, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "EntityGroup[{EntityInstance[Entity[\"Food\", {EntityProperty[\"Food\", \
\"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\", \"Toast\"]}], \
EntityProperty[\"Food\", \"AddedFoodTypes\"] -> ContainsExactly[{}], \
EntityProperty[\"Food\", \"CompleteItem\"] -> True}], Quantity[1, \
\"Items\"]], EntityInstance[Entity[\"Food\", {EntityProperty[\"Food\", \
\"FoodType\"] -> ContainsExactly[{Entity[\"FoodType\", \"OrangeJuice\"]}], \
EntityProperty[\"Food\", \"AddedFoodTypes\"] -> ContainsExactly[{}]}], \
Quantity[1, \"Servings\"]]}]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "toast + orange juice"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{760.6220703125, {3594., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"4ee01308-a722-4f2a-8d4a-01dbd2d94ea1"],

Cell[BoxData[
 RowBox[{"EntityGroup", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"EntityInstance", "[", 
     RowBox[{
      InterpretationBox[
       DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
        TemplateBox[{
          TemplateBox[{"\"food\""}, "ImplicitEntityBase"], 
          GridBox[{{
             TemplateBox[{
               TemplateBox[{"\"food type\"", 
                 RowBox[{"EntityProperty", "[", 
                   RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                 "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
                "GrayEntityFrame"], "\":\"", 
               RowBox[{
                 StyleBox["\"exactly\"", "ImplicitEntityContains"], 
                 TemplateBox[{
                   TemplateBox[{"\"toast\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"Toast\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"Toast\\\"]\"", 
                    "\"food type\""}, "Entity"]}, 
                  "EntityContainsSequence"]}]}, "ImplicitEntityInfoRow"]}, {
             TemplateBox[{
               TemplateBox[{"\"added food types\"", 
                 RowBox[{"EntityProperty", "[", 
                   RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                 "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
                "GrayEntityFrame"], "\":\"", 
               RowBox[{
                 StyleBox["\"exactly\"", "ImplicitEntityContains"], 
                 StyleBox["\"none\"", FontColor -> GrayLevel[0.5]]}]}, 
              "ImplicitEntityInfoRow"]}, {
             TemplateBox[{
               TemplateBox[{"\"complete item\"", 
                 RowBox[{"EntityProperty", "[", 
                   RowBox[{"\"Food\"", ",", "\"CompleteItem\""}], "]"}], 
                 "\"EntityProperty[\\\"Food\\\", \\\"CompleteItem\\\"]\""}, 
                "GrayEntityFrame"], "\":\"", "True"}, 
              "ImplicitEntityInfoRow"]}}, DefaultBaseStyle -> 
           "GeneralizedEntityInfoGrid", 
           GridBoxAlignment -> {"Columns" -> {{Left}}}], 
          Dynamic[EntityFramework`Formatting`Private`open], 
          "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"Toast\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] -> \
ContainsExactly[{}], EntityProperty[\\\"Food\\\", \\\"CompleteItem\\\"] -> \
True}]\""},
         "ImplicitEntityToggle"]],
       Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
            Entity["FoodType", "Toast"]}], 
         EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}], 
         EntityProperty["Food", "CompleteItem"] -> True}],
       SelectWithContents->True], ",", 
      TemplateBox[{"1", "\"item\"", "item", "\"Items\""},
       "Quantity"]}], "]"}], ",", 
    RowBox[{"EntityInstance", "[", 
     RowBox[{
      InterpretationBox[
       DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
        TemplateBox[{
          TemplateBox[{"\"food\""}, "ImplicitEntityBase"], 
          GridBox[{{
             TemplateBox[{
               TemplateBox[{"\"food type\"", 
                 RowBox[{"EntityProperty", "[", 
                   RowBox[{"\"Food\"", ",", "\"FoodType\""}], "]"}], 
                 "\"EntityProperty[\\\"Food\\\", \\\"FoodType\\\"]\""}, 
                "GrayEntityFrame"], "\":\"", 
               RowBox[{
                 StyleBox["\"exactly\"", "ImplicitEntityContains"], 
                 TemplateBox[{
                   TemplateBox[{"\"orange juice\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"FoodType\"", ",", "\"OrangeJuice\""}], "]"}], 
                    "\"Entity[\\\"FoodType\\\", \\\"OrangeJuice\\\"]\"", 
                    "\"food type\""}, "Entity"]}, 
                  "EntityContainsSequence"]}]}, "ImplicitEntityInfoRow"]}, {
             TemplateBox[{
               TemplateBox[{"\"added food types\"", 
                 RowBox[{"EntityProperty", "[", 
                   RowBox[{"\"Food\"", ",", "\"AddedFoodTypes\""}], "]"}], 
                 "\"EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"]\""}, 
                "GrayEntityFrame"], "\":\"", 
               RowBox[{
                 StyleBox["\"exactly\"", "ImplicitEntityContains"], 
                 StyleBox["\"none\"", FontColor -> GrayLevel[0.5]]}]}, 
              "ImplicitEntityInfoRow"]}}, DefaultBaseStyle -> 
           "GeneralizedEntityInfoGrid", 
           GridBoxAlignment -> {"Columns" -> {{Left}}}], 
          Dynamic[EntityFramework`Formatting`Private`open], 
          "\"Entity[\\\"Food\\\", {EntityProperty[\\\"Food\\\", \
\\\"FoodType\\\"] -> ContainsExactly[{Entity[\\\"FoodType\\\", \
\\\"OrangeJuice\\\"]}], EntityProperty[\\\"Food\\\", \\\"AddedFoodTypes\\\"] \
-> ContainsExactly[{}]}]\""},
         "ImplicitEntityToggle"]],
       Entity["Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
            Entity["FoodType", "OrangeJuice"]}], 
         EntityProperty["Food", "AddedFoodTypes"] -> ContainsExactly[{}]}],
       SelectWithContents->True], ",", 
      TemplateBox[{"1", "\"serving\"", "serving", "\"Servings\""},
       "Quantity"]}], "]"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.898852260811225*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b1261510-ecc5-420c-845b-accc1564c933"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "(GDP of China) / (population of China)", 
   Typeset`newq$$ = "(GDP of China) / (population of China)", 
   Typeset`chosen$$ = 
   "Entity[\"Country\", \"China\"][EntityProperty[\"Country\", \"GDP\", \
{\"CurrencyUnit\" -> \"CurrentUSDollar\"}]]/Entity[\"Country\", \
\"China\"][EntityProperty[\"Country\", \"Population\"]]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "(GDP of China) / (population of China)", 
                  Defer[Entity["Country", "China"][
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}]]/
                   Entity["Country", "China"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}],
                    SelectWithContents->True], "]"}], "/", 
                  RowBox[{
                   TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{
                   TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}],
                    SelectWithContents->True], "]"}], "/", 
                  RowBox[{
                   TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}], 
                    SelectWithContents -> True], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "(GDP of China) / (population of China)", 
                    Defer[Entity["Country", "China"][
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}]]/
                    Entity["Country", "China"][
                    EntityProperty["Country", "Population"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}],
                    SelectWithContents->True], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]},
                    "ImplicitEntityPropertyToggle"]],
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}],
                    SelectWithContents->True], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    InterpretationBox[
                    
                    DynamicModuleBox[{
                    EntityFramework`Formatting`Private`open = False}, 
                    TemplateBox[{
                    TemplateBox[{"\"GDP\""}, "ImplicitEntityPropertyBase"], 
                    GridBox[{{
                    TemplateBox[{
                    RowBox[{" ", "\"CurrencyUnit\""}], "\":\"", 
                    "\"nominal\""}, "ImplicitEntityInfoRow"]}}, 
                    DefaultBaseStyle -> "GeneralizedEntityInfoGrid", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    Dynamic[EntityFramework`Formatting`Private`open], 
                    "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\", \
{\\\"CurrencyUnit\\\" -> \\\"CurrentUSDollar\\\"}]\"", 
                    
                    TemplateBox[{"\"nominal\""}, 
                    "ImplicitEntityPropertySequence"]}, 
                    "ImplicitEntityPropertyToggle"]], 
                    EntityProperty[
                    "Country", "GDP", {"CurrencyUnit" -> "CurrentUSDollar"}], 
                    SelectWithContents -> True], "]"}], "/", 
                    RowBox[{
                    TemplateBox[{"\"China\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \
\\\"Population\\\"]\""}, "EntityProperty"], "]"}]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[45]:=",ExpressionUUID->"bc663f0e-fe74-472b-871d-7d924b0b1f91"],

Cell[BoxData[
 TemplateBox[{"12437.436672889773`", 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
   RowBox[{
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}], 
   "US dollars per person year", 
   FractionBox["\"USDollars\"", 
    RowBox[{"\"People\"", " ", "\"Years\""}]]},
  "QuantityPrefixUnit"]], "Output",
 CellChangeTimes->{3.8988523308504424`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"52463f1c-71c8-4d24-8a3f-513b1a892435"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "30-year mortgage of 250000 at 5%", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "MonthlyPayments", "Monthly payments", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Formula", "title" -> 
     "Input information"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   StyleBox["\"fixed rate mortgage\"", 
                    GrayLevel[0], StripOnInput -> False], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                 TagBox[
                  PaneBox[
                  "\"loan period\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"loan amount\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["250000.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "250000.00", "SRString" -> 
                    "250000.00"]]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Singapore dollars\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"annual percentage rate\"", 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, 
                  "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}, 
                 "ItemsIndexed" -> {{{1, 1}, {1, 2}} -> 
                   GrayLevel[0.9568627450980393]}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "MonthlyPayments", "numsubpods" -> "1",
      "position" -> "200", "primary" -> "true", "scanner" -> "Formula", 
     "title" -> "Monthly payments"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"monthly payment\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"effective interest rate\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    InterpretationBox[
                    "\"5.116\"", 5.116189788173364, AutoDelete -> True], 
                    NumberForm[#, {10, 3}]& ], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "MortgageTotals", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "Formula", "title" -> 
     "Mortgage totals"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"principal paid\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["250000", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"total interest paid\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["233139", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"total payments\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["483139", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False], 
                GraphicsBox[{
                  EdgeForm[
                   RGBColor[0.59, 0.615, 0.71]], 
                  RGBColor[
                   NCache[{
                    Rational[254, 255], 
                    Rational[248, 255], 
                    Rational[236, 255]}, {0.996078431372549, 
                    0.9725490196078431, 0.9254901960784314}]], 
                  DiskBox[{0, 0}, 1, {0, 3.2512275533932087`}], 
                  Hue[0.67, 0.6, 0.6, 0.15], 
                  
                  DiskBox[{0, 0}, 1, {3.2512275533932087`, 
                   6.283185307179586}], 
                  RGBColor[0.59, 0.615, 0.71], 
                  PointBox[{-0.05479000005125369, 0.9984978997946784}], 
                  PointBox[{0.05479000005125356, -0.9984978997946784}], 
                  LineBox[
                   NCache[{{-0.05479000005125369, 0.9984978997946784}, {
                    Rational[-21, 20], 0.9984978997946784}, {-1.15, 
                    0.9984978997946784}}, {{-0.05479000005125369, 
                    0.9984978997946784}, {-1.05, 0.9984978997946784}, {-1.15, 
                    0.9984978997946784}}]], 
                  LineBox[
                   NCache[{{0.05479000005125356, -0.9984978997946784}, {
                    Rational[21, 20], -0.9984978997946784}, {
                    1.15, -0.9984978997946784}}, {{
                    0.05479000005125356, -0.9984978997946784}, {
                    1.05, -0.9984978997946784}, {
                    1.15, -0.9984978997946784}}]], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    StyleBox["\"principal\"", 
                    Opacity[1], FontFamily -> "Roboto", LineBreakWithin -> 
                    False, StripOnInput -> False], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                   NCache[{
                    Rational[-6, 5], 0.9984978997946784}, {-1.2, 
                    0.9984978997946784}], {1, 0}], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    StyleBox["\"interest\"", 
                    Opacity[1], FontFamily -> "Roboto", LineBreakWithin -> 
                    False, StripOnInput -> False], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm], 
                   NCache[{
                    Rational[6, 5], -0.9984978997946784}, {
                    1.2, -0.9984978997946784}], {-1, 0}]}, 
                 ImageSize -> {250, 100}, {
                 Background -> None, ImageSize -> {Automatic, 120}, 
                  LabelStyle -> Automatic, RotateLabel -> False, 
                  AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                  False, AxesLabel -> None, AxesOrigin -> Automatic, 
                  AxesStyle -> {}, Background -> None, BaselinePosition -> 
                  Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                  ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                  Automatic, DisplayFunction :> $DisplayFunction, 
                  Epilog -> {}, FormatType :> TraditionalForm, Frame -> False,
                   FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
                  Automatic, FrameTicksStyle -> {}, GridLines -> None, 
                  GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                  All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
                  LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, 
                  PlotRange -> Automatic, PlotRangeClipping -> False, 
                  PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                  PreserveImageOptions -> Automatic, Prolog -> {}, 
                  RotateLabel -> True, Ticks -> Automatic, 
                  TicksStyle -> {}}]}}, AutoDelete -> False, 
              GridBoxItemSize -> {"Columns" -> {{Automatic}}}, RowsEqual -> 
              True], "Grid"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Payments and balances", "scanner" -> "Formula", "id" -> 
     "PaymentsAndBalances", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[{{1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, 1342.05, \
1342.05, 1342.05}, {1041.67, 1040.42, 1039.16, 1037.9, 1036.63, 1035.36, \
1034.08, 1032.8, 1031.51, 1030.21, 1028.91, 1027.61, 1026.3, 1024.98, \
1023.66, 1022.33, 1021., 1019.66, 1018.32, 1016.97, 1015.62, 1014.26, \
1012.89, 1011.52, 1010.14, 1008.76, 1007.37, 1005.98, 1004.58, 1003.17, \
1001.76, 1000.34, 998.917, 997.487, 996.052, 994.61, 993.162, 991.709, \
990.249, 988.783, 987.311, 985.833, 984.349, 982.858, 981.362, 979.859, \
978.35, 976.834, 975.312, 973.784, 972.25, 970.709, 969.162, 967.608, \
966.048, 964.481, 962.908, 961.328, 959.742, 958.149, 956.549, 954.943, \
953.33, 951.71, 950.084, 948.451, 946.811, 945.164, 943.51, 941.85, 940.182, \
938.508, 936.826, 935.138, 933.442, 931.74, 930.03, 928.313, 926.589, \
924.858, 923.12, 921.374, 919.622, 917.861, 916.094, 914.319, 912.537, \
910.747, 908.95, 907.145, 905.333, 903.514, 901.686, 899.852, 898.009, \
896.159, 894.301, 892.435, 890.562, 888.681, 886.792, 884.895, 882.99, \
881.077, 879.156, 877.228, 875.291, 873.346, 871.393, 869.432, 867.463, \
865.485, 863.5, 861.506, 859.503, 857.493, 855.474, 853.446, 851.41, 849.366, \
847.313, 845.252, 843.182, 841.103, 839.016, 836.92, 834.815, 832.702, \
830.579, 828.448, 826.308, 824.159, 822.001, 819.834, 817.658, 815.474, \
813.279, 811.076, 808.864, 806.642, 804.411, 802.171, 799.922, 797.663, \
795.394, 793.117, 790.829, 788.533, 786.226, 783.91, 781.585, 779.249, \
776.904, 774.55, 772.185, 769.811, 767.426, 765.032, 762.628, 760.213, \
757.789, 755.355, 752.91, 750.455, 747.99, 745.515, 743.029, 740.534, \
738.027, 735.51, 732.983, 730.445, 727.897, 725.338, 722.768, 720.188, \
717.597, 714.995, 712.382, 709.759, 707.124, 704.479, 701.822, 699.154, \
696.476, 693.786, 691.085, 688.372, 685.648, 682.913, 680.167, 677.409, \
674.64, 671.859, 669.066, 666.262, 663.447, 660.619, 657.78, 654.929, \
652.066, 649.191, 646.304, 643.405, 640.494, 637.57, 634.635, 631.688, \
628.728, 625.755, 622.771, 619.774, 616.764, 613.742, 610.708, 607.66, 604.6, \
601.528, 598.442, 595.344, 592.233, 589.108, 585.971, 582.821, 579.657, \
576.481, 573.291, 570.087, 566.871, 563.641, 560.398, 557.141, 553.87, \
550.586, 547.288, 543.977, 540.652, 537.312, 533.959, 530.592, 527.211, \
523.816, 520.407, 516.983, 513.545, 510.093, 506.627, 503.146, 499.65, \
496.14, 492.616, 489.076, 485.522, 481.953, 478.37, 474.771, 471.157, \
467.528, 463.885, 460.226, 456.551, 452.862, 449.157, 445.436, 441.7, \
437.949, 434.182, 430.399, 426.6, 422.786, 418.956, 415.11, 411.247, 407.369, \
403.474, 399.564, 395.637, 391.693, 387.733, 383.757, 379.764, 375.755, \
371.728, 367.685, 363.625, 359.549, 355.455, 351.344, 347.216, 343.071, \
338.909, 334.729, 330.532, 326.317, 322.085, 317.835, 313.567, 309.282, \
304.979, 300.657, 296.318, 291.961, 287.586, 283.192, 278.78, 274.35, \
269.901, 265.434, 260.948, 256.443, 251.92, 247.378, 242.816, 238.236, \
233.637, 229.019, 224.381, 219.724, 215.048, 210.352, 205.636, 200.901, \
196.147, 191.372, 186.577, 181.763, 176.928, 172.074, 167.199, 162.304, \
157.388, 152.452, 147.495, 142.518, 137.52, 132.501, 127.461, 122.4, 117.318, \
112.215, 107.091, 101.945, 96.7781, 91.5895, 86.3792, 81.1472, 75.8935, \
70.6178, 65.3201, 60.0004, 54.6585, 49.2944, 43.9079, 38.4989, 33.0674, \
27.6133, 22.1365, 16.6368, 11.1143, 5.56869}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1: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
56Ot89HW+ej/nY/+PyTEj/Y=
                 "], {{{}, {}, {}, {
                    EdgeForm[], 
                    Hue[0.67, 0.6, 0.6, 0.15], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV4EAQUBeCNUpAUJCUGCArSCCidUgKCCgYdwgaM3NiIURsw2OiO0TW6
Nrq7RtugKCEoiglK/Hw8/OfhvN7vnqBOoS17pwoICAgkWPTgnOI8KZzlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdZJLYxla2sJlNbGQD61nHWtaQ
yGpWsZIVLGcZS1nCYhaxkAQWMJ95zGUOs5nFTGYwnWlMZQqTmcRE4oljAuOJ
ZRxjGUMM0YxmFCMZwXCiGMZQhjCYSCIYRDhhDGQA/elHX/oQyrMD9aInIQTT
g+58Tje60oXOdKIjHWhPO9ryGZ/yCR/ThtZ8xId8QCta8j4taE4z3qMpTWhM
IxryLg2oTz3qUofa1KImNahONaryDm9ThcpU4i0qUoHylKMsZShNKd6kJCV4
g9cpTjFeoyhFKEwQhShIAfLzKvnISx5yk4ucvEIOsvMy2chKFjKTiYy8RAbS
8yIvkI60pCE1qQgkgCf+6TGP+J//eMgD/uUf/uYv/uQP7vM7v3GPX/mFu9zh
Z25zi5vc4Cd+5Do/8D3XuMp3fMs3fM1XfMkXXOEyl7jIBc4/2wBSOMsZTnOK
k5zgOMc4yhEOc4iDHGA/+9jLHnazi53sYDvJJLGNrWxhM5vYyAbWs461rCGR
1axiJStYzjKWsoTFLGIhCSxgPvOYyxxmM4uZzGA605jKFCYziYnEE8cExhPL
OMYyhhiiGc0oRjKC4UQxjKEMYTCRRDCIcMIYyAD604++9CGU3vSiJyGBz3f6
KcYWxRU=
                    "]]}]}, {}, {}, {}, {
                    EdgeForm[], 
                    RGBColor[
                    NCache[{
                    Rational[254, 255], 
                    Rational[248, 255], 
                    Rational[236, 255]}, {0.996078431372549, 
                    0.9725490196078431, 0.9254901960784314}]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1mPbEAYUBuA327Zt27Ztt2zbtm3btq1t2djClt3aXX24r3N+wMGTqHH7
yu0CBwQEBOKC5jdNK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjI
IAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgi
FrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEO
c4SjHOM4JzjJKU5zhrOc4zwXuMglLnOF3/mDP7nKNa5zg5vc4jZ3uMs97vOA
hzziMU/4i795yjOe84J/+JeXvOI1b3jLO97zgY984jNf+Mo3/uM7AeYrEIEJ
QlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlC
UpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJR
ilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa
0ZwWtPyx/7SiNW1oy48D0Z4OdKQTnelCV7rRnR70pBe96UNf+tGfAQxkEIMZ
wlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nC
UpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJR
jnGcE5zkFKc5w1nOcT7wr/vc0h61oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA6
1ahKFSpTiYpUoDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZ
yEoWMpOJjGQgPelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGI
ShQiE4mIRCA84QhLGEITipCEIDjBCEoQAhMo0K9H+l35j2985Quf+cRHPvCe
d7zlDa95xUv+5R9e8JxnPOVv/uIJj3nEQx5wn3vc5Q63ucVNbnCda1zlT/7g
d65wmUtc/JEBOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42
trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSm
MoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rS
hc50oiMdaE872tKG1rTiN1rSguY0oylNaEwjGtKA+tSjLnWoTS1qUoPqVKMq
VahMJSpSgfKUoyxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKSg+xkIytZ
yEwmMpKB9KQjLWlITSpSkoLkJCMpSUhMIhKSgPjEIy5xiE0sYhKD6EQjKlGI
TCQiEoHwhCMsYQhNKEISguAEIyhBAn5Gm58Z+n+s1lkh
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    NCache[
                    Rational[217, 255], 0.8509803921568627], 
                    NCache[
                    Rational[176, 255], 0.6901960784313725], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]]], 
                    LineBox[CompressedData["
1:eJwl1PefCAQYBvC7M8/enLOOc8Y5jjOOs7fD4azjrDvjojIbQsgoo4yytwYN
iqIoe5RZZBaVPaKFjEi+9+mH7/P+Ac/necNShyQODgwICHhKpN8gMpCRTGQm
C1kJJhvZyUFOcpGbPOQlH/kpQEEKUZgihFCUUIpRnBKUpBRhlKYM4ZQlgnKU
pwIViaQSUVSmCtFUpRoxVKcGNalFLLWpQxx1qUd9GtCQRjSmCU1pRnNa0JJW
xNOaNrQlgXa0pwOJdKQTnelCV5LoRneS6UFPetGbPqSQSl/60Z8BpKX3w0AG
8TTP8CyDGcJQhjGcETzH87zAi4zkJUYxmjG8zFjGMZ5XmMBEJjGZV3mNKUxl
GtN5nTeYwUxmMZs3eYs5zGUe81nAQhaxmCUsZRnLWcFK3uYd3uU9VrGa9/mA
D/mINazlYz5hHev5lM/YwEY+5ws2sZkv+YotbGUb29nBTnaxmz3s5Wu+YR/7
OcBBDnGYb/mOIxzle45xnBOc5BSn+YEfOcNZfuJnfuEc57nARS5xmStc5RrX
+ZUb3OQ3fucP/uQvbnGbO/zNXe5xnwf8w0Me8S+P+Y/08QcSRAYykonMZCEr
wWQjOznISS5yk4e85CM/BShIIQpThBCKEkoxilOCkpQijNKUIZyyRFCO8lSg
IpFUIorKVCGaqlQjhurUoCa1iKU2dYijLvWoTwMa0ojGNKEpzWhOC1rSinha
04a2JNCO9nQgkY50ojNd6EoS3ehOMj3oSS9604cUUulLP/ozgLTA///zEwOL
l1o=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1:eJwVyWlgDgQAgOFvQ0oUJSpXrkilpMMVOt05inJEudrGNvc2zH2zue/72Jyb
zdwb5r5ZoYiiy32Uu1I8fjzvn7d428gmEUGBQCBEQgmjE50J5+GMpAtd6UZ3
etCTXkQRTQy96UNfYulHfwYwkEEMZghDGcZwRjCSUYxmDHHEM5ZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZRAKJLGYJS1nGclaQRDIrSSGVVaSxmjWs
ZR3r2cBG0slgE5vZQiZb2cZ2drCTXexmD3vZx34OcJBDHCaLb/mOIxzlGN/z
A8c5wY+c5BQ/8TOnOcMv/Mpv/M4fnOUc57nARS5xmStc5Rp/8hfXucFNbnGb
O9zlb/7hX+7xH/9zn0BwIBBEMNnITg4eISeP8hi5eJzc5OEJniQv+XiKp8nP
MxSgIM/yHM9TiMIUoSjFeIHilKAkpSjNi5ShLC9Rjpd5hVcpz2u8TgXeoCJv
8hZv8w6VqEwVqlKNd6lODWryHu/zAR/yER9Ti9rUoS71qE8DPqEhjWhMEz7l
M5rSjM/5gua0oCWt+JLWtOErvqYt7WhPBzryDSGEEkYnOhNOBJF0oSvd6E4P
etKLKKKJoTd96Ess/ejPAAYyiMEMYSjDGM4IRjKK0YwhjnjGMo7xTGAik5jM
FKYyjenMYCazmM0c5jKP+SxgIYtIIJHFLGEpy1jOCpJIZiUppLKKNFazhrWs
Yz0b2Eg6GWxiM1vIZCvb2M4OdrKL3exhL/vYzwEOcojDZPEAiurDag==
                    "]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    NCache[
                    Rational[217, 255], 0.8509803921568627], 
                    NCache[
                    Rational[176, 255], 0.6901960784313725], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    NCache[
                    Rational[217, 255], 0.8509803921568627], 
                    NCache[
                    Rational[176, 255], 0.6901960784313725], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.24720000000000014`, 0.24, 0.6]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    NCache[
                    Rational[217, 255], 0.8509803921568627], 
                    NCache[
                    Rational[176, 255], 0.6901960784313725], 
                    NCache[
                    Rational[7, 15], 0.4666666666666667]]]}, {
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.24720000000000014`, 0.24, 
                    0.6]]}, {}, {}, {}}}], {{}, {}}}, {GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0., 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> Automatic, DisplayFunction :> 
                Identity, Epilog -> {
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "\"principal\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], {251.99999999999997`, 
                   1006.540543147782}], 
                  InsetBox[
                   FormBox[
                    StyleBox[
                    "\"interest\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], {90., 201.30810862955224`}]}, 
                Frame -> {{True, False}, {True, False}}, 
                FrameLabel -> {{None, None}, {
                   FormBox[
                    StyleBox[
                    "\"years\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], None}}, FrameStyle -> Directive[
                  AbsoluteThickness[0.2]], FrameTicks -> {{{{0., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {200., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["200", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {400., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["400", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {600., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["600", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {800., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["800", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1200., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["1.2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.2", "SRString" -> "1.2"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {50., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {100., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {150., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {300., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {350., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {450., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {500., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {550., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {650., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {700., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {750., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {850., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {900., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {950., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1050., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1100., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1150., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1250., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1300., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, None}, {{{60, 
                    FormBox["5", TraditionalForm]}, {120, 
                    FormBox["10", TraditionalForm]}, {180, 
                    FormBox["15", TraditionalForm]}, {240, 
                    FormBox["20", TraditionalForm]}, {300, 
                    FormBox["25", TraditionalForm]}, {360, 
                    FormBox["30", TraditionalForm]}}, None}}, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {None, None}, GridLinesStyle -> Automatic, 
                ImageSize -> 200, 
                LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0, 360.}, {0, 1342.0540575303899`}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}, TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"monthly payment breakdown\"", 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Roboto", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox["Right", FontFamily -> "Roboto", FontSize -> 13]}],
                 "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[{{0, 250000.}, {1, 249700.}, {2, 249398.}, {3, \
249095.}, {4, 248791.}, {5, 248485.}, {6, 248179.}, {7, 247871.}, {8, \
247562.}, {9, 247251.}, {10, 246939.}, {11, 246626.}, {12, 246312.}, {13, \
245996.}, {14, 245679.}, {15, 245360.}, {16, 245041.}, {17, 244720.}, {18, \
244397.}, {19, 244073.}, {20, 243748.}, {21, 243422.}, {22, 243094.}, {23, \
242765.}, {24, 242434.}, {25, 242103.}, {26, 241769.}, {27, 241435.}, {28, \
241099.}, {29, 240761.}, {30, 240422.}, {31, 240082.}, {32, 239740.}, {33, \
239397.}, {34, 239052.}, {35, 238706.}, {36, 238359.}, {37, 238010.}, {38, \
237660.}, {39, 237308.}, {40, 236955.}, {41, 236600.}, {42, 236244.}, {43, \
235886.}, {44, 235527.}, {45, 235166.}, {46, 234804.}, {47, 234440.}, {48, \
234075.}, {49, 233708.}, {50, 233340.}, {51, 232970.}, {52, 232599.}, {53, \
232226.}, {54, 231851.}, {55, 231475.}, {56, 231098.}, {57, 230719.}, {58, \
230338.}, {59, 229956.}, {60, 229572.}, {61, 229186.}, {62, 228799.}, {63, \
228410.}, {64, 228020.}, {65, 227628.}, {66, 227235.}, {67, 226839.}, {68, \
226442.}, {69, 226044.}, {70, 225644.}, {71, 225242.}, {72, 224838.}, {73, \
224433.}, {74, 224026.}, {75, 223618.}, {76, 223207.}, {77, 222795.}, {78, \
222381.}, {79, 221966.}, {80, 221549.}, {81, 221130.}, {82, 220709.}, {83, \
220287.}, {84, 219863.}, {85, 219437.}, {86, 219009.}, {87, 218579.}, {88, \
218148.}, {89, 217715.}, {90, 217280.}, {91, 216843.}, {92, 216405.}, {93, \
215964.}, {94, 215522.}, {95, 215078.}, {96, 214632.}, {97, 214184.}, {98, \
213735.}, {99, 213283.}, {100, 212830.}, {101, 212375.}, {102, 211918.}, \
{103, 211459.}, {104, 210998.}, {105, 210535.}, {106, 210070.}, {107, \
209603.}, {108, 209134.}, {109, 208664.}, {110, 208191.}, {111, 207716.}, \
{112, 207240.}, {113, 206761.}, {114, 206281.}, {115, 205798.}, {116, \
205314.}, {117, 204827.}, {118, 204338.}, {119, 203848.}, {120, 203355.}, \
{121, 202860.}, {122, 202364.}, {123, 201865.}, {124, 201364.}, {125, \
200861.}, {126, 200356.}, {127, 199848.}, {128, 199339.}, {129, 198828.}, \
{130, 198314.}, {131, 197798.}, {132, 197280.}, {133, 196760.}, {134, \
196238.}, {135, 195714.}, {136, 195187.}, {137, 194658.}, {138, 194127.}, \
{139, 193594.}, {140, 193059.}, {141, 192521.}, {142, 191981.}, {143, \
191439.}, {144, 190895.}, {145, 190348.}, {146, 189799.}, {147, 189248.}, \
{148, 188694.}, {149, 188138.}, {150, 187580.}, {151, 187020.}, {152, \
186457.}, {153, 185892.}, {154, 185324.}, {155, 184755.}, {156, 184182.}, \
{157, 183608.}, {158, 183031.}, {159, 182451.}, {160, 181869.}, {161, \
181285.}, {162, 180698.}, {163, 180109.}, {164, 179518.}, {165, 178924.}, \
{166, 178327.}, {167, 177728.}, {168, 177127.}, {169, 176523.}, {170, \
175916.}, {171, 175307.}, {172, 174695.}, {173, 174081.}, {174, 173464.}, \
{175, 172845.}, {176, 172223.}, {177, 171599.}, {178, 170972.}, {179, \
170342.}, {180, 169710.}, {181, 169075.}, {182, 168437.}, {183, 167797.}, \
{184, 167154.}, {185, 166509.}, {186, 165860.}, {187, 165209.}, {188, \
164556.}, {189, 163899.}, {190, 163240.}, {191, 162578.}, {192, 161914.}, \
{193, 161246.}, {194, 160576.}, {195, 159903.}, {196, 159227.}, {197, \
158549.}, {198, 157867.}, {199, 157183.}, {200, 156496.}, {201, 155806.}, \
{202, 155113.}, {203, 154417.}, {204, 153718.}, {205, 153017.}, {206, \
152312.}, {207, 151605.}, {208, 150895.}, {209, 150181.}, {210, 149465.}, \
{211, 148746.}, {212, 148023.}, {213, 147298.}, {214, 146570.}, {215, \
145839.}, {216, 145104.}, {217, 144367.}, {218, 143626.}, {219, 142883.}, \
{220, 142136.}, {221, 141386.}, {222, 140633.}, {223, 139877.}, {224, \
139118.}, {225, 138355.}, {226, 137590.}, {227, 136821.}, {228, 136049.}, \
{229, 135274.}, {230, 134495.}, {231, 133714.}, {232, 132929.}, {233, \
132141.}, {234, 131349.}, {235, 130554.}, {236, 129756.}, {237, 128955.}, \
{238, 128150.}, {239, 127342.}, {240, 126531.}, {241, 125716.}, {242, \
124898.}, {243, 124076.}, {244, 123251.}, {245, 122422.}, {246, 121590.}, \
{247, 120755.}, {248, 119916.}, {249, 119074.}, {250, 118228.}, {251, \
117378.}, {252, 116525.}, {253, 115669.}, {254, 114809.}, {255, 113945.}, \
{256, 113078.}, {257, 112207.}, {258, 111332.}, {259, 110454.}, {260, \
109572.}, {261, 108687.}, {262, 107798.}, {263, 106905.}, {264, 106008.}, \
{265, 105108.}, {266, 104204.}, {267, 103296.}, {268, 102384.}, {269, \
101469.}, {270, 100549.}, {271, 99626.3}, {272, 98699.3}, {273, 97768.5}, \
{274, 96833.9}, {275, 95895.3}, {276, 94952.8}, {277, 94006.4}, {278, \
93056.}, {279, 92101.7}, {280, 91143.4}, {281, 90181.1}, {282, 89214.8}, \
{283, 88244.5}, {284, 87270.1}, {285, 86291.7}, {286, 85309.2}, {287, \
84322.6}, {288, 83331.9}, {289, 82337.}, {290, 81338.}, {291, 80334.9}, {292, \
79327.6}, {293, 78316.}, {294, 77300.3}, {295, 76280.3}, {296, 75256.1}, \
{297, 74227.6}, {298, 73194.9}, {299, 72157.8}, {300, 71116.4}, {301, \
70070.7}, {302, 69020.6}, {303, 67966.1}, {304, 66907.2}, {305, 65844.}, \
{306, 64776.3}, {307, 63704.1}, {308, 62627.5}, {309, 61546.4}, {310, \
60460.8}, {311, 59370.6}, {312, 58276.}, {313, 57176.7}, {314, 56072.9}, \
{315, 54964.5}, {316, 53851.4}, {317, 52733.8}, {318, 51611.4}, {319, \
50484.4}, {320, 49352.7}, {321, 48216.3}, {322, 47075.2}, {323, 45929.3}, \
{324, 44778.6}, {325, 43623.1}, {326, 42462.8}, {327, 41297.7}, {328, \
40127.7}, {329, 38952.8}, {330, 37773.1}, {331, 36588.4}, {332, 35398.8}, \
{333, 34204.3}, {334, 33004.7}, {335, 31800.2}, {336, 30590.6}, {337, \
29376.1}, {338, 28156.4}, {339, 26931.7}, {340, 25701.8}, {341, 24466.9}, \
{342, 23226.8}, {343, 21981.5}, {344, 20731.}, {345, 19475.3}, {346, \
18214.4}, {347, 16948.3}, {348, 15676.8}, {349, 14400.1}, {350, 13118.}, \
{351, 11830.6}, {352, 10537.9}, {353, 9239.74}, {354, 7936.19}, {355, \
6627.2}, {356, 5312.76}, {357, 3992.84}, {358, 2667.43}, {359, 1336.49}, \
{360, 0}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1: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
lka6fXxWk2VCTL222iYe5J1ChN1uPejSjywXQv2z06N319tpvxC9y00OLt5G
Vgjh2XHvTKAjuUyINfvMn1lqkWuF6AnVu/bw0SfaLwQnq8nUKJXMEWGjw5WH
Vp5kTRGM2lbxNUeRuSKcnH0kX/7sI+0XYUpuks/7A2SI8MK327DLj+wswsU9
N28pxpJ5IqzauPjbwpoPtF+ElK8bV2/MIstESNew614XQN4pwr+KB061HEeW
i5CV316e+08b7f/+eXWNWc8PkhUi5NpGLP7bl1wmgt0qxTr+aHKtCCHimn43
q1ppvwjjJ0Vsqksjc8RYPTuvuMCDrCnGseNFXtZDyVwxJr4MMVY71EL7xVi6
T9O272gyxFBP3BsVt/c97Rdj6mGJioMGmSeG9ebdifs2NtN+MZoXm5i6f31H
+8Vo++n5ljUS8k4xtPTT3o94+5b2iyEuzC3VCySfFGNe4c2oHY/f0H4xBN7v
l8bak8vE6I1aqTh3uYn2i2GxWccsdjq5VYwYwfOe5GOvab8E9/wmbBipS9aU
YM/844YDtr2i/RL46QoXhPa8pP0SVP1SbzE5hgwJMkPzQlyrX9B+CZZueW7Q
4EDmSVCx6drDquJG2i+BScnQuzONyTIJOpxLYjrSGmi/BAcW6g0ZrUKWS7Ct
uXjAEWE97Zfg2NitfyVX19F+CdrjLoqfLiGXSbBVVrVzS0Et7ZcgzTwvPG0M
uVWCRPW8A4MG19B+KYZaS2bk1FTTfin8tg9B35PPab8UpR2icN21z2i/FK2b
9F3eODyl/VI4XzE7LNGtov1ScMbM7z3TWEn7pdBOXKd6Mu8x7Zdi2s5sf/+V
FbRfikx+12HFvHLaL0XSPStRRb9HtF8KWd61iIybD2i/FG9TQ8drJZfRfiny
zN7w+Zn3aL8U/w5PTxzEvUP7pTiblJyhknWT9kuhsUfY7Tr6Ou2Ph9Hw9xfa
9l6l/fHgC+X9awaW0P54/F5i1jqFc5n2x6N8WZ7f9Ia/aH889HalbC1RFNL+
eDzldtnlm+XT/nisD3iWW/X4KO2Px0cXQb+2ur20P57+j//8pXyfVr5P/x+V
79PK92nl+7TyfVr5Pk155fu08n1a+T6tfJ9Wvk//6Fe+Tyvfp5Xv08r3aeX7
9I/9yvdp5fu08n1a+T6tfJ/+sf+/f5/+H5CMy+M=
                 "], {{{}, {
                    EdgeForm[], 
                    Hue[0.67, 0.6, 0.6, 0.15], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJxF1FV3EAQAhuGN2GAjBozRsdEdIzZgG7XRNWB0jRoNKiEqChh0NwpKhxIm
GKCgoKCkAkoYhEUjICrgs8MFF895f8B3zheZOiJ5eIaAgIBABgc+7iDSGMgA
+tOPvqTSh970oic96E43utKFznQihY50oD3JtKMtbWhNK1rSguY0oylNSCKR
xjSiIQ2oTwLxxFGPutQhlhhqU4ua1CCa6lSjKlWoTCUqUoHylKMsZShNKUpS
gigiKU4xilKEwhSiIAXITz4iyEs4echNLsLISQ6yk41QQshKFoIJIjOZyEiG
9J0CH432UB5wn//4l3+4x9/c5Q63+Ytb3OQG17nGVa5wmT/5g9/5jV+5xEUu
cJ5f+Jmf+JFznOUMp/mB7znFSU7wHd9ynGMc5QiHOcQ3fM1BDvAVX7KffXzB
5+xlD5/xKbvZxSd8zEd8yE528AHv8x7v8g5vs51tbGULb/Emm9nERjawnnWs
ZQ2rWcUbvM5KVvAar7KcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqv8DIv
8SKTmcREXuB5JvAcz/IM43macYxlDKN5iid5glGMZATDGcZQhjCYQaQxkAH0
px99SaUPvelFT3rQnW50pQud6UQKHelAe5JpR1va0JpWtKQFzWlGU5qQRCKN
aURDGlCfBOKJox51qUMsMdSmFjWpQTTVqUZVqlCZSlSkAuUpR1nKUJpSlKQE
UURSnGIUpQiFKURBCpCffESQl3DykJtchJGTHGQnG6GEkJUsBBNEZjKRkfS/
/h93bZgz
                    "]]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]], 
                    LineBox[CompressedData["
1:eJwl1PefCAQYBvA7ztmcfbazzp07Z++z93bucO7OOByyUhQK0aDsPduZZSuK
sreGVdmESGlYlULf+/TD93n/gOfzvGGpw+OGBQYEBAwS6TcDGQkiE8FkJgtZ
yUZ2cpCTXOQmhDzkJR/5KUBBChFKYYpQlGIUpwQlKUUYpSlDWcpRnnAqEEEk
FYkimkrEUJkqVKUa1alBTWpRmzrUpR71iaUBDWlEY5rQlGY0pwUtaUVr2tCW
drSnAx3pRGfi6EI8CXSlG91JpAdJJJNCT3rRmz6k0pd+9CeNAQxM74inGMwQ
hjKM4TzNCJ7hWUYyiud4ntGMYSwv8CLjGM8EXmIik3iZV3iV15jMFF7nDaYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsow3eYu3eYd3eY/3+YDlrGAlq1jNGj7k
I9ayjvVsYCOb2MwWPuYTtrKNT/mM7ezgc75gJ7vYzR72so/9HOAghzjMEY5y
jC/5iq/5huOc4CSnOM23fMf3nOEs5zjPBS5yictc4Qeuco3r/MgNbvITt/iZ
X7jNr/zG7/zBHe5yj/s84E/+4m8e8g//8ojHPCF9/IFkICNBZCKYzGQhK9nI
Tg5ykovchJCHvOQjPwUoSCFCKUwRilKM4pSgJKUIozRlKEs5yhNOBSKIpCJR
RFOJGCpThapUozo1qEktalOHutSjPrE0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMHF2IJ4GudKM7ifQgiWRS6EkvetOHVPrSj/6kMYCBgf//6P8AaGCX
xQ==
                    "]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}, {}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]]}, {}}}], {{}, {}}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0., 0.}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> Automatic, DisplayFunction :> 
                Identity, Frame -> {{True, False}, {True, False}}, 
                FrameLabel -> {{None, None}, {
                   FormBox[
                    StyleBox[
                    "\"years\"", FontFamily -> "Roboto", StripOnInput -> 
                    False], TraditionalForm], None}}, FrameStyle -> Directive[
                  AbsoluteThickness[0.2]], FrameTicks -> {{{{0., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {50000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {100000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {150000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["150", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "150", "SRString" -> "150"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {200000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["200", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "200", "SRString" -> "200"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {250000., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["250", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "250", "SRString" -> "250"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"k\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000& , AutoDelete -> True]}]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], TraditionalForm], {0.00625, 
                    0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {20000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {30000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {40000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {60000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {70000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {80000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {90000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {110000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {120000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {130000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {140000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {160000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {170000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {180000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {190000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {210000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {220000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {230000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {240000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, None}, {{{60, 
                    FormBox["5", TraditionalForm]}, {120, 
                    FormBox["10", TraditionalForm]}, {180, 
                    FormBox["15", TraditionalForm]}, {240, 
                    FormBox["20", TraditionalForm]}, {300, 
                    FormBox["25", TraditionalForm]}, {360, 
                    FormBox["30", TraditionalForm]}}, None}}, FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {None, None}, GridLinesStyle -> Automatic, 
                ImageSize -> 200, 
                LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0, 360.}, {0, 250000.}},
                 PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}, TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"remaining balance\"", "\[NoBreak]", 
                 "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox["Labeled", FontFamily -> "Roboto", FontSize -> 13], 
                "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox["Right", FontFamily -> "Roboto", FontSize -> 13]}],
                 "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Payments table", "scanner" -> "Formula", "id" -> 
     "PaymentsTable", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"year\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"monthly payment\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"ending balance\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"yearly principal paid\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "\"yearly interest paid\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 TagBox[
                  PaneBox[
                  "1", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["246312", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3688", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12416", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "2", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["242434", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3877", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12228", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "3", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["238359", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4075", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12029", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "4", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["234075", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4284", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11821", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "5", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["229572", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4503", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11601", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "6", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["224838", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4734", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11371", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "7", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["219863", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4976", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11129", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "8", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["214632", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5230", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10874", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "9", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["209134", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5498", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10607", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "10", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["203355", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5779", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10325", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "11", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["197280", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6075", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10030", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "12", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["190895", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6386", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9719", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "13", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["184182", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6712", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9392", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "14", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["177127", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7056", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9049", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "15", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["169710", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7417", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8688", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "16", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["161914", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7796", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8308", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "17", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["153718", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8195", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7910", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "18", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["145104", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["8614", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7490", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "19", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["136049", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9055", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["7050", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "20", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["126531", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["9518", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6586", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "21", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["116525", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10005", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["6099", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "22", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["106008", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["10517", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5587", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "23", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["94953", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11055", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["5049", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "24", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["83332", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["11621", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["4484", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "25", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["71116", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12215", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3889", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "26", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["58276", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["12840", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["3264", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "27", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["44779", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["13497", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["2607", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "28", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["30591", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["14188", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1917", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "29", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["15677", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["14914", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1191", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}, {
                 TagBox[
                  PaneBox[
                  "30", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["1342", #& ]}], Identity], #& , SyntaxForm -> Dot],
                    "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["0", #& ]}], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["15677", #& ]}], Identity], #& , SyntaxForm -> 
                    Dot], "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["428", #& ]}], Identity], #& , SyntaxForm -> Dot], 
                   "Unit", SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Center, {Right}}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}, {1, 5} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False, False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "FormulaSelect", "template" -> 
        "Assuming fixed rate mortgage${separator}Use ${desc} instead", 
        "count" -> "2", "pulldown" -> "false", "default" -> 
        "\"FSelect\" -> {{\"FixedRateMortgage\"}, \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage", "desc" -> "fixed rate mortgage", 
          "input" -> "\"FSelect\" -> {{\"FixedRateMortgage\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "AdjustableRateMortgage", "desc" -> 
          "adjustable rate mortgage", "input" -> 
          "\"FSelect\" -> {{\"AdjustableRateMortgage\"}}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include: \
${desc}${separator}${desc}${separator}${desc}${separator}${desc}", "count" -> 
        "4", "pulldown" -> "false", "default" -> 
        "{\"FVarOpt\", \"1\"} -> {{}, {{{\"FixedRateMortgage\", \"PTS\"}}, {{\
\"FixedRateMortgage\", \"IOP\"}}, {{\"FixedRateMortgage\", \"MTR\"}}, \
{{\"FixedRateMortgage\", \"BP\"}}}, {{\"FixedRateMortgage\", \"MA\"}}}"}, {
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.PTS", "desc" -> "points", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"PTS\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.IOP", "desc" -> 
          "interest\[Hyphen]only period", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"IOP\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.MTR", "desc" -> "tax rate", "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"MTR\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FixedRateMortgage.BP", "desc" -> "balloon payment", 
          "input" -> 
          "{\"FVarOpt\"} -> {{\"FixedRateMortgage\", \"BP\"}, \
{\"FixedRateMortgage\", \"MA\"}}"}, {}]}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Formula", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.75", "parsetiming" -> "0.791", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP53571398e4h5g366bhii0000619gf169dcfede6a", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa53581398e4h5g366bhii00003hhc40524g6h7gbd3172133347439184749", "version" -> 
    "2.6", "inputstring" -> "30-year mortgage of 250000 at 5%"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 20, 22, 32, 51.4851874`9.464257147917237}, "Line" -> 
    46, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "MonthlyPayments", "Monthly payments", 1, 1, "Content"}, Typeset`open$$ = 
   True, Typeset`newq$$ = "30-year mortgage of 250000 at 5%"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{700., {2658., 23.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[46]:=",ExpressionUUID->"5dafcf05-6f71-4b1b-ac13-40fda46a6b76"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[
      StyleBox[GridBox[{
         {
          PaneBox["\<\"monthly payment\"\>",
           
           BaseStyle->{{
             BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
             LineSpacing -> {0.9, 0, 1.5}, 
             LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
             Left},
           BaselinePosition->Baseline], 
          StyleBox[
           StyleBox[
            RowBox[{
             FormBox["\<\"$\"\>",
              TraditionalForm], "\[VeryThinSpace]", "\[InvisibleSpace]", 
             "1342"}], "Unit"],
           ZeroWidthTimes->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100}]},
         {
          PaneBox["\<\"effective interest rate\"\>",
           
           BaseStyle->{{
             BaselinePosition -> Baseline, FontColor -> GrayLevel[0.3]}, 
             LineSpacing -> {0.9, 0, 1.5}, 
             LinebreakAdjustments -> {1, 10, 10000, 0, 100}, TextAlignment -> 
             Left},
           BaselinePosition->Baseline], 
          StyleBox[
           StyleBox[
            RowBox[{
             TagBox[
              InterpretationBox["\<\"5.116\"\>",
               5.116189788173364,
               AutoDelete->True],
              NumberForm[#, {10, 3}]& ], "\[NoBreak]", 
             StyleBox["\<\"%\"\>",
              FontFamily->"Roboto",
              FontSize->13]}], "Unit"],
           ZeroWidthTimes->False,
           LineIndent->0,
           LinebreakAdjustments->{1, 100, 1, 0, 100}]}
        },
        AllowScriptLevelChange->False,
        AutoDelete->False,
        BaselinePosition->Automatic,
        FrameStyle->GrayLevel[0.84],
        GridBoxAlignment->{
         "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}},
        GridBoxBackground->{"Columns" -> {None, None}},
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}], "Grid"],
      StripOnInput->False,
      LineSpacing->{0.9, 0, 1.5},
      LineIndent->0],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "30-year mortgage of 250000 at 5%", {{"MonthlyPayments", 1}, 
    "Content"}]]], "Output",
 CellChangeTimes->{3.898852373847121*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"99dc1375-7c1e-4e11-a824-328ae8e761d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898852511012093*^9, 3.8988525602678905`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a6a130dd-6435-493b-beae-5b3b0a3dc9aa"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 
            0.9999998782112116}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}},
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8988525390024877`*^9, 3.8988525613746223`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"3eae7dd5-7f2c-4454-88e0-8e999bc79dc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "+", "b"}], ")"}], "^", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.898852629988531*^9, 3.89885263878758*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"d15905ff-4ebd-44c1-a498-7f6e2588746d"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["a", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["a", "9"], " ", "b"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["a", "8"], " ", 
   SuperscriptBox["b", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["a", "7"], " ", 
   SuperscriptBox["b", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["a", "6"], " ", 
   SuperscriptBox["b", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["a", "5"], " ", 
   SuperscriptBox["b", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["a", "4"], " ", 
   SuperscriptBox["b", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["a", "3"], " ", 
   SuperscriptBox["b", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["b", "8"]}], "+", 
  RowBox[{"10", " ", "a", " ", 
   SuperscriptBox["b", "9"]}], "+", 
  SuperscriptBox["b", "10"]}]], "Output",
 CellChangeTimes->{3.898852640378973*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"df88a955-4c84-4689-9f2e-0b8f4bd249df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898852740736148*^9, 3.898852773434112*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"ca9ba027-2581-4dff-bfe0-f41ff7b69150"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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

             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-20, 20}, {-1.7601725906566892`, 
            1.7601711419368145`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-20, 20}, {-1.7601725906566892`, 
           1.7601711419368145`}}, "Frame" -> {{False, False}, {False, False}},
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-20, 20}, {-1.7601725906566892`, 1.7601711419368145`}},
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 20}, {-1.7601725906566892`, 1.7601711419368145`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8988527552408695`*^9, 3.8988527743014917`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"e5d4a9c5-b832-40f6-99f2-9c31ba22c5da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "->", "LightBlue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898852794363742*^9, 3.898853011704666*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"5528eefa-3c99-4ab9-868b-4fe2d2078518"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
wy0XbQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
mu78dhYXRbSwHz8icBatGOVvYfHf/hHEfg==
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
wy0XbQ==
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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

             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
mu78dhYXRbSwHz8icBatGOVvYfHf/hHEfg==
             "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-10, 20}, {-1.414213404947067, 
            1.4142129235699903`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-10, 20}, {-1.414213404947067, 1.4142129235699903`}},
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
wy0XbQ==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwU13c8ld8fAHB7r7LuNcK99oxSUTmnVAqV7ChKRDJKpUGlaFEqVEglpLIz
Qt84hzKiZO+9171PZBO/5/fXfX1er/uc8xnnGW8FF19LNzYWFhbEwcLy/9/t
HRcn1tbo2KO0a3t62zhqLXxLHFim4zKj732n2CaQf3TN38g5Oq4ut8oIUZ9A
WTaqKyoMOg4/o76H9eoEUqztELBop+MgqdqWGqFJVJLBsy62iY7f7Q9ch/Qm
kdMjffHBWjrmStrRtt52EkWbPpa9UkHHln9cufpjJ5FA2W7t+Fw6niqaMeKT
ZaCPib5645l07CW624BtBwPtux23ZXMqHTt9/stq78BAQWDOqPItHd8obTkh
9YyBZgs/Hv4TTsfLyvbVo2xMFBHdbGUYSseZ7gvPi2SYaONldvuQO2R+Z9Ut
J/SZyHPz8ROUQDqObJX3OnyaibozRM7DM3S8r/jcTw3ERAGPdl4KdaXjxr1+
MYUNTETx8rza6EzHtOlap7gRJrJU+37Lw5aOz38WlHUWJBDBPXUn+wgdF5t6
7TGSI9DDYdnQFXM6/nRXq+TcRgJVJF6OeGJMxylb/8IaCwK53k563m5Ex5XH
3J8sOBOI7WRdrKIhHU94K9Rc9CHQjg0aiQUb6Ti/t6D55AMCta3YvWfTpGMt
j00C9c8I5N8RkmquQscUV13OyLcEyoruzumVpWOlvHTIlU+gg5f5C9SpdLzj
vLpAASbQuM22rxfF6HiaXT298AeB7m12w8XCdHw0O3eKr55AiqIR33n4yfq2
vktNbSNQyVRxpSUXHb8p/Zj1spdATrUTP+NY6fjJ0J729mECLWdQ6oZXaDj1
dA3nmUkCRT/a27RxgYZH2S6K7ZsikL6XX9u1vzQcQDGcOD9LoHrTN13fmTQc
vmPFb3KBQL5qP/uExmn47X/e0XnLBBLgWRyyH6LheA4p81//CPRxWGk8oZeG
X6+63t60RqB9ZZbMyQ4a3ncgbNMoGQ8m3pze0kLDI+4JjhNkfOt22lxQPQ1r
t0Qv7SDj5sC1B26/aPj0i+8u+eR66pctZU0raVixr2bjSXK/G+ffZWl/o+Fv
FjMXDMl86s8uGIsW0/CUbQk0niGQ8mmzlvkCGs7MXvcpgCDQtROvPTtzaDin
UnhwYIxANQ5T/3AGDW9u3bQaMEAgms2ep+8+0jBV0FhtTyc5n8MvFEOTaDjG
91DUjkYCVR0Yz/d5Q8N2nz5dcKsm0IY9O82sYml4sWUdKyohkJ/Rk+6tz8j6
yhwDDpDzK982cF7mCQ03xpUqc6YRSGrTFk7WMBq25S42n35DoG8qnRpVQTS8
dDFuv8sdAlFoOigjgIblenOqh/wJ5CVz2zLSn4Zb93ynx7kTSGyd6tVjXjS8
+0jZcMI+AnnwBwjscif7o1OgOrOZQF85a94oudAw91IC4yqNPJ9LF8qZdjT8
8U7giOIyExXMlB9tsKThSxkDMmbDTCRAUBn5B8n8+bSa39cyUe4AEr1lTMNN
k/2C3IlMxPmL/6SoDlk/L/9ubyMmcqhwmplXo+Fp8IFmT2eijJJP9zoVadi+
0P7GDW4msv1sl/FOioY1jtndDvrFQMlvEpe3ctEwk7e83seCgZZi5sJlWGk4
8WDlDVMdBjoUdYDGuqKACx6DLndBBpq7T+yvmlLAu5I3qp+tmEQmftufH+tS
wI743vF08vkT5xWutqtVAd+uudWYyT+J/pzu+6rUoIAHPFzOLg9MoGjHewPM
SgX8OG09r1/EBBrd07DxVq4CPlfz9fLS8Dh6IHm2+l2YAsZStU/9fMfQDqEq
tr67Chh8TpPshmOIyaFmKHNbAb+p8hH4sm4MWU4Pf4i4ooD3ulVfqvg0imR+
udy96aaAxa6MHredGEEZtx12HQUKeDz40C6wdxg1Mg7kC/yVx6FJst9S4/rR
3cEPTBOmPH4dKLz5tFM/2tbBrRw8Jo8lm99sLZDrR68qy6IWe+SxTKNRqOrb
PnQ6cZff8E95PPPBfOjkm160aG+ghZPlsUD88fuzYl1ow3fVxAsO8vhEUs29
h2aNKKFk6me5jTy2DPx15UJRA1JCX+aoR+SxdU3eQ6Z2A9L8Ym6KTeSx3mCw
abpIPTLMOjcloC+PUzawfdz75jeyjSsAycLyeH3gqbA9geVIauxJwacHcrhp
25NjllveIIVBmoB9kBxenbkxeKnrGVLtyXVe9ZfDU/x3h4x5HqAtTa1cZq5y
WO5Ij0TQ1yvAskTeZtBIDl/fITJi+OMdCI3JmpKY2YBDqoTKiHtFYPFArXqg
0wY8eKpNiPK4FvgEZsTZWW/AKtJHXZM06sBgxkOhTaYbsN2anFVpRR2oET0w
Paa/Ac+Y7bBIXK0HCV0lhXaCG/DICFfhw9NNwPR8zv5NX2Wxe1dG2BvpdhAb
/fz0OFUWP6yUczkS1AeEqy+2lgnL4rOtK6bc3/tAyD9L07ecsviRkvWiKXc/
8HER1rafksEUU9eRiw/7wW7N+7NllTL4RvD6S4pPB8A4uhry9rIMDns90Xzv
9hBwnrabC/SWwcu91ly2xUOgUXGLh/0pGZxvVO0evTgEih9MmwkflsHPmba1
F3yGQYTVWdHryjLY6OyS17EjI8Bw5FiCfZM0/rKu4e2XpVHgtd7qWF+1NH7m
kmv5Q20MvNp5QMKzVBrTur0pZvZjgCVKPzQgUxqHuHxpSMwZA+VQyO/1A2lc
08FnGX5qHCyc5dBUCZLGPY8fd1LDx4Hai6WhTH9pbHb7ZpZIwTh4yBg+WnJK
Gruu6w3bwTcBjsSiXYM7pbE05bvGxfcT4HZZ3rLXZmm8R38D165fEyD3T2re
rLo07gOR2n7TE0DCJFqNmyKNE1qomquGk6Dz77l16tNSmCPRaTz5+yQQknOv
zh6Vwld5X2oHDU0CYHr8zvYeKXyqPfhNPicDJMQfWDT/KYVvOewwMNrDAB4H
aX2+yVK44Jvb+ReFDBB7hfJyIU4Kl7FdUDncxADViUI2tyKlMP+uzdXOfxhA
e2mpMiJICj/X3XrrgSITnFCaui19WQq/LTjq+3YnEzy1GNmR5C2FncwX2ERs
mWAmuSErz0EKd7BLLDNDmEC5/oen0REprFdJOer0kgns/iHFChMp7ByddJj2
iQm+WKVFt26WwuFzD2jJ7UwQxHInaFlICuem8i88USJAtkaAYQinFHYsSY6O
3kKAAdvzMwIrVOz54rrX1D4C7Es/7rFhjIqfHwwxfuZGgCutVrT3PVT8ba/s
y54LBPjIbtqp00zF7kRFzdVbBBBw2GKx6xsVD8ZdexUXSwCjO5p8VYVUbB1e
nKqYTADfLNp3yywqzpd/HLicRYD4DsqNjmQqNu3a1iD/HwHquYS3ub6i4g+b
x/2jvhOAXY9zejKSilmLcvVsfxFg8/Hl1EuhVBzkEN7k1kSA0/en3FaDqJg4
Yqn3rZMAL3JG5O5dpuLQvaVyPgME2CKhvrDHm4p/rVpZdo8RoPmKVy3bKSp+
7Hr7dSBBAP+OjA/YnopvRB7t2T9DAAmjqaAbh6iYT9lsdvcCAT7Hbzq6Yw8V
z7DrlHsuE8CG3V93yYCKbYT27MT/CDDjVsBboEPFtA8bzYzXCBBVudR3SYmK
5aTZh/+S8WaNnV82SZP1teny1pNxw6ObEVMiVJwe+zKva5UAfn9KPDO5qDjN
7t6UBLneeisOY+8VCv4sl1R5fYmcT94+aY1pCj73k8d8/TwBjlAe/B0doWDz
p5siGqcJ8OdadXVyFwW/dOfN/84gwJMuwSTXBgqm2DV19I8QYCO0CKT9oOCR
WBMVnT4C/E6IsO4tpmDlxItlH9sI4MPZpPk6l4JZ/zaMWNYRQMhDkvNYCgXb
dhiVqVcSIKPqaBc1noLn1xExusUEOKgVl9fyjIIfKl1/755DgIfT8qetblHw
fSm3cJeXBNC0OWW07jIFb7r2hVM1nADV+e8kfntR8N6k3inZIALwXVevMLWn
4GTBg2/iThIgpcfrDc8hsl6rLWrKRwhwYHfm5XJjCpYw1S3sAwS4z71ZdbcO
BePAic9/pAig6unPwqJEwaJ1CZJ7uQlQ8bOgtUiKgosqbFx/TTMBV8TOBwZc
FJzr5dIXUMEEyTM3T84vS+LW0++0E7OYYK9dqUHelCSmHMh8yxLDBCEyJuMb
uyQxKBTxOuHOBIo3H5Qy6yWxTNovXteDTPCtrzo2rVIS72WKOsTrMQHbewsz
1VxJ/N+3Ky1lSwwQpOuQJhcmidnYOCpabzGAfFRcSFeQJP6c52P7+SQDoLnu
Yy/9JXGq8LXkesgAq/+dEpR0kcR11BRm1cokCNzn7SNkQO4vGrxaf3YSXHEM
2vhvWAILhTGXJFUmwJfq54zxTgk8mmnzQm5lHKxsT09prZfAXfeUaIG14+Cm
TLtibrEEFq2tOLrt8ji427WJeva5BObiK4vt/DoGnjmPsLbtlcBFBmobOtVG
QfPvf8Xl2yXwhaxzFkUzI4ACxQJzdSWwSOibJC40AuLkd809lpXAICaAp4V8
nif1xY7vmxXHOz7eH4o6NwyyTx1qyE0Sx65FvH9LIgfBTIPrk4RYcWxyo7Xq
p80g2LIn4OCTJ+I4zqCxwFZyEBQqfqg4GyiOv3A58DGjBwAeYv1KsxbHm5xN
Xtg+7we/3fOSnrCL4wDXju9XA3rB5FkZfy8XMTx7XrS/ebYFjDeaBnAfFcOL
WZL8mz1bwOjOq0EJh8XwQIingEh3MxgSbg5t3SGGb6b+l2HxvQl05zx+s0dS
DCst1L87ENYAapfZfsj8FMXy34VWX/DXgNywMelf+qJ41Dluv4pAPghM/Vyi
xbseVzPOvJnr+IFGzXSH/q2uw/sqwI5BqWpkPZnKUzOzDmvRXwvQjv5EWlpv
D/v0rsO1r50FfBpqSI+FdWXkr8PflCMDNvXUoV3ZJxZ1Tq/Dw1c/sF/KaUZc
hXy6et9EcOCZ3J+swz3I7+gda7ZCEXz3wfriCwa9qHtx7XJ9hgjmH9d3vH6z
F+Ubzhb7xYpgZSW/3wf5+pDH1x7znPMiWLXp36tsqX5UjXI9NsuL4DhLvn2C
SoNI7lER9F4Swvfk2TULGkfQOdQv6TEihFc2L8wZco+i0iluwqVRCPfaFRP6
BqPI1dbylX2GEC4JymZ/8nIUpciNLBq7COGh90/DPx8dQytHBOqMDgthVdWn
DzvvjaGDIbofDHYI4cM22w398sbQn9EAWx0JIRzJLfl2VGgcbckWyZGqEsRV
9fcMhr+Mo/uD+qHi+YJ43uXwdp/BcdQm4XhSJEkQx1AvGDoJTqDAgHfCXDcE
8Xu9qOd+xydQ6R5DryldQRzl88vcem4CHWo5pVQZI4BvPCJ2GPMxUDzvg5XS
uwL4watIhWE1BprantFQdEEAfzSt1hzcz0BR8Qu3cg4K4PpX3f+YIQzUfuZR
92tWAZx24dJ+rVkG0ozLzoth8mPP5E1cL4SZ6HpNy8OoDn5cx63daqvGRPKb
aNtD8/hx5mUP/2YHJjq98vnFpTP8ONHQ43V5HukJ7U6fc7b8WPed2XBdFRPx
nmTdd9aYHwdvkZTX6WGitDKzmROy/Nh0vja+i5NAq/Pnqh35+PHGTIqgNoVA
h9WfJ9jO8+EPfiyfa9QINB3ea2Fex4e/hLFvWjMl0J4STlWTYj6c+y/YLNyB
QM/+qq/tSuXDl1r91LzOEGib/aX0rXf4sMzoqbH1pJ9CQ2ND9Pz4cNp6qk7H
UwJ1fEWOWs58uJkjmXXqFelFBT4+ugEfFjm7CDhySU/5tqRcV+bD2ozMuNoi
AqV8TTJrFeXDptyKYX/KCQT5/Cb1WPnwIYXvbad+kx61A48eMXnxU9cPDuot
pM/eCWiPdvDizXmRA8bdpP//ttXs/sGLX7yYOZg1SHoavvd99ZkXd7MO+/uO
E0g7/KLIQiIvvkXdCG6RHv3eseuT5VNe3Nu5P2zoL4Ec1IQt02/w4p4Ca+O4
eQL98e+c5vYi/8+nYvVuiUB3v3+MdDnKi2883J3CQnpYZv3lzUX7eHFrVtv2
jFUCZTvvaZLczIvdh2tW00k/709f5++nwItPVuUy1si4Z6lb4pcQL/69t4Yr
iYz996flq6zwYI4XQuax5PUCz6/a3x7jwZwm1G/9KwRKGNi32NnMg4f4dl8i
37dom65Y7NbvPJj69KGvJ5lfzY0+w4hPPLjaMK30I5m/68+MjsnXPFiqhD14
O1nfEjUw0OQhD3YuT6qUI+t/4n5ANuEqD/a1OpxpS/ZHOU+ieOU0D26C5217
u0i/sg062VnzYLmHSn1fmwlkafFp7dMuHqwQs8l/soZAo69uxAvo8GArZyHo
S87nxoTZLncZHqwb3OC1l5yfmAG1v4SXBxc7mmr75pDza8yhXx7kxtSY3P3F
5PybFW59r6vjxq7G1yUHyfPh5XvITRNx423pb047kecnmm8suS+GG2empMcc
8STnZf/ZZMc9bhyvGSZS7UjO613w6POL3NhfM1Er1pxAU3CDuvlhbmzrp//B
UJNA98MnqpJ3cOMvXg/zBKQJtKGz4CyrOjd2iGio1OclkOllq/TPHNx4/Jvn
/fABJkpIv79R4QsXRjdVht2eMNG2ZZu6gPdcWNUThCxfZaKa/XS/5iguHBMJ
IydcmGhpoCgnzJcL83rHr3TqMZGl1N8tc4pcODvz90PRagYadcctFuu5sM+n
62phmQx0I+/RldQ1Tnxg9Oftk5EMlGKh+uVEOycOk0qv1zzKQOz3ju+sfsyJ
S7i2XT3cNYn8jb9JPQkg4/M9Y+xfJtHomuqCtTsnnpP2T2J5Pol+XpnJ7jbi
xB3TO541m02iKM8w1WkGB37kqJ8rlDmBlA8VilLNObBq7jD3U+txsp9yU11b
OfDuMs1uoDyO+CpCahLoHPg8a9ZVk/kxRACLB5rL7NjeVvqz24sxVKA7sgpS
2PHuOwM0ltpRZCouPn6ahx0nObQRlfQR9LXuWoXGDBsOWOb8FjMxTN5PvUl/
ethwZv8ya2v2MBLlTnO+ls+GP01980sAw6hzYXfTo9NseM96u7wXlkPIp/Mc
zv3OiiO3HK21ch5ATxN/Pme7xYIdlR9cvWrUjQKPuHDQfFjw/Z1SR4QKu5D7
2vz5XY4sWKJi5eM/vS6005F+MEifBRcbSj+aV+xEDUozXCsNa2hFbDo6hbUd
hXAc7p1+t4oU8+dvpsU3oeESjsjeAyuowGAp1Vb8B0rdcW7hv6fzqOmO4nLZ
YgEw9P9p/ttjHtnrukbK3PkPVGaqvu0H82jb7EYFJFwMBml9B3iZcyibIVZr
+bQEbOC1fGlrOofql8bnI1+Xg4imTUZTbLMo/kJ8xLuDteCKz3yw8sVpND6q
X+Q53Qa4Pli1GphNo866YZfCe+3gWV+m5kHaNPqj337ZQaYDZFt7NF2onUKz
uW9KQ4w7wYRhm3KJ5hTijL6VJPKgG3wV8o/MryLQ55UnPMP+feA+/LeBlj6O
algFt0eSHs6Xt2VWHBtH3nqN4z+LhsAwS2aRt8A44n0beef6whDYW3LiWOHZ
MZTOoZ+/02sYsO3+HmOhPoou8b32XH9wBAQah4ndfD+ERlZLvnRMj4JU+uCA
ot0Qun2v4Wi34hhoZ9+ZU8U1hHKt0n13244Bg+/MIxKnB5GO6pqSev4YmNtj
+ThdcQDRU/8l254fB777qHydb3vRuZ3zL1TLJ8BrZb+2W0d6kR279tVCxgSo
4ar+oMLaiyyJ+7tjxSaBffhi+DDuRsFPbhWZnJgE9Y8xr7hRJ/rxril6GzEJ
Nlr4fTjxqgM1rx7q017HAI9FFE3SVtpRLc1o0FuPAcyf3gsx/q8NOZaFtpT6
MUB5xKG189takPzg1nfZ4wygaMXyuuhFM0qMhg2tXEwQLJq9g3e+CU09rMnY
RWMCGCV+LT6vEW361INaSb++tq6gTIo1ourknx85zzHBP7Gr+VsvNiCVCKkU
v/ukV591ztTo1SPty49D+fKZgGIbHikVUYf2fif2bP7FBJcloN7pqVoEx9Wr
XvYzgbu2Sc+S82+kEaC2gcZPAMXMFJmIDTXI+/4ZBthAgF4dIQe1rp9o92rw
/ZiNBHDQbWq0c6hCpdut7VctCZD0Y6t4tPYPdIj9os4S6RHiZKxNK1slkntZ
NHngHAFCIpyb7VPLUFvdk4GBUNJP6qUSMTe/o00cBmFaLwgg9U3Rrs3qG8o5
aDb7I4EAmX/HWo6uYJTkniO+lE+Av5IxGze/Reh5UovdoxLSM/udPuUeKEL9
hzgv+lURYMNVup7+9Bd0o/uiwcd6AuR8HM3Oiy1ArzukAnTbCbC/PX3TFuPP
qKjpgzA/6bduvgu5nydykOy+8Dp90ncXtm/T3xr1CVUdX3z9aZIAIq1LZ32v
ZiAx1HL0xhQBDA3ueJ+r+ogu0FpGXs4SwC1W2Pe89Ds0MOymx7dIenE55pyf
VzxKfpSj/IP07cXC/YPD116giwqf8lpJj0bMf6mpM3iIBB+sa9xG+vXKQuXH
1GU/pFd24NrY/327OnDAPNAPcEk9TRon43PXKjfQlsJANb3PcgcZD1w7LCDs
+AJwtsze7ybXMzn2KuTusXjA4XXwUB25n8zy+uA7/O9Ahb5qhhiZz3TM/Vsh
Xz4Cc9f7+R/IfCu2rd4MPpMBYLbu9UdkPTUTBmDXw0+AuvpB/BtZr8F/F4vx
QA54UbPp5QGyH0mhmTvh9s/gU2mLhgLZL2GH8a8oogD8nTw6doDs5zU1pR1g
/AswlzJa/Eb2e3DB+b/iXUXAmqM85DE5j8OVsYZGMQjw+/4pSCPn1VU93um0
gIGU3pVy6QKyH5vux21QLAXPtRr6OtMJ8I/tm/TrgO8Av7umbEueh2zPEx3H
35eBkw8OVwuFEcCj/l+sbEM5GPrFeUnqBgHq326TeqX+AxhM/p3TcCHPA29z
2zHbKrA3wd5Dz4oAO89fiJG5XQ1S1WZFHhkT4APMoMS1/QJu6z+7QBoBnD6Y
tTpy/gbP910ujREhPX1/pvoRpRZ48SSX719lAkQ8DTu4pw7YpBcc+djCBOro
J9+vlw3gu7awddBtJuC48HI8TbcReDxZfh1xlgl6lD2rHlY0gtubbSVXrZgg
Kpw71PxvE9DUVI7pJ+/fteO7eX+atgJKc+nQnwIGWIg9yOHAaAX7TXJqL8Qy
wHSL/drI4zYAnemlWwMYYPiI7yx7Uzuou2U2cMeQAX7ujevb7twFZLIv21hm
TYLy2+87f7B2g+L+/Q9mwiYBRtktdkndwFA3Lqr79CTIMfjx68JYDygpOPn3
kdQk+CWx3Nlk0AfYhytlL12dAKZ5Qe0yYX1gyvCEwfnDE6Dciqv1VGcfcAyz
VS5SnAD4ybqGqRv9oHLrl/L9v8ZBLp/qD8HvAyAk4aTdIYlx8HLVOm/voWHw
85r/DakHo4Dyqj374Zth8NvZcO9r61EQtf1EVsOfYWA84iNxR24UhF85m3oy
cgQMlu/ecitnBNyevvX2eusoiH0z03K0cRh4DGc8ynOZACnnvc/8XBoE0u4c
ORHb/4B2M4q471Av8LByX3fr5B9wd+evhfqkXpALqnx97/0BmzTZLNtO9YJD
lCea5g1/wADctTW5pAcE/ZBO5jw7BX6e15/Zl94FhjU2xVyJnQbD4i6ibKfb
QPafkzedFmdAiWy8QYpfLdh/DZmp5y8C9+HgktqkBNR5f2rjnt5F8KdJd3q8
/D06/4Iu4cS7BCwfRezwGE1Dsbn3ep86LoG5ikqH21E5aJJ5+NLi2hKIf33s
8IOaIvTkVO/ryv0rIEXUwaNU4AdqMWedPt2+Ctp9oiwy3ZqRl+OmliD2NeBq
m7xweq0ZsXi6fY3VXAPL/y11341uQar3ftytubEG5p5nxBOVraiot1Lw5ToW
uJ7lnv+8QgcSln6awPaZBRr9zp+4Tb4Tch4r/KxbZYV6Irk1lhKDqCBg/ezq
ejZIbYl+O2Q9iIrd2TdoqrDBeOlvCvMRg6gKDPnePcwGxdrnWZ8IDqFe4oPo
9ng2KNEb0u+zMoQELDY6Ju1ih8G9qvYxaASt36EQUmdDxl/MLNxmR5Ck6vr0
1TPsMK7n90A0+Z6mscys2kewQ3ew5YVu5CgyyMpPEBxghyixdAPn8TF0WgSM
+4dwQGHXWZpC/TjyWtERTYrmgIvDyWW1/8bR+VH5HXVpHPDGbrXCRlXSt5gt
XKOJAxYtBlo0BU6gyHPlur1KnPDPN4NTcTKTKPpYvoOgISfsNo59Wrd7Er3e
/yHY8BAntNn96J+lxyRKkQ9tivLnhP3nzrRu+TSJcO3BqwcqOGGelNPrM4YM
VP7VKMG/gxOGSb14PeLAQNUfdKoTCU74Q6d1OOUaAzUHrZNdleSCZ9Ytaqzm
MxBjYxPO9uCCLVb2z0tJ707LlI/1BHLBrL3U7zZ7mGiBJ3+94FMuqGQv7a3q
xEQcfdGu7oVcsJaakfTgMRNJPT3GI8PHDY0fGvarjzHR+zDZt0wZbsi6bkrj
8AoTbb7bbVCiww255vSYFUIEOhhw4uxpG26oZMFvkqdLoPZLChwGHtyQM3i/
jNpuAp0+1x/HH8ANhbDLCHGEQEFurjVZ8dxQ4Mdzzku+BBI8oeQenMMNI6j7
8vSuEyjWYXjNppxcn4tVbHco6Smb99GqbWTsFdCW8JxAOYc9dJcnyHxydEqs
E0gPmapV/VrlhrdMToTapRPo555xl/h1PDCClbqQkk+gYQOvqL1beWD2pgO9
u8nvvgubtbQopjxw51j937v1BGLRYZaNH+OBUlf5u6XaCfRQLdOpyJcH8s2t
XVztJRBV8dz849s88GbYowjdEQIlb9B94vKMB+ZauIjlThJIjzqtqv+BB2Zw
rXbcmSIQEs0p4f6PB0qWZNckzxLIXOiiQ/svHjh09V2TxCKB2nj0/6b18sDJ
xzVdTctkf9jnwm7+5YFaG5daBkj/Tv/7rGjJxQs5UioLIOnZmwuXixSpvFAm
I+PKJBkL/N1mO6/BCzdemRUdIeNoxiLzhxEvfDvwJXQjGSuNfrkXd4QX/vCc
6q0k18vuD5D3deWFyutObMgi9wNdOwp3XeaF5tsSDg0vkP1q+XdELJQXJjir
3DpL5mtfXzw+HMcLiRq9H4CsZ+jnzeDCTF5YpNGx8xRZr18FlHlYyguDFnmX
moYJtFrCmufUxAvfcQTIRJP9CvtaelB3lBd6FPxX8bGNQJT84GH2ZV74xFmd
xk/2+92nPTebBfmgkMWszdcfZP/SOCkf5fmgH6vU0yJMoOLk8qyATXzQWciV
U5icn9nbewcO7eODbfJeo1lpBGp9ub9f/igfjP7x/ELiW9Lnz3kD/p7lg1a7
RQeHn5F+DgtLi37KBw/WpwaeDCQQ/13zvWeT+GCVvbBejA/ZryDB7p35fPD9
TYsR2gkCfbr0WHigkw/+djjzTGsXgYzOWXzII/hgcf1bg8yNBKryXLfrPhs/
fFN0aXOIHIEGnSP9tFT54TuWunS1ZSY672DNz7KdH0qovJhdGmGiVWvxpPqD
/JCV3U9ZoZGJKKYvmi5f4IeOoe9WvVOYyGzzy22lxfywnNJzSeIwE62gb1Hq
DfxQfb3i7ZDNTJRmNvknYoQfvpw5yaJNZSKhUzs/nhIRgCNmR+W29DJQ7dMe
KqeLAOxIn4rScWOgW7I8/t7+AvCl6Mv/Hu1hIL2PG+ubQgVgzrNv3lp0BorE
t0KTcwRg8gbl7s3dk8iWoC+bcApCsYqh7kDSu1wB5nZZVEGYaKOlw6I0ifK5
LuVQtAWhQ5CKw89/E4iyofzsmK0gjCsz2mWcPoE6zD06Qz8IQnqP1PFK9gl0
IiWt6JeZEHyZ5jei/GQMiWxpom45IQS/dRq6FzqNoZKSf5deXxSCl7Q+/07W
HEO0tkPavq+E4FdrM/8X5aNoiHvqtQghBG0kJktmpkeQp5t+kFWEMJS+JlNe
pz2MDEWc33p5icAS+oW4czv7ke1xx3t/L4nAjFz91lerfcgvxc772k0RuE3I
nsUN9aGUPRYG9yNEIEvCrexy0IeoV3fVJRaIkG/bZZe17b1ooY/O2sGxDlYG
Ns+Jm3SizzmjJw68WgcHlb0faF1oQJvs/OSVa9bDvyqPlN6k3UVpz2MVrres
h0rX3m5unXVGys2ltMbe9dAt7BO+7nQdSNmIKt3+ux5ymC9YMzliAYtVrlo3
RRSyPBA48T41E/w8NKf3/JQo9JQSUWrULwGn913by7UoCiuNQ/+d+loHeu8k
7DvOJgYvvNnaV2lWD46WVZnk8otBAd5Kjqr2emC+R9rUZYMYPJ8s1RM13wA2
7f56qNhYDIYcvKayoNEMWIxW7fzDxWDOTw8Lu+vtIEb/tucwXRy2yxjNCNv1
gaSdTgd5tMVh3tZb5xdi+0DWXsON6tvEoWxwxbxvdx+otJme9TYXh9Y7Epw4
XfvB3CWXW7MXxSG7ZcHf2DMDwPLz7miOcnHY/WNOk+v4EHAq3hCgXCsOez3H
+6VihsCZ8qXj+9vFIWvLUfZ3jUMgqDmb/pApDoMO8D0WNR0GGXO0TFFJCQjL
pkc2ao8Avq3s5TQPCWhfqm2n2z4KJEDPhz1+ErDvwasnUwJjQMHkv7DTgRLw
vPBJwXVgDGyzu3Ak5YkE1EwPqvF4OwZOXx7o1C2UgA5PLhkfdRoHfjcRsvom
AV9odR+eChsH1++9TLj0SwLGj0ty9RSMg6gXVh6FfRIwf0Tl72eRCVCa/+0v
5JOELloi9oYFpJ/Rm2YXMUkoZp4oe7J3ArRVBBSGbJCEJ8pecTRxT4I/LZtu
VupJwrV32fvirSfBhoVEPgtHSRjoH86TMjQJ1FmCGOfdJCHbSWsVOR4G0Oc5
VhvpKwmz13r+tamRnqaIPW8JloT3txhfkj3LAAHbQhSc0yQh2T7eskEGqDLZ
/7UhTxL+uveE13eNAaTsBOz2I0mIthWeOU9lgoJLUQ916yUh/PCb97oZE3Df
sVdJ7pCEC/OSendOMYFtlEyp1JAkVI1+HjZwjQlmspPm2RckIUt8XHX8eyYw
LvWIuMJKgXtWFQtWvzJBRJ2mFoOPAlWFJ/qy6phg459cl2ZZCpwzPE4TWWQC
L62yXx+MKbDmqvTrDECA/3Y88JA9SIEbFxPeJhwm/WF+kD3ClgJp1SyZI06k
VzybtgWcoUBPxfJnpwIIMH81poHwo8CMN+y1MfcJsO/BcR/XQApENeVNcs8I
MPR+KPHgYwoENr90pNJIT+Z/NCqNpsDspRT28M+kv8u927YkUODlor0JFpgA
DU26F1NTKTA5V7Tp5A8C0IZmheTzKNDRyfNMSR0Bzs8UfowqJvP9cnOjbxsB
MPuNPbyVFFh15OyaZy/pQdHdPdfrKNCHppKZO0x6isZ1bbqdAg2vP5ExJz2Z
rlsl5j5IgR6VHqq6pDdXYHhmB4MCg7Vt80+RHjWzsDS1mKfALVsHPw0sECDW
WWLoOwsVupqGcHwiPTvm037TgI8KvWTD31ST3t1247VUhigVJvPBy5tID99/
5JJHk6VCCSsUPErGLXHKFi+UqfCIKaXk/35WThsf599IheFeRjqGZOz/X8ad
IAMqnHISqG8m1yur8pOf3U2F/9qMP2FyP7H2Lf+dMafCXTcetc6T+ZwaW7Lp
tqFC7cgrdoFkvtkLxX8snalQOevarkNkPaw8wWEVHlRYephI9ybrtZA0Ud7h
R4WmByUL2sl+vFHmL8kKoMJz5pSbz8h+MfV/OyrdoULIv6L0muznzr2RczHh
VGj/OrNhhuz3Q2u7p0LRVHj6BVtODDmPjlPSmsFvqZApnjz9kJyX+oWe8vkU
KjxZqlFWQ86z8qn7Sm8RFbobBbGAtwSQfKvxwqaCCvWyqvq8yfNwOovQraql
Qtm/E/smyfPC8fuye84AFeqMixa0ehPAqns7myqDCgc2uDuaOBMggbEWFzdH
hc6typ+4LAiwS+B+/R1eKbjB5MPPKzrk+RhcO1QmKgW3V6Zv/iRDrvf1cjXH
Bikoy7fltCwvAcrPun8P1pOC+4N5tSJ7mOC9cQ/8tkMKsvn+q3/1gwnuS9sV
sZlIwcK7xae6s5nAtHrf51uOUrD717p49mAm0Egs1itxk4IXLdCdsTNMIBCw
JZPlnBR888KjituCCWrUlT/cDJGCLjWHZf+Q969lKGfs9XQpGHX9QXFwEgNs
crkuUZQvBVsf6x+EdxhAzHA2YqVECr5sL5bc7sYAzWODYQHNUtBst1AGk8YA
Dge+X7+6JgW9d8yuP/1sErjwBJ+8dEQa0l8f3eNuNwGMe5e6ch3JuO5n8UXN
CaBY4Ocw4yYNby7FdP5mmQDD7i5WF65Jw73LGUEX3o8Dz4pde88nSkOXpGed
TybHgN9dFjXvWWk4vsoxpW83CqycrrxLW5OGpwTPJKYrjILNW/4oTPLKwI3T
vX/uToyAuaEeqbMbZGDZizrmqesj4NpeJHDGRAYeTwm2JGKGQTDHjT+uMTJw
T7yo2Yv8QVBao3D/YqIM9FThNV+9OghYYsrkQtJl4L2K66UD2wfBDS3Bw4kl
MvByReyWjcUD4IptXHrfmAzkWHuzuPS1H/h8+OLpZCgLw30qshHpaQfz+UG7
DllYV6jM+fFIK9CLOtdmKisHlXvlWpVNckCu24pqurIctBQ++lLsTxbYsvX+
FeGNcvAelWpuqpsOtre/kWzcLQe9fqrB73WJYI/8b5vjHnIwyeml+8vhE8Au
TaveN0cOzvafFb9skI2MXC65VSnKw5O8uQVLKdVozXT7owA1eWjm84/S/fsn
wptY8zS15aGR9vth2swvtJvzEcfjrfLwWUVOk6NsLTL5kJRoZSoPF0zaPDKd
65EFs6Gv01ceDt7XdomrbUYu1/SciC/y8K7jic+nDvUgL5P6OU4sD7+ycoex
dvYgfzG/xzJl8jCamR/lsbkXhWZ8wgd+y8Mrm2PLllEvyunfSE8akIe7eeSN
1+r6EIeZzqi9gALU3ugVttQzgIQov4N81ynAA6pJe+7LDSLKkA/1roQCZITv
Ko50GkSaNzNMc+QV4Dnpb89kOwaRTY5WuqC+Atwq7MZT92sIJUtr+pUeV4C6
V6v5XKNHUNZoNV+biwI0V50Xk/g9gr7knU0k3BXg0zuWHNqco6jmcGqjjJ8C
lNjKsyHUdxTNB6tvvXxXgfy+vDfxa8cYYjtS9ftRmAI8PbE9+4HPGBLY4OmR
9EQBTghIdsW/GUPyBR9j6mIV4KpXgFfn2hjaP6m6opGpAIXPK/x3umAcWRZW
Ru3OVYDvuuHvjsFxdOyuh9bRQgVoE/q5NkFkAp2T/+B095sCFD2Vokc7PYGi
rVVKelsUYH+Y16NKnkk09lXp7jMWGlzSOOvQoMFAUY8Kr9lw0uANb8rbYlMG
gk4HfcX5aDAzN+ITxxkGil67aP9MlAb7NV7cf53IQPt3f1d/pkyDonB6/7wI
E82st5ez0aDB186fV5PVmSh+YEJUfCMNPug9/TjNmPR2iOi/KAMaLO34JZJ/
gYk+VLj8jjKnwcB/X9b9V81E1tFz36yP0KCqdjEbfy8TsZwJLRCzpUGFnNjf
aX+ZyJ4v+22UMw1e7a7ZO0ghEEfH3ufWrjTowmYke1WdQFmpbaFiZ2jwufgX
TaftBOI+yHoxyo8Gy3dFXJN0JP0n+8zD+jL5/1oWrokzBHJiqh4XC6TBfPV3
pwSvEOjzY4t9UXdoMPn+C4edEQRyOTFoaB1K5sOvd8L0NYGEdK/oiD2mQRD9
WuTdR9Kr9W8oUdE0uKaee2l3MYHWJ24StH5FgycqJT+HVJB+u1DBKpZAgw91
ygpEawnkucdxriGZBg/k+h8kWggkIU6MR6bSYFd6u4lkD4FKh273WGXRIOf5
qJthQwTy+SzRKJpHg2837aw1myCQ1L2UyoZCGlxpc6Xa/yFQmZ1RUWQxDZal
RxhlzRDonGr9J6tvZP6re1WsSc/KLLoli1bS4IW0uWJj0ruVPxZjG37S4EKs
+OwN0sMXYx89jqwj+yEsWMRJeln+rEKIVTMN6s9DoVYy/rk974poBw32UoQH
Z8n4isAB74YeGuzU+r3TmYwVuzpPRg7SoOtw/QaxVQLVpp+ztRqjwf+a3cLF
VggUeIPDTJRJ1nPo14sTpPdVD0eDhmka/CKx33SB9HWjnObmyHkaTJQXKuwg
fR30B6lardBggJjFMh+DQJolVrKirHSoULdF8+4I6d2nI+saOOnwdH2/58E+
AgW7BHBF8tFhyK2z7SfaCaS9SXjZUpgOVXy732LS1+3sicR6MTrcdNlo0quK
QHcbtwzWU+hQo+b2qFsJ6e13Va0RsnR4YOHZj1TS192XnH5Z0ujQOsW63Cid
QKH7pkvWq9ChdtRDqlwCgfpHqKkRG+lwf7tZaeUDAhV9Mk431KfDl1s//W0m
fR0d4J3Zb0CHP40zrhr6EuigcEmOnjEdBhsqZbBZkvW3jee1m9Bhuca/Jffd
BGJLFCu4bU6HPDeV2uh6BCrY4vG13oYOPaPfpccLEyiSJaL4mgMd2tUIOrv8
YyKfqv8wzZkOBw4PSAaOMxHdSbjMz4MOEy0VdxaWMlH4nc+/1geQ9bpanDl9
lonOHO79/eUmHf6Nv24xY8VEe6h89S4hdBjvf66pazsTLaYdb85+RIfyd4+X
l/EykWsjR49lPB2K7V1zW3jFQOC1dt9SEh1WzT/e43eLgaQ87AcSPtIhm+uQ
vrkrA/1eTh2ZzqbDCl/9nzRVBjKkW/2JKCP78ZHR7/VhEokzAqcNq+jw9s6j
jot3J9Gfz8kz/TV0+FlIefOE6yR6Z7q0oNdKh+1Hbkyyyk0iEb+3rA3jdChi
vXZR5OEEGsbEelERRdijun+Pq+k4Kgmliv8npghl9UPMk+TGUZy1seQpqiJ0
yXD8ajszho6MPpfOoSnCJ/czgyTixtBXYSNFK31FWMbuxCYzNIoinB7qRzoo
wnDNrXHSTiPos8CTD/HOitDJrcP/ufIIav8SKZ3hqgh9FRQjrjOHkYLkS9Yf
Poqw/Je18vPAYZT1++Ov1duKMIzlVB0lYgjVwAo3z1RFyM9/QzArcQDx0tme
71pRhO9p3oEnWruRZh0n72FWJWj+2C7W2rQbWdzkDTzGpQR75vd73PuvC0V3
iLhcFlGCjQUetvkvO5FylJx2uqISDLoRc+idVTvaw7mznHJQCeZ3bgxnJjWh
oJHLc8QrJfjux3Njk98VaF+Mb1lyghK8vu2gz/PkcsRv5h51/L0SfBGiVep+
vQw9z7DVq85Sguk2qrkpat9Q2iV9n+RvSlDxfGv/r6WvqJX979CxMSV4RHAt
IvF4Etoo79P0Y7MyvIUrzp66+h+Yq3NLCjJQhoQD2MVSVwT+Cz5+YauRMjzJ
sa9gWRSDfSPm696ZKEPtiX/nes+UgmMZGgeDHJThBuMdj1NEKsD9HWPftwQp
w88f/7AeptWCXnvX3MRqZRj679NStUAbYDL1Z1CtMtyxvffRbEIb+BfCvbmz
SRk+qz2NL29rB1KfUnLEepUhS69Thf/JDmDNO5V9Z0YZnrMRyp5N6QKVhdc/
ucuqwE0HdiYdE+gDzYcPTwXTVGCtW3+x7ZE+MDQkrxuvogI/avZU9jzrA2zr
v2e16qpA3u8LmS9k+8EOT76sA/tU4L63v6J8VAZAptSLDA1fFVidGgN20YdA
cZYH0+SiCuSfajRxPjEEfu4z1Ha9qgIfWeagqbghMOrXlR4XrAIfWos1eosN
A1o1PV0wWgWe8962KXplGDwPyEolsAr8zX4R+GaNgqR1tyf4y1Vg6fVwLvrg
KMh5b6WhWq0CPVM7TDdLjoHahrmUE00qcK/3M6pnwBjg09yZUjemAovjWU+u
bR8HNzp/fMhZrwodh7wOfIubANr+j/dclVSFsw7LTL5vE6Bb2KbXSEYVHiQ4
Q3NHJwD5QSxZpaQK/14KMFXXmwQsKXN3e7epwpN1BicfFE2CLOOvtOSdqnDF
6iZXVfckONF1q/jsblUoXzt75PTaJCgREZybM1OF74fDFzKMGOD2ZbqboLMq
7LKI3OCdxwB668ZYGk6pwn2xXP6X6xigPyUjLtpDFa7X0RBqnWQA426DRrqf
KvQpHIuKUSA9fnnNd8xfFRKmG+0WDZlkP8r4MwNUoZPgfdZ0Kybg2GthbHhH
FW6llfcIkr7I7RbvWXugCiU45ji/xDCB65WOa2XhqnC7fu1CfiYTlKWezraI
Jtcrfm31vo0J7q6/ruCeqgrrb9xSMFEiwJa03UWaWapwhKOh6eIWAgzv5Tk6
nasKC0yft//ZRwCTq5FPrherQrcBXpd6NwIsrD+qafyN7Jccc/PWi6Tn0zZU
8lSqQtfWzIXRWwTg6f24FlmnCjmN/m7Qe0mAgqu+L482q8Lb/25PVSYTwENU
f6tcB5nPE+FnqZ8IQElfqh/sUYU057fVbf8R4Mc+7JMyqAqjJ40drcoIcK33
Dt+5MVV4XIlbiFJDevGaWbI+UxXKPmHJVmkmQLvout3L06rwsKc59XYXAULT
m7vwvCo8ly4kpTJIAEOTuKt3V8h5/7sQLjFOgPHek+LmrGrQ7ma2tQVB+vya
yqd1XGqQ9SXf4ca/pN/FGOYtfGpQIrHiVMI86fv07NE4YTUo4AGvf1kiQJrJ
lRAXMTXomNPyQIb09rG+nfKqVDVYnLoSULlKkL5j/8qQVYM+NA3TYtLnX8V+
2OXQ1KD5jwnmPzL2ygj/e0VFDXJaNnrcI2OZ/daPjTTVINX/3hcH8vpffVQN
Dl012DOSO355hQA3AnrKf+irwQuaVI6eRQJoi79zeWyoBl86XRd/MkeA7gzP
VWugBqPaP+uGTRMgfP/GWKk9arCvPtm3lkEA744w48r9alD1/r7ZwFECmPuM
TF46qAbb5EQHrvUTQIPV+DndUg0O3Zk8WtVBAL6o16DOVg3q7vO+cbaRAGPK
S6M3HNWg2fexK04/SZ8X2kRonlCD2Mn3UuI3AtzrERi6d0YNGj122aqYRfrc
zyNc30cNGozfcD/xjgD7OL9vHfBTg1mJaz5EDOlrjYBQo0A1OBthysZNnpeB
ouZNk0Fq8Miok8STCwQotdDrirmjBp9Meaz3Js9bkP+Yzmw4OS/bC8t0EwI4
8+5tS4hUg5efqoevkufVKC7+tkW0GhzJ3WWtrUzOq8SuKfWtGjyUrccMZyNA
h3XOjaPJavDKrfkQTDDBlxEhVe5UNfhzgdG4v5MJrgiWX3PJVYPjjxUOOecw
gV28gqJIoRpMEd1ux3zFBFs2Xf9VVKQGY4wM25rukfen/WZ5aoUaDPgnoZN1
lAnOJyWU/W4j4/ah7fGzDGCxddXnejc5r+MJAqwdDLCx6ihFY0AN8h/uCCpG
DMAkRM7enSTP297e1CP3GMBz+02RnWtq0NtJceu4EAMcqGkvHGdXh3E5Klt2
EZNA9eSWU9E86lBiKK5/sWYSDN9l5P1dpw5z3D/zRj4kfV/v6JiiqA7PvPbK
u8IyCXa55XPYq6nDe6wLmlMdE0B+YX0Gp7Y6fHjXbXPdZ/L5J1vFcnKrOmxN
+USr9pwAjme2JUuaqkPjJlpQUfU4sGYRnwrxVYdeKb1fnPzGQOBlU/7oi+oQ
yq+x18MxkMS8qZR6VR32d9sWJgiNgZnO8aN1weoQ20hcPflhFEQV4lLZaHX4
lPon/krjCGjy84r6jNXh5MPtQjtFhoHt0Leto+s04D3voNvH5PvBjWOLR5Yl
NOB/wyHiBl19ILlB20tIRgNOCiQnJ8T0gbmSmPjNyhowZFNUBH1dH3j+2pf3
lqEG5IoFOdS5HtBiJ91BPaUB61etLUSudAD7Kr8bZrkacCah3oO5Wgdoe+Nm
uAs1YMHhL1Qz7zowico8vxdpwHStpyL7OmpBUB7FbmeFBsyr4d1u4vUbvI8v
1tFp14An0z/cyfhdBeb8+frWs2hChzfVa4yAEhBFTzBuN9OElYspObPX7yKn
19WFzy004d5/3Udj8qOQKnVWx8pGEy6rO6Z903mNvgrtl/nppAmznn369Df8
AxpYZMwUndeEJX+djo58yUN6tQbJb19oQtZzmftrjL+j34F1PGcGNOHLW2NM
ZbsG1N/RSISOakLtiCO5l/42oBnD1uY0hiacvckpuetxI5Ja7E76M68JFfQm
MneWNaHTlybhFQEt2JKd0eak3opWvLmv3tPXgqvbnPUamjqR8C++Ex8NtaDw
YtdWUY8uRNMUMqkGWvBU+sSzp4tdaP+4mLiwqRYkunZ6GEr1oMjTtE/PnbTg
CeM43/EPvUjdeefYu3taUL+7xutWdT/aWQxrKx5qwXDhgnuFggPIQnZP/thT
LegFGlQvHh5AlzpM72jFaUEX/cCdnnUDCNvZK+RlaUFbDkM1jd+DyM7iwtHv
bVpQvI9T4UXWMPLM9IfD3Vow+laJ1ubxYRQodE2FZ1ALtgcpWRnSR1DCz6BZ
M6YWvL8+XzAwcgQx94c/bWDThh+6TVTTvUZRyK6PP/o1tKHSSvDtCJZxVB6z
u3hyozZ88lchc6fOOOKZ7sie09eGXbWxybuPj6OwBKE4PqgNDa/Vn7HJH0cR
7Bd99Ky14Tp7A5ubpyZQo6PgqR1HtWF15MDvNvJ7Wzw32W6fkza8aWPkeSdv
AkW7tkEHD22YBEoWqzkm0ZsyI9HbgdrQxCTPcTl2EvXKtnI/vKUNxQ94PvpW
PIlo/udXnt3Vhhci2Q809U2iZOWkoY9PtGG2HcdonRIDpd3jLahL0oY53f1h
lHcMxOxJSOv4qA191xpzxL8x0MZtO94OZWjDe8p7p2x6GShn1Cd0sUAbuvok
VsVRmOjLgcZjCr+04eHXRXUbg5ho5a33EY16bTgzbOu8KZqJdi5x7dNv0Ybx
ZSmFFzKZCKcY6Bzo04bGO5dDUzuYiI29gW41rA2/ItOxt39IDzl6UY5PaMO+
eNaBBg4CVfC/YT0/qw1zX31PG1UnEI/rtrlrS9rQuV4yrGoHgUy/1o2HrGlD
oeenFYYPEqjGi6MxmlcHvrxzp7LSm0AiZa8qE4R04NXOP0KPSQ8ekd1alCaq
A7llI688CiW9++tMMpbVgbYCSna6SaT/ldlfVtF04AC0VmvOJJD9jbjHjSo6
sPrCzrZPXwgU26wf0q1J/t9vRuH7dwJ1aP++MqqrA/ddDPsmUEP6/p6H9/QW
HZj0SSw4rJlATj2sLivbdeDv1kR12E2g+K0vbbl26cCvrocfqA+Rfn282Uxk
nw683KB7wXSC9PvoLyBlpgNLvnqWvPlDIDfovlnRQge2VspZqpM+T45mUdO2
0YFH713nGV8g0OifGNltDjrQULngZ/cygdQPbFq/21kH1vEIPOQh/e/19ieX
uasOnDEq3ua+RqCMRbdlmzM6UK5TpmqJjIkja4Szjw58r31zxzcyrk9/CEUv
6ECJ4PKDreT1n3mlnpZf1oHHNH8n7fhHoBi3931XA3Vg1eI10z9LBAos2ayn
dUsH/vgUYPZ3nkAnZEtv997RgcXVlgV7ZwhkfPVwQ2SoDuwTO/JuhCCQclMn
3eSxDmSFz9XbxgnEp+t5cSlSB+4/IeIqRfaD+XD+e3q0Dpw7FHA+lexX3WiI
+MlXOlByxdn/YQuBcvesPy2WoAO3p4jGFv0mfR//5nNFsg7cIp7PDSrIfFY0
uQNSdeB4sD5TpJhAzvZf7LSzdKBsmXHQplxyf5GmhahCHUhbqQ45+5rc38vl
wP5icr6zUb63IgjEqCBilkt1oPT/Kjb3cCqzL46LLpTKSMLjViE1cd6z30ii
vaIoGtFlcik/lyEjwuSSfuk27teQUGqQlEJ0MUheoSjGuBwSkkOHg3PO654S
fu/vz/WsZ63v2muv59nr88dmR83wwxi9yyt3uzSywOnjwkSBJ6PXnRqzvoUF
izX8hVUnaeq/OzV76ttZ0Jbf0FZxiKZMaBzC+swCQVmArsJ2Rs/yn3/6B1iQ
MhLtUaNEU1IP7FVv8llgZcXmVEvSVLNjAPVjnAW1pdktVL+IYp1uF3MTJ+DK
9yadyngRpb5eOa9yKQEz/mr35M+LKNkaFxuFFQQspEc3vnUSUTOqY1kNqwjQ
/OOUCUGIqFcdK03RegLcztU/1a8TUoWhNqMxGwhwCMcPHR4LqUyUlsxTJGBY
MreiJ15IhcZrfklTJaA//NTL6aNCytIMwha3EDDl+lIjpUNAGU2F69htI0Aq
f8PqghcCSjf7n/an2wkozfB01rohoGQX7LXc2QSYOMvrw2EB9fFFQF2jIQHP
FQ/kalaOUqc1H0vd+oWAkD8GLc5cHqEuvXH01LImoAasrU7ZjFA33GQbnh4h
AIdK/p6zaYSquh8c23CCgFPpJ3P1a4YpBa0Da+edCbjcXRkS94NPvdfiyTkF
EqAYdstQw2aI0tVWU9f6i4DjH67xqmMGqH31rVeeZhGAaI2rExYDlL1HOHdP
DgHp1rJtOVIDVMRDYfaJPAKGysyM08L6qT7tCs2oZwS4q2RYDwdxqaStdj8L
6ghwNO29dzahl5relqz/dIwAfW5F6aG97VRPI+xfN0nAjUldnl8xh6o9Kzrq
P02AhaxwbONGDpX09KCf/nfGP6fjxVpspXQNxfLLJdhQMS/2xa6kmXI/6L2x
Rp4NRrkJpyO21FOdp82lOUZsSCpJKJpee5+qyJnjTkeyYSz0rPJ/DZqxoan/
V4sYNpDcfK3n9c24jCuQzoxjQ47/uYFE2xZcotq70yKJDS3S2kasoFZclFYV
d/c2m3k/F49kPOHgnNiwXeaFbLi4zpNzd+VHHOe/NjGtjQ3hx5ITXR/1Yel1
kbnCdjYMannOC4b7cHSxWIVJJxtiV8ucVtrKxZGi8UFBDxsOh8h8cMjl4mse
HKO9g2zIbrj207GMfhx4Mp0/PMsGZ12W7Kz/F+y4bzPsVkXw/ki0R2DzEF7S
LrmmRh3BLc6OZFjO8LabqNtiMwJCjB7y3c3HI+FlQfbaCGw6VV4v3OPjwHeH
nwQjBMfMXPmPvIexor1eyBI9BOmi5oWrd4dxxYiSZdROBLZzqlIvmoaxuPTg
YJoRgosDk9u26YzgeKuLqqVmCGRYdUOs/hHM/uwswAcRuNTN1L5ZPYo5Publ
dZYIblyzcS80GMVKibK/frBG8LW+p/Bc7CizDz6Mm7FHMP7VwLH4Zyb0t3iH
S6cQZD0I319lI8CCqXNblzsh+PE9sEMxSICRPH6z3g3Box3axnmUAFfatv/Y
4YOgqrlyvfoBIXYeLn9f4Yeg3vv8pjMeQrz0QmbaPn8EBnq+fd+Yfdzi9pkd
x4IRPAiLPvS5Vog7Pi3xOvcnArav18xzPREOPju0ay4MQUEIDpG0FmHlxcYV
f0YiqLHcOZL+uwi7qKfdS4pDcLg8SXDulgiLXHS7i1MRVE5F9U5OiHDi5Lq8
XbeY/p1hVWmuoPGO0G+BrzMQqIHv5HUlhnfv18q2ZCGgeI4uP2Eaq+g/6rPN
QTAXYPNc05rGVW8TCvtyETSUnw31c6Lxcr69xdhjBNa278ULL9E47zwonC9E
MDF5hr4Ty/CelNbgYhGC2iyJDzUMf9Hpq55HPEOw5ryTmxrD40nbxq+uLUGw
BZwtixge13vZcTi1FIGW38yewAoad1pWqKi9RKCyUmPO9y2NL/Zkjea+QtBh
KQGZ/9JYzTuiTLcKwZRNbatEJ5Nv0V0vphrBdr/hPrXPTH1JZsVDtUz+oJTd
0TzmfBpaOvvqmPtzlaBMRmksKlmWl/kOwYo3v1geHKOxy0GexnwDAnNPn9o7
UzTu6K7NtGtCIL1oKguzNLY4m6Nc0ozAPilSnZijcaVYaJpsG4I/V/T0ejM8
jpJd5Xzamfnzo+Abw9O5mqbXGz4giLS9afz//9VKpZuktbsQGI7kNs8ydryF
eGRoD4KWdUrfvBhb/BNXgtuLYCh8rkyXiQ/0eX3ZmIvA7+EupT0Mj48syZpL
H0Cg7nlf4zbD4443rgTN8BCsXTMxtJ/h8VYtp8kjfARNnOeBexgeNyvDPk9G
ELxJ+W0olOHxcku10VVCBDN77Y4pMjyu27vg7kEjULBp6J7j0jjbt7e/dpyZ
B8W2v7YzPC4vUem4cYrxy3i8fdxG4+iUO10hMwgiZv8THNxA4/ktIb92zSJQ
nfUeTKmmsW/5yVb9OQR02ka8pIzGXw4ZWSXPI1j/glf6spDGjX5z+w+Jk9Bo
HjurmkZjWNr9+uFSEuTUrhnVx9D4+c1y42UrSND3z7/zmpmnjJfBepWrSGht
nfh034XGMlZ2xUprSNgsVmeXeJTGoX0GOkEyJLCjjLY3mdLYa9msBrGehL4C
JwPjTTTuS/2QGbuBBJMUPR1fGRof2/a38rAiCV4np0TT8yK8+3CgXLYqCXWX
pILnOkS4kHv8+oI6CT8pPFO6WC3Cm/z1pB02k5Bqw99tUyDCK9OnJOS0SeDk
1XR+vyLCXf1/TIaxSdA4wbOyUxdhq4AjPv0kCZlBtvdjlotw9Qo0ukef0ftI
JssLhPjR9vH+r4YkvLvUFm7wQogvBPq0/r6PhM93zTivsBArrvQq/uUECfm+
U7PO+gL80DTkwpgdCS/HnRvZawRYPyTeNPkkCVaSR5/t4Y3iI2NF7Z3OJFTf
kiblEkdxdMf0N1cvEvg+75ybPo/g79mXTS5cJaHqVUFcsv0wjuy5vkollNH3
4hi/0RrG8vLZHCqchLj5h7oHJvgYRdW6L4slYcK4Pso8go/P+EjFXL/J9DN2
Net43hDu2Z3clvuYhEinDCeJf3nYMyAn42AhCa9SV65ZuM7Ds4Uv3ARFJGQ8
Kf7icoSH5TZ1fmWXkGCmcvOTX9sXfEhSRflVFQl3moti2psG8CtO7m9t7SRc
i+xo3ZfPxYfWlOoEdpKgqdbgXeLGxV3m72YUuklYtnzX1ieqDI+Xj0Y69jH1
nHxabpzQh3WziILhERK+TSTISXf04oquvYGxQhK+Vv79oGlvL7aQO4pZYySs
UwwVp/I/YfeIgBb/aRJgiaHpris9eKoq/NaGWRLGDZRtGvjd+Nr3VNfy7ySw
HjgE3rbuxjI78rafmifBoeY4p+DvLnzXu3x6cZGE0YT4xOWqXfh/OV9jKA==

          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
mu78dhYXRbSwHz8icBatGOVvYfHf/hHEfg==
          "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-10, 20}, {-1.414213404947067, 1.4142129235699903`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->RGBColor[0.87, 0.94, 1],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 20}, {-1.414213404947067, 1.4142129235699903`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898852889095231*^9, 3.8988529297999306`*^9, 
  3.898853014428982*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3821ccc1-a8d4-4f05-925c-96a2bf22d7b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", " ", "100"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988534000761585`*^9, 3.8988534009366508`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"655ceb13-4295-4037-aea5-f0d9f5cbe337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
   ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
   "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103", 
   ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", "137", 
   ",", "139", ",", "149", ",", "151", ",", "157", ",", "163", ",", "167", 
   ",", "173", ",", "179", ",", "181", ",", "191", ",", "193", ",", "197", 
   ",", "199", ",", "211", ",", "223", ",", "227", ",", "229", ",", "233", 
   ",", "239", ",", "241", ",", "251", ",", "257", ",", "263", ",", "269", 
   ",", "271", ",", "277", ",", "281", ",", "283", ",", "293", ",", "307", 
   ",", "311", ",", "313", ",", "317", ",", "331", ",", "337", ",", "347", 
   ",", "349", ",", "353", ",", "359", ",", "367", ",", "373", ",", "379", 
   ",", "383", ",", "389", ",", "397", ",", "401", ",", "409", ",", "419", 
   ",", "421", ",", "431", ",", "433", ",", "439", ",", "443", ",", "449", 
   ",", "457", ",", "461", ",", "463", ",", "467", ",", "479", ",", "487", 
   ",", "491", ",", "499", ",", "503", ",", "509", ",", "521", ",", "523", 
   ",", "541"}], "}"}]], "Output",
 CellChangeTimes->{{3.8988533831576095`*^9, 3.8988534019013586`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"434ad5be-b508-450e-a6be-4ab48d11b2b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
     "19", ",", "23", ",", "29", ",", "31", ",", "37", ",", "41", ",", "43", 
     ",", "47", ",", "53", ",", "59", ",", "61", ",", "67", ",", "71", ",", 
     "73", ",", "79", ",", "83", ",", "89", ",", "97", ",", "101", ",", "103",
      ",", "107", ",", "109", ",", "113", ",", "127", ",", "131", ",", "137", 
     ",", "139", ",", "149", ",", "151", ",", "157", ",", "163", ",", "167", 
     ",", "173", ",", "179", ",", "181", ",", "191", ",", "193", ",", "197", 
     ",", "199", ",", "211", ",", "223", ",", "227", ",", "229", ",", "233", 
     ",", "239", ",", "241", ",", "251", ",", "257", ",", "263", ",", "269", 
     ",", "271", ",", "277", ",", "281", ",", "283", ",", "293", ",", "307", 
     ",", "311", ",", "313", ",", "317", ",", "331", ",", "337", ",", "347", 
     ",", "349", ",", "353", ",", "359", ",", "367", ",", "373", ",", "379", 
     ",", "383", ",", "389", ",", "397", ",", "401", ",", "409", ",", "419", 
     ",", "421", ",", "431", ",", "433", ",", "439", ",", "443", ",", "449", 
     ",", "457", ",", "461", ",", "463", ",", "467", ",", "479", ",", "487", 
     ",", "491", ",", "499", ",", "503", ",", "509", ",", "521", ",", "523", 
     ",", "541"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2`", ",", "1.`", ",", "0.27`"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[61]:=",ExpressionUUID->"93ba5c06-3b25-426c-b71b-b3f3dbc75f40"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1:eJzt1clu00AYB3CLE0cfOHDgEBBCCCEU9p26ZSt7KFtZJEKhBbHV7DvMI+QR
8gh+BJ85+RFy5OhHYPFvipxncKTq6y9/fxMnM+PZvLS6sLwuSZKff/7+1uZV
z/gna9f1U3WDmqqbpt7fpm5Ud0xdt1vtqXvVLepBdat6fGrcGXV7U8Nc+3PC
Kd7Jp3kXn+U+n2/fV7jEe/hy+z7LAe/jq7y/qdkCH5Bfa3+v8jofcv1NPsyL
fIRv81H90cf4Dvudsrt8gu+x3628z1lTh8OmBu49kM/KOfB4ST7X1AnHeRg/
lJ/U/0jOE07M03hZzsMVuXkbc5zHyWP5Gff7RM5jTszzJOY8fCqflz+T8/C5
/JzxOHDvhdy6mXBcR72X8gvGW5VzmssvNjXnwFXMrcM65jx4JbcuRxzXaRHz
K65/Lef+G7l1nHPGIw5ccVz3xVv91n36Tj8XHLjiuE/S9/rtk5zjvqk58OCD
fi44sa9qznjwUT9XHPdh+km/fTjijPuf9fOA476tOblhvC/6OefABZfx+q/6
7fsRx+dAxYFrLrn/Tf8tOWecf9fPBZfc/6Hfcybn+NypOPB80M+LnHgO/Ype
Oz+SVr726s6Xxt350uTd+dKM150v/2p3vvi87nxp+v+fL78B2dpzVw==
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[
           PolygonBox[{{1, 101, 102, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
            90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 
            74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 
            58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 
            42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
            26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
            10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[2], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}, {
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[2], 
           PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
            49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
            65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
            81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
            97, 98, 99, 100}]},
          Annotation[#, "Charting`Private`Tag#1"]& ], {}}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", 
        GraphicsComplex[CompressedData["
1:eJzt1clu00AYB3CLE0cfOHDgEBBCCCEU9p26ZSt7KFtZJEKhBbHV7DvMI+QR
8gh+BJ85+RFy5OhHYPFvipxncKTq6y9/fxMnM+PZvLS6sLwuSZKff/7+1uZV
z/gna9f1U3WDmqqbpt7fpm5Ud0xdt1vtqXvVLepBdat6fGrcGXV7U8Nc+3PC
Kd7Jp3kXn+U+n2/fV7jEe/hy+z7LAe/jq7y/qdkCH5Bfa3+v8jofcv1NPsyL
fIRv81H90cf4Dvudsrt8gu+x3628z1lTh8OmBu49kM/KOfB4ST7X1AnHeRg/
lJ/U/0jOE07M03hZzsMVuXkbc5zHyWP5Gff7RM5jTszzJOY8fCqflz+T8/C5
/JzxOHDvhdy6mXBcR72X8gvGW5VzmssvNjXnwFXMrcM65jx4JbcuRxzXaRHz
K65/Lef+G7l1nHPGIw5ccVz3xVv91n36Tj8XHLjiuE/S9/rtk5zjvqk58OCD
fi44sa9qznjwUT9XHPdh+km/fTjijPuf9fOA476tOblhvC/6OefABZfx+q/6
7fsRx+dAxYFrLrn/Tf8tOWecf9fPBZfc/6Hfcybn+NypOPB80M+LnHgO/Ype
Oz+SVr726s6Xxt350uTd+dKM150v/2p3vvi87nxp+v+fL78B2dpzVw==
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              
              Polygon[{{1, 101, 102, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
               90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75,
                74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 
               59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44,
                43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
               28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13,
                12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
              18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
              34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
              50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
              66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
              82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
              98, 99, 100}]}, "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             
             Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
               18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
               34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
               50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
               66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
               82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
               98, 99, 100}]}, "Charting`Private`Tag#1"], {}}}], <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0., 100.}, {0, 541.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                Opacity[0.2]], 
               GraphicsGroup[{{
                  Polygon[CompressedData["
1:eJxt1Elu02AUB/AnViy7YMGCRUAIIYRQmGdqCpQymzKVQcIUWhBTXeaZ7wg5
Qo6QI/gIPkKWLH0EQP4ZKRGRopdf/u99/hIPW5fXFlc2RMTqn/ff2r6aWR+y
KXvdzf7rX6mt1VJblzjxAmdc/7QOl1zdaWufE49+mOeSg5vv5m+b58TNN/Nc
c/CAq1ttneHEo6/mueTo+rm66XhfzHPOGfc5ePDZ/A3rceL6k3nOObj5aH7R
fjlxzhk3H8xzydV1x+fE9XvzPOLo+rnK5e/Mc/3WPA84uOR0ra39Luf8jfyq
9dflPOB0RX+Xc1PKL9sPB5ddfsnv6XIu1uQX29p7LefxK/kFOQcPX8oXrMfB
4xfy8/Lnch4/k89bj4N7XX5O/1M5D1flZ63PwcMV+RnzT+RccJrT/1jO42X5
aTkHF4/kmf1ycFHwbFurh3yqrdkDPsn3+YT+e3ycu+fUMf2dj7LnThxhz4E4
bN59GYfYfRYH9btv4oDcfRD72XUd+9raXbexl12X0WfXUexh5z12s/MYu9h5
i508xztU/2NsV/1vsU31O6M3ue/YMrnP2Dx53Ng0dZyZqbmNU33x7/vfA6u7
YA==
                   "]]}}]}, {}, {}}, {{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.009166666666666668], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1:eJxd1Elu1EAYBlCLFUsvWLBg0SCEEEKomWdiAoEwmzCFQaIJCSCGxMwz1BH6
CD6Cj+Aj+AhesvQRAPnVwh0p+vLy+XecripvX9lYWtuUJMnqv+//2X91c37I
hrl5JrfIVG6b+f0uuVXumbluvxzJg3KHPCp3ytMz952Tu/sM88O/E87zXl7g
fXyRx3x5+FzhGh/g68PnrHM+xDf5cJ/ZEh/R3xr+X/VtPub6u3ycl/kE3+eT
5qNP8QP2OWUP+Qw/Yp9b/ZizPieTPgOPnujP6jlwuaKf77PluA7lU/0586t6
bjmxTuWanifP9Nat5LiO7XP9Bc/7Qs8lJ9a5jT1PXuoX9a/0PHmtv+R+HHj0
Rm/ftBz30Whdf8X9NvScFvqrfRYcuIm9fdjFnvO3evtyynGfVrG/4fp3eh6/
19vHBWc85cANx31ffTBv36cfzXPFgRuO5yT9ZN45KTiem44D55/Nc8WJc9Vx
xvkX89xwPIfpV/PO4ZQzHn8zzznHc9txcsf9vpvnggNXXMfrf5h37qcc3wMN
B+645vFP8/f0nHHxyzxXXPP4t3nvmYLje6fhwIvBPC9z4j30J2R/AZmOuZY=

                 "]]}, "Charting`Private`Tag#1"]}, {
              Annotation[{
                Directive[
                 PointSize[0.009166666666666668], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], {
                 Point[{1., 2.}], 
                 Point[{2., 3.}], 
                 Point[{3., 5.}], 
                 Point[{4., 7.}], 
                 Point[{5., 11.}], 
                 Point[{6., 13.}], 
                 Point[{7., 17.}], 
                 Point[{8., 19.}], 
                 Point[{9., 23.}], 
                 Point[{10., 29.}], 
                 Point[{11., 31.}], 
                 Point[{12., 37.}], 
                 Point[{13., 41.}], 
                 Point[{14., 43.}], 
                 Point[{15., 47.}], 
                 Point[{16., 53.}], 
                 Point[{17., 59.}], 
                 Point[{18., 61.}], 
                 Point[{19., 67.}], 
                 Point[{20., 71.}], 
                 Point[{21., 73.}], 
                 Point[{22., 79.}], 
                 Point[{23., 83.}], 
                 Point[{24., 89.}], 
                 Point[{25., 97.}], 
                 Point[{26., 101.}], 
                 Point[{27., 103.}], 
                 Point[{28., 107.}], 
                 Point[{29., 109.}], 
                 Point[{30., 113.}], 
                 Point[{31., 127.}], 
                 Point[{32., 131.}], 
                 Point[{33., 137.}], 
                 Point[{34., 139.}], 
                 Point[{35., 149.}], 
                 Point[{36., 151.}], 
                 Point[{37., 157.}], 
                 Point[{38., 163.}], 
                 Point[{39., 167.}], 
                 Point[{40., 173.}], 
                 Point[{41., 179.}], 
                 Point[{42., 181.}], 
                 Point[{43., 191.}], 
                 Point[{44., 193.}], 
                 Point[{45., 197.}], 
                 Point[{46., 199.}], 
                 Point[{47., 211.}], 
                 Point[{48., 223.}], 
                 Point[{49., 227.}], 
                 Point[{50., 229.}], 
                 Point[{51., 233.}], 
                 Point[{52., 239.}], 
                 Point[{53., 241.}], 
                 Point[{54., 251.}], 
                 Point[{55., 257.}], 
                 Point[{56., 263.}], 
                 Point[{57., 269.}], 
                 Point[{58., 271.}], 
                 Point[{59., 277.}], 
                 Point[{60., 281.}], 
                 Point[{61., 283.}], 
                 Point[{62., 293.}], 
                 Point[{63., 307.}], 
                 Point[{64., 311.}], 
                 Point[{65., 313.}], 
                 Point[{66., 317.}], 
                 Point[{67., 331.}], 
                 Point[{68., 337.}], 
                 Point[{69., 347.}], 
                 Point[{70., 349.}], 
                 Point[{71., 353.}], 
                 Point[{72., 359.}], 
                 Point[{73., 367.}], 
                 Point[{74., 373.}], 
                 Point[{75., 379.}], 
                 Point[{76., 383.}], 
                 Point[{77., 389.}], 
                 Point[{78., 397.}], 
                 Point[{79., 401.}], 
                 Point[{80., 409.}], 
                 Point[{81., 419.}], 
                 Point[{82., 421.}], 
                 Point[{83., 431.}], 
                 Point[{84., 433.}], 
                 Point[{85., 439.}], 
                 Point[{86., 443.}], 
                 Point[{87., 449.}], 
                 Point[{88., 457.}], 
                 Point[{89., 461.}], 
                 Point[{90., 463.}], 
                 Point[{91., 467.}], 
                 Point[{92., 479.}], 
                 Point[{93., 487.}], 
                 Point[{94., 491.}], 
                 Point[{95., 499.}], 
                 Point[{96., 503.}], 
                 Point[{97., 509.}], 
                 Point[{98., 521.}], 
                 Point[{99., 523.}], 
                 Point[{100., 541.}]}}, "Charting`Private`Tag#1"], {}}}, 
           "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 100.}, {0, 541.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               Opacity[0.2]], 
              GraphicsGroup[{{
                 Polygon[CompressedData["
1:eJxt1Elu02AUB/AnViy7YMGCRUAIIYRQmGdqCpQymzKVQcIUWhBTXeaZ7wg5
Qo6QI/gIPkKWLH0EQP4ZKRGRopdf/u99/hIPW5fXFlc2RMTqn/ff2r6aWR+y
KXvdzf7rX6mt1VJblzjxAmdc/7QOl1zdaWufE49+mOeSg5vv5m+b58TNN/Nc
c/CAq1ttneHEo6/mueTo+rm66XhfzHPOGfc5ePDZ/A3rceL6k3nOObj5aH7R
fjlxzhk3H8xzydV1x+fE9XvzPOLo+rnK5e/Mc/3WPA84uOR0ra39Luf8jfyq
9dflPOB0RX+Xc1PKL9sPB5ddfsnv6XIu1uQX29p7LefxK/kFOQcPX8oXrMfB
4xfy8/Lnch4/k89bj4N7XX5O/1M5D1flZ63PwcMV+RnzT+RccJrT/1jO42X5
aTkHF4/kmf1ycFHwbFurh3yqrdkDPsn3+YT+e3ycu+fUMf2dj7LnThxhz4E4
bN59GYfYfRYH9btv4oDcfRD72XUd+9raXbexl12X0WfXUexh5z12s/MYu9h5
i508xztU/2NsV/1vsU31O6M3ue/YMrnP2Dx53Ng0dZyZqbmNU33x7/vfA6u7
YA==
                  "]]}}]}, {}, {}}, {{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxd1Elu1EAYBlCLFUsvWLBg0SCEEEKomWdiAoEwmzCFQaIJCSCGxMwz1BH6
CD6Cj+Aj+AhesvQRAPnVwh0p+vLy+XecripvX9lYWtuUJMnqv+//2X91c37I
hrl5JrfIVG6b+f0uuVXumbluvxzJg3KHPCp3ytMz952Tu/sM88O/E87zXl7g
fXyRx3x5+FzhGh/g68PnrHM+xDf5cJ/ZEh/R3xr+X/VtPub6u3ycl/kE3+eT
5qNP8QP2OWUP+Qw/Yp9b/ZizPieTPgOPnujP6jlwuaKf77PluA7lU/0586t6
bjmxTuWanifP9Nat5LiO7XP9Bc/7Qs8lJ9a5jT1PXuoX9a/0PHmtv+R+HHj0
Rm/ftBz30Whdf8X9NvScFvqrfRYcuIm9fdjFnvO3evtyynGfVrG/4fp3eh6/
19vHBWc85cANx31ffTBv36cfzXPFgRuO5yT9ZN45KTiem44D55/Nc8WJc9Vx
xvkX89xwPIfpV/PO4ZQzHn8zzznHc9txcsf9vpvnggNXXMfrf5h37qcc3wMN
B+645vFP8/f0nHHxyzxXXPP4t3nvmYLje6fhwIvBPC9z4j30J2R/AZmOuZY=

                "]]}, "Charting`Private`Tag#1"]}, {
             Annotation[{
               Directive[
                PointSize[0.009166666666666668], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], {
                Point[{1., 2.}], 
                Point[{2., 3.}], 
                Point[{3., 5.}], 
                Point[{4., 7.}], 
                Point[{5., 11.}], 
                Point[{6., 13.}], 
                Point[{7., 17.}], 
                Point[{8., 19.}], 
                Point[{9., 23.}], 
                Point[{10., 29.}], 
                Point[{11., 31.}], 
                Point[{12., 37.}], 
                Point[{13., 41.}], 
                Point[{14., 43.}], 
                Point[{15., 47.}], 
                Point[{16., 53.}], 
                Point[{17., 59.}], 
                Point[{18., 61.}], 
                Point[{19., 67.}], 
                Point[{20., 71.}], 
                Point[{21., 73.}], 
                Point[{22., 79.}], 
                Point[{23., 83.}], 
                Point[{24., 89.}], 
                Point[{25., 97.}], 
                Point[{26., 101.}], 
                Point[{27., 103.}], 
                Point[{28., 107.}], 
                Point[{29., 109.}], 
                Point[{30., 113.}], 
                Point[{31., 127.}], 
                Point[{32., 131.}], 
                Point[{33., 137.}], 
                Point[{34., 139.}], 
                Point[{35., 149.}], 
                Point[{36., 151.}], 
                Point[{37., 157.}], 
                Point[{38., 163.}], 
                Point[{39., 167.}], 
                Point[{40., 173.}], 
                Point[{41., 179.}], 
                Point[{42., 181.}], 
                Point[{43., 191.}], 
                Point[{44., 193.}], 
                Point[{45., 197.}], 
                Point[{46., 199.}], 
                Point[{47., 211.}], 
                Point[{48., 223.}], 
                Point[{49., 227.}], 
                Point[{50., 229.}], 
                Point[{51., 233.}], 
                Point[{52., 239.}], 
                Point[{53., 241.}], 
                Point[{54., 251.}], 
                Point[{55., 257.}], 
                Point[{56., 263.}], 
                Point[{57., 269.}], 
                Point[{58., 271.}], 
                Point[{59., 277.}], 
                Point[{60., 281.}], 
                Point[{61., 283.}], 
                Point[{62., 293.}], 
                Point[{63., 307.}], 
                Point[{64., 311.}], 
                Point[{65., 313.}], 
                Point[{66., 317.}], 
                Point[{67., 331.}], 
                Point[{68., 337.}], 
                Point[{69., 347.}], 
                Point[{70., 349.}], 
                Point[{71., 353.}], 
                Point[{72., 359.}], 
                Point[{73., 367.}], 
                Point[{74., 373.}], 
                Point[{75., 379.}], 
                Point[{76., 383.}], 
                Point[{77., 389.}], 
                Point[{78., 397.}], 
                Point[{79., 401.}], 
                Point[{80., 409.}], 
                Point[{81., 419.}], 
                Point[{82., 421.}], 
                Point[{83., 431.}], 
                Point[{84., 433.}], 
                Point[{85., 439.}], 
                Point[{86., 443.}], 
                Point[{87., 449.}], 
                Point[{88., 457.}], 
                Point[{89., 461.}], 
                Point[{90., 463.}], 
                Point[{91., 467.}], 
                Point[{92., 479.}], 
                Point[{93., 487.}], 
                Point[{94., 491.}], 
                Point[{95., 499.}], 
                Point[{96., 503.}], 
                Point[{97., 509.}], 
                Point[{98., 521.}], 
                Point[{99., 523.}], 
                Point[{100., 541.}]}}, "Charting`Private`Tag#1"], {}}}, 
          "GCFlag" -> True|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[
     GraphicsComplex[CompressedData["
1:eJzt1clu00AYB3CLE0cfOHDgEBBCCCEU9p26ZSt7KFtZJEKhBbHV7DvMI+QR
8gh+BJ85+RFy5OhHYPFvipxncKTq6y9/fxMnM+PZvLS6sLwuSZKff/7+1uZV
z/gna9f1U3WDmqqbpt7fpm5Ud0xdt1vtqXvVLepBdat6fGrcGXV7U8Nc+3PC
Kd7Jp3kXn+U+n2/fV7jEe/hy+z7LAe/jq7y/qdkCH5Bfa3+v8jofcv1NPsyL
fIRv81H90cf4Dvudsrt8gu+x3628z1lTh8OmBu49kM/KOfB4ST7X1AnHeRg/
lJ/U/0jOE07M03hZzsMVuXkbc5zHyWP5Gff7RM5jTszzJOY8fCqflz+T8/C5
/JzxOHDvhdy6mXBcR72X8gvGW5VzmssvNjXnwFXMrcM65jx4JbcuRxzXaRHz
K65/Lef+G7l1nHPGIw5ccVz3xVv91n36Tj8XHLjiuE/S9/rtk5zjvqk58OCD
fi44sa9qznjwUT9XHPdh+km/fTjijPuf9fOA476tOblhvC/6OefABZfx+q/6
7fsRx+dAxYFrLrn/Tf8tOWecf9fPBZfc/6Hfcybn+NypOPB80M+LnHgO/Ype
Oz+SVr726s6Xxt350uTd+dKM150v/2p3vvi87nxp+v+fL78B2dpzVw==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{1, 101, 102, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90,
             89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
            73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 
            57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 
            41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 
            25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
             8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {}}, {{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
           35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
            85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}]}, "Charting`Private`Tag#1"]}, {
        Annotation[{
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}]}, "Charting`Private`Tag#1"], {}}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0., 100.}, {0, 541.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{{
               Polygon[CompressedData["
1:eJxt1Elu02AUB/AnViy7YMGCRUAIIYRQmGdqCpQymzKVQcIUWhBTXeaZ7wg5
Qo6QI/gIPkKWLH0EQP4ZKRGRopdf/u99/hIPW5fXFlc2RMTqn/ff2r6aWR+y
KXvdzf7rX6mt1VJblzjxAmdc/7QOl1zdaWufE49+mOeSg5vv5m+b58TNN/Nc
c/CAq1ttneHEo6/mueTo+rm66XhfzHPOGfc5ePDZ/A3rceL6k3nOObj5aH7R
fjlxzhk3H8xzydV1x+fE9XvzPOLo+rnK5e/Mc/3WPA84uOR0ra39Luf8jfyq
9dflPOB0RX+Xc1PKL9sPB5ddfsnv6XIu1uQX29p7LefxK/kFOQcPX8oXrMfB
4xfy8/Lnch4/k89bj4N7XX5O/1M5D1flZ63PwcMV+RnzT+RccJrT/1jO42X5
aTkHF4/kmf1ycFHwbFurh3yqrdkDPsn3+YT+e3ycu+fUMf2dj7LnThxhz4E4
bN59GYfYfRYH9btv4oDcfRD72XUd+9raXbexl12X0WfXUexh5z12s/MYu9h5
i508xztU/2NsV/1vsU31O6M3ue/YMrnP2Dx53Ng0dZyZqbmNU33x7/vfA6u7
YA==
                "]]}}]}, {}, {}}, {{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxd1Elu1EAYBlCLFUsvWLBg0SCEEEKomWdiAoEwmzCFQaIJCSCGxMwz1BH6
CD6Cj+Aj+AhesvQRAPnVwh0p+vLy+XecripvX9lYWtuUJMnqv+//2X91c37I
hrl5JrfIVG6b+f0uuVXumbluvxzJg3KHPCp3ytMz952Tu/sM88O/E87zXl7g
fXyRx3x5+FzhGh/g68PnrHM+xDf5cJ/ZEh/R3xr+X/VtPub6u3ycl/kE3+eT
5qNP8QP2OWUP+Qw/Yp9b/ZizPieTPgOPnujP6jlwuaKf77PluA7lU/0586t6
bjmxTuWanifP9Nat5LiO7XP9Bc/7Qs8lJ9a5jT1PXuoX9a/0PHmtv+R+HHj0
Rm/ftBz30Whdf8X9NvScFvqrfRYcuIm9fdjFnvO3evtyynGfVrG/4fp3eh6/
19vHBWc85cANx31ffTBv36cfzXPFgRuO5yT9ZN45KTiem44D55/Nc8WJc9Vx
xvkX89xwPIfpV/PO4ZQzHn8zzznHc9txcsf9vpvnggNXXMfrf5h37qcc3wMN
B+645vFP8/f0nHHxyzxXXPP4t3nvmYLje6fhwIvBPC9z4j30J2R/AZmOuZY=

              "]]}, "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[0.009166666666666668], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], {
              Point[{1., 2.}], 
              Point[{2., 3.}], 
              Point[{3., 5.}], 
              Point[{4., 7.}], 
              Point[{5., 11.}], 
              Point[{6., 13.}], 
              Point[{7., 17.}], 
              Point[{8., 19.}], 
              Point[{9., 23.}], 
              Point[{10., 29.}], 
              Point[{11., 31.}], 
              Point[{12., 37.}], 
              Point[{13., 41.}], 
              Point[{14., 43.}], 
              Point[{15., 47.}], 
              Point[{16., 53.}], 
              Point[{17., 59.}], 
              Point[{18., 61.}], 
              Point[{19., 67.}], 
              Point[{20., 71.}], 
              Point[{21., 73.}], 
              Point[{22., 79.}], 
              Point[{23., 83.}], 
              Point[{24., 89.}], 
              Point[{25., 97.}], 
              Point[{26., 101.}], 
              Point[{27., 103.}], 
              Point[{28., 107.}], 
              Point[{29., 109.}], 
              Point[{30., 113.}], 
              Point[{31., 127.}], 
              Point[{32., 131.}], 
              Point[{33., 137.}], 
              Point[{34., 139.}], 
              Point[{35., 149.}], 
              Point[{36., 151.}], 
              Point[{37., 157.}], 
              Point[{38., 163.}], 
              Point[{39., 167.}], 
              Point[{40., 173.}], 
              Point[{41., 179.}], 
              Point[{42., 181.}], 
              Point[{43., 191.}], 
              Point[{44., 193.}], 
              Point[{45., 197.}], 
              Point[{46., 199.}], 
              Point[{47., 211.}], 
              Point[{48., 223.}], 
              Point[{49., 227.}], 
              Point[{50., 229.}], 
              Point[{51., 233.}], 
              Point[{52., 239.}], 
              Point[{53., 241.}], 
              Point[{54., 251.}], 
              Point[{55., 257.}], 
              Point[{56., 263.}], 
              Point[{57., 269.}], 
              Point[{58., 271.}], 
              Point[{59., 277.}], 
              Point[{60., 281.}], 
              Point[{61., 283.}], 
              Point[{62., 293.}], 
              Point[{63., 307.}], 
              Point[{64., 311.}], 
              Point[{65., 313.}], 
              Point[{66., 317.}], 
              Point[{67., 331.}], 
              Point[{68., 337.}], 
              Point[{69., 347.}], 
              Point[{70., 349.}], 
              Point[{71., 353.}], 
              Point[{72., 359.}], 
              Point[{73., 367.}], 
              Point[{74., 373.}], 
              Point[{75., 379.}], 
              Point[{76., 383.}], 
              Point[{77., 389.}], 
              Point[{78., 397.}], 
              Point[{79., 401.}], 
              Point[{80., 409.}], 
              Point[{81., 419.}], 
              Point[{82., 421.}], 
              Point[{83., 431.}], 
              Point[{84., 433.}], 
              Point[{85., 439.}], 
              Point[{86., 443.}], 
              Point[{87., 449.}], 
              Point[{88., 457.}], 
              Point[{89., 461.}], 
              Point[{90., 463.}], 
              Point[{91., 467.}], 
              Point[{92., 479.}], 
              Point[{93., 487.}], 
              Point[{94., 491.}], 
              Point[{95., 499.}], 
              Point[{96., 503.}], 
              Point[{97., 509.}], 
              Point[{98., 521.}], 
              Point[{99., 523.}], 
              Point[{100., 541.}]}}, "Charting`Private`Tag#1"], {}}}, 
        "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    RGBColor[0.2, 1., 0.27], 
    Thickness[Large]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0, 541.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898853533161535*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"a0faa608-e886-4f04-b582-c393ac76cd43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1234", "/", "2468"}]], "Input",
 CellChangeTimes->{{3.8988536587452564`*^9, 3.898853663020445*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"40e37e4f-99de-497f-af71-f9f657266748"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.898853664011661*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"581758f5-2911-413a-b13b-47964bbe418c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1234", "2468"]], "Input",
 CellChangeTimes->{{3.898853676168687*^9, 3.8988536820156527`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"13f2925a-a8cb-4fb4-908a-421d0e34a358"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.898853682952324*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2502c5dd-138b-449a-8f94-5970beaafc73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1.35", "2.46"]], "Input",
 CellChangeTimes->{{3.8988536885057592`*^9, 3.898853693864567*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"b5008429-772d-4a80-8bf0-61e8ee966b12"],

Cell[BoxData["0.5487804878048781`"], "Output",
 CellChangeTimes->{3.898853694678485*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"917dd700-9c25-41a6-98c9-4bbfc1c2dd1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1234", "5678"], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.898853736036366*^9, 3.898853748869256*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c86af11f-74b0-4394-80d9-0f08967b882e"],

Cell[BoxData["0.2173300457907713984`4."], "Output",
 CellChangeTimes->{3.898853749695665*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"81abf08f-87b4-4695-8ef2-1e6afd5cfb17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "sum from 1 to 10", Typeset`newq$$ = 
   "sum from 1 to 10", Typeset`chosen$$ = "Sum[n, {n, 1, 10}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "sum from 1 to 10", 
               Defer[
                Sum[$CellContext`n, {$CellContext`n, 1, 10}]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "sum from 1 to 10", 
                  Defer[
                   Sum[$CellContext`n, {$CellContext`n, 1, 10}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Sum", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Sum", "[", 
                  RowBox[{"n", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Sum", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "sum from 1 to 10", 
                   Defer[
                    Sum[$CellContext`n, {$CellContext`n, 1, 10}]], 
                   "Fast parse"]; Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "sum from 1 to 10", 
                    Defer[
                    Sum[$CellContext`n, {$CellContext`n, 1, 10}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Sum", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Sum", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Sum", "[", 
                    RowBox[{"n", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"n", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[66]:=",ExpressionUUID->"b4a378ac-3fed-4c75-b9dd-54021d5c61bc"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.898853879007429*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"6ba34b35-d033-4e33-8d41-f9c51b122256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "+", "5"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988538900261602`*^9, 3.8988538986635075`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"c6fe6ca8-bc0e-42bc-956a-6653a225495e"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwtxWlQ1GUAB+B1BQM5xXVdloVl9+ValhdJU1hs/P/AcETFCyhACgRJyQlC
0RkK4jYGRRSQuCLjECUijp101AzRVZJUBgo0DeUMCGQhLjWgmnk/PPPIwqL3
RvB5PJ7Pf/7/0YTPmzyeljse72vI44lwx/j7rJ0GWq7h1uHyDr4IjUrTkRKh
lhtbnuZepSvC6Yj2MhXVcgcK1Yd2Goiw+fG7gqNBWm7PD6s0JUIRaptCZgfU
Ws5J25WgoiKkZ8f82Bo5wfWEB48fCRJhLT3n/WXHJLdje0T7gFoE2f6IeoP+
aW5rQOAoP84c17J1zNKa5rhxkqwjcxGjwmjZutLTr7nI1JunqvrEkKedKT9X
uMDpyfoPRVywwIVXsSe2XuHBN8F9s02wBOlrBnvf8uSjefXRGLHMEoanMqST
t5di2ZbbJnG9lhiOyAmop7qYWutd8yjfCqbXQ1XP1Mug90FdSXSQFFnZ+UIT
uR76yis1qXrWaMic7zDJ0EdN2OLU0jBryPgKVaKhATKw7YH0ljUGZ64VaY8b
4up8rd11SxmmD66saFs0wvxjHcVUogw1vJKs5GQTKHkHw0OfyxBscEdVFGuK
Wt0+iY+7HBl+53nfuq7AO467k34rliMkuFZzfWwFXJy7wrpn5NhXVtqt22gG
5z27xlMCCZTxVQcvx66E8EZH476rBJWC/heRCgH2Lj8yqxbYwOsv/j3fMQHK
ji0ZuHTcBmeS/Ms3VazC1qbqPdJ2G9Reaho9+54QXX6hMy1KW0yaGmdKxKsR
p/eGl3GWLXo2ZNtefLganxTfNfv1T1tMF00KDueJ8KlPXOb6bXb4IycqNt/f
HFHeru6t1XaI9rZqb9YX44qNSWSPjj3sN9Wl2t0XQyB95JH7oT0yJ46tO5lq
Ac3c1ULNTXs0ufn5BmyQIFRSrXCycIDkhuBu8JwExiGZ4c7xDiB8fVXYd5Yw
S06T1Hc6YFfas4XSGCs4NEcnPnRTwE4z3PzUQYrc3tj9UXkKtBUazqY8lWJo
x4nPPF4osLszg6vbZc12hDFXmfJ1tTXbEd13GqIdjWRsJQoKfskb/ljGVuKi
N0+laJGxlbhnbvuFjqOc7QTPn8P9QtPlbCdUNNcGarvlbCeInozoSUDYFL3t
cG0pImyKUoftwvdLCJsi8HP/6YmvCJuiTfFRo8U3hE1xIyl3TXQVYVMUOw/a
C9WETeGXeVJ04D5hU5g+Pzc794CwKVrXn+/MaiNsCs8edd7lDsKmcHHrNjX4
nbApDAdd9BsGCZuiZePGoS1DhE2Retbr7pNhwqZ49XZQuu4YYVMM5aYuCfyb
sCkqhrOej00RNkUIV/BTygxhU3SO1CTUvCRsihxcDvZ4TdgUO/Nvbuz8h7Ap
lo+2ig8vEDaFxqPz5eIiYVP8C6ZQF64=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwtxWlQ1GUAB+B1BQM5xXVdloVl9+ValhdJU1hs/P/AcETFCyhACgRJyQlC
0RkK4jYGRRSQuCLjECUijp101AzRVZJUBgo0DeUMCGQhLjWgmnk/PPPIwqL3
RvB5PJ7Pf/7/0YTPmzyeljse72vI44lwx/j7rJ0GWq7h1uHyDr4IjUrTkRKh
lhtbnuZepSvC6Yj2MhXVcgcK1Yd2Goiw+fG7gqNBWm7PD6s0JUIRaptCZgfU
Ws5J25WgoiKkZ8f82Bo5wfWEB48fCRJhLT3n/WXHJLdje0T7gFoE2f6IeoP+
aW5rQOAoP84c17J1zNKa5rhxkqwjcxGjwmjZutLTr7nI1JunqvrEkKedKT9X
uMDpyfoPRVywwIVXsSe2XuHBN8F9s02wBOlrBnvf8uSjefXRGLHMEoanMqST
t5di2ZbbJnG9lhiOyAmop7qYWutd8yjfCqbXQ1XP1Mug90FdSXSQFFnZ+UIT
uR76yis1qXrWaMic7zDJ0EdN2OLU0jBryPgKVaKhATKw7YH0ljUGZ64VaY8b
4up8rd11SxmmD66saFs0wvxjHcVUogw1vJKs5GQTKHkHw0OfyxBscEdVFGuK
Wt0+iY+7HBl+53nfuq7AO467k34rliMkuFZzfWwFXJy7wrpn5NhXVtqt22gG
5z27xlMCCZTxVQcvx66E8EZH476rBJWC/heRCgH2Lj8yqxbYwOsv/j3fMQHK
ji0ZuHTcBmeS/Ms3VazC1qbqPdJ2G9Reaho9+54QXX6hMy1KW0yaGmdKxKsR
p/eGl3GWLXo2ZNtefLganxTfNfv1T1tMF00KDueJ8KlPXOb6bXb4IycqNt/f
HFHeru6t1XaI9rZqb9YX44qNSWSPjj3sN9Wl2t0XQyB95JH7oT0yJ46tO5lq
Ac3c1ULNTXs0ufn5BmyQIFRSrXCycIDkhuBu8JwExiGZ4c7xDiB8fVXYd5Yw
S06T1Hc6YFfas4XSGCs4NEcnPnRTwE4z3PzUQYrc3tj9UXkKtBUazqY8lWJo
x4nPPF4osLszg6vbZc12hDFXmfJ1tTXbEd13GqIdjWRsJQoKfskb/ljGVuKi
N0+laJGxlbhnbvuFjqOc7QTPn8P9QtPlbCdUNNcGarvlbCeInozoSUDYFL3t
cG0pImyKUoftwvdLCJsi8HP/6YmvCJuiTfFRo8U3hE1xIyl3TXQVYVMUOw/a
C9WETeGXeVJ04D5hU5g+Pzc794CwKVrXn+/MaiNsCs8edd7lDsKmcHHrNjX4
nbApDAdd9BsGCZuiZePGoS1DhE2Retbr7pNhwqZ49XZQuu4YYVMM5aYuCfyb
sCkqhrOej00RNkUIV/BTygxhU3SO1CTUvCRsihxcDvZ4TdgUO/Nvbuz8h7Ap
lo+2ig8vEDaFxqPz5eIiYVP8C6ZQF64=
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{1, 10}, {6.000000183673469, 14.99999981632653}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {1.0000000000000022`, 6.000000183673483}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{1, 10}, {6.000000183673469, 14.99999981632653}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {1.0000000000000022`, 6.000000183673483}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwtxWlQ1GUAB+B1BQM5xXVdloVl9+ValhdJU1hs/P/AcETFCyhACgRJyQlC
0RkK4jYGRRSQuCLjECUijp101AzRVZJUBgo0DeUMCGQhLjWgmnk/PPPIwqL3
RvB5PJ7Pf/7/0YTPmzyeljse72vI44lwx/j7rJ0GWq7h1uHyDr4IjUrTkRKh
lhtbnuZepSvC6Yj2MhXVcgcK1Yd2Goiw+fG7gqNBWm7PD6s0JUIRaptCZgfU
Ws5J25WgoiKkZ8f82Bo5wfWEB48fCRJhLT3n/WXHJLdje0T7gFoE2f6IeoP+
aW5rQOAoP84c17J1zNKa5rhxkqwjcxGjwmjZutLTr7nI1JunqvrEkKedKT9X
uMDpyfoPRVywwIVXsSe2XuHBN8F9s02wBOlrBnvf8uSjefXRGLHMEoanMqST
t5di2ZbbJnG9lhiOyAmop7qYWutd8yjfCqbXQ1XP1Mug90FdSXSQFFnZ+UIT
uR76yis1qXrWaMic7zDJ0EdN2OLU0jBryPgKVaKhATKw7YH0ljUGZ64VaY8b
4up8rd11SxmmD66saFs0wvxjHcVUogw1vJKs5GQTKHkHw0OfyxBscEdVFGuK
Wt0+iY+7HBl+53nfuq7AO467k34rliMkuFZzfWwFXJy7wrpn5NhXVtqt22gG
5z27xlMCCZTxVQcvx66E8EZH476rBJWC/heRCgH2Lj8yqxbYwOsv/j3fMQHK
ji0ZuHTcBmeS/Ms3VazC1qbqPdJ2G9Reaho9+54QXX6hMy1KW0yaGmdKxKsR
p/eGl3GWLXo2ZNtefLganxTfNfv1T1tMF00KDueJ8KlPXOb6bXb4IycqNt/f
HFHeru6t1XaI9rZqb9YX44qNSWSPjj3sN9Wl2t0XQyB95JH7oT0yJ46tO5lq
Ac3c1ULNTXs0ufn5BmyQIFRSrXCycIDkhuBu8JwExiGZ4c7xDiB8fVXYd5Yw
S06T1Hc6YFfas4XSGCs4NEcnPnRTwE4z3PzUQYrc3tj9UXkKtBUazqY8lWJo
x4nPPF4osLszg6vbZc12hDFXmfJ1tTXbEd13GqIdjWRsJQoKfskb/ljGVuKi
N0+laJGxlbhnbvuFjqOc7QTPn8P9QtPlbCdUNNcGarvlbCeInozoSUDYFL3t
cG0pImyKUoftwvdLCJsi8HP/6YmvCJuiTfFRo8U3hE1xIyl3TXQVYVMUOw/a
C9WETeGXeVJ04D5hU5g+Pzc794CwKVrXn+/MaiNsCs8edd7lDsKmcHHrNjX4
nbApDAdd9BsGCZuiZePGoS1DhE2Retbr7pNhwqZ49XZQuu4YYVMM5aYuCfyb
sCkqhrOej00RNkUIV/BTygxhU3SO1CTUvCRsihxcDvZ4TdgUO/Nvbuz8h7Ap
lo+2ig8vEDaFxqPz5eIiYVP8C6ZQF64=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{1, 10}, {6.000000183673469, 14.99999981632653}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {1.0000000000000022`, 6.000000183673483}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000000000000022`, 6.000000183673483},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 10}, {6.000000183673469, 14.99999981632653}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.898853899777728*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"7fb6f33c-0993-422b-ab5e-ccc52a1fbe3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "adding the 107th prime number and the 108th prime number", 
   Typeset`newq$$ = 
   "adding the 107th prime number and the 108th prime number", 
   Typeset`chosen$$ = "Prime[107] + Prime[108]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "adding the 107th prime number and the 108th prime number", 
                  Defer[Prime[107] + Prime[108]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                  RowBox[{"Prime", "[", "108", "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                  RowBox[{"Prime", "[", "108", "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                    RowBox[{"Prime", "[", "108", "]"}]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "adding the 107th prime number and the 108th prime \
number", 
                    Defer[Prime[107] + Prime[108]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                    RowBox[{"Prime", "[", "108", "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                    RowBox[{"Prime", "[", "108", "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    RowBox[{"Prime", "[", "107", "]"}], " ", "+", " ", 
                    RowBox[{"Prime", "[", "108", "]"}]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[71]:=",ExpressionUUID->"7ff59cd2-b676-44fd-a11a-7e3e140678fb"],

Cell[BoxData["1180"], "Output",
 CellChangeTimes->{3.89885399171224*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"b3d76e4a-10c7-45ad-a464-91ed05525140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Is 611 greater than 3^6", Typeset`newq$$ = 
   "Is 611 greater than 3^6", Typeset`chosen$$ = "TrueQ[611 > 3^6]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{13.75, {4., 9.75}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Is 611 greater than 3^6", 
                  Defer[
                   TrueQ[611 > 3^6]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"TrueQ", "[", 
                  RowBox[{"611", " ", ">", " ", 
                   RowBox[{"3", "^", "6"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"TrueQ", "[", 
                  RowBox[{"611", " ", ">", " ", 
                   RowBox[{"3", "^", "6"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"611", " ", ">", " ", 
                    RowBox[{"3", "^", "6"}]}], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Is 611 greater than 3^6", 
                    Defer[
                    TrueQ[611 > 3^6]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"611", " ", ">", " ", 
                    RowBox[{"3", "^", "6"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"611", " ", ">", " ", 
                    RowBox[{"3", "^", "6"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"611", " ", ">", " ", 
                    RowBox[{"3", "^", "6"}]}], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[72]:=",ExpressionUUID->"cb5d401c-f00c-4830-b3fb-4157abdba1ef"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8988540172838464`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"52d37719-4710-40a7-b69c-f35674fe2609"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "6.3"}], ",", " ", "6.3"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"d1a21aec-1e15-4811-8f44-8ecfd3eb2091"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx0fXdcz+33fwhlZ+/tlr13vF+3vfdIVrIys3d021sSihBCNhWSeL/JKGWF
yihKFNop7X5+3ud5Xp/O4+v+5/24n07ndV3nOte5zrper3pWNiNnFDYwMHAv
Z2BQ5PfvuBFP09u2q6bD76mFDRrXXJaoCd/zeoazcyXGnXZVcjo/MUczLej9
6/x8E8aP2+zrZXUqXxNc4dHWoKBSjE9x6H4su8IvTcQfPkUZ31b+Ve+7I6I0
r//Q52iBf3JoVffYycOa0D94HOOvbY44DL8ZqDH485+/L/DwTjUdQvMSNYF6
eg3w6AD/9fFbczTP9PwZd151pNoQx3zNe/14FOBulz1sMt6ka57rx894hUF3
Ym6+idRY6efLuGLicXJU+EHNB718VNyiw4tZJk/xPMb3rd+xbkDvJB4H5Nq7
ZL0H5x9+Zjnj99t4x6/Jm9JZzsCTzMo5nAvMZDkDvzrFN66nWTLLGbibV8+t
7bY/YTkDt39ZKNrb640Wcgbu3mhB5tJiflrIGfi64GqtZg6LZjkD73Co37P2
V9NZzsC/961u7eibyXIGnramzV1NXhLLGfiLgz/KV3f2ZzkDP3/u7c7SyW+0
kDNws26vb0+6eA/6wfgD5/KH672NZjlDftudffsMrf+U5wm8+QanFaezI1nO
+O3c3/5Zxe2xLGfgUR1Plq197inLGfi6TdolyXOjtZAz8E67/acN+ZnCcgZe
7vaP/e+fJ7KcgZ9c+9bZMvuJFnIG/iAnr2+zkVEsZx7/RLfV3+fEspyBl6k2
6IjhrUCWM/CUQW9e/IqJ1kLOwHtsvLvbqkgqyxn4cmXzgzGrElnOwHdOSY9f
/Nqf9yfkZLo30zmrWzzLGfiL9nu3lrqr5fkDd8pu2XrBJS+WM36r3+hlrCkf
roWcgZ9Mb9jjYqs0ljPww/dKxxok5LKcgf8w6Tb0RGQWyxl4wmODVhqPOJYz
8HKWE0pFGN/RQs7AOx95bl/D15PlDNywj43foBIRWsgZ+MR3V+ZdmZ/Gcgbu
erNI+cq5uSxn4Mdeb505+UYWyxm4u4HRg42mqh2EPMosiXj4eYUqZ+AGTSek
nn+mYzkDt/5Q/GXDZx48H+BfbUtPNdmhyhm/jtZVXrsOUeUMfHc7g3VpJfNY
zvx3G1tEH8hX5Qz89YUvFqYJqpyBK+s3zG387S7LGbjRWvc2wR+usZyBvyjV
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
fH6ee+6fw34V8PtFmk5uMfMlv8eB7zV3umdUv3EU70c8d/3EY4t+zYxgvQJe
7MygD8FH1P5z8Pce1Wb44vk+fB5DnqavT68yNPRnPwDy8z987Nnwmg8Y5+93
N5tuVj74pVbUoXSoQ2E/YvxnXmxbMzYuhfc76C826bfR7bc8uQ5K+IiI7xMT
5qQzf9bD/T/rbA1l/WY8Sjt9jtP5HNZbxL/mF6x87W6oeov4t2OdJyVGP0nk
9YZfZvdhVszh4ktYD/l71g5BHbdu92Y5on4bZGy+ydbvMesbztuV9trslY/8
GOf3L3VbXOn14pecj+DvcbS54zQrJJ3zEfidPWaq4c5yqYwz/6hiOfOKJDEO
fmPW/4gcGZPM+ol5rRjQpPWLRmr9GvTnfv0bFxCq6ifwDc1jNA++qt/9xTjd
ureJvp6fyPEYnm91cfe/DdumMj33KyYuLZlfLZrpMf5FXdp1KdYoiXE8d2hI
lTpxRim8L/i73oGp1/PDX7Id43ya156dW/cPYz0H/bb2JZJN93iznvN3zBpf
yTjoGcD6jPH8zO+Y6bz0IePgsyC1hWP0gGD2kyCHTpX6P55T8Rf7SZBDO6P8
tIujUhkH/54H3OL39E1iHPzrtN3+amnTFNZ/zGudpo7Fl/ZqfZzzQkVjrq9J
U/Wfv0PeZpzBbn/1XiH4WJXTjK7vpPYZgj5j8Kmb5x4ms/5jnDXfuB/6d4v6
PWLgVw/WcCprqn43l+/DNszs51Ra/R4i8Bu7TO437KS+zw78Cu2r/mBCOvcf
8j3HiElrgqe8U9/nCdzojPMN20aJ7Bdx31Pvkr7vPqvv5+Lxrgpe0lKTynYb
v28zb01oaZLEdMCP+2792GZwIttb/HvRDR+n3nGNZHsL+o4922hyjqnf/QWe
c+uS1aji3MfI9JssxwzrUSee7SF/r+ZC5rNtrVLZHoL+Wp3KSnS5JNYH4Bfd
l7SbOEfti+Z8TjOLvCUBat859lPhco0L+59NYHnCT9/XrnatO/XU+h34GB3/
6HoxX/2OJPrxvtfpVClwrZrXBn+Xtmci6nqq5wr6oBIEPfIVx4ie8+z03Oy+
lU2nVM9S86SEN7xU5tCGOt9YDzH+ign7bd54+7MdA/2nz6UruP28xfk4tlsH
fcLyDG9x3gfz+jmyrN3yF3Gc98HvkpA321+VjmV6zCtL0GNey4me8zX0d23y
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
7qHvTblB6/sfvV8R+Dpa30B6fxr4xNM425tb3P+yKpTxUbS+1p33Ld9gx+9H
VcxofevQfXDghnjvIPXRIY7D+lqe6HhM29iPcazv+qe3zh6r+I3tG/L0ps2r
lA+widcUPI8q6PZujy69d2Iq6zO//+Py7Ybtz8Ww/vB3ibu1L3NuXTjbZ+AL
LUpkPnsez/YB+Pm0MYNCf/PHvIDPCgk7d8o9hscPPCxiiHL07gceP9l/3XU6
X7Dfyc7r+tI5Ajzjv5ITnKuV0HlGBtwzu/ZSi/1O9l93i84X4Bb0G0fnI/bj
UuJfN6+ey7PVqYxfxXOelTSbMSid96Mf9YmEUb8H8PLk/++l98KBz08a57rQ
9xmtf2Yx7vtH34x0+zsVvvYxO4vlX57kUOzNj2616iUxfwfx/U3gtcX3OET+
QXdc5B8qEf+xdM6C/g3ln98/Nmil8VDzGJRX0X0hHPt0BcntE52/wLNovk5B
VtOmLQ7WYp+a0rrUonMZ+ERal2bkb2AfLSH+Hzpv6131QirjHrQuV4wXR19e
w++voPjCROdBfTLAK9C6zKD3zoFPCo2zc/meJ1Y3zGb8Lq3LkMXW45s0z2a9
xbr4r4m2bx/F311S9onvgQKvI77rAT1HP+ejXsdbFPN4pS3o9xrrUlP032GB
nhuSvtiV+7blVO4sPtdmUtzkRnEZ9Aq/G76fTo9ak864P8VfGfNmzHrrlcr6
hucOilkY/6VXNusV1UN1Hei9PcCbUnxXjfpFwacKxYNX/VbuybdMYn0D/x7j
C73XJAazXr2jPPw2yovCnoB+69Mpf96/Db0qRvMoV33aiLmNNrD+WJMcKg3X
x49Yx7wcPX3XRqWON7+YzvgTkoPX2cCyDb6k8vriuefmBZi3r5DN63iU5FCS
3rcDvBnJIZX6WsEHctjdPP9wTmvVf8Z9bYPYE++Cwi6yfQYeW8L7sl+LELbP
wBtOdmzvfTqT5Qz80gG/Gf6t01jOwM1mfnc7MO8a22fgY2/bukW3DGH7DNwo
pf4vm9/8MX7gO/IGLH5okMbjd9LHU9qiFK9BP+vq4yZtf4rLgNvo40HtNhFv
RlO8bE/xGvB46ps9TXEo9LYq8bf6Na++7dko1md3isd9Vr1f0cMnlPUTv8HU
z4n/n0dx/Uh6zx74TKZx/vclatHB9Hv83Jw/43yjLeQ3wmL/6Wdc/91HcvDv
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
nf+POJnuv/+PM+1SK4Nhr/L/prwn7Mls/7f8yfSQN+KiDsZFuR+Iv0Dcku/F
OFVW5BlyHZkHWAzryN8Ngx7/x5h/+Hfuzf/v+Xe/aMh3hF1g+pW0E85C3si7
dm8Gf4rrOBHPeR3ryOcnT3Vu7GfuQ+rlcYj/cxzUL7hfwn7mfqB8COLwRhzG
/V/iMO6MwzC/SvdgV2Z169QsWn2biGea8yJdvfev1S+HeOVSk7v/cD5K/VGI
t9rS53rtY681vupEr8XfHT1rrO459Lxuq2vt7x6uvk3EXeOOnDzb/q7iyLI7
En2OnLjXWL8r/bB9xKTN/e6qb4rssmkRE4NbhGsc8Zo8DPgzceJj1VFzfVwL
vXq3ufshzYPqfvo9HnKtdbDOC+KPSrfpkifltepRiVdt2G9gpgOyw0/qfqlk
h15Z20WrrpJ43PPSY4JzHdF7Ec/wJle5h01C7D55wNdlDJuVv8Eb1b+pHivV
a+rZWe/1Xvz+hoYHL3mxKkbvRfx0+Rxzp/e4q/knvielyeC4duF6L+LXeh/y
WFbLju8Tz/177SPHfP/Se4n34sc6fcbGxui9iIeteBgwvv8drRfxZQtHlfnU
/J7ei/g30d/vcQmPEY8Acb8VB/avzDZffeb4PX1V9eLeyOHv1UeNeP4PH6bG
3E3SPCh/zTX2oFu5N5oH4h4bh4f1fhysvlzEUx52c/1nXIjmh/jh2l4bAxf6
an5s/qRpx1qWilafJ+XfDZ68tMKq9+qHRNwlfYbO1wKSNG/EHW36z6wZbfdH
JF6y9IwGu8Kuqr8O8cLHaoXlORCi+RR/QJ9fy2287aP5JJ4zb/S4jR+iNZ88
/3aMzny1UU+7nzLvh2fPfLu+UnSU5ln6odPMyQlbU+3vCPiIiTVuLMr/3u7/
CnzLnSPe0R0jNM/Styt2he+9uEb9w4g3XFyl1ZsTV3QuEX+f+v/+i9U8E3/j
efzI9D/s/svEd/Zc2P7RslT7uwPu/fe2HQtuJth9KIF/mW9z54c3H2meiR/O
X7VXn3Qr1QeI+O7J5+ZmLRio/jrEN/abcvhe0zjNJ8/pL+bcjv5ryHKdk8T3
GN+p8lnwnXIe5FfNdH6PfC/ip4zvjvh+fHdcd9Uvhn+XI7jbEa0jcStynX+u
wld1HhL/e/uT8SWD7PNQ9bJ+n2bl+90+D4lvwDnM9SJ+54DH3BSXY1oX8dqm
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
FfHFE19+fOWLAefXqT+N8oKGH5jQckmE3U8F8Yovjf2p+I+xP9XXxdifxC8Z
+5N4K2N/Ej9t7E/iLsb+JO5v7E/iPsb+JH7b2J/EBxj7U/fdxv4kfsXYn8QX
Y39S/9L/TYe8Tc4z8VY4z6l/iXd8+Wu7qe1CNM/EZxjnuXiUcW5T/xJPPVyz
TuJjW/8Sn4Vzm/pXcR7khXL+iU/BuU39S/wM8kK5LqpDxblN/Uu8XoFtOyvn
s/Uv8S3GuU28KM5n6l/FbfZV7JPzra1/Ve+F85n6l/gj5J1yvVTvZZzP9Ms6
GvpX8QHYSxWM+NU7Q/9Sfo1hL1E+0tC/lM8HO6q/Eb8qauhfyteCHcX1onxe
Q/9SvgrsKK6X4kKG/qX8KthRfYy4U5Shf9U30rCjKG/qX8r/AvuqvBF3WmPo
X8p7w74qasSRTP1L+XmGfUW/KdLwU4gPN/wU4i6Gn0L8a8NPIR7zu9NP4fmm
fC3DH1H+G/wRzj/xqYbfIV4Hw+8gvtjwO8RTaPgd6gsEv4PnG/HEnz/3L8S3
B/+CeXf0Oxog7455bsQ7Is+N88x8g9Olw7vOnRqr9yJe/9TCraHrY5XvR/vq
dPvQuituPlK+KPHahWNWrOsYYXF83dc07HmuSeIrjU/81G0Xl0WFYvX8PLeH
I4+az088PfKWOT7j598Y4xP3xvh8fu5PP+P5Fec0np9+92Vjfog3xfyQL0x5
dDtqrrlw2+bJUv/Jp0Mvpw6Nc5CvSnlfiJd++Tmfs1/1Z04+58wYn3jlgb1n
Tv460mqPeCnxxAXOeOk5xC2Jd0XcMj/yu4jPnHL0UP+iSXjfeOEXEJ+shrwv
4sWszbm91yZCP9p11f0QV2yDdSJe4IaTt7ko4ofEzyB+OAHxPeIZUpzxvbzI
+xJvR8rsL/1dk6xYxPGId0AcbwHywYiXLJvm09uJicxn0L5tCz2C/pHCh6Vb
vvNo0zh+d8IHIh/murH/T2D/9DX8spLQC2FGXsE4xJlZn0l/JPuqjiMjWiVB
P9r5LV/gvuOBkW/gjzhzOawLx1l7p/6VGgGJ1g3DjysEPXLfyFepgvuL28b3
64r9X8Hwvzbg/O9j3NdPRpyWeXp8ng9Fvoj5rg/3lZ1/EoH7iLvGPf5kxG+Z
18dxNjRa4zt2ZyJ4wWz/bhT0C/uAEh+A+C3zANU3/tzHzVG7/+OHoZ6W+JRW
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
K9qov8iB+gvyjBEfgHp2vi+/x6xYr/l4TvnjmGfOG/XdUOyTKtgnqtu97qyD
47xRPpexTyhfB/uznFEXXBn75ISR15F1rnOf9ME5xXGG3XHWr10w8j3mYv/g
/lryk7H/2Z9S+TPG/uF3x36CnDd+d97oF0A+PeUt7P0pS9yqEIvzSfwc+Py5
jqon7dZrbm4P9gOy68jOIv/8nlGHNQH524Xwuzy3J2EfDsH+IL6xSbOzL2sO
Zh263UcL9TvkZaW8J/YV1lf4Cut5RNvvZ/Dc0L4KQT3LRSN/3sLzU175+Xj+
4nh+2hsHMG9YX+G/DHE/9FXKdNZh2f475g3nlfCE8Knpp1VdjjzAp7oHb4s+
8tWYd8J7c/R5HwB58ZDgno7zQLwO7sXYB47zcBh1UuQDJH4UdUAjMD73Ifva
c3zin/edT6fn/N3Xyc/2I+aR+6ES6sR53vJ3L6Meh/3SiH+P+hrnnw80EH8L
+6PhPdWHIuu42a92ztP3QzxNkQaL+69vo/Oa9uEfdUf3HnJumc5r9WUo+uuI
XIds/lnijxD34P4Qv/q+klbkpjH6XfHG3xoe1DxvtOwf4suMfp2ct0+wS70M
u9QXdinluc/TJD3Lmb1UW/0u8farFv9Z8cVsfZ+0f9ybrJ91+MEovS/xJqkf
0nWqG633It4+oPLv4/z+0PMQ73fyeb8/V0X/q7/M8Xk+z4Z95WXYV41gX6mf
Nf7dMfBdqO8z8PLgi+C8cH1meY9qPaRztNaX+O/tnO/L3xOv77vfnrkm2Pl5
xNtfcr6v8v7xHbivWJGlTOsEjU/8IvhPOL54eHxLhM0ulqDxVf8IHhKjf3cD
9u8mrv5H4IvgOIrrgleBz6l46cpXD/fdteeB+OJ6zn0uvhLgMbc/Ths/JVrP
Sfyhl3M/c3ye/29OOTLsn2zPA/EvwZPA8Yn3fXjhWp7W9jwQPwO+An6f6if5
slffRt9Hy87g33+Dfj3c34p/FuvUsuk+W17fYzVn/yPOO/EJPUJqP4iIkv5T
v7/q99vdnmH3jeB7L3EMGn/jYKiek+99rsnGLzN5X7P7NAC/948zH5X/XvUF
OTIX+SXPNekz/v0m9J9SXIn1IwFLKiR5h+p9OU6DrmnvOmJDdf9B+d4Hnect
x6G8Tx1nvijlie+e8+zOk6vXtK9kJ+N8/rwfcTq/qlk6rRtZPFl2pO6joXc+
70eczi/rAP9R5f8j/6Whj2pAH3Ec/s5r9/YBZYZEa370+785+4gR578rgXtD
jk/5fXl7RhXPGi19TPkmqKfgfBJ/jHoE5Qti/u5leRSQ9P/tN+Ll61w/lKaC
vd+I+01zPifHJZ6C91JfKOBH8ZzcP1yf0SEp8+7Hhuh5xAdr7DfiPr6f7zfl
92K/8fc4fmLPyg3Svw6x8+khz31FeeIZm36+f4jvwv5RvTrOJcZVxFMPfPOL
o4/intt13cSbw67gfBJfiu+C+4r4tJbVD+98bte/Ed8OO4Tj89+NwPfO8bVP
GznPB+IcrzbOGf6Z8pVwPnBd+PduyEMWrxbwG4incb3477LcjHhewC1Z3znx
18a5qj6nOFe5LsSreowo3Os/43BdlE9rnLfET+G85fj8/TKGflH+J/SL+n5h
PZ/iu+C66zwo8Py/dgjliPtVfnhuRYdQ2ff8+5r4jrh+lN+1wmm3cN6J111/
OO/Y9qHab1y3Fr4frKvtr9n904HXjN/033w/jk+8b0DvkrsXhdr904GfdGv0
3zw9vi+f14Fzg+tIvKD3moVpMtjrSLyBYScQ94OdwHUk/k3n8sdbZrDXkfg+
w36QHoD9wHnhv7uOc5j7j7gbzls+D8d7Dn4q3R9gPkZS/2Ke5Sdmc9rVnGfi
H1dbrb9dEqL15Tg+0Mucf+mB6k47nHLEJ+Vcvrr44hCdb2Y9C59TfC+RTv9d
8wXcEeb0r2X34z0W1HfGhWQfAP8V5636AQBP97PznDT6vys+o/Gxf8IDDwzs
mi9Z8lyf4tgn+l3IMz9HdjzwaS1+Ss7WNFnPw3EaYp/oOSFfHXksfB6u++aG
zvcVzxHwX7ycdfqUF+/Zfed8qu8d8wpg/3Acnbe3nfPM5yFeDnaL6m+NuARx
rnsOnIcch3h1nG/EzfsFrgf39SfU6XD9+Pd14NfwOSh/A3UufG6NB79G/VTw
3gE4x7geum+t6YxXcHziTXFe8X2Itz7njEtwfH6P5vOrzyb8UP5ZPO3G8/Pv
r8Pf5PjiE17j/E5Vzwl88XBnvILPR/w69BfHJT4N3ynfS3UZ951xDNlh+B53
GHqf+PfQ+xyf+CxDvxPfC/2u8xzz1AD+o/QQvotc9zfkvR4bqv1EfKl/gwFr
vG19oXs02Ld8HuI5YcfyOfQdw8+inPIK4E9RXv2JijrzrChP/LuCzn5G/3Y/
onHw/BEBg44W6JGs71/6CPawxsffV/47be6AqsnSI8QbI07L8fmdTYIfTZzj
rcrvfH7Fr4Fb8NM5LvGhyOMirn4TiNtQjr/7o+GP8++rGv4+1797dmdfBsoR
b4a4E/cDn7f1k9Evo5rY/oj8oOGXfnLLZ/s1/P1WhjxxyuueG+Mkrp348kT2
ZL2v6vQZpwKuflKYHz435f+YHFvip/r2+Pxdjk954vMg/z+QUfrR
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnQe0FMXTxfft7szuzE54ImJAgohixIA5YkQUTKgoioqYQRFzDiAqmHPC
LIo555wjipjBjJhzxIB898ft//nOeXu6pqemp6ffTHdX1a2qxfYYte2B1Uql
8k9eqdRUrp1WKt1U8WazUvk0qVQ2aKtUqqIHZZXKTjp/RKtSeVw8S6n+m0al
sr3qh6j+SNUfK/5DVN9H/GPKSmWw6g9X/beqP0j1K6t+ZdFDRC8g+hXdsKHf
hjpeSfVLqvxKba6sNtt0/pz2SuV1nU/021jn3lS5mH6bin5K5Vz1c03RO+na
dVT+p2t3Fb2e6IquHxVVKt1Fr6rDEaofKDpX/RT1f0fR84s+QvX7qZ1/RN+q
Nr8THevcFLX1ua67iWcUTx/V/S66v+hU9Guih+nZFhfPyyrPiCuVybp+VV2/
u457qP4llSdqHHYQfZjoFXXtQrr2XV27qZ5xW9UfrPotRC+m+2+i511P9Hyi
NxR9t/q5iPjfF/9januO2l5dx8eqza117Whdu5n4B4k+RPTRqt9K9EHct16p
ZOL9Rcfv6b6rif5T7Twu/qdVd5t4/tN9Rqp+BZWfqP2Pav7/La/yYJXb6ddX
zzWj5v/fDrr2WF37TaH/reqvVd2Z+m0uerZ4ThO9i3hOF8/Fav9ftbu/6pZV
+Xrd47ynjn8W74/6jRE9U+Wn+h0heguVE1SO5h1Sn4eq7Nz0O8S7dHLpcWQ8
t9Z9btV9L438PvXQ8R96vrM1buPFd4Z4LhHvrqrfWm30VH2mPqT6XST+bXRt
Q/QFogeLZx3xnC+eNXXfsarbQMe9NP5N9fk50U+K5xm1ebva3FH0WNF/aByG
6dx54t9S5X/q/7/6nc43o7Yr+p0temfxj9fhXiqH6XeO6H1Urq57Hanzq+va
ITo+TfUXqf12XVfod5nOzRXPuSoHiKeh/kwUPUT0n6o/WfSGon9UH1uif9T1
vVU/R+VTGouvxX+36keIZy3V3yl6P9FXiX5F9Cmil9Z9hqvPb+j4M43lVWrr
KdEXqj+3qZ2r1Z8lxDNMPK+r/i7VP6L6yarvqPZfU91paud5lc/qdxFziNp/
XPRRqj9D/KeqvEJje43afpq2uV4874g+T+fe0n3f1O9BHV+m+hdVjlP9daLf
En226LXVh1G8ozq+R20+yrepPjwlnifU7pIqJ6mN6/U7hmdL/L/dRtdOEn25
eOZXeXri///2ql9D9Emi1xe9pd6HNWse6+l6rhNVrqf6+3Wve1TupP63q/4J
1R+t45tUf53KHVR/od63J9SfW9Sfi0U/KfpW0dfo/Ifiv1Tluap/SPU3qv4K
XXu+6q7UtV3U5vviuUDHZ4vnQfHcIJ6z9bxfq899+OZFH6C+fSC+2eJ/UuUx
4v9MdauEb+cN/b//1LWPMreIZzldN108w9XW0qp/TeVk1fcU75fieUvP3kv0
16J3Fr2J+L8W/84av/6il9a5TVTfW/QHqh+q6xdUO0/zTem3iOhnVS4nnm+Z
T9TOKRrD69WfpXTNLjo3v+ofV7mHfkuKnsIcpWf5jP+Xfhvo2sVUvqX2+6h+
hK6dzjygumVULsd3Lp4VRf+m9j8VXwfRb4t+Q/ULi35P9Lai19I1n+n8NXrG
Tqp/h7la47yH2jhB9/1VPMeqfm3xzNJ9PtfvKMZCx4up/Fz886ls6NdV1+yp
a5ZR+brK3vSFeZFvuOX15C2VA9Rmofppurav7r+o6CV07kI9S7voun6/qr5U
2abfQI3tejruzLea+P5r6P6rih5B+6Lv0RjeLL59dfyv1uSMfqpcQM/yA2Os
d2Z+0WvoPs9r/nk78f/qO53LdPyy+FOVJesJz6Oyk/h/0vkbeId13E/1TZWr
6X27r+a1P9E1L7Aeq1xMz5boGWoay7ENz1fdVK4h/ufEE4tnW11/Isus7l/V
8aNsHlTOVVsPsVbRpu77sa67TvedGnmeuVjPv73uvy3zIs+g++yquh10vFfk
dYo1rMWcxRjo+qba+VDlyWrnfd1vDdX/xfMyL4ieI3pa4nGdIfoh9Xtd5k7R
L6j9XdT+IB33Z5/BXKr219A4b87egHlP127E/6vpNZW19Xg962aqW4X/W1hT
6ddGrBW6dkvWxjbvKdZnrWRvFHm/xPoUi28lvheNSV31Nf0uYW7VuFzE+63y
GdXtypyj46tYS1Weqmv+VZ//1O88Hb+kfsR6nqP17FcnrvtCxwsxHuIdrD4v
2PB6tIPowaw/4hnHfKQ2z6p67Xla93pKv3N0/KDKLWueB5/PPeevpPIv3XN2
3f15Vs/4jH5Xin6cNVb8Z4seoHEYKvoK9eUP8e4c6o9N/b+dT/WnlV4/v1b5
d+o2/lH5MHNh1e/T25HnfcYkVRnpd4Xo1yOvNReKfk30FP0uEP2trj9f5Xcq
j0t9vtS9flcfzhB9CutB4jZ+1/npfENqZ6KOH9FzPBz7+idyt7eUyqdU94R+
l+n4HfHvVTP9vuj3Iq8ZDZVx5HYG6dn3Ec8Nus81Kj9U3Szdd5T6cGDd++ZD
VI6ue147RO/AaI3DjfrfDdB70FP1m6ss1L97NBYHsC7qN43/PfMSe0P9HlOb
h6pfXzC/6Xelzr3J/1LlArp2qugJog9W+6NUnq729xS9q+glRJ+Weq3tpH5u
qvsdrL6+qufdSv1/Q8/yo8735ztXf/qpHK1rb9I9h4vnpNTvZ7uu3VL/vy7i
2UQ8J4jnBNZztd9VPDNY63X8feQ9AOvWBPGfr/Jy5nzxnyf6MtGf6vxL+t2n
4130XDeIvoT1RfQ3Nc/LP7D31u940Zvqmmt5P3SfPyKvj6yvJ6rNk3TPyerD
8aLvZJ5Wnw9SO5+JZ4p+n+j3qn738z2o3yur/9upHKTfCqK3UXmUrj1C7Vym
dvbif8C+VeXW6v/y4tlaPPOl3gcdp/qpqttHY7KHjv/Q8a4quyCfiP8F3ecu
9Xdb2mbeF986GrtfxHOjeFZSO/Or7hXRF4n/NfE/KP4XxLOA6qeo/l715xXV
36f633S8i65dWOVWau98jUnBvdkPil5I9C9hbWWNXV7tfC/6Ts0B64mu6PzD
unaE+K8U/6I6Pkb0UXWvuXup3FO/RVh/U6/V74j/ZNWNrXvfMDus76zzPWOv
cf/q+Ccdd1O5G2VsOegbHZ+m606pe6/ws851R55kzQ1yEPLQM+pbS+ef570t
LTchP62g+rnsJVhn1MZZde95BqSWpT4S/19hD8Ne5tDS6zLr85sNr7Evq/xb
x6+qbOl/+qfoXuKZo3I79bNfzfvm1xuWh+5X+ZvOPagyFX/JO17zfrtN9Oo1
79tXU98OZ41QH25Q3ReMja7/kvlM5V/6LRr2PD+xz9B7s5rOvaH/58rq512q
/0PvZ5cgG1bV1gu6Z2fxfoi8oXtFqqvpd7zoX1X/s37L6to7xP+brn22cJ9f
VX9fynyePVgf/X7SvTZH5hZPL8ZW5w8TvbToF9m36l4dmWuRtcU3U/Ubqty+
4fH5Vv2aouNvVL+pyp91v9VFT9O1R+ncRnXLP5ur3Kzu/18/ZBr2GFW/97z/
d4h/aV1fZ3+vey2X+jt4UfS6zNF6vtvY5/B+q36g6noyl1f8Hv8iesWq37Hj
1P9VWAeQt1jjVTdTfVlJdf9V/F4+wf+ZvaXK09WfCfqtoPN36FjTRWWG+H/V
s7yiuiEqt9b5Lev+jo4uzPtqGMtfrSqoXKwLVwjy7yHq/0DR56D/UFsfBnl4
eV07TtcuojY755YzPlBHjtdvGN+H+FcQz5HiyXV+d/0fjxJdiH5b939Lv4N0
vJh4TlS5gOqP0rW7MA7Mw1XL4/vpeBprio7303HvpnUvdT1fLffecBv1/2Ad
7636TOXG6uNxVe8jH2l4rz6DPZraH857qvaX1e9k8SysNr7JvNdaXOUD4u+E
nkD8eze8/5kT+xv5Lezbj9C1yzOPif9G3WtW+BYeanj8PhT/GmFPfRD/x9y6
ip7iv0pju2qQU97WmByOvKrz9+l3qOhE5Ua6frXAs5TudRLrl+q7ojfh2dAH
IP+zX1D9EuI5RHRTdC/2oOxTmpa7kL8uLS2PsW48wreg8bxLv63E97bae63q
vd1w9S2vWb8zvOG93t/qy1eZ94aLqfwi875xUZV7NbwP/Fc899csm6yg4066
V6Hj4erLg7pPR9GDkEky788PVT8/zCxrjBa9vK5/QDwr6/gG9trotcT/o3gW
V90Y8XzRsKzxVdPvco82f7fPoDOrWrd1Rek+dOZ9blhm+lFtd1B/bkdmV382
jPyNMY9/0rCM8rV4ltJvydjyyX8tX/tGy99TrrqF2O9G/mbh+TyzHDRbfRuk
b2Q+tb+v2n9D5UDxrKBzv4tnWZXjxHMr84fODdC571kr9HtWbQ7RtYuqfrSu
fZp9k+gh4vkzcxunsxfNLXctrLrvMz/r6/qfz2xYlvxG/d5efdsuskx7uNo5
TL8erI+69mWVO+Vea1lzH1UbtzTmqWQqN6v8BHmXuVy/a3X/j9lXi/5B5eJV
r2tXI3OHPd4Jut9Oda/lK+qej6n8u83yPHL9+aXldvZBt+teLxZemxjPJcV/
r/h/4H1i36zyDv1PV4isu/hXx91U/5vKW1S/TcNr6Cy+idRr9evI8uhh6t4D
/JxZXzoJOaVqfSwy4ULqc7+qzz0q3oV1vIOObxT9fHjHPs48Zu/r2l8zXztd
9Cu6bxe18Ynu1VX3vqVmXejNQS/KWrW++lkT/SQ6Afb/de9jGKeuvO+6/jr0
NGE8D9A4dGdd0H16sRdlT82erfD/6pnM59G1aimunFVaFzJH5Sg9+0asxbpn
9zA/xrp22ZrbQT95o/r5nPqwG3Nfw3NppHJobplvffbFufduA0TfLP7XxL+/
+F9C96VyZ+bBpnUFfzetg0U+XVflW+haRR+o/+P0wnLqhqo/UPfYjbWjYXl6
mzbrwf/NrI/cWGUn8Q9V+39llsVph3l8g8wyKO1fxDrBfkL0WjWvF8PFN6rh
eTtRuWjTuuL/1PeP655njxDf3lXvRen3iNRz7FiN1Tm55dP3dP9F1e93Vf+1
6tfX9e+J3krnPi2si90q87zLnIy+9aPC+8+FdM8uhcepTe2NVj/2Qi5XeW7u
Nt7nf9u0/nmu2l64cJ/mqs1X1c9X9NtLx9dFXhN3p92W38mR6s/7dc/tzOMH
oLtXOw32aHqWR8V7pNreTb/xyAQqj06sY96kaf0yeubPVc4U/+2q31f1uei7
RO8vemJieTdH3xnkSOSuExLraPuJZzPd/xTGW7+puvYwlauofpXE62wv0b+K
55ea9a3vimdvlUuofnPVXSn6VP1+Yk4OOu3TEssx64qnY+F38+/MctW9yHHq
dwfxPMS8xXet34WiBzUtOyFDfaPyosSy0p5Ny1HIU18jG+n4Y9Vfho5az3W3
2v2Wvavu1QF5Cr2Rrr1ZdfuI51L0iawjLevE0Y3PCrLg/W0+d1ObdRDoH85P
rNvfvWn5enKbZaSfRF/fZn33IN3nOpXntFnncKPKy/U7LPIchA3mMfE/Uvf8
wzv4etW6khMa1kksrHILvTd/B71/v9j7GMawu/r3D7op9WVz9vGiLxAdlb7/
l6o7s+W9xgvYPdTXE3h/0HNHnjdoZ7jOHav7zqcx2Un/g6PF807L+y/eq6N0
vEZhnUl38Wwa/s9HqH5V1Z+m+i6sI+z3kItVvlN6r9VB9Klqa4R4exa2NZzf
5nE+W7+DVd9H9QP1XHODTDFZfVs3yLlj1cZZbbapdBP/eqofr/5/XXc/jg/7
wQPDnnBFtXWq6hbVfYdmft4ZyJ48a9W2mPvV/oBgg9gNeVk8x7A/VJ8XVLt9
2V/rdzRrutrZXON2HHMmdjPVv6X6Yar/Qbzf170PeyDyfpj+j9P99hX/bPGv
W1hn1UP866AjEN1R9P4N22tq7M8j6/GYv77LrLubrfrd9R0twTyOXFL3s9On
U3LbA1dB35lZv7e0yrNy6+ve0X3eEe+TNbd1bWnb37Li+SWzTm4llfs0rJOr
qDwxt51wSdX/lllH1wedaGY94XKZ10baWU2X7NewDq+qcu3Y99uC7yR3+W7h
ZxoQnmt25jVgLZUjI++L2PueF3neZ86/XteO0PNVVa5VWGe1mOg/xNs/zEFH
aky2Qh+oMTkjt51zTfacqu/FPMm8EnnvxBi9WboP+yGvt7yv/Qq7R2G95Ahs
SYX1nuuonTML6zT3bvme/L+Y91gTXqtZBzo+t611NfHPbVnnPQ37m353iL+z
2u8WWZdym443Fv2HyjX1m589SNV7l9XE/5foQeK/RLwX67e2jvuL/++q6R2w
26q8Xs93OXa5uo9PEE9X9Wcn0ZuJ7hdZv39gbv35e9j0dM0G7DFYGyPbgjn+
Rf+vlSu2mW4jnvXZW4jnWrV9Td375q3Fv1XQxbOvpI599kG59fjT1f7tTdu5
VlY7Bzc9Z3cRPaduPSJ2teVzz+FPI+vktq89qP/J21XrOtFzrpxbj/ScylL3
HKnnuha5JbIuEb3i2shC7G9VHlKzjpe22sSzR9CZL5t7rm6o/RP0XEeo/m50
/7nXtMdVLiz+o1V/E/x161axqR3W9BzfVf1fN3fdj/r/nKPju1S/PGMV2b7M
eCHboQdCnXSpxvM+dFv0SffdWuVd2CFV/7TutR1rWt06f87dn5r3AZUHqM35
Vb8t74HoNtEbi16r5bof1K9DVH9w5Haexi7PnlDl4apbJOxdH6/bNjFY9FW6
7xXs/UU/mrruMZWHin/Bmus3aPnd+Yn/Ozreutv9M7ynvfVcB4p/gSCjIV/x
/5/F+ETW76DLWkXtjEP3ofY/i623eVo8H8WWjbC1fcy+R/QWGqxPYusnnmzY
joQuBVvSO4nv8yP602DXW7lqOxH6IvbcyHYbVS3fHVJaH/axytPV5plBJ4Yt
Cd3IouJZL7Lehvqp4tsCWw12lsztvaC+Xx3bXsMYjmna7ro4upPIOnnsiA8X
1jtfg51Lv/V1ryXU1su5bbpj1d4nuXXRnXSfd/X7nL1Cy7bNr9qMJzhC9+qr
a79kb5m7XFC8p6itMerDIxqDR3XfHWre0+yd+ZtiHX8k8vrOfuJClWXVOqOH
I69t7EV+UduT2rye7a577Rp7z9FT13dCN6X7PCb+HcNe5L3Sfbte5w8R73ri
mcmcnVs3i87qeo3Fu2pvY5UT9XtR9Doql1Y7DzHe4utSWi67GXu0zr2DTIyc
LZ5l9Xukav09Y8J8canOPadyzYb3aF+3GTewWe7jSbrvvYX11BNbtiMjF09W
uUthXfmNoj/KrdPuqPsvJ7511f+eesaPcz/HAqrfBBsSz4pOKPP/97uW9323
tRlPgM3nycj74y1aHp+L9b/4R+11Dbae9tL7O64d2rQtpZXYpsCe8HvV76Ax
7Fj3fveClvdHL+u642u2uWDvT3Sf3nXPadhP3o28j19f/XtE5dsqN8jN+xh2
8mB74dwKuXl/1TN20XUnqN1b2U+IPlT0JOZodArieSX33uTqNu/nNldbCzO3
a/x2Rk6P/S71zD0WD6vsoT4vIJ409R4H2xh70G51269od7/M+AWe9++67VyM
z/DMY/Kp6lfJjXN4ibk/8nqN3njHpu1xSeJ3fHzVNo5B6kteN8/6hdeGPXLv
Pa8J+88Jqru0zTa8X+t+19l37qn2y5p1VhfHttVCD1N9S/SWVevQ2O9dUVgn
9hdrSuH9Kja+awvL3eyxL1e5XG4b3O2F92zz812pXDy3rfBG7ELt3qOPKr1/
vlf33rP0vrHJOqryA/GPU5s7ip4q+kj2SIV1dLfxfap8M/d6tGVhvWjE/6yw
XvQu8QxTubru9ZTG7gmN8fviH8scLp43M+8lxoheX3UtXXsC37+um1izDmTX
unUynUQ/Jf75NH79+X7RTanuJfAb2AVUv6/aeVXH00Xfr/Jl/d4Xvax4P8g8
954mnjdU/wl7f9UvqHtdHu7Fd8j3+AA2HPF8VLEOZFpznsmlspb4r6hZV8P1
fXTcmblZ5/dXH6+q2RbzCHKXzq+u87sH/cmC7KHbbWs/SO2Py4yBwe52sOp3
UP2Bqv+dPYbaGaf688VzjOi3VPenfnez51f9F7ltRl+q/C63zeh7lT/mtgf9
pHJkZpsgtsFz0PWLfkP11/Gei/5Q9NroIUWfKXrVzPuxU0XfIPoM0Z+JXirz
GnqS6F30m8J7qjavVv3Jqp+uup31e1X156h+CPtmnlnljbnl5cl807ltNP+o
/qLMmB9scKu0ex92N/pX0ecg96OXBRsn+r7M6xBzL+PAXM+cT/9XE8994nkI
nU9u+87f6DMy26wfVd1VuTE/P6r+9ty6gDt4RuYp0X+p/orc9qAfRN+dG6N2
D+OaG3tzucpL9OvDOIvnztx6gX9FL6D355Ka9WMrqW+Xin4xsW4MWzHvzar6
llfR73n2BCqfVdlW9Tu+cNW6Nr4P1tg1wDNUbWeZVnEZB/ry1O/qS+AZ634X
ef9GFr5mB/VrYLDj5Do+Wn3btG47zoroFsT/bOL3tIvqGqwL4jm3ZrvPHS2v
a7upvWNjr9PYU7ao206Uid4k2IYS9mZV6zmxa+4WGee5Of2IrLcFbzQJfULd
Osk1WtaB76I+DNb5es31h+XGI32q/9tuiXWbt+hZJ+u66+o+xs6BveNhjc/v
4LgqxqbeWTd+hnnyiNy4oplqZ3AadNLYcnWvoQHztHtkrCnnwJmi015Hbd2h
dm6v+3jH1M/xra7tWdru8BhzSdP75U3QD+XWDT+ATi+yrhk8wMroK9TOuuzf
68ZBLcH+WfUvsw9X/XuxbWK3qv/TY9vvbmefgk6ffQT4tZrta8xf41R/ZLDt
vqb+9AW7pnf/ndjzIfhV8IHYBxfQ8dqR7YDwv5DZ7vOU7j+6tA35o9I2n2Wq
HlNwpNgT4Xuh6f0StrwOav+C8A7sp3fiSZXb6LkvTl3/nPo5ueF5cjPk6br7
zbzcQb/ZbZ6L+Y7B8vUBk6Y2e0du64qG5+110TsWfp+2yv1N804tofZ3xM6i
+n/QddT9fbEWfIvMpXJblTfq+g/F30/lVQ3bAtZXOSivzPsAsQvMQrbiXVbZ
vbQ+/mHVXy2+18XWV+WAur8R3vM91J97VPYX/xvq8xLq831V6+Io+U4+Ff8X
Nes9n1CbT6u/B+n/8mthnOIvKn/Tb23xXMNer24sBDqQu9XmnbF1wcxNzFFX
57Yj0M/n1f5ODdudfopto/k1yAXYeLD1YEvdX9f8zv8nt32VemSVVYIsASbt
pWBDx5Z+lf53P1cty4C7Q67fSuWsurEZ6L++S6x7rqrs2LDuqL/+J6eWxrF+
hY0utX6sllhPiM3x+Ip1Y6dUjRt7Xnz/gX9tt14Ruyr6rN/Dej+J/3VsPBz6
uzGJbX9vqu2DUuur21T3FXsa8Z8v/ttjY4Lhe69u3DK65Rl1Y5uxNTKPM59f
Kf6vRa/Eflj0/A3r4TZrWkbk2Tuqv5fVra9YsM02pu9Ff1WxjQhbEd/klanr
+TbBRFCP/Yhvjm8PXO4GkWm+wfUj21NK3svEuADs79hXqAcPgK7jX9EHMJfo
l/IuYcdIvPcbllh/8k/VePLdwH+ovT/0/F2CvRK7JXI97fTRuT0iz4frMk9F
loeRhZ/TtRXxb57atgvO4Q9VXa3j2XzXie1p0Oh4sLnznvwtniG6dkWVP+u+
GOvBZ76Vec2nb2Dgbk89htuBFa1abuXzuy/gMcBlIM9+HeqvSN2HjRPjUmaF
/myUGGcBhuGrquV0sc7Dn0CDx0Cuph0wJdTBB1ajg+5xjMrzEu8z2G/cppv9
lljPWkfvqj6MVv31Ve+PKG/QNS/GxkEhg7yYG1vVR+XJuvnV/E/B+0Tej6F7
+SIylpVzX0bG7qLz+TnyXmsy35How4Jcs0DDci36/06ix4i+UG12SN3ewqI7
RcZr3aDjM0tjrv9VuX3L7S3E4tPy+baWMUvYboaremzq+y9Im+gn9buOcYm8
37tTdOfU5aLi2anlOe0C/m+R93Lo/l6NjY9CLvtV9cep/hbRv4s+MchrX0XG
adP+IqXtnp1Ly8PMi0uqzVni+Twy7vAVtbmM2rxZ9OtgCLDTc21i/Dk4rUkt
47luDrIycy92ZPah8N7Leql7nKpr9tF8snHLNr6R6G0K+x3MVLmTrh1WtZ0J
29SeVeM2fm/alregymNK+4X8qXKyfscgB6vNUS1jA7AnglnFZjdUx2Mi75N3
1vHHusceKj9ReVxpH5fZpfed7D9v0Tvzbj34V4hvcmwbJNd8q/K3mnWy8zUs
12LzYlOBvh0fDfaU7C3vUjv7pbat/dm0rRI7I3jajVq2h+6r8yeVtlP9Vdr/
Av3znuLZR/wjq7bn/R3snj3oa9PjAbYtCfbHX3T/Q1vWpWM/PSA1hmWueMaW
to/9XRrbMqrqvkbBDvtNYvwt9i+OZxTG+n5QGDfMOoDfxS2x8S4HVK0/nxPm
qzlN41uWVvlF4fNfYldvWfcctbxnA2OwNvuSuvdvy+v5Pk6MKfgZDIx4utd8
vEzLuoX7dX6S7js1/O8WUZ8nsI/G1oyNU/T14G3Ff5jo65Bbc8v4H4OLiaz7
wIfhwoYxm6s0rD97v2ocZ1d09ZG/C2QX3mfe64dKyzjIOmdoPMcjjyTWnVB/
lfjWy435vEA8G+bGgU7MrH9+R+1dJp53eZ+qxkCi04O+pmL843tVfzPHtvxu
n6B7rqD+PSD68cQ2ejAPM9mrVL1HVVVlYur6vuJ5Lfe9wIX2RUaseixWFj1V
9IGiT2+5vFLjM7bl/9cputduufcG77eMswFvM+/7abMdkPepTf3ZXuXhzMlg
qkUfmhhDS3/AZqBTXK1uvOnFDeN5VlO5Vm7c6ZkakwsaxmCspPL8hjEYKzas
l8Bn5Sx0Cbnxoadn1gUuVTeO9qfIunT41sldd7Z4ztU4nK76x9SfyxvGua3N
XjS3rZW5CHkWf5TrRWex9aFPsz7VLQN9p+NbM+Ne0e/tXnh/uDm6+tJ4kNsy
61Lw7bgms56P/x3/w28j2wPw1Yli6xnRMW6cGxN7pfh7RNbDMHdf0jD2aXWV
f0XWu+JPsWnu8buwaR0LdVchu6Ofj7wG7RlbF/ayzq2WG697CrrKMvjjYONS
/Quid9JzLNWyXu42jc+adc/3nEOnCP8l6se5Db+DvRvWBeFjdG7m/y3vHPgb
sNMfhfcQWQiZ6PuK5b64ZtwUcl9Us28gOKhqzfpy5Ep41qrYBxD7wo6JbRjM
IV3QpabmH5LYvvOf6kcFXQVtgpl5OLW8OTSxLP5c1TqaS1PL5cskxs/As0Sb
cb+T0PtoXVgn8v6E5Xeo+re6yt80lneJ/oH3HYxtYjni0WCrog+rsL+q227V
TW3+lxs/drTKTxuue5f1TPztqu/LN1a3bZG5EXsZuDX2XtXMe9VZKh+puR4/
Q2yec8O9umf+Ds9mHmOeUt2fse0xjBuYs10atn/+qvpnU+se91QfDmZTVjNu
DdkXWR6MFzI1c+/hue2SjfC/AOf8oJ61rvG5pDQeORL9dmwdxzNq4+TwP0Bv
hI/jq2GvuHpkLJGqKscE3RE6JOQ95L57m5YJkQ1XVB9vbnnuRdYe0rL8eElq
fD7tfKZzd7es27+gtPzLO8Z2dc3I757+Kg+1/D+6TDz75MYi7dzyPM58zj3A
SdFn3plV1YfHVT6ZGA+GzEqfFiuN6eoBxjmxXA/Wa8fc9qPn1OYXuvliFe+r
5zJnVC2XDs4t7z8hnmUTv4PgaZcoPWZLqvwO3F7F7zP4MeTcKTr+vGq5nufC
LvFw1fe+MLWNoof4p8W2bTyo4/NK49NretCf0VVUPcc9pfrnxTu63XbgJKyt
3ROP4U1gw0q30U3lGpnX1gnIKy1jC8Eqg8fGBobteJjGahPVz9b9I71/nWrG
N6I/xI5+PtjSYIvHJn9GwN6AwTkl2IL7V+zDi41vf5VFYdzgabntxV0CD3Y9
sJcbid5D991U5V+6b6swD7jEemGeE0T/0vB+4RO1+VLN2BWwc+iXoPmem4Ux
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
            "]], Polygon3DBox[CompressedData["
1:eJw1nXO8A0nThZObe8NJ5q5t27Zt27Zt27Zt27Zt+11793uePfn+mF+6pzmT
me6qU6dqJthwuxW3HahUKkPNSmWQ38XblcohJA7jeJtzy/UqlalJH0d6quFK
5XzyH5DfnUbTkZ6E+vORf61KGXW+JP/4UKVyT71S2Z789EWlMmatUtm2Vals
QPvFKD+Q+kdQ/ibl45Cfhfz9jH16o1LZmXpTUP9Z+v+TOhOXlUrB74OU30tf
n1O+JGPNwbkxO5VKj/zJ1H2GMbelv+WZ0zT0dy31T6X+Nq2Mvyvlv9NmG/r7
lbIXGKvJfLr00eX8A5wrSO/IfN6j/W70+TVtdyL/Pvk9HZP+JyY/D/mnyZ9N
vkd+dPIb0MfW5O+hjxHp6zXyc9L/lvQxGuPvzPi/cW52xp+R30loPwLzO4r5
Xkn7OWjza5df+tuC/FiMPxPp+Yvcj13oZ0P6u4D6HzofymcmfQ7HW+R3Jn8L
7RcmPzb5Q5jLZNS/jfxojH0E+WnJH07+YspnZby36ftYzt9F+mPmcy7p0Zn/
TMxvUc5tyD3akfo7UP8z8g9T/zXGOID53MF8pqG/FSmfnvITaTs1+YmY8xzk
t6GP0zg3Nv3NQ3oV2m9Of9tR/qrljDc95fvT/kTyNfIv0v+2lL9CfnuuZxvS
m1DnMspWZ8y1SK/EufMpH49zH9Df7/5fXN+jjLE/5Utzf9cjvTbpb8s8Iz4r
yzL+xtRfkHOrkT+G9v8w9iHeQ/qbkfKfubYPOI5irNNpPyPXc2Yzz97n1L+Q
9EP0Nwb59+hjHq+f8c+j/QLMd3nSi9P/2pSdTv026ck5t6DvC+ceof0Z3LfT
af845WeSPpDxT6N8Os69xPU/zLkTGX8Jzj1K/V0p34f095Q/QfkGlHco34Br
/sX/iTp7UnY+/a1HegTGG5P6G1K2N/nVaT+b7zLlb3Ntm9PH5aQ3pWwS5r8S
vwfQ/hLObUR6TNpPRf3NaX8U+Y0Zr2S8jRnvV86tQfnVlC/N9a5Gevwi5ZtQ
b336G5f7s6DvAn3uzP2+lvO7UP417acgP06R+W/I+fWovxbzm4v+3mX8NUl/
Tp0hyp+h/xmoMzLHeaQ/pv2+rlFcw1bUnZr0orTfgN+LyK9Mm2VIz8E9n5Xx
p+PcmIx1Nn2+Tv870cckpM/ieI38juQnI70m13AN+Wmo/wNjn0abV0ifQF8z
0P94XM+i9LcT17Mr5Rc6H9IvU+ci0sfTxy20n59zazG37Rn/lP69nJD2Hdps
xVgbc24H0u9R5wjmejTl01G+KeNdTNmGri3k96a/Q+nvd/p7hrJdGWNK6j9H
H1XaH898J+ReXE9+LNJtjlGofzR9rE8fHfKjkj+N/MbknyF/BvXP5HjWtZb+
W5TvTV/LM94B9D8j/Z9L+UuU78H1bk/brzg/HuV/8PurzyP3YBH6e4M6V1H3
Wo63Sf9J+Z+U/82xGOXHkJ+f9HWUv+O7wXjvMt4A55egv/W4P9fRV5X84uSr
1BmifDnOLU37jxj/SK59TOa3NuVPUn838ntQ70jy+9Buevp/j2Mm6k/ey/i7
U38ZyhuUH8q9OYlrWI7yJvnDBvKfrEh+ZPqZjPHuoM+TaTNBL9e3G+mlaT8b
9V+k/juukdTfhPFvZW419x3Kn2vnXp7D8SLpi31mqTtI+VKUf8vv9s6X8b7z
nHsk5c+Rf57/fnfOTcV4b3LM6PrH9e5N2Y+cH9/3hzr7k9+H+axA/nfO/0zd
xZnDgtSvtfP/dThW8Xmn/o3UP4b6q1B/ZZ6ZrV3bKBuX/K78Hs98zuCaRqSv
3Wj/BW33Jf8T+cWovy71f6HeWNTfjN8jqH8s5QXlR7azfzzJ+KOTv9E+agoM
rDWkv+f4jPzC7m20XdI1iv4mdO2nv0W4/nEY7zKaHELZ7vT3pfsTdRaizk/k
3/ZZ4fiZ9MqdrOWPcYzis8e5dyn7gONPr51zRzG3s9wTaD/AuTr9LU/9FcjP
xP24gPLD7YvxL2H8ryjfj3Nzk/6llefpYNr/Svo1xtuL/Ij952cOzr1E3c98
p+nvBvK7cn3fMX6Vune5ZpPvkR+NdItxRvK/YPw1ff84dwztz6P/dcgPkT+Y
/PHklyT/GfkXalmjlLmuZU71oawpU7v/M4+bqP8l9c8gfQlj3kh+HNqtyvz2
Zbwq9U/j3N6kl6HNz9S9mr5Wo3wu2txK2becO4v0nBy3uPa5BpB+kHovMNYj
nJuCPvejjwHKbqP+TpStTH81yu4jvSb9vcz89qL8ftcV8k3yj/v/+y6RP5j6
Y5Hfjr5GIX9PK/vnBLQZm/TcjHkb/X2vvET6Ha7nQJqP2l9/ZqO/9mCeeZ/9
Kym/h/oT03YNyueh3r3kf6f8HGU2xl2D9suTHyY9H+ceoPwv8ueRnpfjfvLT
Mv65pP/mWJH6S1NeUP849yzXQu7/WIxxNePXyO/P+ZUYb37vEe3/VZ4lfR1t
nqT9nZybgPqjM8ddKduTsuWoP28v6+/+/fXqSvL/kj+LNgu4t3GMqDztO0Hb
G8h3Ge9Cyhci/QDtCvd250z/H3A8w/1bjXNbUrYEdSai/fW0366ITKxs/Eot
8sydrchjv9HnEPduNMbYhbp7ULYs87mJ9iNQdlj/fViuFVljeuosT3pRysen
/6vJb03/d7eyP41OmzFIP0b5GqSv8Dmn/TWN/179yuPMYWrKD+F86fWQP8j9
hfI3BqITnEp6Str/VcucnNt0nHt9IDL0iaSv4f6+Rn9veo7+hqj/MPX/oWxE
xnvFNYf8lFz3V5x7rMz6ujNjHUH5tNQfpK+96H8s+j+U88PM5xHyBzWzZ7p3
vlaL/Pkl55Ygvw51viF/H/X3JH0K/X9HfjzlW9ru63ND/5fR/2+Dkdkmouxz
6j/mesjxtfeU+f1Bf0uQ/16ZiXNjeL9cb0lPRD+nKjvT54GMvTvH3aRfo84E
lI3l/sHcNuJchf5f49yftH2aY3p1G/6Tl/qy+fTM5wvlCvIDysOUj0P942h6
K+d29J1tpewp9Rfmszr5KvmVGO9H10jyv1H2JMen5D+kzUjVnFuRsrOZ85zO
jfwC5Ldo5tk7kfz57tnNyM4Hkh+pEfnRvdU9dhTyZ1FnbcZ7eSB7+B6U3+u7
S/4Kys7lWJfyhxhjkkbk1yMo35/yEWzP+LP6LJN/iLJXO5FvR+jvz1s1s9+d
RPlX1N3cNZT8/bQZizpn+gyqD1B+RjvzX4/xXiU/J2N/zv0+hfIudTeiv3/o
f5j2L5PvkP+LfOFeTb5Nfln6OIn//xju1bv09RLnS8p/or8nSP/Df3Yn/f9M
ukf9RRnjS+fGsRjpt2n3I/Pflz4WpK+l3DPVnQeiQyzLfKag7AX6fIm+5qf8
PcoupM8nSe/FuWHSmyqH0/+C/H6kPMyxEOnnnDdt/6f+R3qhdsY6jL5fdb3j
+Xme8lHa0f8uIf9eX5eZifyL9HE9/U+hPk77j92XqrnmZdpZL36h74W5Z/+j
7G7qjO6jWo0O/SzH5+S/8R2g7hXkR3B7oPwZ0gtz7lPKLmWMp31XuJ6bSf9E
WZfxF2+l7YQD0Zlf5PwfldyjpX3+29m7vnJ/8NqZ97yULaf86V7pM0D6BP8f
8ueon5OfljqL+LypQ5NvVzO/JWh/rGsD5SNT/13OPcR8ZqD9H66ZRd7Fl2k3
DvPr8f88p3zDuSOYe9v1lbYHKveyFl1I+SeuP5y7nbKfyF/GeCV9bUr7kzm3
HmV18hv7/rayFs1Hf71mZHZl9xU4d5L/Me1fIr0o546m7RfkT6e/Hu03of0Y
jFllrtP77JGexf+xFpl1VtdujnnJf8MxD2UnttL3AQORcaakz1NJH9Df7z7h
9xHfF45PSc9I/ecHohPsT3qZTrCcezlK9w763Jz/Z7uByJj3c7xL/i3XfMrn
I79ALTLU7MquzP8K+h5m7M0Z7zXGuHIoOsTrpA+mzpzU/4JjLtqOSP03SK/M
9f/OfzGz8tJAdIqjSV/I/Lck36a/zYaj46jrrEL5qa3gQ+6NM6t/iwd0I38o
h9SofxpjTqMuS/n1lK/YjfygHDFI+ZzkLyM/Jfm/uL97eY2uv5z7wz2Q/u9U
f2aMS1rRBzdxfaHPSWmzmjo+5UdSf3TyF7dS9xXy45NftRls4Ajyo/kOUH5V
NWvm2a3gA2uSvpf+JnZ97UYeUS4ZYn6nMoepKbtLnYb03Bzb8PwdxP/zEn2P
z5ybpGelfmU46+8W9Pca9eei78s4Nlf/oI/JfD/p/1rKplFWUndt5V4ePhAZ
bR3yg8oj1P+Jfg/jP9mB/NWc34r+r2ol/wXlk1N/Huazvfo1x8uMvTV9flzJ
WlCn/lLdyKfKqQPkT29HVvuDezCp+kYRvOA60lv7f9CHwOQAx9+c247ncW3a
/8D5BSl/thv5/HrKpiD/dS+62TY0+4r0ahxV6t9F/X3Vp3p5Po+l/inkx2f8
2dXP3Cvpe2byGym/1bL/fNOLbryt+KTyG+eWVd/gmJK6D5PfYDBtbPsM+bXV
v2n/WCt1rHtyLc+bmI7YzvH2ry7oe0h+RPdkyn5jvGsY7y3On8z8HvV/5N6c
rI7cDiYrNvtpf32z/Fj741jStb+X/BLirO6XZfBWcdcDlFeb6f9qjjc597zv
82CuQbxxFo5NSY9D/y9Q1i2jf6mHnU37d+n/qKHI1IvyXz3O+aPJr0D+MdJP
uV+SX538k+28977/rkniJ09z7jTyO3FNe7dyP30XVxUDa2e9Uh+7kzrv+65S
/ulg1oBZXAsYf0fKFlY+5v8ai/K3B7NmzeT9JL9lNRiiWKJ4tfhCpS8vPuMe
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
71vN+nJLEVvIzcoJ1P+B67tkKPh3l/v/I/lLh/LMfk96sk64AO7BJX19x7kL
hoKhn9eNPDIx5X9pE6LsPvof7NuGZhMPpc7t3J+RxZwpG5X+pqX+fNRfv5E1
x7Xn0mrwF3Eu8a5HuN6tSc9O+WauR7R5jjnPUEb2WbWR5/9Z+vxbew75+bSf
tsPlOUZMsR0buLbw5Sifdzjy7nj09SXnHmC+H5GeUXsN+Yca0affEPrQPqE8
wLG69k7qPcX4+3k/xPKbwfdu4vqW6sv7o5B+i/PTDIQjdJfyAucWcS11PyG9
Zy/8qGUb4X/8Qf4G5rsr9a+k/HKOBWvhKMhVUJ/XVr6zMjzpV+h/Mvr/jvxN
yracO5/y7cif0w0+oe18F/UT8ld0o1+qZy6m/s313Er5UdXsp+pzLW2H9Lmo
MlIrXJlD1DFIP96KLComITaxFvfvonr02ZcY6w5tSvR1K2WzKm+T/6UaW9fM
5G9VJ6HvGeh7DvILKQPTfp1K/t8/6ePGodhUr2au79SjW/5M/g71HzEkdTP6
3EpMjfo3U39310Tqn9wKd2Nf8vVW5H7l/5/I39aI/DpZLTKrsus7HDNTXqW/
x5SZWrE/7kGf9/istYKXb0b+BvUjrmeuvu1v9OGs/64VrvGu9a7n7mXuEe4V
H6vfaJtjjM/Iz9YJtnwix8fk1xU/ou7X4snaa+h/DNJr0W5+7VX8jk/72Wn/
QTN6sfpxgzpPiQEzpwcHI5Mrf6/nejCYPdH9eY5ObFGnau+i7UqMN8NgZMi9
Ges039HB4AFrM35J/VG0lQ8Eb1q8F3lHuWdy8WvtG+pbA8GbCuawNenNtBeR
XoX6M1H/TfJv0N+07snk96HN483og2Lj43sPGX8r38nBYCTKa+9zbjKxEPpa
wP1DPZX+J+Lcp5y7sh374Zpivq5xzOck+puN+a/TCGYhdrHJQPCGtjI45XdS
3hKPK6Nvqnd+UkbnV/cfk3EWGg6fS9uPOsACZXQAdYHjB4KnihOLF7umb69u
zrEB+TXoY1v1ddpMLVbg+1oEcxJ7urAaPP6Bduzf+3A81I5coXxxMW3+xxwa
9LG+WAv1tyE9jnggc9l4IJyKkTuxrSgDPK98Kg4+EI7EdqTnZMzFqrFlj6k+
0c7auRLnfnSNYn5D9XD0bqDuRZQvxVyW5riY9C0cW5DeiuM20uu6Pohf0ubb
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
PFxsrsi9cU+4mbKjinDffMfe9d52omvIEbqpiA+pvqTGx3m9DOdR3Ef8x1g6
+pyK24jfGIvo/E7ebd/xU2h/ZpHYUe6Zd8rdK/KuyyHQ/rZkL7Z9ZW5l7xXE
JwZjcz6jyDPjsyPHVK6p9nht6crQytL6O7rWbSiHiPT93aSNoXAVdbccDi9R
fuJD6nLd+E64xszSjY+be+QT1aw3p4hR1sJ5kL/0BMe2pC+i/sykH+ymrzPJ
T0P6+U5sszdwbkb39m6483cw/kmU3doNF/o27d+d+Ohrk/cZ8VnRhqP8q0+i
sT7UmdSd/uB6L5e7240sqk1gCtJ3dsONP478xKRv6/bXEvo/nv63GA5v3jp3
UfYZc/q6EUzU9+nHIrKsHKORi+zP2nKW5dwnRfRdbT9yWH8kvXkvuqac+C16
idlwUzPyj7Ec1O+MnaBNXf7KNOoOreism1D/yiKyh3uIe8ltRdq6h7iXyEGV
U6BOej9zvbvIXv5gf3/zfXumEh9O309tFtou1BHlv27AGA9XElNjw/77oe1V
n0f3m4nK7K09jklJf8d8r3HulM/TDX6h/mj9hbqJYabfrjYGY5uNXWZvb4j3
kr6uyN6pz6nyrzE7LmrmGo3lIWdL/UjOmnj0Qd1gQXdzv0/pxd40Mfnlaf85
6aMon7AWGf7XIvaVSWt5h38oIlMpW51B+4PE65SBasHcvioSk0j9TU6c9hsx
IrEi7Z87kj9cGbgWTtoZcj9a4b1qc1AeN+aYPCRtNOoHB3Zjy1In+c65FOHS
jFwLf36/btJy2k7sBdMT25MPsyVlh3CMU4uO8nMRfahL//NUo9/MWoTr4pz0
t96im7buoS/31/tHK/Eh/YT0etrMK/GhWL8Xn/49WsGn9fV/rhtdXZllLtKv
duN7No4cF8r37Mb2cSPzPVbZqpvnw5gaxjpz/TyS9DW0X1BZpxvdWJlokW58
SPRL1z9d+eeEIr4De9biz/9iN2ljQtzei4yqrHop4x3RSwysVjM2OGNjqUOp
S7mneX36hDzYio6jrvNAK36y+ssqX73SjW+dMt583azXh9u/mHI3nG/j8rnG
ygWXo66OYowr5UFjduknrQ3UWF5v+R/VEmPqXrnCRXxjPGf8MO+PvsT6RO/r
89mJ77k+dPrHHtyIn7My7ny9xEQxDoQyrrFSTuzEN1wfXPmt7tfGZjCmww5F
bAjaEsQQ5ZPLMZfTJCb4IO/XU534Xl1H+6nK2MdWrkSHVJcUXzS2jZwl4wXu
0M2zLifxHdfvbmQnfVD37MQnf69WdGp1a/cf5QfXW+VN7df/DCTG26HMfzbW
r6lawSS3Jr9iI3E0xKyUV7RnLlOJTq1ufYuYv1h5Nfica6hrqTZe+dSud/6X
Ynaul6PQ51qVcGZH7UWeGrcSDqny0ki92A7lWI8sPspcflOfFaPvhXNiHAXj
KchFuasTros6g3jqEsz3VW0/nNuml/shl1cOo/Kk9jxtbXIk1U/f6QULOIbj
fdIH9CIr6gP5ShHO6w/12LS1bcsB/bkem4a2Df059KUQ4xLrkrP5M/PdaCBc
zgeKcG+2pc62vfh0j9DMPdQeLOYq9qqPq/7Gj4nBVoLp79cLJ3n6dvYgucrX
ctQHwmG/v4jPpL6T8kuvLMNZnKCZZ0Z76gPaMCqxce1Cf+8rs9bDqVG/NUaR
fvD6wxs77a1ObMXaaKYhv1cjcU+MfzJ9L/qU2IAcZuP1aS+Um33QYOwpcsaN
+6GNRS75f5z/dtYwfQFu7oS7LmYi/irn53XqTzQQLpCcoDfJTzwQrtD9nWCT
csp3EjsnP3YlHOl9euHUf1iPzUbbjRz69+ux6cit1/9Y3xgxQLFA+QPq1uo4
6jqH9aI7yNl9l/zn3J/ZmuHTjdFNfEjnJodNPNE5ObeR+vroN9Rfo5l4XQtS
vl0vz6YxQvy/J+pFl/iaMUalvxm12cv15hiH/Be0X6AZ/v343XAC5AbICdiw
CIYtFq7OrO58TDO6nvKxcrIxnoz19Iz4ZSc+/vr6T8zzfGI78UVuZj7PixdS
9mUZXsxRlb4+UMaGKr9sWHy3E5ur/LYh8l9xLNVMfK/5+/Z1Y+X8yvy3KSJD
KEto05Tv90yZZ00sWX9PZTRltbW4B1sWkRmVHbVJ7VaEb2HsiYfI76P8300s
nSHXryIyp7KnHM4DivB3jI0jJ2n7IjYlbUvyRXYi/z/G36cZ/oz6iHyD/Svx
6TN+0nfisc3wi5QnlYGVhXesJT6U8WUmJ68IYTybBbrZG5XJ5aeLl7i2CINs
RvrT/npnzEf3t8W60f/V0eWPTqW+NBBO785F/DX0N3irEn7dbN3sZeooxr96
sxNfAWOqTcX9fo/5PtyI/8dzRWK4GefEeCfGBjyG+idUg5np7/JZJ/+dnA9j
L2pPurIVmd/YqWdSflAlMTx8vrRvrMv9OKWS2JnaL+SKyS+/UexCHasaTFP/
h887sXV4T7XnrEebk6t5pmfo23uMQ2jMpPWL6H9ynYxZpz6ovuh/I6dY/F+f
UX1H3XOVR7SXXdOKTivX/+5unp37uH9/k/+6k2dVzorz/Vj7YiP+Er90+zaf
amToq/r2PG1TxlARj9Jes7x2jkruz6nUuaAaH+Q1yX9TBA/VZ0t/gGuKYHW+
Q2OWwRu1JSkDX9qJPCwW/Ko6UCcyo7KjNlztBy90gyX9zfxHof2VzfCC5QeP
S/7OItjRfT4DfXvfra3IcMaefbqbZ/NL2o9A+YfdYEsV+h+9jE1P254xdsTX
vunEVnWFNhvynxWRteVg6b/6RRHbjTE9G6QPLaL7fVCNvebNbrCwfxlvtDL6
i7KfMfqU7y8vErvvG46ri7xP2pG1Jx9VRoZXltfnzPikP7bj56e/X0H5B9on
GvEP+omxPqTPwyrxsZ6H8S/tZW2RQztJNzGxjI1l/CxjWeojpK+Q8XOvo6/f
5LNz7EB+/F5iVJ7Qig5q7Er59nLdtWlo2zAmkBx7dWZ15w864T5p056zl5hy
xv0y/pfx3IyBZxwl4ykZG8+Ylca1Mb6N8fyMoWYcHOPhGFvt/U58k4zhOHsv
MVz/Zr4GodZf6ppe1rYHmc+03fjQ6Usnpv9wLzZbbbfG+DD+xMe92CJO5vis
lxidu7YTv3GTvj4n11rOqb6OjTKx0uScNsvgAXInjYkkPqCPt77eyqTiR+rX
roX6JGjvUf8UW32Hn9s7sTff1IoMbqxs7b9yjeXL3lQGHzD226McT5K+pxle
uPzwScrERD2+FQzAWKlj98KV0mdlnF7wSbnXxpAVr5QvJTdKHx7tE/I1lC2O
4Hi6yP6qLLUzx0NFYqzu0E48U+1f73Jc34g/xqNF4u/4br2kva6T/UFegPyA
o0lfUIaPKgdQLqD7uX6EcvSOLMN5lfuqj361DIYhliHnXn82YyAaC1Gf6ZpY
LuW3DMXn7sZu/EeMzalPmL5h+mwax02fHn05f+nFVqcNbvUiMXGMO6tPnb51
xvAxzqw+c/rOiamIreizpz+eOrm6uT5FrifGtDDOlz5N+jbJmZM7p86sP7zr
TaueGB7i1fq/akswZrexu+X8yf1Th9W/f6wyvtwD9ax/xsgwrqfxPY2dMTf1
ZyP9ci38yrnLcK+MiThFL/6F+wzEh1BfwkOZ/01D4ZRf282a6NpoTEbxvlHL
cPnVSd/v4xc+S8Y4uqePR7h2GmNBe4MxVQ5rhtMut33kMr6r6ojiea5hrmXG
7BSvcz33WvR51f4i5iv2q0/jZb4PZdZ6dV5137vLYIvqmOqa2veMLatPoL6B
rsdfVGNzEu83poKcG/nfxlpwPRUrfKsa+4LxGMQS9aG+qEgMlJOa4czLnb+z
DFaoDqsuq7++WKk+xScV2f/cq+UQK6/Now2Ga9FIYmyCRcmvVQ9nbpEyNkNt
hwsPBj8wPp6yoTKKtgptYNrC1hwMvqW9zdjrxjTSHqAN2efTmEr6d97Xi6+L
MSWc/75lbK3GpdEf2jXdtX2CevRX4y/LtdceaLy1CzqJXT/2UPDQizrhLhiz
VHz30V64mPrcyRczL3dsjT4/88FeuJv6JMovlj89tbLsUOwZ+iB9Vk/MGH2T
7uYYdyg+4eID+zGn9SrR0dTV1qL97EOxgSnPzVuGK2jM1llpO60ycT0+z1P3
9XOvzXOWjaGMVw/GL5/a+DDaBvW50/duoTJcRmOy67/3qTaGev4j/ytlamVr
zy2sLZRj8np8AmciPR/HSvXELDGWifK5fsPHVPL/6m9sLBh9nI23IqYvtq/P
uvwk4zkbO1+bivGxlZGUlSatB68VvzXtmI49ZZlYK/ogG2/nbvXremIuyU+a
sExsH9cQ5RVtHto+9MmXryLGKNboNwdc/+W3LleJTV7bvPKQuosxG7Wv6ZO/
WzOY5P/vXy8ORWZWdr60DL9PjE6sTqKYsT2M0WBsB/E4Y+Ub48JYFz6DPova
+LX1y7mU46WNUVuj/OcVqvFJlC8wMed+r8Xmc1gneKSx1Y1RaKxCYyTpO/1H
LfHUxR/HqSbGSLWPr+lbaUwJ+cXGLPixEQ61sQzEA6eqJmaKsVPkVxs75el+
uT77xuCRcyD3QPxR7ok+/PLpxS+N3W6MRmM1yqfXtmxMEmOTGNPiw0Y40t4P
+eDaZo0RYqyQSXuZ+1Lc/7nK+Ntpy9fHb3au/+IyXHYxX7Hf88v4AoiZiZ0Z
j0xfGH2M5QfoXyj3W5/GyYvw4+R+z14N/9GYhsY2fKcWfOdfMbhqYmiL34j/
WLYA85mzjHxjrC9jGMi3mIPjxVowYeNDyt9/uY/Pq2vJb5e7vFA1/I9R+v+P
Mc6VD9XZ1d3/rUV/Up8y7RrpWqkPk75MxhxXXjy3jG+EGKVYpfjT27XEiJe/
rrzyVS0xzOV3i2f7bQtjWshvNAaMft3qbFP38ZPaYHSydZjfLWVsTdpYtLX4
/vvu6uPi+678OzLpVZnf/OrbnfhG6gOyJPmD6GOswdhglK+0r6vLGANf/FH5
dYTB6GgbFfFR1VdVH0PjgY/dDV/HGOLiN9rj1RWM6SxeOWG/vnNQ/nbPcu96
sS8/qk+qK+mDIx6gj4K+Cvr4GMuiowxVSYxz5XtjPl9YSUy9HvnbytjWtElq
mxTzEPswxrt40xJluNx+U0J/oZk41xyMTnlcJ/J0dzBroGuhMZjq7fC3jc2k
/VPfRH3C1ReNEaF/gTHx/H6LMYN2bsbGZiwh7W3Gqp+0nxc/Fzswhr2x7LUX
ytU0JrWxqY0B9E8r/HVjA8lZkbsi50Hug/i3scWNcWusW/Hqu6qJWaK8rH1T
33Nj0hibRvubsaiNCaU+LuYj9uM1qi8Yo8q4BuoQrvf6eH1TT0ytR/r64JPV
xLQ2trX2Qrmh+tDrSy/+r++kMWvUH8Xz9UXSB15feGPiHNyMzdX5yCeSy7zs
UPQP91d9d5bq+0doQ9CW4Ddn9MfUH2/UavZX99m7+75VxpR4l/x9Ps+VYHhi
eV/Uw63UZ0e+9JOd+IqLQYpFPtiI75X4nTjetY1wb8TY7OMR6o9VSZlY37Od
cA+8J96b+xvxhxPvE/e7pW+/vaWZeA/K/Mr+z1QSL/2JTrBP566sYLzvryI+
Vd7g3L2dYHtikmKTYmZiZ9pkjC9vvEZjXyjT7tLnx4u9KcPI/72ib/+9sZn4
JcZv1J9/14HwjY2Hrq8a1Sof1BNP+ONKMCVxa/kPYtX63cvtkiOmP55+eXLH
/H6I/q9yHvT/1H9vzGrwaXHqN5XfK8H09UcT4xbrNi6A3Kwv+/q/voxy1fWf
ND6ieLa49tWN+HOLeXoP5KDpr6jfoty07zg3TSU+ZPp3GB/X2DhjqE+SXrwR
3VEdUr6fcTf0vden9GnSz3Xiey+HRC7JlY34f34hXkP64U649/6XYrn6yxrP
z+ff//zeRuKl/MlxH+nNy2CHrkGuRSt1olufX0n8HP0x5Zr7ThoDSM6Kz9vq
jYxvPIsRKRuPc5/UYyOWeyE3X9uxnOTxKVuhz1WWOyX3Tkzd+B1yYvRtlKsu
V0aumL58YvjGw5BDLHd6lUa4xWJ4YtfG+RDbU2ZVdh2pE26O/B11Yb+rIpdP
nyrjE/zZiK+V8ZaUfSfsv0MvdeK/6X+vrcJ4Hs5HGcV40cbz893WR9F40sp/
2uqNfSB2po6trm3cDLmBxnPQ9iTfx3jZ2gh8H1du5H11jbC/ETrBLpT3rW/s
B7Ed/bW9Hn0IjT//VyOygjFV5ZOok4vlGydGXV3/AH0V5L8OlonP4Py01xsP
33gh/h/KUMavN56VusEU/WfolU78f312tc0YD1NZRPnP+Jh/cH7pSuyPGzUi
hyqP6p9hvDe58MaqMGbFH83Et9D3S3uTdqfRmon3pD1HnUEOqvwBfXXlpk7R
jOwiviPOo3+VspUxRPW3Mp60vnPiU+JUcj2NVSqf1e8fGA9RWUb5z/iLE3QT
O8I9XTxqszJYuTqluqXft9D2o31OO50cJ7lOxgw9sxv/Mvt3HLmlxkj0Oy7G
DDZ2ot+XUPZd0/vdSDxQvxVkDALtycZb8ttnxlgy1pJ8S78tZIxX+VxiUGJR
xkD7tBeOslxlY5gZj9j4BfpaGwNWvpYxVeduBi/W3+896h9cCWYmdmYMhmoz
/vrGZni3j0+LsYm1fdRL7IrjhuL/Jj/Ub5cZ48lYT8Y/cG01xpCxho7txLfQ
mFHGh9KHQV8GZdAlisQEWrySmCf68/i9EmOfy/Ey3tyXvVyPfNRVi8RPN3ae
a6rx2IyBsV8zHBy5OMbw2K4ZjFGsUc6K3BW/qbBVke8b6DujjWTebr7XoSyt
j/k/9fCD1IXVUdVV5aTJTfObKbsXkUuVT5ep5Pm9o5dYEsbwEw+QD+3zU2sm
HpxcA31Dtf9t1ojP/QKVxFDRX9gYBb80Em/A2AXyoUYSm+a4lfzZnXzLxnPy
o87t5N30Gznym6xjXWNYyy+Tcyb3zG/gGB9Cf9zth4Khi6U/20v8U8/pn6s/
o/+le4p7izYouWkHNmKbWrgRLF1MXb6q32My9rycRuOpH0qdTSt518RWjdcr
VjplM/H41KeVrY0tpu3qimawIvky8mYOLsO1VudS9/J7TsZ2kA9t/HXlMbFb
v8OjbU59QluM37nRNqjNRNvJoY3Y6rT5KauLGYodismIzUzSiW1NG5PcJTFy
sfI3OL9PJZiy2LLx4dUtdqwkXrI2K7l0YpRila93wt8Tkxab9nstctPkF8kz
Mk6a8dL8hswkrfgnii35TUH9D/VZ0nfJPcS95PVefPfl2Oi/rI+wvsL6mOhr
ov/x4UOROZQ93u4lFoHn9Ec2vr/6ot+889t32sy1nRsjW3/VV3uJBSDHR3/y
/9b/enRE/YT1d1T3V37WP/HjTmyRYqJio34/St1rq0rioegPKXam/q5/1t3N
YIHyJ+RR+H0VYwGWronN2Em1l8oR9HuLcpnlh8u583tY03LcUonNQz649lSx
NWMQyZ/9pJPYdGP3n0f5In5rxW/M+a05+QL65ron6D+gj8Mi1L9rMP7Yvl/G
AtGnfsIiz6SxIt0PPumvh8alUCdbrcj6YSwgMfodi/gnGwNJzqrcVf2BjUHu
/mlsctdLY9fogz5jkXgAxkhSptO2Ix/goFY4sHJh/f6QtooDK8GztFFoq3CN
FW+W32msV+XjB8p8A8Zvwcihk0vnemfsH214+1F/jV58fcQPtXXKGZM7dn0l
fBn5mn6DSP6Q3OpRW7H9iVn6fRjxHuUw5bE9isRgMNaoNl1tu9qL/GaWNmBt
wfrgG5tdG7G2Yu1nxtDy/zJ2lPYGv3Hp8+63NPW/0ZdUeWHUIj7gxtbVZq3t
Wn8efQeVj1pF/Gnm6wTjMFaz36HS1vVIJd+n0r9l8f6e4t7iGu5aLl51Sh+/
NaaGHNRzivA7jN1vTIB5i/Axfu/LGEsV4RsYS0GZVr6y/Aj9dvXfXaeX71ca
m02fvp74Zhl/U/1Ojf+pT4D6lDEY9BWQH6Kfrv66m/bic2hsQzlCcoUeLrO/
idmL3csHMoahnJjLy/Crjdnu+nNVGf62Md23Jn9FGX64Me79PuA1ZfjXxhzT
ZnO1WF0Zf2/9vo1/+ngZW5o6rLqsOpg6gBwhdTN1ItcsdTR1Jb8J5rfB5KjK
VdW+pU+p+tWrZex5xvgVc7+hDH/POFbKBMoG2gOPa4XDLZdbe5Mxv5URri/7
3+BrRUZ4xfW5FVuYmIbfE9Inz1iAcjjlcr5TJpaEPmD6gj1UZv/XpqJtRT7w
Se1g6GLpfh/R2BHqYNpTjV+nL7461ch9+4Qxw+QYH12ET+M33cQ3tJ3LeZWL
JSdLfph7jnuPMtLhpB8pw8URYxJr0gf7gGZ0TnVPZWhlaXXuHUhfW2Y/02ak
7cg9y73LPeewMjZMbZnuKco36jjqOvoj71omXqS21j0qsV/J1z62HRnm5L69
Xd1BHW7nMjqPuo/+uruU+R6WtlO/caD9Rx1HXUcdfqcy35z025PqyHKl3yqD
TyujKqu6Z7t3uwYfUUbGVtY2Ps7uZXQidSNthAeU0WHVZY3Ps1sZPsgOzegU
6hb6S/stIzlD+kir46jrKEMcVEan/quvE+xZRkdWV9ZGsA/pt8vIH9rktM2J
YY/cTMwGsW114oG+TL9/GZl70mZiPCiLq8Ory8s526uMjqSuJAayYxl+kFwO
vwGlv4Ex4Y0RqX75bJn4S+oOW1RiLxNfNiasmPDoRezFfqtg2mZ8f7WH+01F
Y1QYq8J4neomm1Vi35JP5zcNjclhbA75jMZREIMTi5PvZ5x1bQDaAoxhaixf
bQwz9PE3Y6FrM3+iDJ9J7tgBlfA/xMuMnS2H7NEy+LQxlcXoO0XWQmN9aAM2
PqD8T2ODi6/cVwavM9a3mNouRfAqYzm7Bx9YBE9WN9uwEnle/pzf6hi7GV9m
v5+grrZ+JfqQfEC/ISMH7z8uXi/cgc0rid9hjAu/HSKHTS6b/G1jRMpRk6sm
39YYbcojl5XhRxrzVc6h3EPXemO7yFk0/qf+bnLxNqgk3okxno31rD48SpH4
JsYwlL9s7AC/ieG3MdTPm0VkeGMwyh9WtvebE8bYFE94vsyefHor3690r3Y9
MDbDf/GGivjg6YsnZq19XT6FXB5josjX0odOXzoxVr+vLF96tVb2HH3tx+wm
FqEYtvw/+c3LthLv01gGxoMyFrwxlP7jX/UyF2NMqe/IcZPr5jdL5Sdpf9iy
km/S+m1a/bnlihqDU368e5p7m/ig/kba9LXtG2NMfqc+aR9W8g0g+Zzy/d2L
/CaV36aSP/tEKz4t+rbo3yo3Qg6uXFxj7Bn33fjvxt7TP8FYtsaMlx+i/5F7
nd+Y9lvTcpblLvsNafdf/79vG+F4yvUUn3av9BvVfqtaPuIxg/FR1lf56TL+
pPpY65/l9y/9Nqkx2tTnxH/kctlG/qL+u3IX5BjLNdanUd9GbVJ+z1f/ie0q
+YaF/Ak58HLh/aZytQhf9ITBxFB4vsg3YIwrb3x5vw1jTAjXPdc//aflU11T
TUwh+XjaG9atx0d8mb4+I5fRc9offD7faYRDKZfS7zn7LOiD7fhyMuRmGDN4
z/76NX878Vz81oU+pPJFjcGlr73xekapBnPTX8wYs8aaXXQw/gv6/Or7qw1G
/q8xCtSVx28mdoE+iPoiql9+27ff+W76DWS/hXxmL9+CMKak9i05amIPctLk
punPoa1bDp58WuVZYz36jWa/1Sz/11hbYtz6i/lNHPECY6Ke3sv7uFQ78Tj8
NswLRb5d5H8gX1cfB30djCnu98/lV+kLL8dQ3z5lnAtaeSaUfdwDlSWPb2Zv
FM+UK2XMKfmQ+nDqyymnSl9n4z+pa9zDcWovh2m/Aa+/hvG+biB/E8dxvchk
ymbitfoPbdrJt0usYzww/VmMqaAOeWsRzqbcTTm3+uM/XuTbJHsPhj8sn9i0
HMnHKDupl1j3xhzVHihfd/fB+PTr2+83evxWjzGy5ZPrr+J/vSflK5b5Joz4
hDFdjfekjybD/xfzy9gI8qXkGvlNSfmg4offVDKGfOCnyvh7GgPAWAD6D/jd
GW3U2qr1r3mkFR89ffW8J94bv+mtP8BTRWKL+Q2p3XrxkdBXwm+8GC9X/wu5
E8bIkb+sv4s6ghy4Kyj/P4BDljk=
            "]], Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[{{3146, 2080, 1791, 1792, 2081, 3147}, {3253, 2226, 
            1843, 1844, 2227, 3254}, {3952, 1923, 1823, 1822, 2132, 3168}, {
            3949, 1877, 1771, 1770, 1981, 3062}}]},
          Annotation[#, "Charting`Private`Tag$392032#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl019ojnEYxvHbOxubzbzMbPZHDkSt7WAnjImZbTSK1RxYoeXAdrCVE+NM
apYcKZwJMfl7gjM1RbQlMX9nG5aRkVJKSuLz2MHbfV3f+7rvX8/ved6l7d0t
XTMi4qPfysyIRJ/NmPar+LY5EfPobI3d9BJ6IX13bkSDfhVfmRVRjQ1i7dja
ZBdWmxuxGd/C19GtdBu9Op/X38+fku/E1mDN2DHsNtbnrIP4uSRD99HX6T/O
GNA/ze+VH8LSZr9g/Vg3dslZE8ke/hr9jb5Pt8gd0s9JReSrz7CGmZ6Nr5sV
8Zxv5nP5tP4G7AW2FcvD6vmX/Eb1lfpwtj34AtnXfKvcIJbGCrARbIifz7+h
H9EFdIP5UX6XfCFfKNuIjWF7sEVYEz/Ob1Lfqo/NFuNFsu/4fXJPsBKsGHuP
PeXL+BJ+gu+UKeUX83fc4TCWxd+g79FT7qUoP4ERt5Qu9YL7eosf9Q1cxErs
OII9SN4D30FfTvr0erM7zJzht8mftLcH/0n3Yje9k16sI9nN99A76e30ibyI
FXLN/LBaY28jfthMLVZhbzFWhVXyf82m6XJ6uXPL9bP4dfLJI1yxI5OfxH0i
Uaam+KbsiK+e2XFx3LNU0x/0rI4J1doYcMe/1c96Ocl7MtNv3y+61n42Rtxt
hf64GTJ++I3RRqNU/a7WC06m/l9nHHDWMnqUyUzmVSiuGphKztbLSL4PM+eJ
T3SNYCq5DweUp6b/j/8AMEpq9Q==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzjlOAlAYxPHPigIXrmDlHXCrbV0xIoWNJkYQcd9AOZcLOy4segA9gyYm
lP6KyZv5z7yXN71TWM6PRcQmbSUjdici9qg+HnEwGbGUiKjxeb5ADf7QmU5F
PNivTEUU5SNq6mbxRzxLv9TC5rAnfsO7RfsvauMld57xVfmYL9v1+K7uRK7p
Onwfq+hOsRe5jm9TAvtzvmFnun27O+xVPpcv6J2/dM7jDds1myv5mnq6BbyJ
52hEfWwRa/EZ/y3Zf9MAv3Gnja/Lt/y93YD/0JXljm7ID7GqroJ9yj/e6epm
8H+0xjny
        "]], 
       Line3DBox[{2911, 3056, 3948, 4102, 3067, 3057, 3417, 3570, 1874, 3882, 
        3880, 3881, 3777, 4237, 3017, 2912, 3059, 4064, 3018, 2913, 3954, 
        4065, 3572, 3883, 3019, 3886, 3884, 3885, 4066, 3780, 3020, 3068, 
        4106, 3060, 3021, 2914, 4105, 3062, 3949, 4104, 3069, 3063, 3418, 
        3571, 3950, 4210, 3889, 3887, 3888, 3781, 4238, 3022, 2915, 3065, 
        4067, 3023, 2916, 3956, 4068, 3574, 3890, 3024, 3893, 3891, 3892, 
        4069, 3784, 3025, 3070, 4107, 3066, 3026, 3071}], 
       Line3DBox[{2936, 3157, 3156, 4126, 2935, 3155, 3813, 4241, 3973, 3814, 
        3815, 3812, 3154, 3597, 4214, 3972, 2934, 3970, 4086, 3152, 2933, 
        3968, 4085, 3809, 3151, 3810, 3811, 2423, 3149, 3422, 3148, 2932, 
        4165, 3147, 3146, 4124, 2931, 3144, 3143, 4123, 2930, 3142, 3806, 
        2072, 3807, 3808, 3805, 3141, 3587, 4212, 3966, 2929, 3964, 4084, 
        3139, 2928, 3962, 4083, 3802, 3138, 3803, 3804, 4006, 4194, 3136, 
        3421, 3135, 2927, 4162, 3134, 3133, 3137}], Line3DBox[CompressedData["
1:eJwVzssug3EQhvGpUyLO6ky1bsNWU7GRsLIWiZ2uq1qq1SugC6yQKBFurTs9
OPTXxZOZed5v5v9tHecPzxIRcYT6RMTnVMQXxpCZjmiPR9zwm/o0Rgf5TMTu
bMSbviZ7VZsYQY6vy6t8Ve1imD+YjLjmKuYOhrgXPKPCf3Cndp/MCaS8tYEr
WYZf068jZPtupbhL2Z7+H6uyln8tc8v6Ffzx7+5mfftoryS7Vx/wK9sZ3JBf
8CW1jR8+iyJXNH+jZ27YucM53+RO7N6au7IFbyVRkKX5Of08OrIldRHbdvoJ
6i3/
        "]], Line3DBox[CompressedData["
1:eJwNzbkyw1EcxfGfSmFt7Os/GmsGM3YhDyCWFEhhmOgpLXkA6b2JPAPDC9j3
SlSq1D7FmXvO95x7b1I8zh/VRUSByg0RV00RFWqjpDlirTXiHi80RqTkIWrX
DTtzugfdckvEiDxKHbp1/BH/lbfd68Q2sCdsn7+w/6EufszmGc/I4/yJ3TXf
rZuQX3R73rjBTnVprEf3iv/xl9iOvheblEv1/pCn+Gnqw2ecm3Zv7qx4Z1ae
o37dFv6O1+Rd9wawPPaBHfBl+yoN8vM2n/iqvMCf2d3yiW5R/tIdeuMOO9ct
YSldxvmty+L/dKgrmw==
        "]], Line3DBox[CompressedData["
1:eJwV0LcuhmEchvHHpHcnIFFGAxu7tpn1FhOHYBS9B+HTS9SQqEcgsbNwAESL
FnXwe4cr9/O/7vtNvny5zV01nXEhhG5MJoewnxrCX1oIBzIHZd5r6MsI4SI9
hAmbHf6X25XZOOCr9avcmXvcZkv+uLdlFq5sqmza5Ao/ZrPOf3tP8nt8prtF
tqIZozaf+i9M2NxwGTanWOZO5IjNLt+h/4h+K5eOEu8lFGPYZtum3eY98vo0
NHJNKNcP4UX3hlek6ovkInp9d243aLPAP0depmCfr9QvcMfuAZuYfHLPy2Rc
2lTYNMh5vt9mmn/0non+Sz5J1sl61KLP5l7/EP1Xvr3mEm2OEOMOZa/NJt+m
v+OmuATke88hDz02GzYtNrfucX08Cr1nUYBS/T81x05s
        "]], 
       Line3DBox[{2966, 3162, 3951, 4129, 3173, 3163, 3425, 3646, 4188, 3043, 
        3907, 3905, 3906, 3838, 4246, 3044, 2967, 3164, 4074, 3045, 2968, 
        3977, 4075, 3648, 3908, 3046, 3910, 3909, 2851, 3845, 3047, 3174, 
        4132, 3166, 3048, 2969, 4131, 3168, 3952, 4130, 3175, 3169, 3426, 
        3647, 1924, 3913, 3911, 3912, 3850, 4251, 3049, 2970, 3170, 4076, 
        3050, 2971, 3978, 4077, 3650, 3914, 3051, 3917, 3915, 3916, 4078, 
        3856, 3052, 3176, 4133, 3172, 3053, 3177}], 
       Line3DBox[{2990, 3264, 3263, 4151, 2989, 3262, 3876, 2237, 3877, 3878, 
        3875, 3261, 3671, 4222, 3993, 2988, 3991, 4097, 3259, 2987, 3989, 
        4096, 3872, 3258, 3873, 3874, 2497, 3256, 3430, 3255, 2986, 4185, 
        3254, 3253, 4149, 2985, 3251, 3250, 4148, 2984, 3249, 3869, 2218, 
        3870, 3871, 3868, 3248, 3661, 4220, 3987, 2983, 3985, 4095, 3246, 
        2982, 3983, 4094, 3865, 3245, 3866, 3867, 4030, 4207, 3243, 3429, 
        3242, 2981, 4182, 3241, 3240, 3244}], Line3DBox[CompressedData["
1:eJwNzlkyQ1EUheGteyHCFAzAKzIEfdxoUpQu+qY0M1FKKWUS0SQIqdJMJXqC
Ifge/tpr/+uec25XYTfZaYiIPKptEb/tEX+YxHY6orc14o7flLcwwT91RMx0
RvzIt7pvs45xTPOn+gp/YrbYc3w1FXHDHXPNXMJ94RPX/CO/z3/Yx7DhrXVc
6TL8qryGrK7irh6urCvJo9yKrtu/lrgleRkj/IN78759ly91r+YbhjHFH+kv
+EOzyT7EF915zh1wjdwg94JnnPH3/B5fsw9gwVvzKOr6+Fl5Dv26grmIxJl/
wqc1Bg==
        "]], Line3DBox[CompressedData["
1:eJwVzTlOAmAQhuEhJsYgIIYYY+lN5Ar2WJhYuAEuYI0CrjfQypMYSbRWQMV9
i56AqJ0PxZv55p2Z/5+eL80WExFRwFQq4i8d8YtPeRK72YjrsYgPeYuv4igT
MaFvmh3Ib3KF38S7/G2/ikOzH647GpG3+2qWwwV/iRzXs/fCZQd/cc/qCTdu
tuF2n8twe+qjOsev82t40qcHt9yCPzp40CfR4K68cy+X7ZbQ9MaIvm5Wl+/k
Ir+Knvxlv4KGWZ9re2/G7q3ZMM75Fk6TETf6IdT0XfXYXcruirsdLsFtq221
wC/xi+joA8vymfk/qu85Ag==
        "]], Line3DBox[CompressedData["
1:eJwV0MsqhHEcxvH/aMZhZswwjUmUUrJRVsLchpUaKxfAQsoxcopIUpKFnF2B
O2AjQrFSlpIkSVLOn1l8+z2n9+3tbezt7+qLhBAGkU+GsFQZQjoVwqL7wdch
nw5huyqEE7edX9ClbObdDbdWNqhP0nG08XO6BD3rvvM5HNoUvONafoMcf8u/
6bJYl/XYz6BGd6B7lWdQoStDK70nz+rL+WnbNbda3ikvpVvoXTpjE+OnbF5k
aezL7nQX8itc4lmeRId8S3/sNvOTnovqJ9xVNyEb0JfQAU38uC5Cj7lPxe8s
fp9Nt3ecyc9xFA/hUV6GFb5gO1r8z3Y7dg/yGP5kP2igt+Qp/S8/gmXPReXt
8i++nt6kK20++SHcy0rwTQ/j1DP/DQA7TQ==
        "]], Line3DBox[CompressedData["
1:eJwVzEsrBGAUxvFjJbnNziViSC6RWyJ8ChuxwSzcjSU2yorUmBkkWciCL6Ms
3PkCkiQkWfrN4t/znv9zzptMrY6liyIihdGyiERFRJ18QT2mEhGnlRGzpREZ
XQOXlY1yWnemezDvlUckuVc0FXZ0l/ycu3E7zdwbvrzXcKWb1+XlX3HEu64F
m/555LKyyh+t3IG5TW5xC25u3Vfr2rkPdODazqLugp/Qd3Kf6MJSCXSHdrrN
R7JHztg9t/tkzvm7l/tGH3K6G37Z3aSdfu6n0Huv4163ojuWG+Yd+7/6AWz7
65nPyxp+kDsxD8ldLu3uzk2tbpj7wwgyun38AzgONws=
        "]], Line3DBox[CompressedData["
1:eJwV0Mkug3EUhvFTEoS23IKgqFndgLgDXAGJMYaIhEhExLL2SKzNc3fmeboZ
Emvh18WTc973Of/F99UOzfRPJyJiGGvJiM9UxAd6sCoX0hGDNRE5+R1vuNCt
cOv6M3uX7hUv6MZ3NYdzrg9pewrb7jv5ZW/H5Cok8VMZ0aFf0h+7b7cX9Fn3
z/ZT3SJ3YrbKE/on8xFtWOBG3W/py8wKlKOFm+eOvBvgsvID7nGom+Py+n17
k+4Ot2jGl/d5HHC9KLWXYNN9Iz/r7Yj8xyXMwAaX4aa4HX1D8V/pM/ob+55u
kts16+Rx/ZV5ifrid3HX5i//D/kZNWI=
        "]], Line3DBox[CompressedData["
1:eJwV0EkrxXEYxfFHKcn8EqwQlpIkyTxkuIYMO2xIbhIlQxJlJTaKjUjxAtCV
eAPGyBSvgbfgY3E653zP8//VvYWjycR0WkQk6Tg7Yjg3YoSGqDknYh3ryYs4
yo+444f6Nz5o/+I3fA1btg/IfXSgf9r65Q/eSKvYqZtJb+TRdkZEPb6Cj/N3
Krdf2+rkJbzX9z20J1/hZfaE/ma/4ot4N94t78qXcqmbLv3VTS0t4PtYpu03
K6IGm8e6/n8Lfst39Be803fPPMXnsEV7h9xGW/qTrV1+5NU0i524mfBGOv14
v1+vss3YxvgDlWApe6WcxFv//1valC/wYnuLfm8/59N4J94ob8hncpGbBv3W
TQVN4U36nVxg/wPkVz0r
        "]], Line3DBox[CompressedData["
1:eJwNzNsqRHEUgPHlTjnmfOsFHEuSpEly7ZobtxhvQQ6DMBGztzHj8AKYTCPP
oBQpx+cY5Xfx79vr+9ba/Utr89mGiFj0bpojFloj1nGsJWIDl9sj7toiCk0R
t9omd49buKJVtC7v0/42N447mGgdfOIuZ57g6+acl3IV/xiws6dNavv4jN36
Fw5qB9yDvUN84c7dvepD2hE3xeWxyA9zx76nuRNcNVftXmhV/zjlaniGWa2m
9Xjf9gtcBhNMtU6+5C41z/B/5l2vzD36R74xYpYv6u/Yq/3giNsS92SnjB/c
pZs3fVS74ua4a/zFPv4fteQ5Ag==
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1753, 1965, 2348, 1868, 4156, 1754, 1966, 1876, 4064, 1768, 
        2008, 2513, 1883, 4160, 1778, 2009, 2738, 2740, 2741, 2743, 2742, 
        4081, 2039, 2520, 1894, 1789, 4084, 2068, 1902, 1800, 4088, 2069, 
        2354, 2432, 2433, 2771, 2434, 4091, 2101, 2358, 1914, 4175, 1812, 
        2121, 1922, 4074, 1820, 2154, 2573, 2791, 4248, 2792, 2796, 2795, 
        2155, 2793, 1933, 4181, 1834, 4092, 2184, 2580, 1940, 1841, 4095, 
        2214, 1948, 1852, 4099, 2215, 2364, 1956, 1860}], 
       Line3DBox[CompressedData["
1:eJwVzb8rBHAcxvHnBr/lDNyJhUUZWJQrZbKIDKdkM5j9OGXkD3D/hgFF1Pkf
rFIGrk5KEsWk2Lxu+PS8n+f5fD/fia29td1CkqppdiZXXcl0T3JNW8XkoTtp
4Bvzwt/phvqSJ/4eN+mbvNqbvNqt6FqyBn8ymDzjedmXblP2yz9690fL7Tv4
wF5JXzY/ZpEfpbO6MVrzroCX5Pt4rv0PX6Hv/u7Ay3jFfPL9dibd3uYH8A79
lh/hot1VXU32wZ+2b+J12YiuLjvmZ+TDuI6ndCV8KDvjz8243Q3+Ai/gS3pr
/gHdsiyX
        "]], Line3DBox[CompressedData["
1:eJwVz78ug3EUxvHTRSlDN/VvaNj8iYhBYqFWCWnp7r0AEulgLEkHEe8lVNwA
I5cgpk4iUWLpYPFnaUSifDp885zzPOec3/sWk4PyfiYiqmgPRJRyERt4GIxY
p2uo5yMe9TfZiBZy+lv6Zv6VdmQN3q7ZHVTxPBTxgh/5haytfsLqcMSePEGB
P2L310zPrUn1BK9Lp/CNTztfWFF/0HfU7J6aC5rBpuyP38MRP0u3eAlm9Nv9
e944pHnZsZ0Kv05PMIZxnMkv+QX1aP8/fOs5TbHIb8pTLLl1RZd5Rfeu1dN0
3twC7vRzdBb36n/j7i5L
        "]], 
       Line3DBox[{1757, 1977, 4103, 1978, 2267, 1979, 4105, 1981, 1770, 2019, 
        4112, 2021, 2280, 2022, 2744, 4260, 2877, 2876, 2880, 2878, 4261, 
        2879, 2745, 2047, 1791, 2080, 4124, 2082, 2298, 2083, 4125, 2772, 
        2886, 2885, 2889, 2887, 2888, 2773, 4243, 2108, 2312, 2130, 4131, 
        2132, 1822, 2165, 2799, 2895, 4249, 2894, 2898, 2896, 2897, 2800, 
        4250, 2167, 2330, 2192, 4145, 2193, 1843, 2226, 4149, 2228, 2341, 
        2229, 4150, 2230, 2252}], 
       Line3DBox[{1761, 1985, 2350, 1872, 4159, 1762, 1986, 1880, 4067, 1774, 
        2025, 2516, 1886, 4161, 1781, 2026, 2750, 4118, 2752, 2753, 2755, 
        2754, 4082, 2050, 2529, 1898, 1795, 4086, 2086, 1906, 1804, 4090, 
        2087, 2356, 2444, 2445, 2781, 4245, 2446, 2111, 2360, 1918, 4178, 
        1816, 2135, 1926, 4076, 1826, 2170, 2576, 2806, 4252, 2807, 2811, 
        2810, 2171, 2808, 1936, 1837, 4093, 2196, 2589, 1944, 1847, 4097, 
        2233, 1952, 1856, 4101, 2234, 2366, 1960, 1864}], 
       Line3DBox[CompressedData["
1:eJwVzTFLQnEYxeFXjMwazMEhgsIpo6LJoalcHNqKIG2svaacKgoc2prqI0jf
oUDBwKaWaIxAg5CS7toQ9DQczu+c8/7vLe4fbR+mImKLBuMR3UzEajbigb/l
Il4nInr4kd7lZ1thKuJTfsFf/ENfm9S5XbN969pyazoiwRVdYjvQXerSuO/t
GJ+xDXBDX5IX6Zeq8jIv21b4sbdpvKlv4I3/f8kVPvT/LK7hOo3knJsF3z6R
8/iUJ/omLrjdsZ3rfuRb37zAu7pZ25XuWp7jN3xJP4/P3N3J91Rytye38Tru
8Cf6AxNbLZ4=
        "]], Line3DBox[CompressedData["
1:eJwVzr8vQ3EUhvEjob11l04Gg2gbg0hqENrZSg3SNIIaDNdWMyNDMTJITNL/
hJVEmpilQ7FIxOLHIj6GJ8/3vO+5J7e0u7/eGYmIFoa5iMZ4xBqekohVXsFx
MWJgvstHPCI13/O7/Q9+03Vl23a30MZLIeIVY7pr3bP3EMtpRKbfw6S8qE8w
6k6Vp2S/PI+w/42f/+/MX/yJA9+e2Uu4gE1dnnM4lKd22rIMM+Ydrrh/xBO6
E3tNeZdPUUYFl/qevOQ9jQ3/es4XWJD39Feou3XDNdmse7fec1yzV8eDeYkX
0ff+AwkiKwU=
        "]], Line3DBox[CompressedData["
1:eJwN0K1Lg3EYheHH4NzEgYsGkYG4JYPJr+JAYTD8Cg6DvDqDyMAFg85iGgaT
zWkaJj/+jUWLot1g0TJEDEte4eaccz+/t7z5WmPzaCAiqlgaiuigOBzRTUcU
5OxoxJSc49sYz0RscXfu0/YVbvU69+T2iCJ3iQe9wLfcb/Q2JvkLHPLX9ggO
3Me4c+T5xF5Bzq7YJ7Lv3TJ3JpvY57P8MU7tGbdvOcF/yUG+jh++xOVkP+U7
LqMnXM27PfzxCb+rZ/lffV1fQ89t297hV+0P377Zn/yGTPHP8h7vXFku+l+v
3i3Iebzo/4dtKyk=
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/GP5ZzDJYPBIIROKaIMSvkx+BGDw0CGy48yCAOl/JxkMGHy
48ju/AcUl0EyKZtkkFWSQcnjhnfP9/v1en4/w7dqciE5nxdC2DRd+SGcm6bC
ELIFIdxFQ7jFuPsGF0tCaNMfmjHZQSyECvmC/Bqjsits1O+ZBncN59g7c5xL
XUSWwXr9rkm4L9wJ/Tbv1P7nmzTW6nfMAOfEXccpxmPzxjnCcv2EfAureTF5
yjv7ulf7HpbqBjkrWMn5lfVwNvGFs4Ez+rh+yVRw1mUtnDV84KziNCeinzPd
nFn5F2dSvpz7X+4l/I1wOeWcD3eMk+LM2LOcafzhpDhlnKncP9Z/u0ftGc4I
fnLGZa2cYXcR581bSfsZZwjfOUlOCefR/Wjvw7S+F5/1bb7rlzdz2uVP3ujM
/Ud7B96bf2jsP+8=
        "]], 
       Line3DBox[{1859, 1955, 2213, 4098, 1851, 1947, 2212, 4094, 1840, 1939, 
        2815, 4253, 2183, 2816, 2817, 2481, 2480, 4137, 2362, 2153, 2464, 
        2790, 2789, 4247, 2788, 2787, 2152, 1819, 4246, 1921, 2120, 1811, 
        4174, 1913, 2768, 2100, 2769, 4242, 2770, 2767, 2766, 2765, 2067, 
        4087, 1799, 1901, 2066, 4083, 1788, 1893, 2735, 4239, 2038, 2736, 
        2737, 2407, 2406, 4111, 2352, 2007, 2390, 2724, 2723, 2722, 2721, 
        2006, 1767, 4237, 1875, 1964, 1752, 4155, 1867, 1962, 1963}], 
       Line3DBox[CompressedData["
1:eJwVzj0vg3EUhvHDUK1EiKQzlcZiQSwiHR8mA0LbpJEg0ajQicUkXpIuTMZG
EJ+gbL6BycjQSWKw6aKL+HW4cp/7OufJ889t11cP+yJiA8lAxCNmByNe0xEz
cn4kYloW+CbymYgy17Kf029waz7gnu2eMMVdodWb+Wv7B/M9JvkGavydPopj
+zHuDBP8jr6GrH6Cfv9f0S/dXmDXzTB/hHN9wa4jx/kfmeHr6PIJl5OhVzFk
3ndTw28qYovb673D3Z+5bC6hY1fRN/mi/uW7T/2bX5dp/k2+oM0ty1NuyVs/
3C7KBO/mfz4nKyM=
        "]], Line3DBox[CompressedData["
1:eJwVz80r5XEcxfEPCnNveU4WUyhGSUqNsmGF1EgiFh6mSLHgeliYzcxOGSyU
crPxsPD0F8zIisUMUyNlYaVkqWyUjWy87uJ0Puec9+9bv+rx2b5UVkT8oM68
iENqSkZcfoi4yo+44IXyXz5fFNFm36Eh3VYi4pP+nJLyGW+2palRrrXveSPl
uxNbnu43b7CvU738K5PtG7hjd7buiNfZV6lfPpTrMaX8gJ69u8+r7EtUg0nq
JryR1j+4N3m5rdd333k1Jkc/gFmz3btX+ZS9yL5IlZgVXSvmJ7/FLPNJTMI+
R+2Yaf0b5pvtn3uRZ9mm6KP9US6wj/ku5f6DmeGvuRHjmIrMG3KZPXBf3aeY
Uf6CGcW0YEbkYswjZth9hBniT5hBzIKtBHetu5G7+S7mS+b/MK32Hv1nTJf+
zjsdtm13O/9P7x2LPX4=
        "]], 
       Line3DBox[{1863, 1959, 2232, 4100, 1855, 1951, 2231, 4096, 1846, 1943, 
        2819, 4254, 2195, 2820, 2821, 2490, 2489, 4141, 2363, 2169, 2473, 
        2805, 2804, 2803, 2802, 2168, 1825, 4251, 1925, 2134, 1815, 4177, 
        1917, 2778, 2110, 2779, 4244, 2780, 2777, 2776, 2775, 2085, 4089, 
        1803, 1905, 2084, 4085, 1794, 1897, 2747, 4240, 2049, 2748, 2749, 
        2416, 2415, 4117, 2353, 2024, 2399, 2731, 2730, 2729, 4115, 2728, 
        2023, 1773, 4238, 1879, 1984, 1760, 4158, 1871, 1982, 1983}], 
       Line3DBox[CompressedData["
1:eJwV0TsoRgEYxvGXwbVcB6QIEyWDiYHCQpFYbC6TS1E+UoiB7aMMLpORgQXF
ZBUy2FgYUCaXRRlQft/w77m8z+nUOVUjU32TaRExi+usiNqciAYc83X0iO7Q
i+yIgYKIarolb+PQrVI+oDm5Edmox7q8iwb7Nbpme25XhiI+iRn9gnsxn+CX
6Yl7IRb5JUzpkzZ5ukn+Q/eOGu/okYfRjS550yYDc/a/dN6u2e2Pb6IJeYPv
dE+nb5jWVbq98xV0Ql7hO2y+5TF5HGX8F0pxJV+i3Dt/MyNydSX2P/yQftrz
n7o7Oig/6xPu9/IT368b5V9tevk+POpXbV50D/y+bg+F3vGcH3Gmu8UpGnVd
nr9PfTPPtNh1pL6dW2vqv9Eb9za04x8BhT8d
        "]], Line3DBox[CompressedData["
1:eJwVz7srxmEYxvFbOR+iKAmDQYrBeTATISmLHCYxIklIKC8mhclpsvMXiMWh
kFL+ABaLopw24vMO367rvq77+T2/p2Jksm8iJSJmcZ8Z0Zgd0YILvome0wN6
nRUxVBBRTffM+zjTVZlPaV5ORC5qsWc+RIP9Xbpt99ReGUr5LazKF/VlfIJf
pyf6YiT4NSzLN+wUyZb4X9kPKt3xlh8xLBvDELplO/ayMe9Mqr0FtOnSaCud
o9v67mRPvzArq9d983V00rzJd9j5M4+bJ1DD/6A6+R7drewG5e7NkOWjRJ6e
/Cf5tG+884901PyZETGjfzJ/8IOyKf7VTj8/gDf5up0X2St/LDtCoTuevfdG
9oBrNMt6nH+0u+JMp71eXOm66CW907cn34J/pbhAYw==
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJyUvXVUVUH3Po6Kga2Y2N0dKIpbbBFFURGDUgwssBMMDFBCRMBAxAYVBRUE
QYduiy6pe7k0GFiI+juv5zm8P++Hs971/Yt1Z83as2fPntnPfvbMoc9aM531
DRUUFDzbKig04v7OyGoXn3BNxrxOdFNpsdKaJUw5ssHdQ0YBGyMGmA7IZ2/d
z+Veb2fHruTPGfqmURld0vrWqnJ9HE1bqmrTLv0cG9R83JiwRVU0coVubMKa
Qgo5+6plxxs27FH+2k2bEovIb33PC+v2FFKUz7FPM8/YMGYe3WtOcBHZ9Vy5
7/OqBBqc4/pycew51r1Z4ArdcVWU2Mx2o640jz1XdRx2Wd2ObVe40uXB8DLy
Ljp5dYKHjM076LTysp41w29KQ38/9DdFf2PIHwL5PSH/CfSJgT6h0Gc09H8B
/b2hvz/mq475DsB8/WCfJNjHHfYRs2fmeuW3cZkS9t1RK+uZTw5V/3oRdjxL
Qvozos+1Ccxme0+ETlp+OJ+E/hpql371ahNJV9+4j83VkpD/78VloT+KaY35
mOGeJwroe9xtDb3SXOpe0POs2R0pZY5v1X2WewGl7JG1bZacSwsiX1764yol
g6BOzxTvRNGimZ0UusyQkK6kpcGbsmKKPtyxwRzKZt7vZ0lS7fPpz5W3Yx0D
ZDR++feqKVkSFvb29npNTk/8pnfofx/9f6H/VMjXhvwVkJ8BfdKgz0LoYwj9
v0H/btBfD/N1w3z9MN8VsM8+2Of1/7CnQ0BtjYdbAbP3aZExeWwBeXT/Yrrw
agEtZRr2ursy2RMVq0aHDaT0oGpIiV6qlLznGWVP7xBOq5Y4Gu3pKauzfxzV
SHvP4ezywH7F9uQCUm6423TqTAm5tHl339Uwn8IM7bS/xxRQ/JDfVcdVJTT8
s+bej6ciyFoxbeXiDjKyyzDzVneR0XS1rvP//M5gz0dXvWPmUnKNuzy2WYmU
Ttt2V1a+WsBmToh9p8Dpid+kif4B6O+M/i1E5F8Q0eeViP7hIvPVgn2ewj7e
sI+YPX/u+WqR41rINL/3uqncI4lOP+tve+diIV19dq14Qts8diy+kb3ahlRy
mvUto412CR11Txq5Ri2Gnm1rVjtlewatMRi+7n1QOWVFqwdc0JSS3ePAb4+b
JNfpY5qwZG7sOim5zC7+IfuSRB7NdHJv2snoyvzrBjFKcdR2fHzDPaszaLPp
0CZ37pRTtVnz4x4euexXvnbTKqtUMtqc2snDvIR6rr+4Y8HFQtYxK7hBePck
4Tf9Qf+f6G+A/nsgXxnyt0P+JuhzEfrcgD650N8W+sdD/8uYrz/muxrzvQz7
WME+LrCPmD1lS4zbnvIsZMZP7DOLrRLZEZPsgEVehfR6U5/hGn3ymIXka9Gf
gBRmcDRzb6lpCTUNu6pqvzqGHq3SXzDIN501UpydO0VSTpEjdhVGrJbS88nz
5zzamMSWW0wbHPtERoPjU4I/7pbSRlsavnBFUt159diw4dLpI+JIweFV6+fu
6ezCwS6dvV+V09Xbv6bahOWyR82mmLRMTWEJxbfPys6W0NRnkrhPnJ7FE+7M
uczpid90B/0foH8M+p+B/IaQ7wL5A6GPKfQR9ns09A+E/kuhfz+R+cbDPkdg
H2PYR8yefRR22m6/UcDmbejvvWxgAVOPHDGm280CCnwzbZW3RSYry/JsH6Uj
ZUter21kmSOl4E6XlVv1CKcATe3Omsoydjzg5cFW92XU/kMTh8IF+TT4eu52
mxhOTs/LHe7Pl5Cvr16k/vp8UnxFTZVfFLCNBRdyC9W582rVshLDcxGkJit5
31tJVmf/WjpQpKaUyRYMaO3far2UGR+YqzPzo5QGTHhyM4/Tc8jsB3e7cXri
NzWZzvefj/6G6G8G+VMg/xXkP4Q+jaHPJujTAfoPhP5Tof87zPcZ5nsM830M
+5TDPjqwj5g9Z90Z9iImTsJ0tZ94KDbKZdcCTnU7Gi+hsUENHZtdyWajVbqX
/byTzxTMSv2+Wssossg9ULc6gvJnjtxwYp+ErRsQu/JXRjF96r92wYndBbTn
9pEzxT3zWEiB6g+zC1Kq8Tuzu7d9Ad2wTkjwV85jrWMltgNOSSnkp+qr5TZR
ZLxhfkHIVglbfOfwLUooJknu+fZH+2SzF/EPj1oF5tfZX0/b6vPkeAkLN7vw
zKVhLsNvqkD/IPSPQ/+rkL8W8nUg/zv0uQl92kCfaui/G/oz6J+N+eZhvmsx
32Fy9mkA+4jZU1P/g/N/8FKTvTkbI7+HBOtfHTyh6XUZqUV3XZ3J4ZYDFyYP
NJ4ZEfwtUsv6mGIZnal4Nyh9Qxyt7mqdm38oOnjAPr/kNO0qclm2ZY+afiGV
vXRtOjQnNFi6NO5pAYeLWvVs9+kth6PuNDLUcXgVGmzzyLIL43DUx2EHx1es
TqBr6h2yFm2MDk6uVelvOr6Klgc/1IjmcJrLY+8pSmsjgmMuFt0yHlEmnPcs
Y2tuwl5OT8H+q9DfCf3D0T8K8j0gPxXym0Ofu9DnDPS5CP1LoH8+9L+D+a7C
fPthvqqwzyHYpwb2EbPnXNh/MW9/ug77j8d6DefXixpivaKxvu/59aUNWN/P
8IcdvD9QGPyhFv5zjfcfagv/CYe/GfD+Rsvgb0Xwz0DeP+kN7LkS/hzM+7Pw
mz6g/zP0F+x/HfINIX855P8Q0ecr9DeH/sJ+zBWZ70jYZwTsowj7iNmzN86T
+fx5QlNxnvj/ez6TNs6f5/+ez3QU51U7nG9D+PONhPPZ59/zkITz2R7n51T+
/KyL7z9xPmvx5y0ZyZ3PQ/nzmeTPZ5znJH8+q0N+gtz53EROnw7/xhcSzue3
IvP1hX0qYB8hfonZsxDx0YyPj2SJ+JiAeGrLx1NajXiqiPgbwsdf+tOIj7/h
iNcxfLwmIV4PQnzfy8f3Ons+Ah5oz+MBcgQeuAj88ILHDyTgBzXgjS883hB+
0030D0L/KPQ/DfnKkO8E+QOgzz7oI9hfwEvR0H8J9O+F+b7EfH9jvjGwjx3s
ow/7iNmzFnhPncd7zBp47xrw4U4eHzIBH54AnvTk8SQzBp58D/x5hMefdXhp
C/CqDY9XmYBXPYBvG/D4lpkB334DHq7k8TBbBzzcC/i5KY+fGX5TQ3O+fzn6
C3h7P+Q3hPwdkC/g+TPQ55YcfraA/oL93THfO5ivEebrBvvshn0uwj5i9hTy
Fzs+f2FC/rLs33yQCfnOQ+RHK/n8qA4vyeWDrAPyKVfkX6F8/sXk88FTfL7G
5PNB5HdMPh+cweeDTD4ffIb+Qj7YEvJPQ759/fkgS5DLB39Df/l8UA/zFey/
8N98kD2Uywfl7ZmBfPwXn4+zz8jH1yB/38/n70zY74R8/xqf77OnyPdXgx/4
zfMDTOAHBD4hk+cTmMBvrAH/sJjnH9hS8A9R4Cse8XwF+w2+Yhz4jWie32D4
TW/+5UPYT/RXg3wdyBf4kzTokyWnjwH0r4X+KtB/hch8l8E+B2Afwf5i9pTj
l0iEryMRvo5E+DoS4etIhK8jEb6ORPg6EuHrSISvIxG+jkT4OhLh60iEryMR
vq7Onl/ye2uft5GyyIAyFeU/iXXtzapppcLAeCY1jknsOSGd/PoMdvBMKacu
dye6hOzOZ3Na0sLRvgV0YfGOjqemSGh1x4GPg30K2ZBJg+30JiZS+J7AOyd9
C6lntdawKJ1XbJZB9d0roedYQOoShUYDqkgjrOGUbMdceqJ4vGCcbQrpGSpZ
uNwroQePV8wrWBjJQs/c2fz+V+F/eZLqhMvNwvPoyJHagpCldsyr48heMzTK
6JFtyuVlSRm0K0jzh+ImKT0p/2Ta/I+UZtyqGtyaG984s6tpT04f+zkP10/n
fu99PfZo8u0CmmSfsvF9rwIKvjnH5w/323CKg71MKY8e2MxLMTJLoR+SBj+n
W5dQz43VfQfrxrJrfYxOlc9Np3GjOxm0Li+n05P1DdTnZ9Km+cErni6XUtXh
8epjy7m8fWtNdx3jeDbKoFnuq7fn2FjfBfc1NKoo4nCXpO/cuZbVRsfzU+sk
8rq25cEpLs5ejApe9SUrnGl4VNzTbyYj527B+ls5PJP/YdigqaaFrEP7yvQ2
LjZs7mGPm1OjubzD+mjnt6vzmdRsltKe4AIyGHVmYs+5EoqG/EzIvwv580T0
r4YcCeToQ04h9B8J/UdDfz3Y5xHsUwv7BIror/ZOP71343wuD7NZ7TDIjuWV
3lcY3aWMDsNum2G3j7Cb2HrtE1mvufAfX/iPLvyn8jPvt4Xw22fwWz/4yU74
iS/8pAH8czb88zn8U2xfuMI/w+CfQtzUnhf0duaxQnbiwVATX0sb1sQrUHbC
t0h0X4jto7CxYVn9rDKZssvFXY5aHK55cjUovkBK33fmVVreLmBb33cY1qx3
AQ1c+ufRsDsF5OP6Ou1Jn3Bq2TH6l34rGTk4FDxx9JFRZ9fK7WucI2il9aJz
YxvJKGXQhEbd7sho9ci9HW+2zmRjNiZ1yDKQUvsmk566fZHSerSPRns7tH93
4eWsgpxUyIkSGTcI+neA/mf+h/4tni1q5XC+gJV6xitf65tHc5rmHNy8V0pl
Pd8qPJoZzZR9tc7kH5JQm/zt3s5+xWS1pWWgM2fn3V22nF145ADdDSjvn8vZ
udajRUx+mIQpVvVxmjosl+LtR7+/GC6hpPfXx1QnZ9GUuyWR19L+m/ed0Y0e
fHrpK6ay0oyNDjtKzRyW1Lzh1l3S8nZHfe6c6e2vfu3iMguaNNv9cDx3zjg5
9A6cyMlTf2P/s2RoLn0/NsDShPvtO2HjH1NOnupUH4uZK/fXyW/jmtu5Ujub
dn557NI8Mp8e67VY28pGRtMsZmQ/841kBY2cJ/w8JaGfOs93e4UX0/nU0+57
uP2isLJTV5PBFrRseUC1P7df7CqPdD5yoIAptu015eaIPDrp1fjH2hNS2jPp
m2vTtfHsXEjGHJN3R6liWIOUtjOqKNLx5Xx77tz4/XTRDG+XA9R2fUGmK3du
nIOcRpBzAnKMoU8+9KmBPjGQ8xNyWkGOIua1G/N6inldhz4O0KcM+thiXo0x
Lz3M68L/oz2zsI5qWEcBX6XATzrAT9rCT2RYxx5YxwlYRzF/2wZ/6AZ/UII/
iPmVmB+O7WbW8iUXf0sSLvXb096Crlr5Vi5TLKPCFh4D7Lk89OmSmovDPucy
1ybNdJpbSynn/cS13Tj8kPl4dfuL3HyfrzmsUMHNK2aOovvVDXHk4Ot43jP9
KPln5mw8r11FL1w7d/tuFM0mXEk5+n2JhM1oGLnZJ7mYar7MPq31KYtaDVaZ
dds7n+0L6fz1AIfrXGln505JEpq51udlVkYO08ie3GAW9/t26zuhD1cn0NYx
64/KYo/SJ9tu2/qPr6ISy0d3bbZl07Kbt/t2vPJfnLZQ543SfQ7PnPh9ZoP5
NAvSUPam8SPK6Fuz3XoDX0WyrtmqwzrpS5iK/oYXPwqKSU0hbp+lTQEzWH87
+ZxiHlOpse8zyEVKOpBzBHLUIWcq+uujf1f0Pwg9t0HPz9CzmxI/bheM2xXj
5kB/Xegv8EKCHWbI2aFIxM4NvvL2bAl77oE9R2J9S7G+17C+d7AuE7EuM7Eu
Yusr5g+b9Lct/OGVzdQO3WIpjvnM17RHVNAFGTWe5TkxNFHCRig0bDQyM4fD
4Vk5+zn9M6W7l3s2iKQ+8b3d1q6VMJ+Hd9vHlhTTUCvtTxdduXyh1+GRV1dI
2OLunoM+ZhXTlQeLdRePzmbvV+nbrLrF+UnHsFDrBzK6jfYstO9BuxLk6EDO
Usj5iHF7Y9yHGNcY+k+B/o//h/5rgl9vCduez67kJlTbvShgvwM3x5WNl9Dz
uw/tImZy51Lt113H/8Pnt9mZlOssI5WlAwOc9ktZiV3HWIl7EjN8s71tIZdf
Txy9P+/AtQJW8c5k6PrhXJy5/M50oEcBbXW0Oh0Rk0EPfPavG75byi427fJr
11cpscB9q683iGd3/Y5YVHxOZzEfHs9u+qicHLt/tFpgnktNajuXqU5NZUvN
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
+bTEXX2fZusyqj5zbN3LwTZM1rSJ5qm0BPKPtDP2HV5FAVecH3XVlNBc21p6
3iiadsdEpKnnFZNRzdlx7jNSSX9S1RQfxTxqsX2E5ziDEvIvG/wifVAGqUw4
viniZBw91VR/V3KvnC5pBcSVlaWwD/eiZ4xrlUclO6tsH24poZALmytOxaaz
mWtOfYt2jaN1hzqtWvuynGoVl6xUvp7PvNcttDA+kU1tz34aFMrhnPI7Cru3
G0rYUYXgrwO/RNGYPjeiDr8tpugWKzuqnjQlz6X9G4Zz8zV9y6q1ufkuTwjI
vdpjGx3q6q7OuPlObrGw1S1uvhYXbaWqUeY0YuOPDo3TE0hjdvA2tRFV9Fu5
1fK1uyU09P3svi9kUbTF5caJ4pBiSuxHN5dfSCH1dzUadzrmUZfs163bHiih
w13nTlPenE5dQvcd9fWKowCTFmEv35WTfd+GDbdeTGUKA1VMpn7PJaan8ctj
cQkpSAuPNzuZwb4eMe/utSuOHrxJubbClcMVW3R7SZwkzGdj+3kVsyNZoLff
w8WMy7u/Gsqmvc9nPpIL94PKs5it54zEdM4OH5Lv77/ZU8Y0G7Qf0t0snM2e
N/nWFe4cE9PneuHUFRPJhkWZRsaRNI6tlB2/aD2vih4X2t1+//Ukm/LDQudj
Uh4Le2wdMFO1jHb3nL+q5XIJvTPb28ZgeySz6DB93JrKYlruXr/dqlUXjEhW
y6Dah07has9imMYl04dnQ8rpuenZj5OMUulaw81fLlvnMsUk230fjpSQ7VEt
tiw7nY1zj7vVIyaGmXncPTM6uZwOzulpOVYplVWELjC1uZTLOh1Ya3PdroSO
nV4323CzhOWrmvQONopkLVd/W3w0p5g0Yl6su/Ykn1n7jx3/Rymb3Qppmnf8
P/dg4Yc94IcB8MOztVtMxqWY04YJa1P9OTtkXB7eUXl+FfVLn5zjP38bhQ5o
83RIch5rUapU7M7Zoe0Er8FLjkgo+cfxDhpLI9mvTQ/vv3tdTK1P179flilM
Yb6H0yk56MGy4vQY1u1DjxmBReU0o7hjzWzfFCps/EBD7x6HE779bjH5Sgkl
hr+UjrqYwSYY9knVuBPDVFoNHf7qQTk1bnzJQs8/ldnPelVhvy+Xqe18c3DQ
zhK6r5DzeVkHGdv1zudQfF4EBY65JG3vKO4PDUdbdVXZL2Wdt+0d2CI3g9WS
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
Nc4rFL2XFWSvnOn/NIFdWbn51sYJcazNnfZ2fTk73NoQcuJ871g2ZK/xZP2j
ecwxQ/F+Z59SsgozrdZXS6Oo3yuLI8zSmFRX206dO3/sw0bG5rWSUc0174Sz
h8OZT9ISRfX73D5aP7DqSkw+HVQ/uFzz53/jbKC+7swyLzMal94oJmxgBjM4
Wzk8aWsFHZ612TIgIY6d7qtxaoRWHHtZFXDKw7WS8gasjLhtHs0+5TXU0T2b
x8wnnk9NDS0lddwHsMU9uru4D2CNewWluI8n3Cu4C/knIT8Y8psM5OV/hPzt
kK+9w7nz949p9DJkVNyQpWls3ukGKlHcPrINbe42pyuXZ3w5n7p5V3jd/y/w
Pt/54Dz3fNr3IDMwo0s2c6ztmXCSO8+vnM2Iq3x5mm0d8UvTiJvvJyf22ZCb
7zXY/yrs3w72Pwv7D4X9z8P+q3AP5AnuVdrjHkgA7rdM5++NMAnujczDPRM7
/p4Jc8E9k/A1DwJm90lmA7OGzNBYKWWBfY/GWXF5TYGbZtry1rEsonb51unX
85jF0j5NAt1KyeXfeyzMDfdYvuE+TC/+3gvLx70XNamB/zyrJHazqWWhxeb/
5kGN1BOHdDsbwSz77Ta5MbiQ3d3V8MDqXUX0cKqqoq1hNAs60kGLHuSxbYk9
zi15WEptr9Uv3xr6hEIf4X7OPIx7A+MKeVYy5D+H/K2QL2afkKb121PMbm4D
k9c2V4pik7Y2MkzvUcgmTUidvWFjEcWI2NPMu9Ha1sYylr25q577oNDgQ/YJ
cRZcvmbYMejF0I6Z7NfJsUPdSyODa5tWFiRyeXFy6H2TMM8EZjY7cfCwofGs
wDqoobl5JaWifTbfTlK0r1dL7jydy9/7Hra8tKlrVHB6za8+E/dV0KdZSQlV
ByR0SXYw6CSHy+z3fBj0I7qYPqN9L99ODmj/9fzmNGfVHfRGK0Xl05/oYNMN
3Q9UcPn+ElOLgkOhceyh37sfvhrx7FW1WnLCmUpainYrvp1eo/3+iZXeI3wl
bGbXyz6FpWHBivteTR87uYRaFS0xbb8ig60JWasuVYoKfrt85N2Ta7lzAHIe
QH485Fii/TjkC+Me92hc7eefQY+WDQ/XrIkMvtBtimLgwgoyMY7r4KUtofLJ
bTQuTI5i9663OWBaVEzr0R7Ht9N9tL9qprIhJNGGVR3d8PU4N9+S+9bzVnLz
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
dBDhG6Wok1bzdVIahTqpsI+q8X2/79hHN7GP+oIXbYR9NBv7YhZ440PYFwI/
fAL88EDsI6Ge7gB++Dz2C4M+X6DPaOhjIMLP/8Z+yQPf3hn7ZSLsEwP7GMM+
+7GPPuE7jQexjzZhH4WjLpCNfSTGmwnnpyK+Xyecn1o4PxXA13ng/NQDf3gD
/KEb+MMC8I014BuF+zYvcX72xXcCd+H87ILzsxd4TuG+kPD+pRx8bC/wsXL3
r5hw/0ruHSIT3iHK3ctiIveymHAvS+5dGxPetcnd12LCfS0lfd0WVp9y2P3Z
82ee751P2uMC3+UOkdGfmq7e/ZdYsY8/tx4qPiehqhO3UhKWlJDqJ3X9NN0c
aq63b85ptXxyOJWatHeBjOadGNiim2khmZpUlY5ysWEnVE7sWBVdVPf/I9bI
/T9Es4qh7ptHFpCxVjuTtGW2zDDuxOPVy0pp+uCjn3sq/yd//OHY1NSWVeYW
+/bcWEoPik5enfCfOvdBp5WX9azZQ/43DZ6nZrH3bA6TtWbDk8fkU9Rlu9Tx
02U0OuygUWGoKQ0xvzuqm6OEUn6H72ytU0Iew7f8f5R9eVjNwfe/Qkn2rFkj
hCyFbOXYyr5HQvZdlhBZQ3ayh+x79hKKxFCKrFFRabtb3SKVLMn2ux/zmj7P
ff/ufT7P9y9PY55zZ86c9zmvs81UGcvSaEbo8D/WLWQ0+sZLR8OO/13/HKx/
o2T9YyXrv2X0dNXE7zJ6HjHj5sTVOxiFmMUZrcihwAaHT/fuL2eH2wVbxfbY
wTz3Fj243zOHjhd4H3uT/J5daTnz9dEmSgrd9K5vw8NKupzVRP7Hdx0bq0yp
1XmCRo+ePjM8UZZJY5s3P93FKIW6z3We16Oekj6f/rH34F4lXUz50jlthIy8
4s7Ov/VSTkZtO8RPdtCcj2NU6YZL37Ooc/UfruigpHdTL3tNuqykjTvqmZkd
k7M+HWNel7KV0xb+t975y4Kevho0aya9DIv6NlOzHpk5DTCRZ5L6afjR43NS
qO0ApVNpUyXtf2Px88va/65nuWQ9xyT7DcF+veNXd9k2X8ZO3b9WxfB2Ag05
/qOW3TY1HQ7geYcVqN+zFnkHyXt/hXhf5uuHt8+Ku8hYm/Cv1WfHJZD5oA9D
rC+q6a81j/N7om7tPeL8go6JhE5798V3E7xlzDvByI1VSmDVS+WYh59W0xpf
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
r6BefTDsYC/g1SmSOp++D7o5X7OV0bzhzSLuKOJpyqE3I9Wy/9ZLi/m7MH/s
buPKDr8yyLvx3q+uf+Jp1W6accIgmzx9IjJuaPDSxYo7ilqsWUXRR3ct36jB
S912tGzCNHgvZ0M/wxOjVlHjqG5dEzV4ryri2HHIg4j6Rs8F40Zes5DRolfX
zc7tSmAbuuf3/vhE/f/N34v5fZN3ugz8kEEL6zXror6UwLY1e6bupf5vfWaU
JC+wDPSncvq0CfTF/GjJ/P6gP5nTpx2gL/YbXO7ffpl0v8Xe//bLxH4l/Gd6
+M/08J/p4T8T/JfUs5GoZzP5zMe3YnwCxtd10apPI1GfJsHbTOBtST1byfyX
3XXXd0XDX7DF707B70pwMhM4WVJPSKKe8ATGrTG+AOMN2mvVB5KoD5TUDZaM
p3bTXSfWDO93NAf9xaAfVufNV3X1DNb+wJNzVcpk0I7rW5Ypd2bSadSXhvP6
UjqB+tLOnQvKNV4gZ2HBb/qkpoeS7f22xh6/sqV1niX328djXIXxHRgPQ119
LuouhiEO0wr1q6XK8XqJW4i/lcV4DOooxDvaVQbt693QT0avwgzK/bZ4TRui
e0x5OjKbvtn9CkmITGeFdqM716yRQUFValqknM8kO9S77uf1rnQN9a7m4e3b
1+oqZyPu1Dz64E8ovSp4vm2oRY60vpREfenP6rrrfDYk6K7zeYV62pGozyHE
dQce1123kxN2+aD7UxmdeT23TjvT1zS2fetfI22zyc9pzb3fS+RsYGy9Ay28
brK7nzsuySydQx1Rb7yF1xuzU6g3LuV0J+Fv0wy283KdUwtOpbM9E9/s/g8f
gtFHcBH1JyL+mYP65E6oZ4hC3LWpko8Txh9gXMTtzXjcnom4ffdKRV9nn5HR
uec+g59Oi2V3jDIjGs7Opt+IbztL+LDau6DSN5KzpPSFm0ftvck+fW9ZWWGV
Q1NRF+3E66JZIeqiD03+6Z6uSmeRVikPRmnOOb3vrD4WLJNcDd111ju9Rx11
GOpVKiOe7ybTXcci4uEteDyciXh4H+fItQ8SZbR1ZPGxl0M0+xoft9O5bzYd
QNy4DuT2BuTzxDvdv5uG+LYt+PkY/JTUt5fku/WNS+rVS+IqYXrG3Y8PGH/l
g8Z/2Ogf5Xg6lu15SsEDrLNL+hGm834Eqot+hHmYn8Hn0z7MN0QfQRkZz4O3
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
Bh8mSvigj28RqLtz4nV3VA51d89R59aT17lRE9S5Nez3vpOHUxTbs1LutcAo
k3IO3yodeiiTPBv+VP2Jj2TtI+t6fKySSVPbX7u4/Ewmtb/dz6Shm+Y7O3+8
3o3TyymbFjV69CaL2pVe7n/LU0Xtr5rcydi2nEZMqpV0MjyL9sTX7NRDQ99w
iVNcgFEmK4p9/n29hv6SszvKv9bQX+Yx97Zl1Uw2cuHHYY4a+irULa/ldct0
CXXL+ahbLs/rrikRdcuCvgGnT3rok6Av1n/y0r/1M+n6c4P+rZ+J9TfS5g/7
IOGPLecPE/zRV+c2pUNB/IdjCva81cH4v5pzOf/mkMOKZ0qajPjSYOTrCxFf
uq99n3PJ+xQtZ+w3M66jZEXdv9wfHZ1ChR7riiqNVNJbSZ3AC1EnoB23pDTE
5ZK79FdGvI2lxQYuHeq/l9GhXsYrRrXNpqWI+z1BXYSIT35++9RhS+Ukpj4b
43OjKINuDrvZPLKymm4jrtgIdRofEFc0wv0qHyTvUDSep10H0hfxwzqI7y2W
1KWU+XWyW2qdWLJ651/aOVtG9vXU5Wv1yaYzkroXEcf7IlMHDDidxMbs9yq9
PFOz32mH+iu+ZumtZxBxv4rI/95F3G8e4uctUS9RHvFzG8jPDsh/DuRnJ/Tw
IvhBLtDDDPHVM8iz5yO+er6stUv/3Fg68vKSY9fzMuY1yWbqg2HZtBv5hWjU
k3xEfqEf4r2fi3nevzfive2eTN0yp3USs/09YUtAZAZ73DTxTPXW6pI6rkzU
w1SCHdkA+idAPxf020D+U6/w73ck5F8O/b8tWNufNejL47SPkK+/iTitc5lN
rfa0jaU9jcImz7opY6blcu8mTM+mLeCnM/hpAn62RPx2AvL4pxG/PexIlicf
JLEXfwPLrLyewZasf1/1bTW13romfec49UML33EtlazO2UPVfKemsFq75tc5
NE1JQ7DOvVhnBaxzY/9PzQ+3CqVhIeNu1m4jZ9fsls48bZ1DfjivozivFTgv
2d9zburwG1QlteqSR5rvONXP37WgfY7eeoD6wPlb3+z4Mu1vhP0s4HyfdkHK
Sq9vs7JDel766Chn8tF11n6vkUNhqHtczesemah77Ldy/OwLcYmUd3vRGs+s
DCZfM6hobCs1JcG/eHjF+9C9mo/tGfyLSuhT+HJ4wSCjc8x+M/oUhP8yy6B0
2S0BD0reiRiE+s9xvP6T3UD95+NlUYdGzUqie7vWxvdPyGAd+9czH1dVTQ1R
5zmV13my5ajzrG3N+yaWXL1XcH9QpP0b9E0If2qVieXbKZOjS/ypIei/mOZo
lFJ3QbT9M/RfxMEv+9Ps4MVpEyNL/DLh300pWrBydP3IEv8ubPHvE59n3GK/
r9yY9WegnO0/ce/Wy/o5ZI99jce+bmFfd7Cv+9hXJ+zrEn53bEOvUa6Gj0v8
ysPo7+jkHT9kxBlmn4H+jvuS8zqD8xooOS8Zzis2idfrBvJ6XdYf9bov0SfS
+9qmi+0WRdpboE9kMvxKy1sV9x5cFW0/CH6lDfpHJil2tl8wMtr+D/pHKsHv
fm13pW7PrpElfreoj1Xy+lh2HPWxLdcu7TBjh4KVniIvd6ZZKnPouMA057aS
BqAP5VVdY0o78d8+FAvIcw2zjCUDzzP7aZBnffW3TUG/EqdP3UE/GPvthf2K
vpgJ2K8F9jsE+xX9OPeC16qfVnhs/w5ylYvx5ZA30Qf0AfK2GvLWGPK2HL+7
JN7s+5zv0fbN8LvNkFddj7xqXeRVTXCP2XrJPWbToGeqcj1DdaBnyqMeaTvy
uR+Qz72D/PJ05JcPI78cAz2zn+sZWgY90xL562Tkr0VdVh3ofxuu/+kF9L8R
8um1kE/vinz6FdwXd0vyXkbfVtr5+mvI19/Trr8qqR9YBv25netPEnr+N+qs
jkvqE3ygz59xfU4roc/11Tno46e+PLXQ/x2QvxP6fxjsTkXkwSvA7rSFHXe9
zHHgR9jxbbDjFZDHHws7ngg7Xh550k+w43eBo1ZwHMUEjroIO9sOdQI5sLN9
YMd3l9r+L2/rBDtu/I7jq2yOr9g14CtR1xoUou0/zgB9b9AXdbCtYcdPX+c4
dhTsuKjjbYW6jm6w43Vhx9si3xoMO678yXFXO467mANw12nwMwx1I+XAz2Yi
D/uS52HPwY6Xk3M85srxGEsEHkuT0O8O+n/yIi6FVgwlE5OmbfdPlbPmPTeP
9DPOocvg80rw+TD4vHjL8RZRZ27QncN/ntrPlrNN2zvbPK6UQy2Ak/9ynMw+
Ayev92XnAwpus46bR3TcXlnO1Bbpr6hbDi1EP0tj3s/CxqOfpaLn+UcbCxLJ
4WJh1i4NDtnwo86jSv3V9Az9OB15Pw4T/TjDfxUXXtyURA6z6mQvOpHB3pnX
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
Bv98Rb3Hc/hnp1G37Av/L4Z/Shr9wpXClb/T0PArd7ZxX5fbjTrhy9QJjyYf
3ZW64h3UFV8jb16HfH0D6pwzydd34rxDuBeC89aG/pcMXN+81F/l2qrqrxbC
hxuoD7yu6gOFxlvrYfDnMfjz9Mfu698qUj+ZBI59Aeon/bhH3blHz7lH/ux/
Cd/Lwf61nHkF/2g5s3+4ax5/OHQ7gB1VGDvqOHbUUujWyKhzyE8dyzVVx5Jz
Xg+jz1HzySH4tib9m5pvF5Gni1d5OukkT6fl4WLk4WLk4T/0rby7spP33X2x
Dh/6VkbRF/PT9fE165+JdbSkL+YefPvEeNd+F/tpYLw7vxL7aqjx/vivNjje
w/jf1fzvF/zvM/ZZnn2WZZ86vlfcyJucf7jvUbEzyWLXroXdNhRMFlXbzyg1
4a0Mkc+n0pZNfZNF9ZV/dQuunixmjc765GyFDFEm+7NGZ7LvCL+FXr7HJjlF
mZDqXRs8cYqj+6s87/nNLXGh7vkfH3ukit/iyuyoEJIqdti8y6nXcRjrfOqT
lnCn8C0xO6ZagdrFLbsnJTvXlWWp4g+b9zp/hG5DoJvGtUsy3p1/Cp/4r9++
f+amZHH7swr73p6QLHp6d5lz60G66F1qWFIrkSxuJRbsXT4yWYS+6hV526LD
lD9z919o7dP/1eKR6dY+K6a1vNDO2mfS9rF//Wqd1/Hynamtclv+ZM23b26d
lSqm2sx/v8jdos28b4mxFQa9CbHOdfLBtUp9rHPZvWvZG/uqFfbVE/b/HfbV
duyr5thXGrenjoHbc98Y13gRVdnPGLUfeYL9BLP/Lmr/sgL7d3Lexuq88k0N
dV67+UOg5zlFTzkXemp8Hl9wb3aCK9KT75KgvovszXexm6/15pF2eXKXPytz
/Fk/Ay9C41M5GA8yxtvAb7MUv8ml8Fs5Vz6XpeHP0/D5ecXnci98XtZmfmHu
0XvqHskQ7pHGc5sN/sAd8Ad+5z5Gq/soq3Ef7eZ7Vrm7cYhlRz7+Zn1c2IsU
sX1G84/Sp6SK/cZ7fwd5r+fvSt9cbdP8loxtUurIHi9r3w/r3f5+fqpI4f2j
U7zTl8b7R6+Zf5j5pZlfiP99xP9u43+z7g778PHsGTI6ffKa1pOdwr+/CJ1a
wbI3li8e9N0spyxavMncGcWDxJQyUd7DfLLEtEmqfvKh0S8wgfeg53n9+x60
OMF70Pr9qbW8A9iD96cWFT/43t5+w8U7kV71p1n/2yi0y/Az1v8enBk/KbSz
U3ZoUtX3J78gEbfz3KXtDms/hty4iNzoYtOv4eAd8Evf//sOuHifd8DNdxY0
7m7mgAZ18s0eLi6+V/V4uRZO+Wv7hpUbWfbDGvROLHpH14fMPD9g+eYNM2SJ
vkWbZnzmlO3KNX+V1TJL5KZOYwH6SNdpnAvYNnxWs1uyaAmPkr97pcq/O5U8
s9H6LgV4RyzTeNdP5w0jec+uOnnDHzL3L9u87pY81abEZ5tfpMi2U1Zc85pq
yQfsgQv0U3hiD+zC3jhNP4KWS8Gsc1qtI/Q6J9hnMbVP8YJ9erLPP4z3zs4Z
8/W5prvuM2f9EucU3YoouomO0E3z29c+//Kb1PwWDL8dMOp1J8JvKd7q/fHj
8Jv3SPUdz6jvKHbzHTVfbW7+L19JzVed4Z+9Rr1xE/jng1nqHXnNP0vhw1Hg
smo+7Oyl+Lm04mfZAH7+B7viEXbFduyKAO5FNO+y6fcxu2ap+/iLuo+yE/fx
AHZIXewQjWuR7XrfZWlDPvCOp9TyQb8rOsZ4F8yQD1LLJS/st7PUIWv77Qh2
oIeyA+VJ7MCJETGydswM+aP3sQ9CfZ3iPxFrat38MksUQq5WwT6ZiVwth5xc
aOBkdliScWHgiuEiyzszSlrrrKvdzqNajyxxGXm7HfvHF3lbzsCl1Os0NXAd
y6NHzHGN9zjN9V7k3K8A9N0V9N1X6LvMOuOzT48bLg7li0nN38cpk8b7bx5l
+WvGPZL6HvVFz15Az4ajZ5fsKxssImfItvuqdEv4yilzT0yvXNFaZ0ztM2nd
RzhFVsSMvS9GxDl6hEYdrFgtS9TYrfL7i4z8fosDDXpMb2DZ33dXVs0IjnOk
b3t/w56OWWIT9RJOo17iQ+TGTfyI/MiNcr+p/XRW+xGvJ6j9DGT//8XumsP+
E9H7dQ38sTIORZ84RR9xE/p0h56J2HU9oGeiDY7Zz0b/9R3kcF7k7Szq4hYh
b7Wc72jghHsafL4DPk+Arzajx6vDV3+FKj7MUHwoN8CHhl6WWi97wucVsR/m
wOdPl6p7EanuhezFvbhn867WAQPHRvtBL5Enf+A3aT/lNX7QEkPvFD7nXk/l
RU5eMPTdPZv4jOfnpeIjLfkcVvpcheYD4hz5NgYHLLLk8wfwSTuDbxO9FL8l
G/w24bsuV3625HBgma/33JwQ5/ioetbJ/1pyOI/D/T06s989n3vw3Wfw3Zdw
3hXwyV74JAU+2Q896xny8/5d9/L2mRHH0Dg8odgtZQw5HzbPfb47KML9d++6
xIav8rrPL8TY9IEmY+f7Yedrv6adTZ+s4dfIU/gRyXXc39Pd2A9XiFfofsa5
yKtOyIc3yAdf5MkN5Inu69zV0r2ePWbY59oPbW/T99TC1d/Msf8fck/vGfri
uJH3iUdPHTbGTzD+cKl7/aX14GXiGDpv0sPLvR2b1ya+0RP9vtGwtw8bcY9w
+HMy/uNvxntM33GPJnOPfLlHBbmn4dzT3NzTJ9i3p7GL9nDfw7Fj38Ye64R8
aAudQ/DrNZ1PuX4vof2pYJt8kPaL/XnPSPNPm3Xu5Uxr9FcW+isF/eVrU0cX
iH58gH4MQD/axWl9Xf1oof3omUYeRNNZ4zdWMXApdR1XQ+q4LlDHpeM2N6nL
mkDcxvDHhfbHHxnr92b928RDXvAug6bbCuzPEdifOq93BPu2DX7TIezbDdjV
RfDjvsWu1vN/xh425w/GDtfzG2EPX8af+gB72K6+9yz0aWG8w/4NdvtC/MRT
2O2NWb8S9rZeP5D5Gdj5ev7/AOL654Y=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{381.8782462790948, 248.08391720562355`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-6.3, 6.3}, {-6.3, 6.3}, {-1.9999558277791036`, 
   1.9999911655246017`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3630725938091692`, -2.044578215562044, 1.2983019051195799`},
  ViewVertical->{-0.29015293163450706`, 0.2510461865435541, 
   0.9234647196757656}]], "Output",
 CellChangeTimes->{3.8988540390927467`*^9, 3.898854087035738*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"5e202a51-6e88-4f85-a668-9c02d61224fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "+", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6.3`"}], ",", "6.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "6.3`"}], ",", "6.3`"}], "}"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[76]:=",ExpressionUUID->"a8b402f5-5e72-4df1-bfa8-37b17b6005e0"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXlcTd/3/5OikiGSzMnU2xAZMnfPO5mnzDPJlEyRIWO9zUNvkqQUQsic
SpJ071uhFBINUmlSIY26Gm7183P3a51P+/Hln/PwbN11zll77bXXXnvve7tY
b5yxUlVFRSWhkYpKw1/XudNfyQcMbCvD9Ypd154dthZJ0k68X+np2Zq4h3Nr
j5uLFJLlsR/f19XpEL+48dRo6yt1kvhWzw/HxmoTX+o66kJ1q5+S9N961Ikf
afnOInx6luT9b3mFFDzDtZ/BhcvnJEm/eQHx9xu9XC0fxkhUfv+LCgNPG9LB
Nam2SBKjlJeA50RHOX4/rJC8Vuon7rnDq+0UtzrJR+XzCOC+dwM2ViTIJW+U
z0+81aQneQ8TMiXWyvclLugEXJ6Z5i5JVdpH5AsGx63WeYX7ET/leGzvBIti
eg7Y1aJJl8ibz7LJzrh+me+WW3JATnYGLx7ZwvVGTCXZGdx/aViB+cgSsjO4
b5D54YFHX5KdwV3eNsgJCUqQws7gft03VG5pFCGFncH3xrftt2paDtkZfPDZ
ca8H+cvJzuBfx7azcQurJDuDl+8yCZfUFpOdwePcv7Vs5xlFdga/eePD8aYl
CVLYGXzkiPePF9/+D/5BPNKz5bkuH3LIzrDfUc+wMVMNX9F7gvfZ57H9anUm
2RnXoeNdXusezSc7g2eZXm7e6cYrsjP43gNS+5K1OVLYGXzIv1HLp/woJTuD
t3j87fTHN0VkZ/DLuz94WlW/lMLO4JGK2rG9Z2SRnen5F/nu/GqbT3YGb9Z2
kpfaoxiyM3jppIS4n3k5UtgZ3Gx/+L/WDcvIzuDbhIORs3cUkZ3Bjy+Vf9/8
Por6J+xkdLLSs2rEd7IzeNygk4e1w6X0/uAe1cb9N9wJIjvj2i54tKakZZoU
dga/LO9mdrtfOdkZ/Nx/TfNVCmvIzuDfdEZMvZRZRXYGL3yh0k8SUEB2Bm9h
tVA7XfOJFHYGH+r1xqV9WCDZGVxtzMaISVrpUtgZfFHKvXX31peTncF9HjZs
qVdTQ3YGv/D+8KolwVVkZ3A/FY3I/UZiHIQ9mtmnP8veLtoZXKXXwrKbr2Vk
Z3Cb1MZvu70OoPcBz93TdJnOMdHOuLrZtHnvM0W0M/i/A1X2ljepJTvT5/b3
zTlTJ9oZ/P2tzwuMCkU7gwuO+9b2/BJOdgbX2O1nEp96n+wMHqc9rH2nfaKd
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
LXHoDx6VdriLFT0/yRvFjFKzcw2QqCjtQNzgXo7mocbuUnB6TqdnVj8Gt8D7
kLx9r+Y1JffzyZ6w96FWs4v8uv4ku4G38f2SuPxyOdkNvPmDVf99Lk0l+4Bb
a3ZI/fEwUwo7gN/9XqFV9ks/3hd8tLtF04AD5fS+4GsKqvJur0mj9wJvOfu9
r9Uv/fCb5lvNLT09m8m8tTQ6Hy2PJH4mYIK0rk5LptKw8cFvHZOoXSF/zbZ1
/84Ds6SwA977uVHx7jWbssg+kNc/07V8RFgscej3eVVgaXfPSwI58Hmn9dLN
UhKksBv+3mOqVmZKVBVxyJ9uuvaCb0mNdJXSr6SQr9t3b1BCUhVxyK8zb1F6
QaVWmvS7P36m+2tM6tXysEUEccibdvXYazsmkdoF76uXNiSo5tf7gkPPvFXm
8c7hscTpfedmD/v5n5fkwu+40VAA15sUv2ja/UQp2hF6ahbeu+mcW0Uc8rbt
W9jMaV4LvyH5GUc6l59/VEUc8uHjnAJWZ9VQ+7b/HWcay/waDh+7bGES8UvK
55JFbfSZED/lObU75N+tsTu+/ko+nofsfyRi1+atRvfJHyBvEBE2Sjf5LLU7
9Bf0O/6ydHkM2QvyKm4TLga1SaR+QX64srP3Z5c6anfIP3n1sJlqg1ri0B+7
YHGjnDKx3SHvrrrYWvHLbuCQ9z2puiBdtZraHfLpXWMkGfsSiUN+kP/TkXHe
kVL0RzxnlE+stmvDQPITssOUwB5eX8+SP0BPnwY3r49eFUP+APnwSeqdnhUm
Uv+F/uRju5y8ftkB/gB5t4+LkgM71RKH/ss2qnFndKrJHyCf3/iV4bNf/QUc
8hVum9tdz6miuIf7ZlnHrjnwqZQ49Gh3bZuSWShy6BlitefK4Ygi8hPwfJul
zdwCw2m8AB8eoKPW/bSC7Anud7zZlu3JYRS3wVsmr89PcRXP3YG/v9m12yXv
fPJD3Cds5IyGX1OLyP7g2iWew/emFUng/19+j8Ox0gC9r0GDrSuJP1JySRDj
6Bckby0T5uaVkp9nK/1F+m3vztH2exQUL8B3N2/e21hRRfLQ43ds49wNHnXE
cd+bjMPukF91wFit0fR84pBfwzj6Be6b39EiosQ4nPoXuNVLizdOOrHUj6C/
+Lz2bqlTIOmBfo0LSo5+BHkby0d/tzsVQBzyToyjH0He9/VB+WyPSuKQv8Y4
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
A/REdnkT/uDXvAP9EXpuu+YOO1aZQBx6AhhHu9P7GpjpRyXp0rhP76t/5oD3
3dXE6X3bKzn6KfT4zzzbqH9KsnhumuV9Cta/0O6wx16uP4JffdAlv6G9nPJP
Wg9k/QX+B3kj1u/onDKTH8b8H3Ikz/UX8Kz9Vc439snpfaFnHfNn9AvIb2H9
An6O8y7X2HgE/0R90miNch8v7ADuwMYpcOhxqh457s6rfTROQX4LG6fAEaed
PivHNdyXzoHG1R+/IL+DjV/wf+g3ZfuK0V9ovxw3rkG/LjeuQX4eG7/Acd/J
bLxDf4F8MzaugUP/9xCb9X7bxHwJ8vlsnzPaA9zgg3IcBCc7DKipXOuymPwE
8ovYOAiO51SxUI6buC/pMag/PuKqzcZH9C96L7bvGv0RXOFYf9yk38Pixk3a
587GR3DctzkbT9EfId+OjZvg0F+h8qr3EaGC8iU8lyXLz+FXqDeqVCjzbXDI
W7H8HP6G+qgsTpmHw38gv5HLt2lfBpdv477dWV4NDj2PWR4OPwHfxPJttDv4
bpY/0/dg4r1qG/3Oh8EhP57lz2h3+v0sU2WeDDlcl3D5MORruXwY981neS84
9OxleTLai56f5cPc+SnhD+enBJyf4uoVAl+voPoQq29w562EP5y3EnDeiqsD
CKgDoL3A/cqX7elZkkEc97Vi9QTu3Jbwh3NbAs5tcfNxgZ+P07yWzd+5c17C
H855CTjnxc1zBcxz6XvuGDee7z8w9W0Gcdx3C5svc/VqGerV+D/tYz2eX1z9
PJ+vJ8tQT8Z+JuirWDqi4cFJdXQulPKsq3d7Db2zma9nylDPxLoa5EvXjPmw
cWQdnbckPT8ir26STebrfjLU/ej3ntnz9omqiCp9IafnAbeM76f2MjODzumD
94hXvZgWIqf7gi8Kbz/vR10G1Zsw73PO9lhx1yyezkNinqhpsPGe+oIv9D1E
eK7dYxW2st20TkHn7N6cHuARnpYu/h424y1dh/SveSTuD6ffa75fdibOJpTm
27jPrOCp6t9aPad5Pq6Te/d822/DU+L4XI6935MG1XFSbp1FhnUW9As8V86F
ZQaK6lLqd5B/3/DbhcLncvp+BvBJ+T8GfFgoJ/24b/DBaXMSHimon4KfCP1x
402UgvIq8KcNey3pu+otfY8DnWse8p+GYc8s6o+4r+OiC5t+rkonvwJvdG1S
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
LOEP+7IE7MvizrUJONfG7dcSsF/r/wGcZ1e2
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1: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
/rDL32e/8fKpRevzLNllziBPuKqfeYsc6Lf9zIfkTAtFzP3DmfP8pp85k9zm
ttiPH9vCPk/E3DycOdW5XeZDMwS+O8ruGs4c7M7Y3z6cOZU8Td71vWjDpf3M
D+Vtv+oyr5rVe13mNvKWS7vMCebx3Yg6HqtcaOEof6jyz3v6mRvIGxaL8j9V
TrXqUOZKazSZB8l35DcLdpn/yJfkU3IoucqjUfZI5Wk39zP3k9vJp+Ri8pBV
4tj/1f9oOYvcR56xaJe5kHxJfiOPkPcs3WW+JLdZtsucSh4ln5IryUke7mcu
JP+SL8lHtHPDocyjNgv8Qj9zlC38NvQzx5I7PdbPnEqeNF+cf5/YbxDbU/3M
W+RB8iX5yEaVU8kFt5Hz9DOnkdvIn+Qp8qpn+plTyZmWizY/X7nQy/4fVu4q
p5JH7dxkTiSvkV/KJeWGcqRrusyx5FXyWTmmmBWj/N+Vt7xnrFG50Nex/7Jy
nt91mTNtF/jGLvMqudSb/cyrdgu8esSeqG79P2I+rRzsg9i/XznVClH+ZuVp
r8X+lcoP5VPyI3nPxFHnhP3MbeQChw5lnrFuHDtWP3Mh+dSBQ5m7rB3l/X7+
7xs/9uP2M6eST8mV5CUbRsyk/cyFLh7KfOn4JvOpo4cyX+n184fR2OoXsT+l
n+M++ZV8St5i7PlNfZflLHIgOYZcST6inZvFZ7p2KHOdTbvMl0Zym6HMoeQq
m3eZU8mbtuoyF5J3yb/kS2dWHiVP0f6Zoy37+L4NZc4kN9HmT/uZV8mRHugy
v5G7fN3PvEUONNxmPiRn+qSfOZVc8Jt+5jRym3u6zKvkUl2beZV8aYI28yG/
8+PXb76cqW0zp5JL3dFlfik3khfKj9yXSdrMseRVu3eZN8gTHu0yb7k58BxR
Nls/c6FFYr9wP3MeuZK85qqoZ+eIn7ufOZV86s6hzEvkQXKu3wV+ossc7AHf
ncDz9TOnmtX/w37madtF+Qz9zA/3CPy9fuZU8ho5i9xALiD/kWfs1GU+JF96
ZSjzqZujfK8ucwM5wz5d5lTyKPmUnElO8uMucyE5j9xHviQvkT/JVbRfjia/
kNvIw+Xm+v/+XeZU8jH/O1+v/5tztJm3yIPkS3KS2yrPkUuof842cya5jfxJ
niKvmrvNnErOtGCb+ZC8a4E2czB5k5xKLvVYk3nNi5VHyZvkJ9o9VPnOve5x
tHP9ym0OCjy68pbVYr9KP3Oh77aZU8kFV/bdij48buVQ8imfQU71kXsQ+Iuh
zIOc7/Coc5PKXdeJ/Vr9zKkeqrzoafdrKPPDBwNvEe9v1s/8Sj4rx5R/vuB/
spwl8B7x/syFX479203yTEfFuXasfOlSv6uxf9N9jLK9Yhvld2A465JHXTKc
vJMY9blHE8e2ndy+n3ma/HA4tn/KU3p5ngFP9G7lLu/18j05z0pt7r2/f9Sx
X53XcW/nT9MI//VO4dl6ieU/s1cu5/0D480567WYd+u81/r96GUe9k4E7lvj
l8uNC6L8//xfjuvw4yo/LOr5sEmebO5e7uVdR0X5fL3MGacvns2xxwf+v16O
eddqM/+avTb5mzxnnjpu7Kr3w8IL9TKPnK7OJX7K2H5t3BGvP22Su/uiyTzz
iuHk9JS/1cty758QbTtWDtrL88kX5ZkL9vJ9ed1J8f6JFfPfXr4nP9ygzb38
77euQS/zVJ/1k/rsq/QyX8KH4B+/qvb4rPJUn/VnUfci9X/iqqjn3/q//xNy
lcCLxbZwva+OM/zv6me54+SLrsPpUdb6/Y7tarlbL/EcUc/1wxmnrXLWuesa
fl2fcfM281b57XJt9rNx67W8d776XZGX+235zXByjM7nPGJmaLIPipmk4uX0
+vms0YZZKs/+QZv3HZ65y37mXDN22W685QzFi7oO/6tr5f5eFPVPgrOK45dv
837I1+fq8nPKvx+rvFs7Z+/y3ogZ3eb1HOToE9fnEzdp/XZ+FO8v0cvXY1WM
z7VLHLtu5ZPKJ6lrck6057MoXyq2ieM86/SSb1y5ze+nnH/12C9d+f+tw1n/
5EN5jinqvOdGPbcMZz03+N0KvHYvv/PGBb7jy/QS4yonGM46nWvcwGtVnfqp
8dLUFa+9C1W/Vq5vXxgxX/fyGp4a1+f7vcz594p2btBLbnTtNr+TximTRv3r
VYzvyIzVb2+LeiaP99aP9x6Q19ex9mKMVb7sZf3GUN+Jc11X4yntmKXquyvq
mSbKN4q4FXo5hnDslFG2Yb1G9nvPMVdE/HC8Xileb9jm99AYZJPYr9xLPPVw
YnzjdIF/WPjXcezDdazv66hBW6pt79d3Y876rsh35dvGDl28v1ovx1BbtPmd
Mea633g63ts03pu7vmtirvFdCLxGlJ/Z5bHGQTdG2Zq9HKNdGzHTV8wMsd+k
Yn5avK9xhH42b/XVebo8Hi++XZv9wLjslhrDLRAxz1Z/MHZ6us61QPUTMcs2
OabyvnHTfF32S+PBG6M91/ez7/0lyp7s5fhq/i77pHONiv1mVefBONhejt1m
q/6v3Yt0+XmM9XZv8ztrLHlLP/vS9+qaGpe5xgt02c/E/DX299b4bvIav472
O9zmeNdxd/Szrzr+gYpZpMnrZZxo7HZ2l99Zr6esseaKUX5KcdXGU9/tsu8Z
M+7XZr+BH674xaoPGPsYE/0+zntnP/vq3yLmqV6Oly7u8joMxpP2xmJzVN9z
vgu67M/qWqWumXH0YW32Adfq+Dbv/UZ174yDl4qYB/yPrj62eJf32Ph4popZ
LWJOa3Nsakz65+G8T+Yj3OdV6l67t6tUH3iwn/fROBZep+pxvDIc+xJd9gPj
+WPb/DzGw+7DGt+6F2vUPTq6zX4g/pjAsw8nT+Ezr1nX0PVbs+7F96P+vw/n
uPq4Nj8jvEyX19e5luqyT6hH7JM1Th+Mw7X33n5+d5Trs+vX5/01niHe2yrK
nov9gsa/gbfo5dh884h5cThfG3fPYwxeeOte3gfj+T/I/YezHscZ2/sOOcd6
hV2zdeu6LTCcx5ufeNx4IrYd4vU2vRxPq3PhiNmvXp8bn/3HFS8Gj4CD8D3Y
rPrzo1HHdr18bb9FxSwWMfvX65Pb/J5sXsdsUr8h8ju/bXK/HXv5m7Zt4K3j
+mxZ48lL47gDeznP4T5tU9/N3XrJQ+Ag3hrO48Xs3MuY7Zr8Hmxbxy1pvN7L
sf/P2/y+Of43cZ4n4zPs6nc+Yg7tJQ+wc8Vqz9Px/jvDGfPnwCZ7d6nv0k71
3dq9lxjf8Ro+LeJ/EmVXmwfo5fyNmJ2rzcvhKur16W1+T3AjfzHmk6/3sk8N
zrPMcH5m9Yxd/ME+TbZltzrv94qT2Cvw2xGzEg6kl5yKOapd/AZ02bdwOn+N
mNHDea6PYr93L+eAVg18eOHPq+/hQz4JfERhfRJ/s1uTx+1e9etnu1f/X76r
vh2vL/S/o3iSNYazX5l7Oqr2xoxntdlHxb8bbfsi8JHx/rVd9kncytG1NzZ/
sZ99DIfyTcQeU3h0l/3Puf4hF6rv1wvV5s2rz7hW2wR+L2L+089zHdfLeZsj
qs8cUtf5g3h/nNiOl1/2s0+Ke6di9Lfru+xjuJ4r27xnOKjX+3nP9Icu9j+t
mMn6eZ3NYa3UZZ8Rv9Zw9hnzaO4LXhAntnKXfRQH9bs27x18QsUeHTEn9pIv
wqu81c/+jBuaIPBJhf/tf2n1jf/JXWM7uZf9ZYSDjGNv6rJ/qut9uY0xSbz+
eDj7h/nCl/1mus697Bf4qIOa5KRgXNO9bfLEeAH34fjqM6t32bdwbWt0ea9x
dFPo/73kqtYbzv7h+Fva7DcnVT9Uj7nCySP+Z3UN9Y1Tqi893iZfhdfSL35R
fWaTONdU/XytTeJxPbe2+VnwZj4rHu7wJu/1qfWd0jdOr3L1wviyW6PODYbz
+qzZZV9Uz0v9/E4eUPfdd/bIiH+in98Fv723tXm/cX0fRvl/q4/d3uY9wh+u
12XfEzNl7P/SSw5uo+G89/i3wZwlTm39Lu+3Y//Wjnn/jjavKe5ePzmn+ox+
cV71Gfftorp3t8kfhrNvvNYmt4fT89s8TT+P0YfPrz6zUZf3w7yse4IDPK7J
79ZFdb/Uf3H1E3WJMV85SdUj3jXFReIYN+6yT2izsf5pvZx/dO0vq3sh9vKK
V9+VVc9pFeNeua6X1/XfosvriLv8fZuf8dvcpXbd1eb1FXNnm/cXB7pZl30I
dq6rqv0Ptdk2nOTnUfcWEX9qvJ4JXxT7a+qa4lN9P/Txq6tsr4i9rGK8f23F
fBHHztjPeiZvk9O4PPB9bX6vnGuT4azfcX5Xzqzfrv21va7V623eP5znr3vJ
SZob3aa+C7jTP+snveRXv4qy0ytu66jnzF7GPNHm9wofe2CUX9lL/tP9uqWu
81C8v228d5axQ+DDA18T+Pdd1iO+F+UHVMwhsb+6l3yo+3d71be9vt/L19NE
/E/i9VU+Zy/nonGPvgd31HFjR8xOEXN+lP29zX6P131Bv+0lvrfLOp1rnn5+
XnU90ubnxf2OE3j+ftbjd+H6+p34Z5Rf0EteerzCeNuj45zX9ZKz9d27p75r
v633zS9vW98X/PNEcezuvoPx/sNRflEdu+twYjFHBr62l/Pjhw1n+++ufvZg
9c+l+9ln8LnTyUmGc/5/icCXRvkjQ1kGO2ZUnPfYeP27eL2k8VTF6Hu45F83
yQurD5e7fZd9F1evD4o5O8onjnqOqvbf3s9c2lh7iiifrM3+iUuhD5tCf+iS
Y8bx6nt4aXy4648L/5X/F9VXB3Fi8L07dtnP8OrLRvxc/eSx9QXHXhMx/1d9
SczYXXLVOOSp2uyf4qcNfEL1n/+1eU3N7ep7+PXfNnnP4Qv95nfJhePAbfhw
vLF++pehMXoCGN8+o7FSm/38+1HPc73k4nftsv8713Rt9l11LRz4wV7y0CfW
vdbu/bo8Huf+WV1n8wgzt9nHzDvM1ua9wwvv1mX/E7Mc7q2fMe6zOYEbo23j
d8nB3y9X7PLe/7P6iZjLmrxeuP17q9/C5iMc4zwPNNn+1+ua7x31LNPP+YMv
27x/sL7zcvWfPbvso+Yc9u3y/plj+KruBez6vVHX0PV7o+7FYB7CtdenXq7+
OatxRPXhr9u8dm/W8Z/VPXJ9/lWfXdvfrvbj1/Hs+rjr8a+6JrfUe8pv7CV+
KPBK/Xz9brxeXu5X+O+9nJdw3LxxrnliuzPKno7POHvgmwP3uuz35jjMD5gn
MC9warT3ll5qMSaovfeViTWPsEac67SIG7+X34EP6jtxay+xuRDfgw/rO/Kd
OOftvXwt5r9Vz1xRvkI/2/NNXTfzMV2X/dscygFd9hvld/Vy3sScxXwRf8Zw
fq5nI2Z+/296eX0/rvuykXwkYiaJ8g36eTwNyN29vBePN/k9+Lzuz6T1vnmR
M+O4iXo5X3J77X0ux35Rbbi/l3NC5mkWivNv2s82bBX7c+L4KQNvjOurY+7r
5fyPuZ6zh/M1fcpUtX+x6jQnNNCswOY19Ptv6ndjnC5/R9R1Wpd6C1yh75bv
q9h12uQiaSbOj3NN08s5Ev3MnI5+pc+YR3q2ye+6932WR3oZ8+fAi0Ud5/nd
jtc79fO9seRNUTZD4V2i/FfxerpezlO5js/VebqqZ4U6l37rWrq2+tvEXfY5
c1ir93NuS79asZ9zWPr0wV32NzFr9nPOS988pMv7ZK7KfZ64zutew+bXJu2y
n4j5SZffGfNii8bnWqTNz7VhP+e89BO6HvNEk8axR3R5H81zTdHlPZuiroP5
K/Ni7qv7q89s2c95NPd9637OkU1V13Wauo+uk2NfDnxkl/fGHJa+Y/5Nn9y4
8POBd+7nPJdru2Sbc2l0R+bXaJHMF5hDg3WdXft5b2iH6LtnrHK6JPNn5hRe
bxI7lqZpVGFa61H12Y/pcj7OuczXzVBtnqDL32vzjObQXCtzXvTJ5lVw/sd2
OTdGy7RUm3NeMC2VOSfzEQf0U0M+mE/Ds+BY/E+G/V+mh/pO4SMKO5bec67C
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
GfPyOBnP4jH4ygb+MBivYmzv2QejmvSoWaMQT8Vbxm828I3BOATeL365kWch
dHnsLE36xnjVaJHop+iojMc/rnL8gNiVK97aO561wPOFK+AfwwN8Xti4m19M
vDbar1LHOm61OpZGa7Vqv3L1Drxia1TManUu9fBdqUfd79fn5e2zdpk2z9ak
P881xDHyl1nTDG/gfXHKaId4yYzfPXth7Tp27YqB+dL42fAT39S9MN5s6lje
sq8qBl/hHOqavcnn3K1V9XjOnecm0KrR/3ium+cd8JzxnvGlWQdoo4rBO2xQ
MYP3lOEW+NbwBv3Cxunq26RiNi3sO2i/cWH1bVj1m+eihaV7FeMYnIe1w62d
QoeDL/DMBev/2FsviEYOV8CThgfwDL7Nq5zHTYzjaOqsMaSMhodHDi8xdh27
RsVuWcd63odn4f2gSZ+ceNwGTR0fHT7BM+mssbNck3zXdtXH8Am8ariC8Soe
56AfiqFzm6hicAj8UeqyTjseQZ3KeNp425R5lsEOdS78Bm8b3R2doM+Gb3Hc
ThXDc8aHtmKTnMOu9VnwJDA9Gp6Bhw2HYL2jXSrG3utB7G5VTgfIZzLwycHL
N9nf+Crp7nauevAwni3iNT5tijoXjsJzRqyLRE9n7/UKTXIWnjO3fsXsWeV7
Vgx9nWco7F3l9vsU3qfqhKesz8635xzeUzdNnrqsi+U+b1b3Wr/lpaSX8+xC
z1+gE+MH84xAa857vgOM6/A8Q8+9wHXgSfjucCPeP7Bi8COwOsQ6Bh/iOSAw
rownjzdPLK8Ynxudp+MOqnoOrXM5Fi/B/4aLsPbVoVWuP/N50n3hWw6p8oMr
BjczfcXo83RivH88iDNXnbgU+jr+PZq6GSsGV7NxnY8GcJr6vHihUdVmOr6p
6xr67uOpjqm+4frwLtLW4WesDYV7maxiaPHmqBjX0Hn5DGkAxf20vhf2x9d9
mbNitA3/dnR9jyYqTPfHk8e/55zWiLJWFI2f52aeVBj/AltvSt0nVP00gbSh
m9X7J1f8tlWX4zwX8pT6XcIBnVL95MQ612B9qhPrWJyw74jfZHyO3zTHea6f
9ZNpUWgdaSjxMJ416TkFdI98b/yW+BDrOJ1a5fgXMdZ3sj+9yu3PKDxPHYtX
wfN4z3GeN2HtIXzIqRXvfZwMDx69Ia2V5yxaawivwjeIS3Gs50Lu0SRfx8dI
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
2m/99DIZn45b2JiRt4jn59gm59zhc2ucyFNkLt68PDzwEvHn8OZMVlg5n5Bn
p/EK6df6t/GLcQxsrRjjMc9dG3h9YLmc8ZvnkQ08Q7Ac3nPKNi0st4dPq9jN
qnzTwurwTDS8z6mVh8PWiuFJ2qLKlcHGgDxMG1c76Rb4wWgYPLtzq2qbnIo/
Ry6hvVtX+VaFf11t5mXiY5q68I31GXmWTq88HJYDm9vlOzLPO2NhXiWaAc+s
OqtyTn4euc3Y1bYzKi92bvoHc7XaJj80r8rnc3vlGLA5Vt4dXh1jjnkK8/eY
F+YFMgc6f+FnK8fjw5EjmYeF5X7mEfQrOZJ5cG2Tbx9buZk5U3OyvDH3Nulx
4WnhDeFf8dwmHhbeFM9VuqJJ34nnKslzlqh4XhnPZpLr3Fq5FiwfFrtPxbeF
zdvytexd8TwgnuPyYJPHKX+1ci3Hyw/5ZnhUeEbkTp5ZJT/0LCG5jnxGmffk
RXww+xUev2Lo/fhgDqj45avOgceFj8W8rVgxb1UepE45ME4b9437XaHiHUsP
Tv9N+82LwU8i/+Hn4N/g3eBl4J2Q58iFxPBxbFAxdIi8EXwa/BHmQ/kuJqvc
zLF8EBtXjHJ+FJ4Z+ZgcDOZnkRfxS/Ag0JbTx5snpYWnO3+1Se05zAvAmyBe
nsDHwM/A90DDzw9gnm7vwrNUHkUrT69O6w7TyB9Y5zK/uWPVw9ewSX0Wc7uH
1bUST4/pORPLNaltp3enV6cnp003f0pnTW9Nl31kxdDDH1cx5mrpvemwB/rw
k7sxOm7H0mmfUjHmfOls6XfNf8kDxdNsm4eljZa/ma/xHCZzi+YZ6aTx1bTN
sDlKGmrx9OP0zLTd5j0d53hzPeZ8YGs1mB+kYzYvQMcLmz+krT6t4s3Vqsfc
GT0+XT7vgHk3bTZnYR5ZuXzSHIpnk5iPk4/R9ZpfMy91bp2XBlmMeRY6XjGD
Z3ycXdff3mvzXNrs2B80Oc/mPXNk5mqcj99ffWdWnWLPq3hzUp7tYb7J/JJn
fJiH8ho270TzK14b6XNpdgfPBLmgGzOfBS9TOR6N+IpN6trgjaq+Cytefqie
0U0+E8T31JwRHe4lhRer37rn67N4loq5IXM/l9bnsr+syml1Ye/LA2ltzQ3R
2MLmeuhqaWpH+PnCA+0tHS0N7SOF6XA9z8FzHfDk1xbGn9Ox0ozitJ8qPNC6
0q3SrP6p8OB50DSpg+dWwOYszC9cU/XvV+cz/+A813Zj5hpgawzSydLsbt2k
/hY2X0ODSQNqjgAf7pkQOG3zAJ4xgVfHxcPmBzx74voqx7vD8hzv31Dl1xd2
HP7YMybw3uqF8crOc1M3hmOHrR/oOQM0ebjBF6tt5izoN2k3cexvFcaH45Zp
0eQe9GgwzS1umR7R/2KaRJheEZdLg4g7oj2E8cD42zvqvDhTGB97Y10T7dTX
9DFzg3R52imWro9eEFeKs8Xh8gXTBnoOAc4Wx+jZAzhJZb+vcnuvcaq4UM8m
wEPiIB3Dt3tPHavc8V7jWWnP6NVGntnaZbwYnCFd4EVNcly4Qr5azyigz7u4
SV0ejBujARN/XnFl4nCSeDy6PfwPrR2MA6TR82wDvJm6YVyf/cNVjvN8oM4l
p9JO3N0Ip90lB45Pdt3wZsoeq3IaNBhXJkeiacOh0bLBfM9yJJo2XBmtGoz7
8nmtw49Dpqt4oj67/ZNVTpsGe985Hq37JS/CbeGy6MXoyR4uTAdGAzZnYTox
HJh4PuA5Kh6/NHhWvbXW6cjow3AjtFq0XHiPBQoPNFy0ZXRcCxamlZq7jsUz
0VnRaeFJ/h8FG1Vy
           "]],
          Annotation[#, "Charting`Private`Tag$393020#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j9I1GEcx/GnX3qpnV2nZl13Kg1CEN5wSwqKNBiEBRXkoBByNOgNJ7ho
bS4W0VybWKBQ4GTNDUVDo2n/8w+klBEEQgQtvp4avr4/7+/3eZ577vFOlSeu
Vg+EEB6rs7UhxDx/MIRt7OZHsV6zA4/hgF5R7kqFUOJl3hf38gv8onwNR/Cc
3qR835oKH+R3+TN+kz+U7+ASPtd7IN+w5jXf5Yt8gm/FPfJPfIm39BqSEDL4
hg/UuCNfjZ8hp+Ws2Rq/xBv5W/mdysjNZu/jPc2yvIV/4E3yR2zBT3jdvFVu
Nf/MR/lx/kVeVzn5hNmGPGaW5zm+ydvkfLy7XDEr8JN8hafkF/g9PrbeU6ji
Or/t7Rd43p5X8e3i/yb2cciaOfmyNdP8N87yZW81Hs+Qh/EKnjYblFfwPJ+x
ppefcUaRd8lZbMd2vZTcb02GP7Gnlh+J38MskX+4cyO/514lOS0fVn/VN96A
i/b9wV7n1MfP0q/DPXVIFZz1C78m/752mHJWp2x5qInvoba4Y8Ijf3awxzCJ
d0z+/z73AT32R2s=
       "]]}},
    VertexNormals->CompressedData["
1:eJyVfXVUVU/3PigGtmJid/uxURS32CKKoiIGKQYW2AkGBqiAioCBiA0qCioI
gg7dKtKlxL1cGgwsRP2d1/McPj/vy1nv+v7FurNm7dmzZ8/sZz975tDb1EJ3
TQMFBYXUxgoKDbm/07LbxidclTGvo11Vmy+3ZQmTDq5195BRwLqI/ub981mi
+5nca23t2eX8WUNeNyyji9pfW1auiaMpi9Xs2macYQObjRkVtqCKRizTi01Y
VUghp1626HDdjj3MN12/PqmI/Nb0OL96ZyFF+Rz+OP2kHWOW0T1nBReRfY/l
uz+tSKBB71xfLIw9w7o1DVymN6aKkpqeXqcnzWPP1M4OvaRhz7YoXO58f1gZ
eRcduzLOQ8bm7HNafknfluE3paO/H/qbo78J5A+G/B6Q/xj6xECfUOgzEvo/
h/7e0N8f89XAfPtjvn6wTzLs4w77iNkza41KYlyWhH07q5391OcdVf98HnYk
W0IG06LPtA7MYbuOhk5YeiCfhP6a6hd/9mwdSVdeu4/O1ZaQ/6+FZaHfi2mV
5ahhnkcL6FvcLU390lzqVtDjlMVtKWWNbdlthnsBpe6UtWmakkvzIl9c/O0q
JcOgjk+VbkfRgukdFTpPk5CepIXh67Jiij7QQXEW5TDvtzMkaQ759Pty4uiz
ATIau/Rb1aRsCQtLvLVGi9MTv+kN+t9D/5/oPxnydSB/GeRnQp906DMf+hhB
/6/Qvyv018d83TBfP8x3GeyzG/Z59T/s6RhQW+PhVsAcfJpnThxdQB7dPpvP
v1JAi5mmg972LPZY1abhAUMp3a8aXKKfJiXvOcY5U9uH04pFZ4139pDV2T+O
aqS9ZnF2ue+wbEtKAak02GE+ebqEXFq/uedqlE9hRvY632IKKH7wr6ojahIa
9klr14fjEWSrlL58YXsZ2WdaeGu4yGiqepe5v39lsmcjq94wSym5xl0a3bRE
SidOd1NRuVLApo+LfaPA6YnfpIX+AejvjP7NReSfF9HnpYj+4SLz1YZ9nsA+
3rCPmD1/7Pxi9c61kGl963lDpXsynXja7/TtC4V05enV4nFt8tjh+IYO6mvT
yGnG18zWOiV0yD15xCr1GHq6uWntpC2ZtMpw2Oq3QeWUHa0RcF5LSvaPAr8+
apxSp495wqLZsaul5DKz+LvsczJ5NNXNvWEvo8tzrxnGKMdRm7HxDXauzKQN
5kMa375dTtUWzY54eOSyn/k6Taps0sh4Q1pHD8sS6rHmwtZ5FwpZh+xgxfBu
ycJv+o3+P9DfEP13Qr4K5G+B/PXQ5wL0uQ59cqH/aegfD/0vYb7+mO9KzPcS
7GMD+7jAPmL2lC0yaXPcs5CZPHbIKrZJYgfNcgIWeBXSq/W9h2n2zmNWki9F
vwNSmeGhrF2l5iXUJOyKmsPKGHq4wmDeQN8M1lBpZu4kSTlFDt9eGLFSSs8m
zp31cF0yW2o1ZVDsYxkNik8N/rBDSutO07D5y5LrzqtHRg0WTx0eRwqOL1s9
c89g5/d17uT9spyu3Po52S4slz1sOsmsRVoqSyi+dUp2qoQmP5XEfeT0LB53
e9YlTk/8ptvofx/9Y9D/JOQ3gHwXyB8Afcyhj7Dfo6F/IPRfDP37isw3HvY5
CPuYwD5i9uytsO30lusFbM7aft5LBhQwjcjho7reKKDA11NWeFtlsbJsz3ZR
ulK26JVpQ+t3UgrueEmlZfdwCtDS6aSlImNHAl7sa3lPRu3eN3YsnJdPg67l
brGL4eT0uNT+3lwJ+frqRxqsySell9RE5XkBW1dwPrdQgzuvViwpMToTQeqy
kre9lGV19q+lvUXqyllsXv9W/i3XSJnJ3tm60z9Iqf+4xzfyOD0Hz7x/pyun
J35T46l8/7nob4T+FpA/CfJfQv4D6NMI+qyHPu2h/wDoPxn6v8F8n2K+hzHf
R7BPOeyjC/uI2XPG7aHPY+IkTE/nsYdSw1x2NeB410PxEhod1OBs08s5bKRq
t7Ift/OZgkWp3xdbGUUWuQfqVUdQ/vQRa4/ulrDV/WOX/8wspo/9TOcd3VFA
O28dPFncI4+FFKh9tzgvpRq/kzt6ORTQdduEBH+VPNYqVnK6/3EphfxQe7nU
LopM1s4tCNkkYQtvH7hJCcUkyT3X7lDvHPY8/sEhm8D8Ovvr69h8mhgvYeEW
55+6NMhl+E0V6B+E/nHofwXyTSFfF/K/QZ8b0Kc19KmG/jugP4P+OZhvHuZr
ivkOlbOPIuwjZk8tg/fO/8FLjXe9Wxf5LSTY4MqgcU2uyUg9usvKLA637D0/
cYDJ9Ijgr5HatoeVyuhkxZuBGWvjaGUX29z8/dHB/Xf7paTrVJHLko071Q0K
qeyFa5Mh70KDpYvjnhRwuKhlj7YfEzkcdbuhka7jy9Bgu4fWnRmHoz4M3Te2
YmUCXdVon71gXXRwSq1qP/OxVbQ0+IFmNIfTXB55T1I2jQiOuVB002R4mXDe
s8xNuQm7OD0F+69Afyf0D0f/KMj3gPw0yG8Gfe5An5PQ5wL0L4H++dD/Nua7
AvPti/mqwT77YZ8a2EfMnrNh/4W8/eka7D8W6zWMXy9qgPWKxvq+5deX1mJ9
P8EftvL+QGHwh1r4z1Xef6gN/Ccc/mbI+xstgb8VwT8Def+k17DncvhzMO/P
wm96j/5P0V+w/zXIN4L8pZD/XUSfL9DfEvoL+zFXZL4jYJ/hsI8S7CNmz144
T+by5wlNxnni//f5TDo4f579fT7TIZxXbXG+DebPNxLOZ5+/z0MSzmcHnJ+T
+fOzLr7/wPmszZ+3ZCx3Pg/hz2eSP59xnpP8+awB+Qly53NjOX3a/x1fSDif
E0Xm6wv7VMA+QvwSs2ch4qMFHx/JGvExAfH0NB9PaSXiqRLibwgff+l3Qz7+
hiNex/DxmoR4PRDxfRcf3+vs+RB4oB2PB+gs8MAF4IfnPH4gAT+oA2985vGG
8JtuoH8Q+keh/wnIV4F8J8jvD312Qx/B/gJeiob+i6B/T8z3Beb7C/ONgX3s
YR8D2EfMnrXAexo83mO2wHtXgQ+38fiQCfjwKPCkJ48nmQnw5Fvgz4M8/qzD
SxuBV+14vMoEvOoBfKvI41tmAXz7FXi4ksfDbDXwcE/g5yY8fmb4TQ0s+f7l
6C/g7T2Q3wDyt0K+gOdPQp+bcvjZCvoL9nfHfG9jvsaYrxvsswP2uQD7iNlT
yF/s+fyFCfnLkr/zQSbkOw+QHy3n86M6vCSXD7L2yKdckX+F8vkXk88Hj/P5
GpPPB5HfMfl8cBqfDzL5fPAp+gv5YAvIPwH5DvXngyxBLh/8Bf3l80F9zFew
//y/80H2QC4flLdnJvLxn3w+zj4hH1+F/H0Pn78zYb8T8v2rfL7PniDfXwl+
4BfPDzCBHxD4hCyeT2ACv7EK/MNCnn9gi8E/RIGveMjzFewX+Iox4DeieX6D
4Te9/psPYT/QXx3ydSFf4E/SoU+2nD6G0L8W+qtC/2Ui810C++yFfQT7i9lT
jl8iEb6ORPg6EuHrSISvIxG+jkT4OhLh60iEryMRvo5E+DoS4etIhK8jEb6O
RPi6Ont+zu+lc85OyiIDylRVfifVtTetpuUKA+KZ1CQmqce4DPLrPcjRM7Wc
Ot8Z7xKyI5/NakHzR/oW0PmFWzscnyShlR0GPAr2KWSDJwyy1x+fROE7A28f
8y2kHtXaQ6N0X7IZhtV3LoeeYQFpixQa9q8izbAGk3LO5tJjpSMFY06nkr6R
spXL3RK6/2jZnIL5kSz05O0Nb38W/suTVCdcahqeRwcP1haELLZnXh1G9Jym
WUYPT6deWpKcSduDtL4rrZfS4/KP5s1+S2nazapBrbjxTbK6mPfg9HGY9WDN
VO73rlejD6XcKqAJDqnr3vYsoOAbs3x+c7+NJjk6yJTz6L7dnFRji1T6LlH8
MdW2hHqsq+4zSC+WXe1tfLx8dgaNGdnRsFV5OZ2YaGCoMTeL1s8NXvZkqZSq
DozVGF3O5e2barrpmsSzfwyb5r5MPMNG+867p6lZRREHOid/48617Na6nh9b
JZPX1Y33j3Nx9kJU8IrP2eFM06PirkFTGTl3DTbYxOGZ/PdDB042L2Tt21Vm
tHaxY7MPeNyYHM3lHbaHOiWuzGdSixnKO4MLyPCfk+N7zJZQNORnQf4dyJ8j
on815EggxwByCqH/COg/Evrrwz4PYZ9a2CdQRH/1NwYZvRrlc3mY3UrHgfYs
r/SewsjOZXQAdtsAu32A3cTWa7fIes2G//jCf/TgP5WfeL8thN8+hd/6wU+2
wU984SeK8M+Z8M9n8E+xfeEK/wyDfwpxU2dOUOL0w4Xs6P0hZr7WdqyxV6Ds
qG+R6L4Q20dho8Oy+9pkMRWXC9vPanO45vGVoPgCKX3blldpfauAbXrbfmjT
XgU0YPHvh0NvF5CP66v0x73DqUWH6J8GLWXk6Fjw+KyPjDq5Vm5Z5RxBy20X
nBndUEapA8c17HpbRitH7Opwo1UWG7UuuX22oZTaNZ7wxO2zlNagfSTa26L9
mwsvZwXkpEFOlMi4QdC/PfQ/+T/0b/50QUvHcwWs1DNe5WqfPJrV5N2+Dbuk
VNYjUeHh9Gim4qt9Mn+/hFrnb/F29ismm40tAp05O+/ovPHU/IN76U5Aeb9c
zs61Hs1j8sMkTKmqt9PkobkU7zDy7YVwCSW/vTaqOiWbJt0pibya/m/ed1Iv
etCJxS+Z6nILNjLsEDV1XFTzmlt3SYtbHQy4c6aXv8bVC0usaMJM9wPx3Dnj
5NgrcDwnT+O1w4+SIbn07XB/azPut++4db/NOXlqk32spi/fUye/tWtup0qd
HNr2+ZFLs8h8eqTf3LSlnYymWE3LeeobyQoaOo/7cVxCP3Sf7fAKL6ZzaSfc
d3L7RWF5xy5mg6xoydKAan9uv9hXHux0cG8BU2rTc9KN4Xl0zKvRd9OjUto5
4atrE9N4diYkc5bZm0NUMVQxtc20Koo8+2KuA3du/HqyYJq3y15qs6Ygy5U7
N85ATkPIOQo5JtAnH/rUQJ8YyPkBOS0hRwnz2oF5PcG8rkEfR+hTBn1OY16N
MC99zOv8/9Ge2VhHdayjgK9S4Sft4Sdt4CcyrGN3rOM4rKOYv22GP3SFPyjD
H8T8SswPR3e1aPGCi78lCRf77mxnRVdsfCuXKJVRYXOP/g5cHvpkUc2FoZ9y
mWvjprrNbKX07u14064cfsh6tLLdBW6+z1YdUKjg5hUzS8n9yto4cvQ9e84z
4xD5Z71bd06nip67dur6zTiajbuceujbIgmb1iByg09KMdV8nnlC+2M2tRyk
OuOWdz7bHdLpy14O17nStk4dkyU03dTnRXbmO6aZM1FxBvf7VqvboQ9WJtCm
UWsOyWIP0cfTXTf3G1tFJdYP79htzqElN2716XD5X5w2X/e18j0Ozxz9dXKt
5RQr0lTxprHDy+hr0x36A15Gsi45akM7GkiYqsHa598LikldIW63tV0BM1xz
K+WMUh5TrXHoPdBFSrqQcxByNCBnMvoboH8X9N8HPTdDz0/Qs6syP25njNsF
476D/nrQX+CFBDtMk7NDkYidFb/w9mwBe+6EPUdgfUuxvlexvrexLuOxLtOx
LmLrK+YP6w02z//ulcPU999kqWfzma9596ig8zJqNMNzfGiShA1XaNBwRNY7
Dodnv9vD6Z8l3bHUUzGSesf3cjM1lTCfB3faxZYU0xAbnY8XXLl8oeeBEVeW
SdjCbp4DP2QX0+X7C/UWjsxhb1cY2K24yflJh7BQ2/syuoX2bLTvRLsy5OhC
zmLI+YBxe2HcBxjXBPpPgv6P/of+q4JfbQzbks8u5yZU2z8vYL8CN8SVjZXQ
szsP7COmc+dS7ZftR/7D57felpzrLCPVxQMCnPZIWYl9h1iJezIzer2lTSGX
X48fuSdv79UCVvHGbMiaYVycufTGfIBHAW06a3MiIiaT7vvsWT1sh5RdaNL5
5/YvUmKBu1deU4xnd/wOWlV8ymAx7x/NbPKwnM52+2AzzzKXGtd2KlObnMYW
W0Sf03Ysoa0/j257fbWAml2/uUadk389+s75Gu53O929uvYehZTs3+K8S2IS
O7fk93rG/a65v2LumSlZNOnw3qhcEymrGXHjzSOJlDxaZGhZJ4Wzux29pv5S
+TcPTacHPi0+5lJT3z3KAT3S2ISt7o6rN5dQw81ddJKX5rMQzWcGSVyee/X+
vq+7p0pIeda9IQ3GxrIrElOjrk0y2cx2htNVIsvp7bceGz4aSdm00aM8hz/8
t87VCHIY5FyBnDARffIgRxNyhPO2CvPSwLx+YF6joM9l6DMN+sRjXi0wr8mY
1/+yZxLseRb23IZ1vIt1dME63hTxk4tYx0ZYR12so5i/3YI/eMIf4uAPYn4l
5ofVjpLF4Z3z2OXur5Vbt0lj3RV0N9utKqFu6J/D9ycT9L9rEO4zyaOQTblQ
OzeJm+/7SRYtlK4VUsdp9nYK82LIcu2K+9PbZLJvdroql16XUxj0dOH1pATo
eR7z/frjz3xJD/NVgT0jeXuSE+y5TCPtzJmucdT6blSw588Mdr3omILas3LK
wnp99/mzXqSO9SpZ6DXxpm8um1C1+J7l8DT2buvhuzrWJdQC636aX3eai3XP
hf+M5f2n7j5DNeSMh5wcyMlH/9HoL/jhSOjZFnregJ7jMO4pjDsb476G/rXQ
fwr0F7PDSNjZAnb+Cju7wZ5fYM8lsOd7rK8b1rcH1tcT6+KKdXmJdRFbXzF/
+Az5p3n51BPyBb+9xPstCX57H/JH8fLpI+R3xryM+HlRLeYVhP2Sx+8XeoX9
IpyT9/j9RcI5KbdP6Qb26Qqsy2+vP+tCt7AuP/4+90g498qx7oP5dad8rPu1
v8+funxK6e9zjzxwXn2FnIGQI/hh47/PN3JH/7HQU5H3H/KEnsK554VxBX97
D/0nQ/9a6C/YQRl2EM6rsSJ23v73eUWusOcHrK891rc31vf23+cYvca6iK2v
mD90K7pQtH5PFlv32Dzlhb6UfqhbP1uWJa07x8r5c4yEc+zY8l6bznYOp6c3
mEVtZxmlmFWYBt+S0dGEHhfOnoqgx3se66e2ktEM5fbXllyW0VaPGC0lpSy2
v7HncaWNUkrd0/d12woOp6F9L9qT0b4Gcp5AzkzIuSwybifobw79f/4P/SXA
UUE8jiJn4Kgg4DF1Ho/RVOAxAbc3bP8HtzMBtysBn4zl8QnNBT75ClzdlseB
tAM4UMgf/9H7ky8w+fxRyfdP3sGE/NEF+HMejz9pKvCnkO98V/uT79TFXxlw
rD6PY0mov1cDb3fjcS91Au4V8sfyxX/yLCbkjxOAq015XE0Crhbyx+vP/+Rr
TD5/tPX5k/cxIX+cBDnGkNMJcroo16+PkD8ehxwhf8zGvJZjXnV1WOhzDfrI
54/vMS8hfxTsqQV70v+w5y+sYxus43as4034yST4iSb8RMgfFbGOQv4o5m9C
/jgS/iDkj2J+JeaHQv6YEf0nv2BC/tgCeWsxn7cyIW8V8gu3B3/yCyafP159
8CevYUJeU4l8uS2fL7N2yJfTkF9P5PPruvqakKdP4PN09h15upA/HhzxJy9j
Qv7YBvyABc8PsMfgB4T8cdP3P3kfE/LHqeAf8nj+gf0C/+AAvkKR5yvYcfAV
Qv64DnKE/PGsXH+BJxHyx0PQU8gfV2PcXIxbi3Eb/83bMH/o7yxihyIRO+fA
nmqwp+CHQv6YifUV8sd0rEs7rIsK1kVsfcX8YUxPxyqN0znMYNbpwzFB+czw
o81dHSsZ/QSP8bvyD4/BEsBj3FiVfnxoUQSFsQrvmacl7L2R3wijuGLaXa12
f9L+KMoZaTf+6GEJW3u00fSg4GLS2dw+OrVdDtNqnHdO91U+09ZNd07i8ruV
cu3z0L4Ect5CzjrICRIZdzj0N4L+xv9DfzkelQk86v2/eVomUu+oa5fjJ5nA
Tz74u77AHoE3lquPMKE+IlfXYEJdQ6g7TOR5bCbw2HK8NxN4b6G+YM7z5Eyo
Lwj1gmk8384Evl2ufsGE+oVQLyjkeX4m1Avk6hpMqAvI1SmYUKeo/rvuwIR6
QcDf/D87D33k6hFMqEfI8f9M4P/niOgjV3dgQt1h9//RnnL8PxP4fxcRP5Gr
LzChviDmb3J1BybUHcT8SswP+2/ZsfHB4Dw22Gdh+1YmqezKsKrlo3aXyNcX
SKS+wIT6wm7Lpl0aboqh4Vu3tSlamMFkt7I1Q76Uy9fjSKjHydXXSKivBfk9
NE6dEkc3W4wc7zUlg7VeNTy+UX45TUV9R42v79Bb1He23Dp5eH5yLgu6PbBL
uFUqy0351WH1xRL5uhgJdTG5OhcJda49kBMAOdmQI0X/dug/E/2doOdt6NkG
esrVs0ioZ8nVp0ioT52F3YbBblLYbQvsYwX7eMI+vbFeQ7Be7lgvuboSCXUl
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
8iyzv+8fsjaQI+RlC9B/APp/dfnrfiMT7jeWY1xjjBuBcT2hfwj03wD9p4rY
IUrEzvFy9rSEPeXuPTLh3mM81uUl1iUQ6yK2vvHR7tPMraTk+PpLQVXjZDI+
olfyw4vDb+9GL51qJqWJ0olLu3ZKJq9GSc5TnnO410Jx2s8pkczjifuJX61k
5Fl5xD7hjIzmbJA9b/QqnDGFjuP3dJHRyZDdeTYcXhoTMEe5p0EhXfdy7/b4
+l7ikHaviKQiGtlw70W/nYX0/qFyYN7JvaRr3CnTI7iINhT1dgiaE8nOl+u8
TeDsbFV4P6I/J0dbf7tV3/Rw1nnl0ywtDo+Fz/CWlHF4adGICaFrN0mpn9mY
6Z9vJ7MmaycYDOX2XfOa2qbjF0vJouR53umnySwlZmfbKdw5uRj9O/L9SRn9
W6K/Cd+f0tDfHPo48/rQAegzD/p04fWhMOgjzHforT/zZfLztbr3Z75MmO+X
v+3J7srZ8zlvTybYU269mMh6MWG9PCwn257sK2NPlLfFKfiF1dW/vMriYjW5
8/bMy8b5+29k0orm/vtUOf/3mmeioHstk42de2qk+fNoMvu12Lfp03JK/bR5
x/u5dmyLx4sTP4piyejFA63kpVWU+SIx6dyxDPpeNf/Akspo8ggw2zH2Yzlt
leV3OPA5gwZreYeFP3Zk84b6hC3YVUGB6vrm+dMzadezvjYvX0bTsSeRm3Li
ymkhBZ1ekWNJrVsMvLClOJYc9YftMdSrooml115+Hr+Vmjr1+xY+/ixLu+Td
J/JXFZ0xr12gXZjBLk90u97tXTT1nMBsXN5x406sX44nxt2LcW0xrsWDUM1K
v0xq8L37P31POLKx0bGWqdoVovMqrarfDhKLBvPevLFj7W4vmLWD01P19/AG
ozg9xeyv3K26z7opNmxo1fhCL71CsvQ6UTg7o4iyFts63JrO5cPBxX3sl0tp
hn07C0tuHQt6jY3fL0km1rVV0OY5Uqq68nbYAs4/TSc37vnJ05zUb42OyuPk
mH+9PuEYJ2fbmPrbUyAnBHI+QI7YuK261K9nyGFjhQdx+WzC128dc9bmUK+5
TQuMuXx/ZnzWxi+2EvZBZ/kAq4woqj7vYnXYt5im7btxJXmNlC2VzereekkW
rfhtsbRtppRWGfm3u9zXhsn0wlae3l9IJ823eag8LaKZZsPNElKPsZLEofeP
d8inRe4au7ValVH1ycOrXwyyY7ImjbWOpyeQf6S9ie+wKgq47Pywi5aEZp+u
pWcNo2lHTES6Rl4xGdecGuM+LY0MJlRN8lHKo+ZbhnuOMSwh/7JBzzMGZpLq
uCPrI47F0RMtjTcld8vponZAXFlZKnt/N3ramJZ5VLKt6vSDjSUUcn5DxfHY
DDZ91fGv0a5xtHp/xxWmL8qpVmnRcpVr+cx79Xwrk6M51ObUx4GhHM4pv62w
Y4uRhB1SCP4y4HMUjep9PepAYjFFN1/eQe2YOXku7tcgnJuveSKr1uHmuzQh
IPdK9820v4u7BuPmO7H5/JY3uflaXTgtVYuypOHrvrdvlJFAmjODN6sPr6Jf
Ki2Xmu6Q0JC3M/s8l0XRRpfrR4tDiimpL91Yej6VNN7UaN7ukEedc161arO3
hA50mT1FZUMGdQ7dfcjXK44CzJqHvXhTTg59GjTYdCGNKQxQNZv8LZeYvuZP
j4UlpCAtPNL0WCb7ctCym9f2OLr/OvXqMlcOV2zU6ylxkjCfde3mVMyMZIHe
fg8WMi7v/mIkm/I2n/lIzt8LKs9mpz2nJWVwdnifcm/PjR4ypqXYbnA3i3A2
c87Em5e5c0xMn2uFk5eNJzsWZR4ZR9I4tlx25ILtnCp6VGh/6+2XY2zSdyvd
D8l5LOyRbcB0tTLa0WPuihZLJfTGYldrwy2RzKr91DGrKotpqXv9dqtWmzc8
RT2Tah84has/jWGaF80fnAopp2fmpz5MME6jqw02fL5km8uUkk/vfn+whE4f
0mZLcjLYGPe4m91jYpiFx52TI1PKad+sHtajldNYReg8c7uLuazjXlO7a/Yl
dPjE6plGGyQsX82sV7BxJGux8uvCQ++KSTPm+eqrj/OZrf/osb+Vc9jNkCZ5
R/5zDxZ+2B1+GAA/PFW70WxMqiWtHWea5s/ZIfPSsA4qc6uob8bEd/5zN1No
/9ZPBqfksealysXunB3ajPMatOighFK+H2mvuTiS/Vz/4N6bV8XU6kT9+2WJ
wiTmeyCDUoLuLynOiGFd33efFlhUTtOKO9TM9E2lwkb3NfXvcjjh66/mEy+X
UFL4C+k/FzLZOKPeaZq3Y5hqyyHDXt4vp0aNLlrp+6cxhxkvKxx25zL1ba/3
DdxWQvcU3n1a0l7Gtr/x2R+fF0GBoy5K250V94cGI226qO6Rsk6bdw1onpvJ
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
80VkBb4oGjxYd55foubgl2Kxjif5dSRhHc/CzyP4dacVWPda+LkZ7z+0WvAf
+OdB3j/rvjsq+PkJ8F3e8PN76L8f/QU/bwb/NIF8Y8jfBH+eCJ7tOfz5sk39
8zKFHfrCDtawwzmf+ucVADuchh06ww5i6zJcVv86iq3L3ND611HMr2rhhwQ/
fAw/PAQ/rwFPGwQ/F+O15PhhEuGH/33nC5zgzOMEmg2csBC4wpfHFdQTuMIR
cTCDj4Nkizh4C3FTm4+b9ANxMw48di+ex6Yb4LEF/JZh+Qe/MQG/ieWPYryE
GP8gxM2NNX/iJhPiplg+W4ffTP7gASaP31Ze+4MfmIAflrnXn3cL+K1njz/4
hP0XfrvzB88wAc+sAE5uw+Nk5gOcbAlcPYTH1ewKcLWA31oO+IPfmIDfioHT
jMAnjANOOwBc1wR8VEvgOgG/GWj9wW9MwG9JwGldwGOYAKcJuG45eDAB190B
T/IFPEkgeJI6/CY3XwG/9YV9BPzW5kT9fI6Y/evwm9x6lSGPsOLzCNYUeUTx
33kHE/IOAb891/uD35iA32YAp70Bf/UVOO0JcF0aeM5nwHVi/JWYH4rxD3J1
ZybUnS87Hq2yjEumVLatuzq37zfaDNSOsJfJ122ZULddMzx08qShybQworl0
/sF/8d4iZ+dPDrJ8tqn1lmSrB9l13zOxty460PGihE0YE+rddX8Ec9tee0kS
WSyaj7v4ddxtFpnGdo/60PTNuFw2IqS8XUObEvk8lIQ8VCx/l8tDmZCHivED
E4Z+nXj+9QnWunqU39eIDHb3VoNZCocryH3k1cKDc9K5+F9k9bZdOnP48Wla
+f4yampussCEW99Gp9UWelo6ktuL2rEf1Crk83om5PVy90NIuB8idw+kjvfY
3kWr71qFDHIqXvXk7Jc0Ni5lR64ad/6vszi/pEeIBSX0+Dx5eSSXD20btW0H
p2dhvzt7yzqlsfTNq477LstluktNuj9xL6HUU0dVvt5MZ7Gu8/uGK6WzsPHN
E3tu5OLI1VLP8xYSVp7sH/rtfAQzSnyoMaywmDyr80dUBOczHc8LF9zjs9nT
8E8+mwNk8vdSSOAZ5HgJJvAS9yFnPuT4Qc58jFuKcVdhXLn7LUy431KNeaVg
XgsxL7n7LUy436JvVr99VsOezrDnBNhTz6vzcW3u3Ltb1vzqkSuO9Kk8e7iH
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-6.3, 6.3}, {-6.3, 6.3}, {-1.9999558277791036`, 
   1.9999911655246017`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8988540985184174`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"8d95a56a-f8fd-4e7c-b430-1a97bd039a3e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Chapter 4: Typesetting", "Subtitle",
 CellChangeTimes->{{3.8988541128279734`*^9, 
  3.8988541310150137`*^9}},ExpressionUUID->"92e557c7-4900-4a27-b798-\
3df3c4005fff"],

Cell["Chapter 5: Presentation", "Subtitle",
 CellChangeTimes->{{3.898854559411291*^9, 
  3.8988545780850167`*^9}},ExpressionUUID->"88a6ae17-694e-4682-a9c0-\
0799f13e4d2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<item1\>\"", ",", "\"\<item2\>\"", ",", "\"\<item3\>\""}], 
    "}"}], ",", 
   RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898854621032349*^9, 3.8988546533966455`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"aaf274d8-8af5-4e24-9cab-9e3ef7b66fac"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{10}, "Spacer1"], "\"item1\"", "\"item2\"", "\"item3\""},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.8988546544335823`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"7c9f77cd-d2f7-44ed-892f-fb19c9a64aeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"a", ",", "Bold", ",", "Red"}], "]"}], ",", "b", ",", "c"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"g", ",", "h", ",", "i"}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"Alignment", "->", "Left"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"Dividers", "->", "Center"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988547045721407`*^9, 3.8988548101203337`*^9}, {
  3.898854859783712*^9, 3.898854926294729*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"76e41fd2-bf4f-4fed-91ff-3fc353c24892"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      StyleBox["a",
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]], "b", "c"},
     {"d", "e", "f"},
     {"g", "h", "i"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{
     "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
    GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False,
  FontFamily->"Times New Roman"]], "Output",
 CellChangeTimes->{3.89885473785699*^9, 3.8988547810472345`*^9, 
  3.89885481120833*^9, 3.898854894371868*^9, 3.898854930252612*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"7f070dd8-d7df-4a28-be74-596d395dc410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988550821578245`*^9, 3.8988551192489915`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"e83c9ae8-7f1f-413c-b50e-85f355a56865"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{10}, "Spacer1"], "0", "1", "2", "3", "4", "5"},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.8988550973999653`*^9, 3.8988551204817996`*^9}},
 CellLabel->"Out[85]=",ExpressionUUID->"60d76c48-1a6a-47a7-ace7-0a2071771b18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", " ", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988551301610804`*^9, 3.8988551810179133`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"296a4d68-892a-4dfe-99ee-4a3f7f106e51"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{10}, "Spacer1"], 
   RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "1", "]"}], ",", 
       RowBox[{"Sin", "[", "2", "]"}], ",", 
       RowBox[{"Sin", "[", "3", "]"}], ",", 
       RowBox[{"Sin", "[", "4", "]"}], ",", 
       RowBox[{"Sin", "[", "5", "]"}], ",", 
       RowBox[{"Sin", "[", "6", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "2", "]"}], ",", 
       RowBox[{"Sin", "[", "4", "]"}], ",", 
       RowBox[{"Sin", "[", "6", "]"}], ",", 
       RowBox[{"Sin", "[", "8", "]"}], ",", 
       RowBox[{"Sin", "[", "10", "]"}], ",", 
       RowBox[{"Sin", "[", "12", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "3", "]"}], ",", 
       RowBox[{"Sin", "[", "6", "]"}], ",", 
       RowBox[{"Sin", "[", "9", "]"}], ",", 
       RowBox[{"Sin", "[", "12", "]"}], ",", 
       RowBox[{"Sin", "[", "15", "]"}], ",", 
       RowBox[{"Sin", "[", "18", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "4", "]"}], ",", 
       RowBox[{"Sin", "[", "8", "]"}], ",", 
       RowBox[{"Sin", "[", "12", "]"}], ",", 
       RowBox[{"Sin", "[", "16", "]"}], ",", 
       RowBox[{"Sin", "[", "20", "]"}], ",", 
       RowBox[{"Sin", "[", "24", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "5", "]"}], ",", 
       RowBox[{"Sin", "[", "10", "]"}], ",", 
       RowBox[{"Sin", "[", "15", "]"}], ",", 
       RowBox[{"Sin", "[", "20", "]"}], ",", 
       RowBox[{"Sin", "[", "25", "]"}], ",", 
       RowBox[{"Sin", "[", "30", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "6", "]"}], ",", 
       RowBox[{"Sin", "[", "12", "]"}], ",", 
       RowBox[{"Sin", "[", "18", "]"}], ",", 
       RowBox[{"Sin", "[", "24", "]"}], ",", 
       RowBox[{"Sin", "[", "30", "]"}], ",", 
       RowBox[{"Sin", "[", "36", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "7", "]"}], ",", 
       RowBox[{"Sin", "[", "14", "]"}], ",", 
       RowBox[{"Sin", "[", "21", "]"}], ",", 
       RowBox[{"Sin", "[", "28", "]"}], ",", 
       RowBox[{"Sin", "[", "35", "]"}], ",", 
       RowBox[{"Sin", "[", "42", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "8", "]"}], ",", 
       RowBox[{"Sin", "[", "16", "]"}], ",", 
       RowBox[{"Sin", "[", "24", "]"}], ",", 
       RowBox[{"Sin", "[", "32", "]"}], ",", 
       RowBox[{"Sin", "[", "40", "]"}], ",", 
       RowBox[{"Sin", "[", "48", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "9", "]"}], ",", 
       RowBox[{"Sin", "[", "18", "]"}], ",", 
       RowBox[{"Sin", "[", "27", "]"}], ",", 
       RowBox[{"Sin", "[", "36", "]"}], ",", 
       RowBox[{"Sin", "[", "45", "]"}], ",", 
       RowBox[{"Sin", "[", "54", "]"}]}], "}"}], 
   RowBox[{"{", 
     RowBox[{
       RowBox[{"Sin", "[", "10", "]"}], ",", 
       RowBox[{"Sin", "[", "20", "]"}], ",", 
       RowBox[{"Sin", "[", "30", "]"}], ",", 
       RowBox[{"Sin", "[", "40", "]"}], ",", 
       RowBox[{"Sin", "[", "50", "]"}], ",", 
       RowBox[{"Sin", "[", "60", "]"}]}], "}"}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.89885515673345*^9, 3.898855181860523*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"36c2dae6-816c-42ac-ae8e-95fa97f83338"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "4"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"5", ",", "8"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"9", ",", "12"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Prime", "[", 
     RowBox[{"Range", "[", 
      RowBox[{"13", ",", "16"}], "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8988551954260645`*^9, 3.8988552858222866`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"6adbb025-2162-4c27-9f57-0121f147e916"],

Cell[BoxData[
 TagBox[GridBox[{
    {"2", "3", "5", "7"},
    {"11", "13", "17", "19"},
    {"23", "29", "31", "37"},
    {"41", "43", "47", "53"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8988552869659543`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"3d1bf66d-cd40-4f4f-8bcc-b168d43f55ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 6: Basic Wolfram Language", "Subtitle",
 CellChangeTimes->{{3.898855405700632*^9, 
  3.8988554212209215`*^9}},ExpressionUUID->"e9fdf698-1cc5-45da-ba28-\
7f124bb2b318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"a", " ", "b"}], " ", "+", " ", 
   RowBox[{"c", " ", "d"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988574503682823`*^9, 3.8988574563416653`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"bdb79d11-2cc0-447d-9bc8-74509ae2f77b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{"c", ",", "d"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.898857457437267*^9},
 CellLabel->
  "Out[89]//FullForm=",ExpressionUUID->"994f5b6b-5d16-4a7c-aa25-324ea35cb6c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreeForm", "[", 
  RowBox[{
   RowBox[{"a", " ", "b"}], " ", "+", " ", 
   RowBox[{"c", " ", "d"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898857458817836*^9, 3.8988574668658104`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b7c2165b-5cda-4244-9b01-322ba4fa5bfb"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[
   TagBox[
    GraphicsComplexBox[{{1.2247448713915892`, 1.6329931618554523`}, {
     0.4082482904638631, 0.8164965809277261}, {0., 0.}, {0.8164965809277261, 
     0.}, {2.041241452319315, 0.8164965809277261}, {1.6329931618554523`, 
     0.}, {2.4494897427831783`, 0.}}, {
      {RGBColor[0.55, 0.45, 0.45], 
       LineBox[{{1, 2}, {1, 5}, {2, 3}, {2, 4}, {5, 6}, {5, 7}}]}, {
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Plus", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 1],
         TagBox[
          RowBox[{
            RowBox[{"a", " ", "b"}], "+", 
            RowBox[{"c", " ", "d"}]}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a $CellContext`b + $CellContext`c \
$CellContext`d], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 2],
         TagBox[
          RowBox[{"a", " ", "b"}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a $CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["a",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 3],
         TagBox["a", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`a], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["b",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 4],
         TagBox["b", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`b], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox["Times", "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 5],
         TagBox[
          RowBox[{"c", " ", "d"}], HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c $CellContext`d], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["c",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 6],
         TagBox["c", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`c], "Tooltip"]& ], 
       TagBox[
        TooltipBox[InsetBox[
          FrameBox[
           StyleBox[
            TagBox["d",
             HoldForm], "StandardForm", "Output",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Scaled[0.05],
            FontColor->GrayLevel[0]],
           Background->RGBColor[1., 1., 0.871],
           FrameStyle->GrayLevel[0.5],
           StripOnInput->False], 7],
         TagBox["d", HoldForm]],
        Annotation[#, 
         HoldForm[$CellContext`d], "Tooltip"]& ]}}],
    Annotation[#, 
     VertexCoordinateRules -> {{1.2247448713915892`, 1.6329931618554523`}, {
      0.4082482904638631, 0.8164965809277261}, {0., 0.}, {0.8164965809277261, 
      0.}, {2.041241452319315, 0.8164965809277261}, {1.6329931618554523`, 
      0.}, {2.4494897427831783`, 0.}}]& ],
   AspectRatio->NCache[Rational[3, 5]^Rational[1, 2], 0.7745966692414834],
   FormatType:>StandardForm,
   FrameTicks->Automatic,
   PlotRange->All,
   PlotRangePadding->Scaled[0.1]],
  TreeForm[$CellContext`a $CellContext`b + $CellContext`c $CellContext`d],
  Editable->False]], "Output",
 CellChangeTimes->{3.8988574678118*^9},
 CellLabel->
  "Out[90]//TreeForm=",ExpressionUUID->"4627e30f-c418-433f-8a40-e912036d21d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\[Pi]", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.898857967385705*^9, 3.898857975679491*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"a973538b-1828-4293-8715-e63455829a75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", 
   "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8988579765903654`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"bc3f9874-d3de-4545-ac2a-c34ab53ef467"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"i", "^", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898858245460943*^9, 3.8988582555709968`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"f4de73d6-7c39-446c-a952-90bbcd3072e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8988582566523867`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"9e690d68-f532-42fe-80c4-d643eff54570"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", " ", "squared", " ", "is", " ", 
  RowBox[{"N", "[", 
   SuperscriptBox["\[Pi]", "2"], "]"}]}]], "Input",
 CellChangeTimes->{{3.898858422285268*^9, 3.898858441080608*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"862bee39-15c2-4ee6-b7d8-7352a6546863"],

Cell[BoxData[
 RowBox[{"31.006276680299816`", " ", "is", " ", "squared"}]], "Output",
 CellChangeTimes->{3.8988584444818206`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"fcba6a23-5b77-49f0-8232-081557d11661"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<\[Pi] squared is: \>\"", "<>", 
  RowBox[{"ToString", "[", 
   RowBox[{"N", "[", 
    SuperscriptBox["\[Pi]", "2"], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8988585178425198`*^9, 3.8988585398872957`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"78155863-706c-44a4-8b86-c3485ec3dd02"],

Cell[BoxData["\<\"\[Pi] squared is: 9.8696\"\>"], "Output",
 CellChangeTimes->{3.8988585411910105`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"18a10d65-3ec3-4d42-8d1c-6fd413a33702"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "2 feet", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "Quantity[2, \"Feet\"]"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Quantity[2, \"Feet\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                TagBox[
                 RowBox[{"\"2\"", "\[InvisibleSpace]", " ", 
                   StyleBox[
                   "\"feet\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
               SyntaxForm -> Dot], 
              PolynomialForm[#, TraditionalOrder -> False]& ], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{"\"24\"", "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"inches\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["6.096", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6.096", "SRString" -> "6.096"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"dm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                  Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"decimeters\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["60.96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "60.96", "SRString" -> "60.96"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                  Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"centimeters\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["609.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "609.6", "SRString" -> "609.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                  Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"millimeters\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["0.6096", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "0.6096", "SRString" -> "0.6096"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"meters\"", {
                   FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "UnitConversion__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Exact forms", "input" -> 
         "UnitConversion__Exact forms"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Comparisons as length", "scanner" -> "Unit", "id" -> 
     "ComparisonAsLength", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.6", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.9", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[
                   0.6256157635467973765`1.3840572678518315], 
                   $CellContext`NRat[
                   0.8839907192575414685`1.5341972903239782]}]]], "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"length of an average human step\"", FontFamily -> "Roboto", 
                FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["68.96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68.96", "SRString" -> "68.96"]], 
                    TagBox["97.44", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "97.44", "SRString" -> "97.44"]], 
                    RowBox[{
                    TagBox["68.96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68.96", "SRString" -> "68.96"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["97.44", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "97.44", "SRString" -> "97.44"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1.1", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "2", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[
                   1.0909090909090897181`1.0791812460476213], 
                   $CellContext`NRat[
                   2.0000000000000022204`1.3424226808222028]}]]], "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"length of a stride on an elliptical trainer\"", FontFamily -> 
                "Roboto", FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]], 
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["22", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "22", "SRString" -> "22"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"in\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "7", "\".\"", "1"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"typical length of a credit card\"", FontFamily -> "Roboto", 
                FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["85.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "85.6", "SRString" -> "85.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"mm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Comparison as height", "scanner" -> "Unit", "id" -> 
     "ComparisonAsHeight", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "4", "\".\"", "7"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"height of a stair riser\"", FontFamily -> "Roboto", 
                FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], 
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]], 
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]]}]}, "Interval", 
                    DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"in\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Comparison as depth", "scanner" -> "Unit", "id" -> 
     "ComparisonAsDepth", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", "2", "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"depth of a stair tread\"", FontFamily -> "Roboto", FontSize -> 
                13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "11", "SRString" -> "11"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"in\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Comparison as radius", "scanner" -> "Unit", "id" -> 
     "ComparisonAsRadius", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "2", "\".\"", "7"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"inner radius of an NBA basketball rim\"", FontFamily -> 
                "Roboto", FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"in\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Comparisons as circumference", "scanner" -> "Unit", 
     "id" -> "ComparisonAsCircumference", "position" -> "700", "error" -> 
     "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.5", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "0.9", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[
                   0.4851042665440970321`1.0434656937810882], 
                   $CellContext`NRat[
                   0.9240081267506610487`1.3233063903751314]}]]], "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"typical flying disc circumference\"", FontFamily -> 
                "Roboto", FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["65.97", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "65.97", "SRString" -> "65.97"]], 
                    TagBox["125.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "125.7", "SRString" -> "125.7"]], 
                    RowBox[{
                    TagBox["65.97", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "65.97", "SRString" -> "65.97"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["125.7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "125.7", "SRString" -> "125.7"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "8", "8"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"FIFA\[Hyphen]sanctioned soccer ball circumference\"", 
                FontFamily -> "Roboto", FontSize -> 13, StripOnInput -> 
                False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["68", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68", "SRString" -> "68"]], 
                    TagBox["70", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "70", "SRString" -> "70"]], 
                    RowBox[{
                    TagBox["68", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "68", "SRString" -> "68"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["70", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "70", "SRString" -> "70"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Comparisons as wavelength", "scanner" -> "Unit", "id" -> 
     "ComparisonAsWavelength", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "0", "\".\"", "8", "8"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"sound wavelength at 500 Hz (fourth octave) in air at 21 \
\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.69", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.69", "SRString" -> "0.69"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               InterpretationBox[
                Cell[
                 BoxData[
                  FormBox[
                   TemplateBox[{
                    StyleBox["\"(\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "1", 
                    StyleBox["\" to\[MediumSpace]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "5", 
                    StyleBox["\")\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
                TextCell[
                 $CellContext`RowTemplate[
                 "<GrayText>(</GrayText>`1`<GrayText> \
to\[MediumSpace]</GrayText>`2`<GrayText>)</GrayText>", {
                   $CellContext`NRat[
                   1.7417142857142857143`0.7174534100300296], 
                   $CellContext`NRat[5.08`1.1823402083326804]}]]], "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"typical wavelength used by cell phones\"", FontFamily -> 
                "Roboto", FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], 
                    TagBox["35", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "35", "SRString" -> "35"]], 
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["35", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "35", "SRString" -> "35"]]}]}, 
                    "Interval", DisplayFunction -> (#3& ), 
                    InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"cm\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", "6", "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"smallest microwave wavelength\"", FontFamily -> "Roboto", 
                FontSize -> 13, StripOnInput -> False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"\[MediumSpace]\[TildeTilde]\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.1", "SRString" -> "0.1"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"m\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Electromagnetic frequency range", "scanner" -> 
     "UnitInformation", "id" -> "FrequencyBands:QuantityData", "position" -> 
     "900", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox[
               RowBox[{"\"microwave\"", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{"\"UHF\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"ultra high frequency\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"decimeter band\""}], 
               LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
              FormBox[
               TagBox["\"\"", 
                $CellContext`TagBoxWrapper["Missing" -> "NotApplicable"]], 
               TraditionalForm]}, "RowWithSeparator"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show electromagnetic spectrum", "input" -> 
         "FrequencyBands:QuantityData__Show electromagnetic spectrum"}, \
{}]}]}], Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Frequency allocation for Singapore (ITU region 3)", 
     "scanner" -> "UnitInformation", "id" -> 
     "FrequencyAllocations:QuantityData", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement[
         "datasource", {}, {
          "NationalTelecommunicationsAndInformationAdministration"}], 
         "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"primary use\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\"fixed\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], "\"mobile\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"broadcasting\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Interpretations", "scanner" -> "Unit", "id" -> 
     "Interpretation", "position" -> "1100", "error" -> "false", "numsubpods" -> 
     "6"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"length\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"height\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"depth\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"radius\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"circumference\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox["\"wavelength\"", Identity], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "6"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Interpretation__More"}, {}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Corresponding quantities", "scanner" -> "Unit", "id" -> 
     "CorrespondingQuantity", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "12"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    
                    RowBox[{"x", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "c"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], " in vacuum from ", 
                    $CellContext`InlineForm["t \[LongEqual] x/c"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ns\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoseconds\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in an optical fiber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"1.48`", "\[InvisibleSpace]", "x"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "c"}]}], PolynomialForm[#, TraditionalOrder -> False]& ]},
                     "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], 
                    " in an optical fiber ", 
                    $CellContext`InlineForm["t \[LongEqual] 1.48x/c"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ns\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoseconds\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavelength ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "\[Lambda]", 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavelength ", 
                    $CellContext`InlineForm["\[Lambda]"], " from ", 
                    $CellContext`InlineForm[
                    "\[Lambda] \[LongEqual] 2 \[Pi] \:019b"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.83", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.83", "SRString" -> "3.83"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Frequency \[Nu] of a photon in a vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]", 
                    "\[InvisibleSpace]", "c"}], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Frequency \[Nu] of a photon in a vacuum from ", 
                    $CellContext`InlineForm[
                    "\[Nu] \[LongEqual] 2 \[Pi] c/\:019b"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.09", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.09", "SRString" -> "3.09"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"GHz\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"gigahertz\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Spectroscopic wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    OverscriptBox["\[Nu]", "~"], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    OverscriptBox["\[Nu]", "~"], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Spectroscopic wavenumber ", 
                    $CellContext`InlineForm["OverTilde[\[Nu]]"], " from ", 
                    $CellContext`InlineForm[
                    "OverTilde[\[Nu]] \[LongEqual] 2 \[Pi]/\:019b"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10.31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10.31", "SRString" -> "10.31"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "k", PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"k", "\[LongEqual]", 
                    
                    RowBox[{"1", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\:019b"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavenumber ", 
                    $CellContext`InlineForm["k"], " from ", 
                    $CellContext`InlineForm["k \[LongEqual] 1/\:019b"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.6", "SRString" -> "1.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Angular wavelength ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "\:019b", 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\:019b", "\[LongEqual]", 
                    
                    RowBox[{"\[Lambda]", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    RowBox[{"\"(\"", "\[InvisibleSpace]", 
                    RowBox[{"2", "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\")\""}]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Angular wavelength ", 
                    $CellContext`InlineForm["\:019b"], " from ", 
                    $CellContext`InlineForm[
                    "\:019b \[LongEqual] \[Lambda]/(2 \[Pi])"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.09702", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.09702", "SRString" -> "0.09702"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"meters\"", {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  
                  TextData[{
                   "Frequency \[Nu] of electromagnetic radiation in a vacuum \
from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    
                    RowBox[{"c", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  
                  Row[{"Frequency \[Nu] of electromagnetic radiation in a \
vacuum from ", 
                    $CellContext`InlineForm["\[Nu] \[LongEqual] c/\[Lambda]"],
                     ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["492", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "492", "SRString" -> "492"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"MHz\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"megahertz\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Frequency \[Nu] of sound from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Nu]", "\[LongEqual]", 
                    
                    RowBox[{"v", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Frequency \[Nu] of sound from ", 
                    $CellContext`InlineForm["\[Nu] \[LongEqual] v/\[Lambda]"],
                     ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["558", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "558", "SRString" -> "558"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"Hz\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"hertz\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"assuming speed of sound \[TildeTilde] \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["340.27", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "340.27", "SRString" -> "340.27"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"s\""}], FontFamily -> "Roboto", 
                    FontSize -> 13]}], Identity], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], "\[NoBreak]",
                     "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Spectroscopic wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    OverscriptBox["\[Nu]", "~"], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    OverscriptBox["\[Nu]", "~"], "\[LongEqual]", 
                    
                    RowBox[{"1", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Spectroscopic wavenumber ", 
                    $CellContext`InlineForm["OverTilde[\[Nu]]"], " from ", 
                    $CellContext`InlineForm[
                    "OverTilde[\[Nu]] \[LongEqual] 1/\[Lambda]"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.6", "SRString" -> "1.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Wavenumber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    "k", PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"k", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{
                    TagBox["2", HoldForm], "\[InvisibleSpace]", "\[Pi]"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "\[Lambda]"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Wavenumber ", 
                    $CellContext`InlineForm["k"], " from ", 
                    $CellContext`InlineForm[
                    "k \[LongEqual] 2\[Pi]/\[Lambda]"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10.31", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10.31", "SRString" -> "10.31"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"m\"", 
                    RowBox[{"-", "1"}]], FontFamily -> "Roboto", FontSize -> 
                    13]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reciprocal meters\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  
                  TextData[{
                   "Corrresponding angle \[Theta] around the earth's equator \
from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Theta]", "\[LongEqual]", 
                    
                    RowBox[{"s", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SubscriptBox["a", "\[Earth]"]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  
                  Row[{"Corrresponding angle \[Theta] around the earth's \
equator from ", 
                    $CellContext`InlineForm[
                    "\[Theta] \[LongEqual] s/Subscript[a, \[Earth]]"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"5.476", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "-6"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"5.476", "\[Times]", 
                    SuperscriptBox["10", "-6"]}], "SRString" -> 
                    "5.476 times 10 to the negative 6"], SyntaxForm -> 
                    CenterDot], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], 
                    FontFamily -> "Roboto", FontSize -> 13]}], Identity], #& ,
                     SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"degrees\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["96", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "96", "SRString" -> "96"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> 13], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"nrad\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"nanoradians\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 13, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "12"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False, False, False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False, False}, True}, Typeset`aux8$$ = {
   True, False, {False, False, False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False, False, False, False, False, False}, True}, 
   Typeset`aux12$$ = {
   True, False, {
    False, False, False, False, False, False, False, False, False, False, 
     False, False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "12", "datatypes" -> "Quantity", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.6320000000000001", "parsetiming" -> 
    "0.166", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP141514a184d7gad3dg4f000022f708i7b4i444d4", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "11", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa141614a184d7gad3dg4f0000448i3f643eb2b3305481992349747128482", "version" -> 
    "2.6", "inputstring" -> "2 feet"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 21, 0, 17, 8.950363`8.70441561670032}, "Line" -> 96, 
    "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7, 8, 9, 10, 11, 12}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "Quantity[2, \"Feet\"]"}, 
   Typeset`open$$ = True, Typeset`newq$$ = "2 feet"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{403.2, {1466., 14.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"66145b73-2cf7-4df4-80ed-8b21131fd080"],

Cell[BoxData[
 TemplateBox[{"2", "\"ft\"", "feet", "\"Feet\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898858582633603*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"b4fca9fc-76c8-4451-b4fe-e7339577efca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"ft\"", "feet", "\"Feet\""},
    "Quantity"]}], "+", 
  RowBox[{"3", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"m\"", "meters", 
     "\"Meters\""},
    "Quantity"]}]}]], "Input",
 CellChangeTimes->{{3.8988585953037806`*^9, 3.8988585979424324`*^9}, {
  3.8988586525214453`*^9, 3.898858655132187*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0b8a14e0-536a-4ddc-af3d-b5a6c611834f"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1504", "127"], "\"ft\"", "feet", "\"Feet\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988586760865307`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"4a910041-849d-4ad9-8c1f-28b2aa906e5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"2", ",", "\"\<Feet\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.89885869104453*^9, 3.8988586990836883`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"66b8d37d-fd89-4600-abbd-7837e67cf4e6"],

Cell[BoxData[
 TemplateBox[{"2", "\"ft\"", "feet", "\"Feet\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898858700623928*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"0410903b-a9a1-480a-8b0c-9785415d234f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{"2", ",", "\"\<Feet\>\""}], "]"}], "+", 
  RowBox[{"Quantity", "[", 
   RowBox[{"3", ",", "\"\<Meters\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.898858705574432*^9, 3.898858726167754*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"beaff3a0-fcb5-4987-a024-61ec9d554049"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1504", "127"], "\"ft\"", "feet", "\"Feet\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988587272528877`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"ddd0afa9-22b1-4948-b455-0fa13106b4ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{
     FractionBox["1504", "127"], ",", "\"\<Feet\>\""}], "]"}], ",", 
   "\"\<Meters\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[100]:=",ExpressionUUID->"9f83da53-86c7-47b2-8baa-6dee951af8b8"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2256", "625"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988588190561905`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"006555c1-c348-4841-9d64-8f98748d88de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"%", ",", "\"\<Meters\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.898858736570778*^9, 3.898858746908409*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"9f46bf00-8171-4394-a2e6-e8d92ba3eaad"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2256", "625"], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898858749140171*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"ec589ab2-2c9b-4871-8c57-0856d4bc50f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "0.25 miles < height of the Empire State Building", Typeset`newq$$ = 
   "0.25 miles < height of the Empire State Building", Typeset`chosen$$ = 
   "Quantity[0.25, \"Miles\"] < Entity[\"Building\", \
\"EmpireStateBuilding::h583b\"][EntityProperty[\"Building\", \"Height\"]]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "0.25 miles < height of the Empire State Building", 
               Defer[
               Quantity[0.25, "Miles"] < 
                Entity["Building", "EmpireStateBuilding::h583b"][
                  EntityProperty["Building", "Height"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{7.92, {3., 4.92}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{7.92, {3., 4.92}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "0.25 miles < height of the Empire State Building", 
                  Defer[
                  Quantity[0.25, "Miles"] < 
                   Entity["Building", "EmpireStateBuilding::h583b"][
                    EntityProperty["Building", "Height"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""},
                   "Quantity"], " ", "<", " ", 
                  RowBox[{
                   TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], 
                    "]"}], "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""},
                   "Quantity"], " ", "<", " ", 
                  RowBox[{
                   TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], 
                    "]"}], "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""},
                    "Entity"], "[", 
                   TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""},
                    "EntityProperty"], "]"}]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    
                    TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""}, 
                    "Quantity", SyntaxForm -> Mod], " ", "<", " ", 
                    RowBox[{
                    TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Building\"", ",", 
                    "\"EmpireStateBuilding::h583b\""}], "]"}], 
                    "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""}, "Entity"], "[", 
                    TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""}, 
                    "EntityProperty"], "]"}]}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "0.25 miles < height of the Empire State Building", 
                   Defer[
                   Quantity[0.25, "Miles"] < 
                    Entity["Building", "EmpireStateBuilding::h583b"][
                    EntityProperty["Building", "Height"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "0.25 miles < height of the Empire State Building", 
                    Defer[
                    Quantity[0.25, "Miles"] < 
                    Entity["Building", "EmpireStateBuilding::h583b"][
                    EntityProperty["Building", "Height"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""},
                    "Quantity"], " ", "<", " ", 
                    RowBox[{
                    TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], 
                    "]"}], "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""},
                    "Quantity"], " ", "<", " ", 
                    RowBox[{
                    TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], 
                    "]"}], "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""},
                    "EntityProperty"], "]"}]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    
                    TemplateBox[{"0.25", "\"mi\"", "miles", "\"Miles\""}, 
                    "Quantity", SyntaxForm -> Mod], " ", "<", " ", 
                    RowBox[{
                    TemplateBox[{"\"Empire State Building\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Building\"", ",", 
                    "\"EmpireStateBuilding::h583b\""}], "]"}], 
                    "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""}, "Entity"], "[", 
                    TemplateBox[{"\"total height\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
                    "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""}, 
                    "EntityProperty"], "]"}]}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->
  "In[101]:=",ExpressionUUID->"78a60922-9a69-43e5-891c-79c5236719e4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8988588839170623`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"58a0bee6-4019-490a-89d0-d968308e5e54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|
   "query" -> "Empire State Building", "boxes" -> 
    TemplateBox[{"\"Empire State Building\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], 
         "]"}], "\"Entity[\\\"Building\\\", \
\\\"EmpireStateBuilding::h583b\\\"]\"", "\"building\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "Empire State Building", "template" -> 
       "Assuming \"Empire State Building\" is a structure${separator}Use as \
${desc} or ${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"C\", \"Empire State Building\"} -> {\"Building\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Building", "desc" -> "a structure", "input" -> 
          "{\"C\", \"Empire State Building\"} -> {\"Building\"}"}, {
         "name" -> "MusicWork", "desc" -> "a music work", "input" -> 
          "{\"C\", \"Empire State Building\"} -> {\"MusicWork\"}"}, {
         "name" -> "MusicWorkRendition", "desc" -> "a music work rendition", 
          "input" -> 
          "{\"C\", \"Empire State Building\"} -> \
{\"MusicWorkRendition\"}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.9571696`7.74317345489882, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "[", "\"\<Elevation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.898858891077726*^9, 3.8988589297568016`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"f3e4feca-e6d3-4b97-a0e4-6df9e9c80d8d"],

Cell[BoxData[
 TemplateBox[{"27.`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.898858948651611*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"1c71ce1c-b836-4c12-9fbc-9162309fb9e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{"7", ",", "\"\<days\>\""}], "]"}], "+", 
  RowBox[{"Quantity", "[", 
   RowBox[{"2", ",", "\"\<weeks\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.898858959885863*^9, 3.8988589745871525`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"e44d2ccb-acf7-4f47-930a-7421d9793b75"],

Cell[BoxData[
 TemplateBox[{"21", "\"days\"", "days", "\"Days\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988589786067357`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"56578bde-4a31-47b8-a803-1eed5fce6ae2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "7 days + 2 weeks", Typeset`newq$$ = 
   "7 days + 2 weeks", Typeset`chosen$$ = 
   "Quantity[7, \"Days\"] + Quantity[2, \"Weeks\"]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{7.92, {3., 4.92}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{7.92, {3., 4.92}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "7 days + 2 weeks", 
                  Defer[Quantity[7, "Days"] + Quantity[2, "Weeks"]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"7", "\"days\"", "days", "\"Days\""},
                   "Quantity"], " ", "+", " ", 
                  TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""},
                   "Quantity"]}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"7", "\"days\"", "days", "\"Days\""},
                   "Quantity"], " ", "+", " ", 
                  TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""},
                   "Quantity"]}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    
                    TemplateBox[{"7", "\"days\"", "days", "\"Days\""}, 
                    "Quantity", SyntaxForm -> Mod], " ", "+", " ", 
                    
                    TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""}, 
                    "Quantity", SyntaxForm -> Mod]}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "7 days + 2 weeks", 
                    Defer[Quantity[7, "Days"] + Quantity[2, "Weeks"]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"7", "\"days\"", "days", "\"Days\""},
                    "Quantity"], " ", "+", " ", 
                    TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""},
                    "Quantity"]}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"7", "\"days\"", "days", "\"Days\""},
                    "Quantity"], " ", "+", " ", 
                    TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""},
                    "Quantity"]}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    
                    TemplateBox[{"7", "\"days\"", "days", "\"Days\""}, 
                    "Quantity", SyntaxForm -> Mod], " ", "+", " ", 
                    
                    TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""}, 
                    "Quantity", SyntaxForm -> Mod]}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->
  "In[104]:=",ExpressionUUID->"9186d9ec-9792-489e-9b39-14b2b4c64838"],

Cell[BoxData[
 TemplateBox[{"21", "\"days\"", "days", "\"Days\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988589959206204`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"2d2f408a-c213-4f0c-a69b-a2f42b861f78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  TemplateBox[<|"query" -> "weeks", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"wk\"", "weeks", 
       "\"Weeks\""}, "Quantity", SyntaxForm -> Mod], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "weeks", "template" -> 
       "Assuming \"weeks\" is a unit${separator}Use as ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"C\", \"weeks\"} -> {\"Unit\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"C\", \"weeks\"} -> {\"Unit\"}"}, {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"weeks\"} -> {\"Word\"}"}, {
         "name" -> "Surname", "desc" -> "a surname", "input" -> 
          "{\"C\", \"weeks\"} -> {\"Surname\"}"}}}}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.1396571`7.508319193973624, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}]], "Input",
 CellChangeTimes->{{3.898859002334298*^9, 3.898859005446188*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"07429ecc-10d9-4239-a26f-64ea3d424219"],

Cell[BoxData[
 TemplateBox[{"2", "\"wk\"", "weeks", "\"Weeks\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8988590092270455`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"2ed48128-c6e9-4f3c-838a-704d8f75dc6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Today"], "Input",
 CellChangeTimes->{{3.8988590151915483`*^9, 3.898859015951747*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ad30fb55-edfd-4c51-8280-10b44ee5a28e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 21 Jul 2023\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2023", ",", "7", ",", "21"}], "}"}], ",", "\"Day\""}], 
     "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.898859018172183*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"4032d653-7d55-4f53-bf47-5fc771573fc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateList", "[", 
  RowBox[{"DateObject", "[", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "7", ",", "15"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988590392500334`*^9, 3.898859064599431*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"18ffd017-9058-4143-829e-85941f567497"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2016", ",", "7", ",", "15", ",", "0", ",", "0", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.898859051823342*^9, 3.898859065556148*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"d74ad6a8-6792-4bef-ad36-8470e05cc627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DatePlus", "[", 
  RowBox[{"Today", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988590725119348`*^9, 3.8988590885578384`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"dec08e32-7131-4ef0-87c4-c482f9ec382c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 28 Jul 2023\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2023", ",", "7", ",", "28"}], "}"}], ",", "\"Day\""}], 
     "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8988590824314117`*^9, 3.898859089401336*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"ae2902d5-6b55-459e-896f-4c5a47386be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DayName", "[", 
  RowBox[{"DatePlus", "[", 
   RowBox[{"Today", ",", 
    RowBox[{"Quantity", "[", 
     RowBox[{"5", ",", "\"\<months\>\""}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988591339002757`*^9, 3.898859159872587*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"a8ceff7d-08b1-4903-b45c-e4e05f42217f"],

Cell[BoxData["Thursday"], "Output",
 CellChangeTimes->{3.8988591626710124`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"1daaa924-ce2c-4e81-9588-c82db3326729"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input",
 CellChangeTimes->{{3.898859357901682*^9, 3.8988593681529436`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"9318342c-5110-46e5-a579-85000709ec73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.8988593726490307`*^9, 3.8988593732484922`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"ced386c3-a23c-415c-908a-29674d99b87c"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.898859374215475*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"131521e9-e3a8-44da-bcb4-d3dd8c6161b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "\[Pi]", "]"}]], "Input",
 CellChangeTimes->{{3.8988593945147552`*^9, 3.8988593971104617`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"677d7b1d-ca64-4eff-be0c-58fdafce31ee"],

Cell[BoxData[
 SuperscriptBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{3.8988593982914886`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"80913971-7821-435f-be35-a79cc1d42c89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "1.2345", "]"}]], "Input",
 CellChangeTimes->{{3.8988594007200737`*^9, 3.898859402992655*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"a4610090-7cb7-4d06-9632-9de2270ee48b"],

Cell[BoxData["1.5239902499999998`"], "Output",
 CellChangeTimes->{3.8988594041218014`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"7c705b11-40ac-4c3d-8625-a1864d5a29d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8988594070627837`*^9, 3.898859409646717*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"5fd2050f-9260-45bf-a597-64f3b4d23004"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.8988594104876814`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"7fe57949-8223-4cc4-adb3-b30907713cb4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  SuperscriptBox["a", "b"]}]], "Input",
 CellChangeTimes->{{3.8988594185044336`*^9, 3.898859427094948*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"38761b65-00ea-434f-94c7-0640751c6211"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"10", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.898859435867549*^9, 3.898859437873084*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"dd4f9de5-2e38-4fe1-8ffc-58814b0fa93e"],

Cell[BoxData["10000000000"], "Output",
 CellChangeTimes->{3.8988594393506136`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"f0e9a885-75f5-4a9e-86ed-764ccff8d404"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "a", ",", "f", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.898859482019402*^9, 3.8988594878134995`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"a257bad6-fd01-49fa-ae6a-d6b9f005d495"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "how much bang is 600kg", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Properties:LanguageData", "Basic properties", 1, 1, "Input", 
        "Dataset[EntityValue[Entity[\"Language\", \
\"MambilaCameroon::4fhgw\"], {EntityProperty[\"Language\", \
\"TotalSpeakers\"], EntityProperty[\"Language\", \"NativePopulation\"], \
EntityProperty[\"Language\", \"LargestCountry\"], \
EntityProperty[\"Language\", \"PrimaryOrigin\"], EntityProperty[\"Language\", \
\"Codes\"]}, \"PropertyAssociation\"]]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Entity[\"Language\", \"MambilaCameroon::4fhgw\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               StyleBox[
                TemplateBox[{
                  TagBox[
                   TagBox["\"Mambila Cameroon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "MambilaCameroon::4fhgw"}]], 
                   Identity], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"language\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], LineIndent -> 0}]}, "RowDefault"], 
                LineIndent -> 0], 
               LinebreakAdjustments -> {1, 100, 0, 0, 100}], TraditionalForm],
              PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Properties:LanguageData", 
     "numsubpods" -> "1", "position" -> "200", "scanner" -> "Data", "title" -> 
     "Basic properties"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Language\", \
\"MambilaCameroon::4fhgw\"], {EntityProperty[\"Language\", \
\"TotalSpeakers\"], EntityProperty[\"Language\", \"NativePopulation\"], \
EntityProperty[\"Language\", \"LargestCountry\"], \
EntityProperty[\"Language\", \"PrimaryOrigin\"], EntityProperty[\"Language\", \
\"Codes\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"total number of speakers\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30000", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1993\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"total number of native speakers\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30000", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1993\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"place with most speakers\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"Cameroon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Cameroon"}]], Identity], 
                    TraditionalForm], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1993\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowDefault"], 
                   LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"original location\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 FormBox[
                  TagBox[
                   TagBox["\"Cameroon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Cameroon"}]], Identity], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"language code\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"mcu\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}}, GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Speakers:LanguageData", "numsubpods" -> 
     "3", "position" -> "300", "scanner" -> "Data", "title" -> 
     "Speakers per country"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 FormBox[
                  TagBox[
                   TagBox["\"Cameroon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Cameroon"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  StyleBox[
                   TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["30000", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Roboto", FontSize -> 13, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], LineIndent -> 0, ZeroWidthTimes -> 
                    False], "\" \"", 
                    TemplateBox[{"  ", "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["100", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "100", "SRString" -> "100"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> 13]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}], 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1993\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], LineIndent -> 0}]}, "RowWithSeparators"]},
                     "RowDefault"], LineIndent -> 0], 
                  LinebreakAdjustments -> {1, 100, 0, 0, 100}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", 
               "\"percent indicates fraction of total speakers\"", 
               "\[NoBreak]", "\")\""}], {
             FontFamily -> "Roboto", FontSize -> 10, 
              GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             TagBox[
              Cell[
               TextData[{
                 StyleBox[
                  Cell[
                   BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"1993\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", "\")\""}], 
                    TraditionalForm]]], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}]], 
              $CellContext`TagBoxWrapper["Label"]], 
             BaseStyle -> {LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Total speakers", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Total speakers", "input" -> 
           "Speakers:LanguageData__Total speakers"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Native speakers", "input" -> 
           "Speakers:LanguageData__Native speakers"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Totals", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Totals", "input" -> 
           "Speakers:LanguageData__Totals"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Per capita", "input" -> 
           "Speakers:LanguageData__Per capita"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Classification:LanguageData", 
     "numsubpods" -> "1", "position" -> "400", "scanner" -> "Data", "title" -> 
     "Language classification"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Language\", \
\"MambilaCameroon::4fhgw\"][EntityProperty[\"Language\", \
\"Classification\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               TagBox["\"Congo Niger\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "NigerCongo"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Atlantic Congo\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "AtlanticCongo"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Volta Congo\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "VoltaCongo"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Benue Congo\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "BenueCongo"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Bantoid\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "Bantoid"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Northern\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "Northern"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Mambiloid\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "Mambiloid"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Mambila Konja\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "MambilaKonja"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Mambila\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "Mambila"}]], Identity], 
              StyleBox["\"  \[RightAngleBracket]  \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TagBox[
               TagBox["\"Mambila Cameroon\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {LanguageData, "MambilaCameroon::4fhgw"}]], 
               Identity]}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Vocabulary:LanguageData", 
     "numsubpods" -> "1", "position" -> "500", "scanner" -> "Data", "title" -> 
     "Basic vocabulary"}, {
     XMLElement["subpod", {"title" -> "Numerals"}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Language\", \
\"MambilaCameroon::4fhgw\"][EntityProperty[\"Language\", \
\"NumeralWords\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1", "SRString" -> "1"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"\[CHacek]en\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"fal\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3", "SRString" -> "3"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tar\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4", "SRString" -> "4"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"na\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5", "SRString" -> "5"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tin\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "6", "SRString" -> "6"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tenjen\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["7", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7", "SRString" -> "7"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tefel\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "8", "SRString" -> "8"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tendely\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9", "SRString" -> "9"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"tarena\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                StyleBox[
                 TemplateBox[{
                   StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["10", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10", "SRString" -> "10"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\": \""}, "RowDefault"], {
                    GrayLevel[0.6], LineIndent -> 0}], "\" \"", 
                   TemplateBox[{", ", "\", \"", 
                    StyleBox["\"yulya\"", LineIndent -> 0]}, 
                    "RowWithSeparators"]}, "RowDefault"], LineIndent -> 0], 
                LinebreakAdjustments -> {1, 100, 0, 0, 100}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> 
         "Vocabulary:LanguageData__Show details"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"async" -> 
     "https://www6b3.wolframalpha.com/api/v1/asyncPod.jsp?id=\
MSPa14212ca725hh47a9ii600003837g2df53e1a7186235443652248981561", "error" -> 
     "false", "id" -> "WikipediaSummary:LanguageData", "position" -> "600", 
     "scanner" -> "Data", "title" -> "Wikipedia summary", "asyncfailed" -> 
     "data not found"}, {}], Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "2"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "bang", "template" -> 
        "Assuming \"bang\" is a language${separator}Use as ${desc} or ${desc} \
or ${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"bang\"} -> {\"Language\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Language", "desc" -> "a language", "input" -> 
          "{\"C\", \"bang\"} -> {\"Language\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Species", "desc" -> "a species specification", "input" -> 
          "{\"C\", \"bang\"} -> {\"Species\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "BoardGame", "desc" -> "a board game", "input" -> 
          "{\"C\", \"bang\"} -> {\"BoardGame\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"bang\"} -> {\"Word\"}"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "bang", "template" -> 
        "Assuming Mambila Cameroon${separator}Use ${desc} instead", "count" -> 
        "2", "pulldown" -> "false", "default" -> 
        "{\"DPClash\", \"LanguageE\", \"bang\"} -> \
{\"MambilaCameroon::4fhgw\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "MambilaCameroon::4fhgw", "desc" -> "Mambila Cameroon", 
          "input" -> 
          "{\"DPClash\", \"LanguageE\", \"bang\"} -> \
{\"MambilaCameroon::4fhgw\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MambilaNigeria::z5mnc", "desc" -> "Mambila Nigeria", 
          "input" -> 
          "{\"DPClash\", \"LanguageE\", \"bang\"} -> {\"MambilaNigeria::z5mnc\
\"}"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "bang", "score" -> "0.18181818181818182", "level" -> "low"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Language", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.899", "parsetiming" -> "0.073", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP14012ca725hh47a9ii60000346a241e7751h2ea", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "5", "related" -> "", 
    "version" -> "2.6", "inputstring" -> "bang"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2023, 7, 21, 0, 32, 20.3611585`9.061377419268357}, "Line" -> 
    120, "SessionID" -> 19430444891875543294}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {6}, Typeset`chosen$$ = {
   "Properties:LanguageData", "Basic properties", 1, 1, "Input", 
    "Dataset[EntityValue[Entity[\"Language\", \"MambilaCameroon::4fhgw\"], \
{EntityProperty[\"Language\", \"TotalSpeakers\"], \
EntityProperty[\"Language\", \"NativePopulation\"], EntityProperty[\"Language\
\", \"LargestCountry\"], EntityProperty[\"Language\", \"PrimaryOrigin\"], \
EntityProperty[\"Language\", \"Codes\"]}, \"PropertyAssociation\"]]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "how much bang is 600kg"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{433.76, {102., 14.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->
  "In[120]:=",ExpressionUUID->"4e54e22d-ffd9-4bb0-a0e9-a9c30e34e9c3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["Language", "TotalSpeakers"] -> 
       Quantity[30000.`3., "People"], 
       EntityProperty["Language", "NativePopulation"] -> 
       Quantity[30000.`3., "People"], 
       EntityProperty["Language", "LargestCountry"] -> 
       Entity["Country", "Cameroon"], 
       EntityProperty["Language", "PrimaryOrigin"] -> 
       Entity["Country", "Cameroon"], 
       EntityProperty["Language", "Codes"] -> {"mcu"}|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 5], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 5], 
     "Path" -> {}, "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 5, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"total number of speakers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "TotalSpeakers"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"30000.`3", "\"people\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "TotalSpeakers"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"total number of native speakers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "NativePopulation"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"30000.`3", "\"people\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "NativePopulation"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"place with most speakers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "LargestCountry"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Cameroon\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "LargestCountry"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"original location\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "PrimaryOrigin"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Cameroon\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "PrimaryOrigin"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"codes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "Codes"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"mcu"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"mcu"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["Language", "Codes"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Language", "Codes"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{237.24, {52.998708563372496`, 57.12129143662751}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{237.24, {52.998708563372496`, 57.12129143662751}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8988595480291834`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"04c62cf9-2497-4609-b330-913c4291c13e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 7: Manipulate", "Subtitle",
 CellChangeTimes->{{3.8988595682552085`*^9, 
  3.898859578937952*^9}},ExpressionUUID->"063fdbdf-2fe3-485e-8a98-\
38a3f1db19a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988595970292935`*^9, 3.8988596090825586`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4ced0de8-43d2-4d08-aba3-dd5a39aa5d68"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 
            0.9999998782112116}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}},
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 0.9999998782112116}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8988596106783524`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"51038739-b057-44b2-8f51-798ce1ee2c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"frequency", " ", "*", " ", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], " ", "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frequency", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988596370199213`*^9, 3.8988597062739916`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"062470fd-94b5-4d1f-8e0f-8710cb63e155"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`frequency$$ = 5., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`frequency$$], 1, 5}}, Typeset`size$$ = {
    259.2, {76., 78.25564232021611}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`frequency$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`frequency$$ $CellContext`x], {$CellContext`x, 0, 2}],
       "Specifications" :> {{$CellContext`frequency$$, 1, 5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {107.93870856337249`, 112.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.898859718605219*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"2c6c3e9e-e52a-4ab7-83c9-4a574ffd9703"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"function", "[", 
      RowBox[{
       RowBox[{"f", " ", "*", " ", "x"}], " ", "+", "phase"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"f", ",", "1", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"phase", ",", "1", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"function", ",", 
     RowBox[{"{", 
      RowBox[{
      "Sin", ",", "Cos", ",", "Tan", ",", "Csc", ",", "Sec", ",", "Cot"}], 
      "}"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988597762824025`*^9, 3.8988598351632648`*^9}, {
  3.8988598850401826`*^9, 3.8988598898694754`*^9}, {3.8988599354970226`*^9, 
  3.8988599806547885`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"9d731490-9fe4-4f5b-aaed-2fa47ed1bceb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`f$$ = 4.1, $CellContext`function$$ = 
    Cot, $CellContext`phase$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`f$$], 1, 5}, {
      Hold[$CellContext`phase$$], 1, 10}, {
      Hold[$CellContext`function$$], {Sin, Cos, Tan, Csc, Sec, Cot}}}, 
    Typeset`size$$ = {259.2, {77., 80.67431538329456}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`f$$ = 1, $CellContext`function$$ = 
        Sin, $CellContext`phase$$ = 1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`function$$[$CellContext`f$$ $CellContext`x + \
$CellContext`phase$$], {$CellContext`x, 0, 2}], 
      "Specifications" :> {{$CellContext`f$$, 1, 5}, {$CellContext`phase$$, 1,
          10}, {$CellContext`function$$, {Sin, Cos, Tan, Csc, Sec, Cot}, 
         ControlType -> SetterBar}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {128.9387085633725, 133.0612914366275}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.89885983818486*^9, 3.8988598917271285`*^9, {3.898859945154096*^9, 
   3.8988599817417245`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"e4dc5169-c906-4d44-a2d6-32c206961e06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "^", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8988599966028514`*^9, 3.898860017477021*^9}, {
  3.898860065636566*^9, 3.898860065791548*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"22ed3a4a-e37c-4c3b-b9b4-afa6c939bbb9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 2, 10, 1}}, Typeset`size$$ = {
    238.31650328216548`, {16.04865234375, 8.610468749999999}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Expand[($CellContext`a + $CellContext`b)^$CellContext`n$$], 
      "Specifications" :> {{$CellContext`n$$, 2, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{442., {43.938708563372494`, 48.061291436627506`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.898860019301016*^9, 3.8988600670140524`*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"e851f753-9004-4975-9d2d-62588835b93a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a", " ", "*", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "11"}], ",", "11"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898941914185236*^9, 3.8989419829680214`*^9}, {
   3.8989420167997093`*^9, 3.8989420202313743`*^9}, {3.8989420835913153`*^9, 
   3.8989420912410393`*^9}, 3.898942125057907*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"6fd40931-fdba-44e0-909b-e9897faf2c27"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 10}}, Typeset`size$$ = {
    259.2, {76., 79.39453280355247}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ Sin[$CellContext`x], {$CellContext`x, 0, 2 Pi}, 
        PlotRange -> {-11, 11}], 
      "Specifications" :> {{$CellContext`a$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{295., {108.93870856337249`, 113.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.898941985832673*^9, 3.898942021682116*^9, {3.8989420925109234`*^9, 
   3.898942126576359*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"c2d076e9-f5c9-4ef3-a151-ec8bd9c96334"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "x", " ", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898942161535782*^9, 3.898942253139581*^9}, {
  3.898942306440936*^9, 3.89894231592423*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0b9963d7-9047-4f77-b25d-06654ac0cb39"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 6.951620101928711, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 10}}, Typeset`size$$ = {
    259.2, {123., 126.85580813882527`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Sin[$CellContext`a$$ $CellContext`x $CellContext`y], {$CellContext`x, \
-2, 2}, {$CellContext`y, -2, 2}, PerformanceGoal -> "Quality"], 
      "Specifications" :> {{$CellContext`a$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{295., {163.9387085633725, 168.0612914366275}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8989422258760843`*^9, 3.8989422648171415`*^9}, {
  3.898942317385084*^9, 3.8989423308247337`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"c6c72489-6de6-4f2d-baed-ac8994d238ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"fn", "[", 
       RowBox[{
        RowBox[{"f", " ", "*", " ", "x"}], "+", "ps"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "6"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"\"\<Sin(\>\"", "<>", 
       RowBox[{"ToString", "[", "f", "]"}], "<>", "\"\<x + \>\"", "<>", 
       RowBox[{"ToString", "[", "ps", "]"}], "<>", "\"\<)\>\""}]}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "\"\<Frequency\>\""}], "}"}], ",", "1", ",",
      "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "3", ",", "\"\<Amplitude\>\""}], "}"}], ",", "1", ",",
      "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ps", ",", "1", ",", "\"\<Phase Shift\>\""}], "}"}], ",", "1", 
     ",", "10", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fn", ",", "Sin", ",", "\"\<Function\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sin", ",", "Cos", ",", "Tan", ",", "Csc", ",", "Sec", ",", "Cot"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898942445102974*^9, 3.8989425342008176`*^9}, {
  3.898942609917907*^9, 3.8989426705072594`*^9}, {3.8989428906891456`*^9, 
  3.898942927182293*^9}, {3.8989429834554076`*^9, 3.898943051967654*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"41452298-5adf-4b0e-9250-23071db925bf"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3, $CellContext`f$$ = 
    1, $CellContext`fn$$ = Sin, $CellContext`ps$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`f$$], 1, "Frequency"}, 1, 5}, {{
       Hold[$CellContext`a$$], 3, "Amplitude"}, 1, 5}, {{
       Hold[$CellContext`ps$$], 1, "Phase Shift"}, 1, 10}, {{
       Hold[$CellContext`fn$$], Sin, "Function"}, {
      Sin, Cos, Tan, Csc, Sec, Cot}}}, Typeset`size$$ = {
    259.2, {85., 88.24094038329457}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 3, $CellContext`f$$ = 
        1, $CellContext`fn$$ = Sin, $CellContext`ps$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`fn$$[$CellContext`f$$ $CellContext`x + \
$CellContext`ps$$], {$CellContext`x, 0, 2 Pi}, PlotRange -> 6, PlotLabel -> 
        "Sin(" <> ToString[$CellContext`f$$] <> "x + " <> 
         ToString[$CellContext`ps$$] <> ")"], 
      "Specifications" :> {{{$CellContext`f$$, 1, "Frequency"}, 1, 5, 
         Appearance -> "Labeled"}, {{$CellContext`a$$, 3, "Amplitude"}, 1, 5, 
         Appearance -> "Labeled"}, {{$CellContext`ps$$, 1, "Phase Shift"}, 1, 
         10, Appearance -> 
         "Labeled"}, {{$CellContext`fn$$, Sin, "Function"}, {
         Sin, Cos, Tan, Csc, Sec, Cot}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{295., {146.9387085633725, 151.0612914366275}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.898942537069039*^9, 3.8989425454951315`*^9}, {
   3.8989426480064516`*^9, 3.898942672639213*^9}, {3.898942928570639*^9, 
   3.8989429344837685`*^9}, 3.898942991022026*^9, 3.898943053935646*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"7064c5f4-e35c-4a63-8636-d62c135fac79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"f", " ", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"\"\<Plot of Sin(\>\"", "<>", 
       RowBox[{"ToString", "[", "f", "]"}], "<>", "\"\<x)\>\""}]}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "1", ",", "\"\<Frequency\>\""}], "}"}], ",", "1", ",",
      "5", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8989427063542147`*^9, 3.898942749049384*^9}, {
  3.8989427869799366`*^9, 3.898942801793892*^9}, {3.898942849611369*^9, 
  3.8989428630880585`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"12b1c0ad-b299-4cd8-85c5-b9eef3eb7d34"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`f$$ = 1.4894607543945313`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`f$$], 1, "Frequency"}, 1, 5}}, Typeset`size$$ = {
    259.2, {80., 82.94289232021617}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`f$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`f$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}, 
        PlotLabel -> "Plot of Sin(" <> ToString[$CellContext`f$$] <> "x)"], 
      "Specifications" :> {{{$CellContext`f$$, 1, "Frequency"}, 1, 5, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {119.93870856337249`, 124.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8989427524220247`*^9, 3.8989428042988443`*^9, {3.8989428662025156`*^9, 
   3.898942868781642*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"fbd52569-d6e6-4820-b58a-1b7cb8094da6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"2", "x"}], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.898943171352435*^9, 3.8989431816144724`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2ad690bd-8caa-4fa6-ab3e-f599d1062600"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", " ", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"x", "^", "2"}]}], "+", 
       RowBox[{"2", "x"}], "+", "1"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898943188739888*^9, 3.898943228906262*^9}, {
  3.8989432950359945`*^9, 3.8989433213422756`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"2f3b1b2a-44ee-4dec-9a36-a43f47ecbc65"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -1, 1}}, Typeset`size$$ = {
    259.2, {85., 87.32306589566801}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`f[$CellContext`a$$ $CellContext`x], {$CellContext`x, -4, 
         4}, PlotRange -> {0, 25}], 
      "Specifications" :> {{$CellContext`a$$, -1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{295., {116.93870856337249`, 121.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>($CellContext`f[
        Pattern[$CellContext`x, 
         Blank[]]] := 2 $CellContext`x^2 + 2 $CellContext`x + 1; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8989432323234205`*^9, 3.8989433225152597`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"24502ec1-a7ca-4828-bab4-84ebab1036ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", " ", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989433532561145`*^9, 3.898943360761475*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"817819d6-101d-4a8c-88fb-a44cafb90ffe"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -1, 1}}, Typeset`size$$ = {
    259.2, {85., 87.32306589566801}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`f[$CellContext`a$$ $CellContext`x], {$CellContext`x, -4, 
         4}, PlotRange -> {0, 25}], 
      "Specifications" :> {{$CellContext`a$$, -1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{295., {116.93870856337249`, 121.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>($CellContext`f[
        Pattern[$CellContext`x, 
         Blank[]]] := 2 $CellContext`x^2 + 2 $CellContext`x + 1; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8989433622483873`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ee592de3-a211-4704-a20e-f3ddf21fbd6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.8989433836542616`*^9, 3.8989433856686797`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"1a789852-9cf3-4681-9868-b90d47c8fe2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", "1"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "+", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989434728194313`*^9, 3.8989435169092283`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6fb4e76e-16f9-4e20-bf96-45184e0cd75d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 10, 1}}, Typeset`size$$ = {
    58.34721496582031, {1.7302977950870986`, 6.049194138497114}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> {$CellContext`x$$, $CellContext`x$$^2 + 1, $CellContext`x$$^3 + 
        1}, "Specifications" :> {{$CellContext`x$$, 1, 10, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{178., {36.938708563372494`, 41.061291436627506`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.898943506630718*^9, 3.8989435180504313`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"992bba32-c2ab-48eb-991b-4cd38806d6aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"x", "^", "2"}]}], "+", 
        RowBox[{"3", "d", " ", "x"}], "-", "1"}], ",", 
       RowBox[{
        RowBox[{"2", "c", " ", 
         RowBox[{"x", "^", "2"}]}], "-", 
        RowBox[{"d", " ", "x"}], "+", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "100"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c", ",", "1", ",", "20"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989435291337748`*^9, 3.8989437186161203`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"13e41e83-bac5-43ee-a253-42d5e5c939a7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 
    13.700000000000001`, $CellContext`d$$ = 7.640000000000001, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c$$], 1, 20}, {
      Hold[$CellContext`d$$], 0, 20}}, Typeset`size$$ = {
    259.2, {81., 84.3732697838312}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c$$ = 1, $CellContext`d$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`c$$ $CellContext`x^2 + 
         3 $CellContext`d$$ $CellContext`x - 1, 
         2 $CellContext`c$$ $CellContext`x^2 - $CellContext`d$$ \
$CellContext`x + 3}, {$CellContext`x, -5, 5}, PlotRange -> {-5, 100}], 
      "Specifications" :> {{$CellContext`c$$, 1, 20}, {$CellContext`d$$, 0, 
         20}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {121.93870856337249`, 126.06129143662751`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.898943602047868*^9, 3.898943637442398*^9, 
  3.8989436778758097`*^9, 3.898943720677972*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"93d49229-d156-4333-9cd0-3bdf720cb586"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ThermometerGauge", "[", 
  RowBox[{"10", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989437437774644`*^9, 3.8989437707378864`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"787cefb7-dc26-4091-bcaa-5dddc248f538"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Opacity[0], PointBox[{{-0.22, -0.15}, {0.13, 1.1}}]}, 
   GeometricTransformationBox[{}, {{{0, -1}, {1, 0}}, {0, 0}}], {
    {GrayLevel[0.5], AbsoluteThickness[1], 
     {GrayLevel[0.5], AbsoluteThickness[0.5], CapForm["Butt"], 
      StyleBox[{{
         LineBox[{{{0., 0.}, Scaled[{-0.1, 0.}, {0., 0.}]}, {{0., 0.2}, 
            Scaled[{-0.1, 0.}, {0., 0.2}]}, {{0., 0.4}, 
            Scaled[{-0.1, 0.}, {0., 0.4}]}, {{0., 0.6}, 
            Scaled[{-0.1, 0.}, {0., 0.6}]}, {{0., 0.8}, 
            Scaled[{-0.1, 0.}, {0., 0.8}]}, {{0., 1.}, 
            Scaled[{-0.1, 0.}, {0., 1.}]}}], 
         LineBox[{{{0., 0.05}, Scaled[{-0.065, 0.}, {0., 0.05}]}, {{0., 0.1}, 
            Scaled[{-0.065, 0.}, {0., 0.1}]}, {{0., 0.15}, 
            Scaled[{-0.065, 0.}, {0., 0.15}]}, {{0., 0.25}, 
            Scaled[{-0.065, 0.}, {0., 0.25}]}, {{0., 0.3}, 
            Scaled[{-0.065, 0.}, {0., 0.3}]}, {{0., 0.35}, 
            Scaled[{-0.065, 0.}, {0., 0.35}]}, {{0., 0.45}, 
            Scaled[{-0.065, 0.}, {0., 0.45}]}, {{0., 0.5}, 
            Scaled[{-0.065, 0.}, {0., 0.5}]}, {{0., 0.55}, 
            Scaled[{-0.065, 0.}, {0., 0.55}]}, {{0., 0.65}, 
            Scaled[{-0.065, 0.}, {0., 0.65}]}, {{0., 0.7}, 
            Scaled[{-0.065, 0.}, {0., 0.7}]}, {{0., 0.75}, 
            Scaled[{-0.065, 0.}, {0., 0.75}]}, {{0., 0.85}, 
            Scaled[{-0.065, 0.}, {0., 0.85}]}, {{0., 0.9}, 
            Scaled[{-0.065, 0.}, {0., 0.9}]}, {{0., 0.95}, 
            Scaled[{-0.065, 0.}, {0., 0.95}]}}]}, 
        {GrayLevel[0.25], 
         StyleBox[{{{
             InsetBox["0", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 0.}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["10", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 0.2}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["20", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 0.4}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["30", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 0.6}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["40", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 0.8}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 0}], 
             InsetBox["50", Offset[{-3., 0.}, Scaled[{-0.1, 0.}, {0., 1.}]], 
              ImageScaled[{1, 0.5}], Automatic, {1, 
              0}]}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {}},
          StripOnInput->False,
          FontFamily->"Helvetica",
          FontSize->10]}},
       StripOnInput->False,
       Antialiasing->False]}}, {}}, {}, 
   GeometricTransformationBox[GraphicsGroupBox[{
      TagBox[
       TooltipBox[{
         {Hue[0.014999999999999977`, 0.7299999999999999, 0.8], Opacity[1], 
          EdgeForm[None], 
          PolygonBox[{{0.004687499999999997, -0.049218750000000006`}, {
           0.0703125, -0.049218750000000006`}, {0.0703125, 0.2}, {
           0.004687499999999997, 0.2}}]}, 
         {Hue[0.014999999999999977`, 0.7299999999999999, 0.6], Opacity[1], 
          EdgeForm[None], 
          PolygonBox[{{0.004687499999999997, -0.049218750000000006`}, {
           0.06375, -0.049218750000000006`}, {0.06375, 0.2}, {
           0.004687499999999997, 0.2}}]}, 
         {Hue[0.014999999999999977`, 0.7299999999999999, 0.7], Opacity[1], 
          EdgeForm[None], 
          PolygonBox[{{0.014531249999999997`, -0.049218750000000006`}, {
           0.050624999999999996`, -0.049218750000000006`}, {
           0.050624999999999996`, 0.2}, {0.014531249999999997`, 0.2}}]}, 
         {Hue[0.014999999999999977`, 0.7299999999999999, 1], Opacity[1], 
          EdgeForm[None], 
          PolygonBox[{{0.021093749999999998`, -0.049218750000000006`}, {
           0.0375, -0.049218750000000006`}, {0.0375, 0.2}, {
           0.021093749999999998`, 0.2}}]}},
        DynamicBox[
         ToBoxes[10, StandardForm]]],
       Annotation[#, 
        Dynamic[10], "Tooltip"]& ], 
      {Hue[0., 0., 0.8], Opacity[1], EdgeForm[None], 
       PolygonBox[
        NCache[{{0.004687499999999997, Rational[1, 5]}, {
          0.0703125, Rational[1, 5]}, {0.0703125, 1}, {
          0.004687499999999997, 1}}, {{0.004687499999999997, 0.2}, {0.0703125,
           0.2}, {0.0703125, 1}, {0.004687499999999997, 1}}]]}, 
      {Hue[0., 0., 0.6], Opacity[1], EdgeForm[None], 
       PolygonBox[
        NCache[{{0.004687499999999997, Rational[1, 5]}, {
          0.06375, Rational[1, 5]}, {0.06375, 1}, {
          0.004687499999999997, 1}}, {{0.004687499999999997, 0.2}, {0.06375, 
          0.2}, {0.06375, 1}, {0.004687499999999997, 1}}]]}, 
      {Hue[0., 0., 0.7], Opacity[1], EdgeForm[None], 
       PolygonBox[
        NCache[{{0.014531249999999997`, Rational[1, 5]}, {
          0.050624999999999996`, Rational[1, 5]}, {
          0.050624999999999996`, 1}, {0.014531249999999997`, 1}}, {{
          0.014531249999999997`, 0.2}, {0.050624999999999996`, 0.2}, {
          0.050624999999999996`, 1}, {0.014531249999999997`, 1}}]]}, 
      {Hue[0., 0., 1], Opacity[1], EdgeForm[None], 
       PolygonBox[
        NCache[{{0.021093749999999998`, Rational[1, 5]}, {
          0.0375, Rational[1, 5]}, {0.0375, 1}, {
          0.021093749999999998`, 1}}, {{0.021093749999999998`, 0.2}, {0.0375, 
          0.2}, {0.0375, 1}, {0.021093749999999998`, 1}}]]}, 
      {Hue[0.014999999999999977`, 0.7299999999999999, 1], AbsoluteThickness[
       2], Opacity[1], CapForm["Butt"], 
       LineBox[{{0.004687499999999997, 0.2}, {0.0703125, 0.2}}]}, 
      {FaceForm[None], 
       PolygonBox[{{0.004687499999999997, -0.049218750000000006`}, {
         0.004687499999999997, 1}, {0.0703125, 1}, {
         0.0703125, -0.049218750000000006`}}]}, 
      {FaceForm[None], 
       DiskBox[{0.0375, -0.049218750000000006`}, 0.049218750000000006, {
        2.3005239830218627`, 7.124253977747516}]}, 
      TagBox[
       TooltipBox[
        {EdgeForm[None], PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfQYMZtqbGIPAzP1gynixPQMUeE3k+LA/epk9Q++q
4IB8y/3ectfDespX2itoXghbEhq5fwrTnB7uqjX2Cm9ZrLICcvYLCbbeEQtf
b38hdrbL4fcV+/8wRif3M260D9nrbuPu0Lyfo9v72hrLTfYdi/p4XwZ2768z
kl//3W+z/YNt+Sck3SbtDyrqzxGw3WKfGHrg+KeU6fs9Sg+fNmXYah8qcMbl
8oc5+1dv0f8YPHWr/YeO1RmrMxfu33Mi8arAr6323q9k5sRWLdn/c23f4as6
2+xrNpaYKMxbDue/2fLR0O3EKrh62RrPUxxv1sLN25N3ty62bgPcPnl9hqR/
3zbC3XNH1rnxW+RmuHtrXMUPrlm4Be6fx3GNgt9ObIX7t8t6lbfW6W3w8Aiv
ffnPbMl2eHid5k5+uD5gBzw8J3y6vvDO2R37YeG9vOP+o8OSO+HxAYmfnftl
rsaWLeNaAJc3myAnv+XuTLj+xcenbN56YzLc/IDQVnU72x64/Xs6D9bJ9TbC
3VfA+nXOaYN8uPsZvP+/rj5ivR/mvw8fD0+9PLdgP8z/EYosnZoXavbDwucA
95P3rILN+2Hh57OmRPCtWdt+WPgaXLvdJHK2fT8s/GF8WPzA1MPiD2YeLH5h
9sHiH+YeWPqAuReWfmD+gaUvmH9h6Q8WHrD0CQsvWPqFhScsfcPCG5b+0fMH
AK5ooPk=
          "],
          VertexColors->{
            Hue[0.014999999999999977`, 0.7299999999999999, 1, 1], 
            Hue[0.014999999999999977`, 0.7299999999999999, 1, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.9560466363294806, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.912266736504987, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.8688330797899928, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.8259170789846016, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7836881039375367, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7423128131207255, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7019544959044491, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.6627724281287992, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.6249212435147024, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5885503233952688, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5538032071759174, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5208170258499181, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.48972196080501196`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4606407300569476, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4336881039375369, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4089704521485895, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.38658532396929557`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3666210632737864, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.34915645987822397`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3342604385933926, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.32199178720995825`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3123989244899179, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3055197090798655, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.30138129010021, 1], 
            Hue[0.014999999999999977`, 0.7299999999999999, 0.3, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.30138129010021, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3055197090798655, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3123989244899179, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.32199178720995825`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3342604385933926, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.34915645987822397`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.3666210632737864, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.38658532396929557`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4089704521485895, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4336881039375369, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.4606407300569476, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.48972196080501196`, 
             1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5208170258499181, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5538032071759174, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.5885503233952688, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.6249212435147024, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.6627724281287992, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7019544959044491, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7423128131207255, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.7836881039375367, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.8259170789846016, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.8688330797899928, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.912266736504987, 1], 
            Hue[
            0.014999999999999977`, 0.7299999999999999, 0.9560466363294806, 1], 
            Hue[0.014999999999999977`, 0.7299999999999999, 1, 1]}]},
        DynamicBox[
         ToBoxes[10, StandardForm]]],
       Annotation[#, 
        Dynamic[10], "Tooltip"]& ]}], {{{1, 0}, {0, 1}}, {0, 0}}], {}, 
   GeometricTransformationBox[{}, {{{0, -1}, {1, 0}}, {0, 0}}]},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FormatType->TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Small,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.8989437720114355`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"3a7bf1fb-2be4-47a2-a9d0-19f09391a7d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ThermometerGauge", "[", 
    RowBox[{
     RowBox[{"10", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "50"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989437829528995`*^9, 3.898943837435856*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"bc2e319d-a671-4430-9d72-c97b97921733"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 2.500255089236693, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 5}}, Typeset`size$$ = {78.3, {132., 138.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ThermometerGauge[10 $CellContext`x$$, {0, 50}], 
      "Specifications" :> {{$CellContext`x$$, 0, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{308., {195.91754141980783`, 203.08245858019217`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8989438307727623`*^9, 3.8989438412798557`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"b22dab38-14a3-4428-bc21-84a635e32aa2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 8: Sharing Mathematica Notebooks", "Subtitle",
 CellChangeTimes->{{3.8989438796714377`*^9, 
  3.8989438928994436`*^9}},ExpressionUUID->"0123e20d-0bd2-457b-a8fc-\
15962dec699b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDFDeploy", "[", 
  RowBox[{
   RowBox[{"NotebookFileName", "[", "]"}], ",", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.898944593496626*^9, 3.898944631248513*^9}, 
   3.8989446799674673`*^9, {3.898944737796774*^9, 3.898944746183225*^9}, {
   3.8989447939377317`*^9, 3.8989448105998745`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"88421079-8fe5-4231-8378-ce7eb713f52d"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8989448137504945`*^9, 3.8989448652734113`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"22442b58-21fa-4fe3-8c1e-929ecdf5dd8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"%30", ",", 
   RowBox[{"Permissions", "->", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8989449069575295`*^9, 3.898944928619418*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"bb333eef-a167-4298-bfb2-81cb4053cb18"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/28c224e9-b810-4cc6-9293-79ee301c9fc9\"\
", "https://www.wolframcloud.com/obj/28c224e9-b810-4cc6-9293-79ee301c9fc9"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/28c224e9-b810-4cc6-9293-79ee301c9fc9"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8989449370813866`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"a949c30a-5294-4f89-baaa-cfd47503fe1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subtitle",ExpressionUUID->"3616808a-5cc0-4a2a-9363-ec01486f9e95"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.898852938174159*^9, 
  3.898852939874485*^9}},ExpressionUUID->"8cb2ebc9-31c9-4fd8-bc06-\
d99e9751e24e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.898849087038842*^9, 
  3.898849101756833*^9}},ExpressionUUID->"03f9ec20-4558-4823-921c-\
dae3fa02c616"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 651.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"072a5bef-b051-41bb-9b7d-d0781024d391"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1510, 35, 167, 3, 122, "Title",ExpressionUUID->"6e7da4cf-9d62-46df-b924-cbcb0804dc51"],
Cell[1680, 40, 173, 3, 66, "Subtitle",ExpressionUUID->"6bad283a-13c0-4f9a-979c-802d598718ad"],
Cell[CellGroupData[{
Cell[1878, 47, 95270, 1881, 1382, "WolframAlphaShortInput",ExpressionUUID->"742414d8-3088-49dd-bc77-69114b466abe"],
Cell[97151, 1930, 217, 4, 48, "Output",ExpressionUUID->"453f891c-906a-48ab-ab7a-8fa428aff318"]
}, Closed]],
Cell[CellGroupData[{
Cell[97405, 1939, 276, 5, 29, "Input",ExpressionUUID->"5b2d7032-d01b-46ba-82c3-059ec854dd67"],
Cell[97684, 1946, 215, 4, 48, "Output",ExpressionUUID->"6305a7d6-1f7c-4db2-8118-d7921e70ab3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97936, 1955, 661, 14, 74, "Input",ExpressionUUID->"ec4eeb01-b919-4d5f-bc13-2978b6962075"],
Cell[98600, 1971, 217, 4, 48, "Output",ExpressionUUID->"9b036185-a0b6-4ac2-b099-866d35c9fc02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98854, 1980, 214, 3, 35, "Input",ExpressionUUID->"c077ecea-2e84-44bf-85f1-a23faff2c789"],
Cell[99071, 1985, 54644, 1263, 1170, "Output",ExpressionUUID->"0436a9f7-043d-4f3a-a98a-1de7a1ed041f"]
}, Closed]],
Cell[153730, 3251, 741, 18, 54, "Input",ExpressionUUID->"8be6782c-7169-4f10-abfc-120be1f14557"],
Cell[CellGroupData[{
Cell[154496, 3273, 209, 3, 35, "Input",ExpressionUUID->"d80aedca-c761-4233-8eb9-30471062cab8"],
Cell[154708, 3278, 7488, 188, 224, "Output",ExpressionUUID->"f6f277b0-e76a-46f8-b63e-db1ae6325295"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162233, 3471, 262, 5, 35, "Input",ExpressionUUID->"9df60db4-b67f-4ee0-9906-f5663cd669c8"],
Cell[162498, 3478, 7454, 189, 224, "Output",ExpressionUUID->"0b42c517-9044-46f0-ad18-09a18145a23c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169989, 3672, 288, 6, 35, "Input",ExpressionUUID->"ee391377-7dc5-447a-8258-50c0db64db34"],
Cell[170280, 3680, 6484, 192, 301, "Output",ExpressionUUID->"645f20d3-e139-43f1-a0eb-0499769d71f2"]
}, Open  ]],
Cell[176779, 3875, 708, 18, 60, "Input",ExpressionUUID->"e84393d2-cb1b-4759-90e8-cbd790d53f10"],
Cell[CellGroupData[{
Cell[177512, 3897, 378, 8, 35, "Input",ExpressionUUID->"9dabc949-b659-4f3b-a7fe-8218fb9881ae"],
Cell[177893, 3907, 250, 4, 48, "Output",ExpressionUUID->"0279b8ea-c16f-41f1-adc4-87b22a09eff5"]
}, Open  ]],
Cell[178158, 3914, 703, 18, 60, "Input",ExpressionUUID->"a454a009-a5f1-449e-9a91-4741087456eb"],
Cell[CellGroupData[{
Cell[178886, 3936, 323, 7, 35, "Input",ExpressionUUID->"f4807bd6-128f-49a3-86fd-8e3363d311ae"],
Cell[179212, 3945, 255, 4, 48, "Output",ExpressionUUID->"5769b9e0-2b13-4c69-88b5-143c7c4c4f91"]
}, Open  ]],
Cell[179482, 3952, 710, 18, 60, "Input",ExpressionUUID->"f91caf62-df13-47af-94be-739a6ccdabd5"],
Cell[CellGroupData[{
Cell[180217, 3974, 339, 7, 35, "Input",ExpressionUUID->"e7a76040-238f-45b8-952a-3a0355e095fb"],
Cell[180559, 3983, 229, 4, 48, "Output",ExpressionUUID->"18b739db-eba0-4be8-a109-4a008956af73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180825, 3992, 456, 10, 35, "Input",ExpressionUUID->"e98274a1-f990-4749-abef-95f7bae5f6d9"],
Cell[181284, 4004, 4525, 104, 305, "Output",ExpressionUUID->"cea7962d-4344-45d2-b3a9-e84769d17e3a"]
}, Open  ]],
Cell[185824, 4111, 712, 18, 60, "Input",ExpressionUUID->"baa1b09f-59f4-43fb-9687-f3c20436da79"],
Cell[CellGroupData[{
Cell[186561, 4133, 234, 4, 35, "Input",ExpressionUUID->"658b352c-8b92-45b4-a1c5-931d60231a22"],
Cell[186798, 4139, 1216, 31, 53, "Output",ExpressionUUID->"7e923912-8848-4441-bbce-a9002369c8d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188051, 4175, 489, 12, 35, "Input",ExpressionUUID->"e8e316a6-3a8d-455c-a0a6-bc715ff05628"],
Cell[188543, 4189, 16465, 364, 253, "Output",ExpressionUUID->"73c6b37e-9009-4af2-924e-dacd87194b60"]
}, Open  ]],
Cell[205023, 4556, 786, 20, 60, "Input",ExpressionUUID->"84bb08f3-f827-4fe1-98b5-395bb557c1fd"],
Cell[CellGroupData[{
Cell[205834, 4580, 356, 8, 35, "Input",ExpressionUUID->"3da1cf4a-83e0-4a4a-80e6-8c59830b4960"],
Cell[206193, 4590, 71729, 1889, 260, "Output",ExpressionUUID->"c7940a68-acb2-4377-a484-c07ccb8fe678"]
}, Open  ]],
Cell[277937, 6482, 805, 20, 60, "Input",ExpressionUUID->"22ffdd9b-2f67-4aef-93ad-d885cf647f39"],
Cell[CellGroupData[{
Cell[278767, 6506, 387, 9, 35, "Input",ExpressionUUID->"11c18420-dfac-4eb6-80a1-1e59f788ff4c"],
Cell[279157, 6517, 67233, 1777, 241, "Output",ExpressionUUID->"c0c1f72c-2aa8-421f-8e7d-ca9f381904f9"]
}, Open  ]],
Cell[346405, 8297, 152, 3, 35, "Input",ExpressionUUID->"f094ffec-5ef3-47f2-856c-0654804018c2"],
Cell[CellGroupData[{
Cell[346582, 8304, 1664, 44, 178, "Input",ExpressionUUID->"9227b841-b691-4f05-945e-fa704b30fa27"],
Cell[348249, 8350, 2384, 48, 376, "Output",ExpressionUUID->"324292cb-ec91-4fa8-824e-a2b7378e5f98"]
}, Closed]],
Cell[350648, 8401, 358, 7, 29, "Input",ExpressionUUID->"ca45ebe5-bf0f-43d1-9edf-a8f628f93f77"],
Cell[CellGroupData[{
Cell[351031, 8412, 200, 3, 66, "Subtitle",ExpressionUUID->"9e3fddf1-a86d-4aed-a6b1-d404139de3a8"],
Cell[CellGroupData[{
Cell[351256, 8419, 196, 3, 35, "Input",ExpressionUUID->"e84532b5-a772-428e-856a-9230f4007270"],
Cell[351455, 8424, 179, 2, 40, "Output",ExpressionUUID->"d3f67be1-e27c-4494-a011-5bd18055776a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351671, 8431, 201, 3, 35, "Input",ExpressionUUID->"9d9f5f28-d473-4aaa-a288-dc773cdc2089"],
Cell[351875, 8436, 462, 7, 112, "Output",ExpressionUUID->"c5b017ea-213f-43fb-8f8c-92ff290abed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352374, 8448, 241, 4, 35, "Input",ExpressionUUID->"7214f1f1-82e3-4d1b-abc0-ab5a6d5dcd74"],
Cell[352618, 8454, 151, 2, 40, "Output",ExpressionUUID->"129ecb8f-50bf-49c3-bc3d-9d10accf93a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352806, 8461, 14691, 359, 84, "WolframAlphaShortInput",ExpressionUUID->"13082b06-05b5-489a-9c52-34636b479050"],
Cell[367500, 8822, 49893, 862, 299, "Output",ExpressionUUID->"d53f3f4e-1041-47e9-9806-ff6959945dff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417430, 9689, 99188, 1875, 1112, "WolframAlphaShortInput",ExpressionUUID->"9409b909-645a-4851-8f23-69c013fab236"],
Cell[516621, 11566, 49892, 862, 299, "Output",ExpressionUUID->"752c2ffb-0e8d-48b9-aa0d-252c93bdb940"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566550, 12433, 14717, 360, 84, "WolframAlphaShortInput",ExpressionUUID->"44707c01-1a28-4539-bf18-52b703b348b0"],
Cell[581270, 12795, 49895, 862, 299, "Output",ExpressionUUID->"dd746c71-5382-4283-bb79-886fc732badd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631202, 13662, 1773, 48, 43, "Input",ExpressionUUID->"365f6db3-ba04-4643-9743-5e9295e7859f"],
Cell[632978, 13712, 7453, 184, 47, "Output",ExpressionUUID->"4a86048e-fc15-4653-a653-e400f3a69d00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640468, 13901, 14236, 350, 84, "WolframAlphaShortInput",ExpressionUUID->"85e75dd2-ee7a-4b56-8a91-07afb351a071"],
Cell[654707, 14253, 603, 20, 76, "Output",ExpressionUUID->"95d7ef4a-036e-4b42-a2d6-88b50b2e3585"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655347, 14278, 15798, 382, 84, "WolframAlphaShortInput",ExpressionUUID->"a5c18691-a4e4-43cb-8a6d-15129a433407"],
Cell[671148, 14662, 470157, 7750, 355, "Output",ExpressionUUID->"fe0cbe8a-7f32-499d-bac8-717bf6c042c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141342, 22417, 17515, 417, 84, "WolframAlphaShortInput",ExpressionUUID->"caa007d8-7a68-4c3d-a018-832d8b06289d"],
Cell[1158860, 22836, 6299, 111, 469, "Output",ExpressionUUID->"e94ae0d3-b77b-40ec-88f5-4f4d924f58b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1165196, 22952, 22385, 512, 96, "WolframAlphaShortInput",ExpressionUUID->"54e1759b-7e55-4965-924c-7e1d035a3677"],
Cell[1187584, 23466, 161, 2, 40, "Output",ExpressionUUID->"0981b2d2-6099-42b2-a392-0b08a2b91fd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187782, 23473, 19087, 447, 96, "WolframAlphaShortInput",ExpressionUUID->"f315f513-341c-49d3-9eab-5b6a95da87ef"],
Cell[1206872, 23922, 227, 4, 49, "Output",ExpressionUUID->"df2e3afa-9b04-4707-b01a-4116e6b12f93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207136, 23931, 16491, 383, 96, "WolframAlphaShortInput",ExpressionUUID->"665a8181-5b79-4bcc-9af2-29ce4444c932"],
Cell[1223630, 24316, 228, 4, 49, "Output",ExpressionUUID->"c88fa97f-c725-4984-9a30-028a0aefe0f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223895, 24325, 92211, 1853, 3229, "WolframAlphaShortInput",ExpressionUUID->"ec93eb03-fb0c-472b-882c-22378d40f891"],
Cell[1316109, 26180, 38093, 756, 138, "Output",ExpressionUUID->"f58bdfd3-0676-4963-be87-adf609967776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354239, 26941, 238106, 4783, 3637, "WolframAlphaShortInput",ExpressionUUID->"4ee01308-a722-4f2a-8d4a-01dbd2d94ea1"],
Cell[1592348, 31726, 5480, 106, 54, "Output",ExpressionUUID->"b1261510-ecc5-420c-845b-accc1564c933"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1597865, 31837, 25940, 568, 98, "WolframAlphaShortInput",ExpressionUUID->"bc663f0e-fe74-472b-871d-7d924b0b1f91"],
Cell[1623808, 32407, 538, 12, 49, "Output",ExpressionUUID->"52463f1c-71c8-4d24-8a3f-513b1a892435"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1624383, 32424, 175848, 3501, 2701, "WolframAlphaShortInput",ExpressionUUID->"5dafcf05-6f71-4b1b-ac13-40fda46a6b76"],
Cell[1800234, 35927, 3527, 93, 127, "Output",ExpressionUUID->"99dc1375-7c1e-4e11-a824-328ae8e761d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1803798, 36025, 339, 8, 35, "Input",ExpressionUUID->"a6a130dd-6435-493b-beae-5b3b0a3dc9aa"],
Cell[1804140, 36035, 32663, 577, 287, "Output",ExpressionUUID->"3eae7dd5-7f2c-4454-88e0-8e999bc79dc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1836840, 36617, 276, 6, 35, "Input",ExpressionUUID->"d15905ff-4ebd-44c1-a498-7f6e2588746d"],
Cell[1837119, 36625, 1022, 30, 40, "Output",ExpressionUUID->"df88a955-4c84-4689-9f2e-0b8f4bd249df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1838178, 36660, 416, 11, 35, "Input",ExpressionUUID->"ca9ba027-2581-4dff-bfe0-f41ff7b69150"],
Cell[1838597, 36673, 121207, 2031, 298, "Output",ExpressionUUID->"e5d4a9c5-b832-40f6-99f2-9c31ba22c5da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1959841, 38709, 601, 15, 60, "Input",ExpressionUUID->"5528eefa-3c99-4ab9-868b-4fe2d2078518"],
Cell[1960445, 38726, 230976, 3861, 299, "Output",ExpressionUUID->"3821ccc1-a8d4-4f05-925c-96a2bf22d7b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2191458, 42592, 270, 5, 35, "Input",ExpressionUUID->"655ceb13-4295-4037-aea5-f0d9f5cbe337"],
Cell[2191731, 42599, 1440, 21, 112, "Output",ExpressionUUID->"434ad5be-b508-450e-a6be-4ab48d11b2b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2193208, 42625, 1923, 33, 155, "Input",ExpressionUUID->"93ba5c06-3b25-426c-b71b-b3f3dbc75f40"],
Cell[2195134, 42660, 32619, 748, 301, "Output",ExpressionUUID->"a0faa608-e886-4f04-b582-c393ac76cd43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2227790, 43413, 202, 3, 35, "Input",ExpressionUUID->"40e37e4f-99de-497f-af71-f9f657266748"],
Cell[2227995, 43418, 169, 3, 57, "Output",ExpressionUUID->"581758f5-2911-413a-b13b-47964bbe418c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2228201, 43426, 200, 3, 55, "Input",ExpressionUUID->"13f2925a-a8cb-4fb4-908a-421d0e34a358"],
Cell[2228404, 43431, 169, 3, 57, "Output",ExpressionUUID->"2502c5dd-138b-449a-8f94-5970beaafc73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2228610, 43439, 200, 3, 55, "Input",ExpressionUUID->"b5008429-772d-4a80-8bf0-61e8ee966b12"],
Cell[2228813, 43444, 167, 2, 40, "Output",ExpressionUUID->"917dd700-9c25-41a6-98c9-4bbfc1c2dd1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2229017, 43451, 250, 5, 55, "Input",ExpressionUUID->"c86af11f-74b0-4394-80d9-0f08967b882e"],
Cell[2229270, 43458, 172, 2, 40, "Output",ExpressionUUID->"81abf08f-87b4-4695-8ef2-1e6afd5cfb17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2229479, 43465, 16391, 400, 84, "WolframAlphaShortInput",ExpressionUUID->"b4a378ac-3fed-4c75-b9dd-54021d5c61bc"],
Cell[2245873, 43867, 150, 2, 40, "Output",ExpressionUUID->"6ba34b35-d033-4e33-8d41-f9c51b122256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2246060, 43874, 318, 7, 35, "Input",ExpressionUUID->"c6fe6ca8-bc0e-42bc-956a-6653a225495e"],
Cell[2246381, 43883, 10306, 211, 298, "Output",ExpressionUUID->"7fb6f33c-0993-422b-ab5e-ccc52a1fbe3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2256724, 44099, 13475, 329, 84, "WolframAlphaShortInput",ExpressionUUID->"7ff59cd2-b676-44fd-a11a-7e3e140678fb"],
Cell[2270202, 44430, 151, 2, 40, "Output",ExpressionUUID->"b3d76e4a-10c7-45ad-a464-91ed05525140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2270390, 44437, 13240, 325, 84, "WolframAlphaShortInput",ExpressionUUID->"cb5d401c-f00c-4830-b3fb-4157abdba1ef"],
Cell[2283633, 44764, 155, 2, 40, "Output",ExpressionUUID->"52d37719-4710-40a7-b69c-f35674fe2609"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2283825, 44771, 467, 12, 35, "Input",ExpressionUUID->"d1a21aec-1e15-4811-8f44-8ecfd3eb2091"],
Cell[2284295, 44785, 188955, 3127, 331, "Output",ExpressionUUID->"5e202a51-6e88-4f85-a668-9c02d61224fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2473287, 47917, 498, 14, 35, "Input",ExpressionUUID->"a8b402f5-5e72-4df1-bfa8-37b17b6005e0"],
Cell[2473788, 47933, 74797, 1243, 380, "Output",ExpressionUUID->"8d95a56a-f8fd-4e7c-b430-1a97bd039a3e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2548634, 49182, 172, 3, 66, "Subtitle",ExpressionUUID->"92e557c7-4900-4a27-b798-3df3c4005fff"],
Cell[2548809, 49187, 171, 3, 66, "Subtitle",ExpressionUUID->"88a6ae17-694e-4682-a9c0-0799f13e4d2a"],
Cell[CellGroupData[{
Cell[2549005, 49194, 361, 8, 35, "Input",ExpressionUUID->"aaf274d8-8af5-4e24-9cab-9e3ef7b66fac"],
Cell[2549369, 49204, 258, 5, 40, "Output",ExpressionUUID->"7c9f77cd-d2f7-44ed-892f-fb19c9a64aeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2549664, 49214, 1007, 24, 155, "Input",ExpressionUUID->"76e41fd2-bf4f-4fed-91ff-3fc353c24892"],
Cell[2550674, 49240, 992, 26, 83, "Output",ExpressionUUID->"7f070dd8-d7df-4a28-be74-596d395dc410"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2551703, 49271, 384, 9, 35, "Input",ExpressionUUID->"e83c9ae8-7f1f-413c-b50e-85f355a56865"],
Cell[2552090, 49282, 275, 5, 40, "Output",ExpressionUUID->"60d76c48-1a6a-47a7-ace7-0a2071771b18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2552402, 49292, 518, 13, 35, "Input",ExpressionUUID->"296a4d68-892a-4dfe-99ee-4a3f7f106e51"],
Cell[2552923, 49307, 3425, 87, 160, "Output",ExpressionUUID->"36c2dae6-816c-42ac-ae8e-95fa97f83338"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2556385, 49399, 778, 18, 155, "Input",ExpressionUUID->"6adbb025-2162-4c27-9f57-0121f147e916"],
Cell[2557166, 49419, 395, 11, 100, "Output",ExpressionUUID->"3d1bf66d-cd40-4f4f-8bcc-b168d43f55ec"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2557610, 49436, 181, 3, 66, "Subtitle",ExpressionUUID->"e9fdf698-1cc5-45da-ba28-7f124bb2b318"],
Cell[CellGroupData[{
Cell[2557816, 49443, 291, 6, 35, "Input",ExpressionUUID->"bdb79d11-2cc0-447d-9bc8-74509ae2f77b"],
Cell[2558110, 49451, 464, 15, 57, "Output",ExpressionUUID->"994f5b6b-5d16-4a7c-aa25-324ea35cb6c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2558611, 49471, 289, 6, 35, "Input",ExpressionUUID->"b7c2165b-5cda-4244-9b01-322ba4fa5bfb"],
Cell[2558903, 49479, 5866, 157, 387, "Output",ExpressionUUID->"4627e30f-c418-433f-8a40-e912036d21d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2564806, 49641, 232, 4, 35, "Input",ExpressionUUID->"a973538b-1828-4293-8715-e63455829a75"],
Cell[2565041, 49647, 1658, 25, 88, "Output",ExpressionUUID->"bc3f9874-d3de-4545-ac2a-c34ab53ef467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2566736, 49677, 363, 9, 35, "Input",ExpressionUUID->"f4de73d6-7c39-446c-a952-90bbcd3072e2"],
Cell[2567102, 49688, 775, 24, 40, "Output",ExpressionUUID->"9e690d68-f532-42fe-80c4-d643eff54570"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2567914, 49717, 282, 5, 38, "Input",ExpressionUUID->"862bee39-15c2-4ee6-b7d8-7352a6546863"],
Cell[2568199, 49724, 208, 3, 40, "Output",ExpressionUUID->"fcba6a23-5b77-49f0-8232-081557d11661"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2568444, 49732, 318, 6, 38, "Input",ExpressionUUID->"78155863-706c-44a4-8b86-c3485ec3dd02"],
Cell[2568765, 49740, 182, 2, 40, "Output",ExpressionUUID->"18a10d65-3ec3-4d42-8d1c-6fd413a33702"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2568984, 49747, 139263, 2832, 2437, "WolframAlphaShortInput",ExpressionUUID->"66145b73-2cf7-4df4-80ed-8b21131fd080"],
Cell[2708250, 52581, 210, 4, 45, "Output",ExpressionUUID->"b4fca9fc-76c8-4451-b4fe-e7339577efca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2708497, 52590, 512, 13, 41, "Input",ExpressionUUID->"0b8a14e0-536a-4ddc-af3d-b5a6c611834f"],
Cell[2709012, 52605, 239, 5, 68, "Output",ExpressionUUID->"4a910041-849d-4ad9-8c1f-28b2aa906e5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2709288, 52615, 241, 4, 35, "Input",ExpressionUUID->"66b8d37d-fd89-4600-abbd-7837e67cf4e6"],
Cell[2709532, 52621, 210, 4, 45, "Output",ExpressionUUID->"0410903b-a9a1-480a-8b0c-9785415d234f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2709779, 52630, 336, 7, 35, "Input",ExpressionUUID->"beaff3a0-fcb5-4987-a024-61ec9d554049"],
Cell[2710118, 52639, 239, 5, 68, "Output",ExpressionUUID->"ddd0afa9-22b1-4948-b455-0fa13106b4ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2710394, 52649, 309, 9, 55, "Input",ExpressionUUID->"9f83da53-86c7-47b2-8baa-6dee951af8b8"],
Cell[2710706, 52660, 246, 6, 68, "Output",ExpressionUUID->"006555c1-c348-4841-9d64-8f98748d88de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2710989, 52671, 245, 4, 35, "Input",ExpressionUUID->"9f46bf00-8171-4394-a2e6-e8d92ba3eaad"],
Cell[2711237, 52677, 240, 5, 68, "Output",ExpressionUUID->"ec589ab2-2c9b-4871-8c57-0856d4bc50f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2711514, 52687, 21059, 484, 96, "WolframAlphaShortInput",ExpressionUUID->"78a60922-9a69-43e5-891c-79c5236719e4"],
Cell[2732576, 53173, 158, 3, 40, "Output",ExpressionUUID->"58a0bee6-4019-490a-89d0-d968308e5e54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2732771, 53181, 1630, 30, 49, "Input",ExpressionUUID->"f3e4feca-e6d3-4b97-a0e4-6df9e9c80d8d"],
Cell[2734404, 53213, 220, 5, 44, "Output",ExpressionUUID->"1c71ce1c-b836-4c12-9fbc-9162309fb9e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2734661, 53223, 341, 8, 35, "Input",ExpressionUUID->"e44d2ccb-acf7-4f47-930a-7421d9793b75"],
Cell[2735005, 53233, 219, 5, 49, "Output",ExpressionUUID->"56578bde-4a31-47b8-a803-1eed5fce6ae2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2735261, 53243, 14092, 342, 90, "WolframAlphaShortInput",ExpressionUUID->"9186d9ec-9792-489e-9b39-14b2b4c64838"],
Cell[2749356, 53587, 219, 5, 49, "Output",ExpressionUUID->"2d2f408a-c213-4f0c-a69b-a2f42b861f78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2749612, 53597, 1275, 25, 51, "Input",ExpressionUUID->"07429ecc-10d9-4239-a26f-64ea3d424219"],
Cell[2750890, 53624, 218, 5, 45, "Output",ExpressionUUID->"2ed48128-c6e9-4f3c-838a-704d8f75dc6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2751145, 53634, 182, 3, 35, "Input",ExpressionUUID->"ad30fb55-edfd-4c51-8280-10b44ee5a28e"],
Cell[2751330, 53639, 390, 12, 51, "Output",ExpressionUUID->"4032d653-7d55-4f53-bf47-5fc771573fc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2751757, 53656, 312, 7, 35, "Input",ExpressionUUID->"18ffd017-9058-4143-829e-85941f567497"],
Cell[2752072, 53665, 271, 6, 40, "Output",ExpressionUUID->"d74ad6a8-6792-4bef-ad36-8470e05cc627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2752380, 53676, 241, 5, 35, "Input",ExpressionUUID->"dec08e32-7131-4ef0-87c4-c482f9ec382c"],
Cell[2752624, 53683, 416, 12, 51, "Output",ExpressionUUID->"ae2902d5-6b55-459e-896f-4c5a47386be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2753077, 53700, 350, 8, 35, "Input",ExpressionUUID->"a8ceff7d-08b1-4903-b45c-e4e05f42217f"],
Cell[2753430, 53710, 162, 3, 40, "Output",ExpressionUUID->"1daaa924-ce2c-4e81-9588-c82db3326729"]
}, Open  ]],
Cell[2753607, 53716, 254, 6, 35, "Input",ExpressionUUID->"9318342c-5110-46e5-a579-85000709ec73"],
Cell[CellGroupData[{
Cell[2753886, 53726, 207, 4, 35, "Input",ExpressionUUID->"ced386c3-a23c-415c-908a-29674d99b87c"],
Cell[2754096, 53732, 153, 3, 40, "Output",ExpressionUUID->"131521e9-e3a8-44da-bcb4-d3dd8c6161b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2754286, 53740, 211, 4, 35, "Input",ExpressionUUID->"677d7b1d-ca64-4eff-be0c-58fdafce31ee"],
Cell[2754500, 53746, 182, 4, 40, "Output",ExpressionUUID->"80913971-7821-435f-be35-a79cc1d42c89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2754719, 53755, 210, 4, 35, "Input",ExpressionUUID->"a4610090-7cb7-4d06-9632-9de2270ee48b"],
Cell[2754932, 53761, 173, 3, 40, "Output",ExpressionUUID->"7c705b11-40ac-4c3d-8625-a1864d5a29d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2755142, 53769, 262, 6, 35, "Input",ExpressionUUID->"5fd2050f-9260-45bf-a597-64f3b4d23004"],
Cell[2755407, 53777, 210, 5, 40, "Output",ExpressionUUID->"7fe57949-8223-4cc4-adb3-b30907713cb4"]
}, Open  ]],
Cell[2755632, 53785, 279, 7, 36, "Input",ExpressionUUID->"38761b65-00ea-434f-94c7-0640751c6211"],
Cell[CellGroupData[{
Cell[2755936, 53796, 228, 5, 35, "Input",ExpressionUUID->"dd4f9de5-2e38-4fe1-8ffc-58814b0fa93e"],
Cell[2756167, 53803, 165, 3, 40, "Output",ExpressionUUID->"f0e9a885-75f5-4a9e-86ed-764ccff8d404"]
}, Open  ]],
Cell[2756347, 53809, 252, 5, 35, "Input",ExpressionUUID->"a257bad6-fd01-49fa-ae6a-d6b9f005d495"],
Cell[CellGroupData[{
Cell[2756624, 53818, 47827, 994, 215, "WolframAlphaShortInput",ExpressionUUID->"4e54e22d-ffd9-4bb0-a0e9-a9c30e34e9c3"],
Cell[2804454, 54814, 27286, 491, 215, "Output",ExpressionUUID->"04c62cf9-2497-4609-b330-913c4291c13e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2831789, 55311, 169, 3, 66, "Subtitle",ExpressionUUID->"063fdbdf-2fe3-485e-8a98-38a3f1db19a3"],
Cell[CellGroupData[{
Cell[2831983, 55318, 348, 9, 35, "Input",ExpressionUUID->"4ced0de8-43d2-4d08-aba3-dd5a39aa5d68"],
Cell[2832334, 55329, 32641, 578, 287, "Output",ExpressionUUID->"51038739-b057-44b2-8f51-798ce1ee2c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2865012, 55912, 559, 14, 83, "Input",ExpressionUUID->"062470fd-94b5-4d1f-8e0f-8710cb63e155"],
Cell[2865574, 55928, 1683, 34, 396, "Output",ExpressionUUID->"2c6c3e9e-e52a-4ab7-83c9-4a574ffd9703"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2867294, 55967, 1046, 26, 131, "Input",ExpressionUUID->"9d731490-9fe4-4f5b-aaed-2fa47ed1bceb"],
Cell[2868343, 55995, 2136, 42, 456, "Output",ExpressionUUID->"e4dc5169-c906-4d44-a2d6-32c206961e06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2870516, 56042, 491, 12, 60, "Input",ExpressionUUID->"22ed3a4a-e37c-4c3b-b9b4-afa6c939bbb9"],
Cell[2871010, 56056, 1692, 34, 148, "Output",ExpressionUUID->"e851f753-9004-4975-9d2d-62588835b93a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2872739, 56095, 830, 20, 107, "Input",ExpressionUUID->"6fd40931-fdba-44e0-909b-e9897faf2c27"],
Cell[2873572, 56117, 1750, 36, 398, "Output",ExpressionUUID->"c2d076e9-f5c9-4ef3-a151-ec8bd9c96334"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2875359, 56158, 787, 19, 107, "Input",ExpressionUUID->"0b9963d7-9047-4f77-b25d-06654ac0cb39"],
Cell[2876149, 56179, 1808, 35, 586, "Output",ExpressionUUID->"c6c72489-6de6-4f2d-baed-ac8994d238ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2877994, 56219, 1993, 50, 202, "Input",ExpressionUUID->"41452298-5adf-4b0e-9250-23071db925bf"],
Cell[2879990, 56271, 2696, 50, 516, "Output",ExpressionUUID->"7064c5f4-e35c-4a63-8636-d62c135fac79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2882723, 56326, 971, 24, 107, "Input",ExpressionUUID->"12b1c0ad-b299-4cd8-85c5-b9eef3eb7d34"],
Cell[2883697, 56352, 1881, 36, 436, "Output",ExpressionUUID->"fbd52569-d6e6-4820-b58a-1b7cb8094da6"]
}, Open  ]],
Cell[2885593, 56391, 322, 8, 35, "Input",ExpressionUUID->"2ad690bd-8caa-4fa6-ab3e-f599d1062600"],
Cell[CellGroupData[{
Cell[2885940, 56403, 1003, 26, 131, "Input",ExpressionUUID->"2f3b1b2a-44ee-4dec-9a36-a43f47ecbc65"],
Cell[2886946, 56431, 1882, 38, 428, "Output",ExpressionUUID->"24502ec1-a7ca-4828-bab4-84ebab1036ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2888865, 56474, 759, 18, 131, "Input",ExpressionUUID->"817819d6-101d-4a8c-88fb-a44cafb90ffe"],
Cell[2889627, 56494, 1858, 38, 428, "Output",ExpressionUUID->"ee592de3-a211-4704-a20e-f3ddf21fbd6c"]
}, Open  ]],
Cell[2891500, 56535, 207, 3, 35, "Input",ExpressionUUID->"1a789852-9cf3-4681-9868-b90d47c8fe2e"],
Cell[CellGroupData[{
Cell[2891732, 56542, 520, 13, 83, "Input",ExpressionUUID->"6fb4e76e-16f9-4e20-bf96-45184e0cd75d"],
Cell[2892255, 56557, 1700, 33, 148, "Output",ExpressionUUID->"992bba32-c2ab-48eb-991b-4cd38806d6aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2893992, 56595, 1045, 28, 131, "Input",ExpressionUUID->"13e41e83-bac5-43ee-a253-42d5e5c939a7"],
Cell[2895040, 56625, 2029, 40, 444, "Output",ExpressionUUID->"93d49229-d156-4333-9cd0-3bdf720cb586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2897106, 56670, 292, 6, 35, "Input",ExpressionUUID->"787cefb7-dc26-4091-bcaa-5dddc248f538"],
Cell[2897401, 56678, 13439, 290, 291, "Output",ExpressionUUID->"3a7bf1fb-2be4-47a2-a9d0-19f09391a7d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2910877, 56973, 483, 11, 83, "Input",ExpressionUUID->"bc2e319d-a671-4430-9d72-c97b97921733"],
Cell[2911363, 56986, 1642, 32, 422, "Output",ExpressionUUID->"b22dab38-14a3-4428-bc21-84a635e32aa2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2913054, 57024, 190, 3, 66, "Subtitle",ExpressionUUID->"0123e20d-0bd2-457b-a8fc-15962dec699b"],
Cell[CellGroupData[{
Cell[2913269, 57031, 438, 8, 35, "Input",ExpressionUUID->"88421079-8fe5-4231-8378-ce7eb713f52d"],
Cell[2913710, 57041, 181, 2, 59, "Output",ExpressionUUID->"22442b58-21fa-4fe3-8c1e-929ecdf5dd8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2913928, 57048, 284, 5, 35, "Input",ExpressionUUID->"bb333eef-a167-4298-bfb2-81cb4053cb18"],
Cell[2914215, 57055, 520, 11, 44, "Output",ExpressionUUID->"a949c30a-5294-4f89-baaa-cfd47503fe1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2914784, 57072, 75, 0, 66, "Subtitle",ExpressionUUID->"3616808a-5cc0-4a2a-9363-ec01486f9e95"],
Cell[2914862, 57074, 152, 3, 35, "Input",ExpressionUUID->"8cb2ebc9-31c9-4fd8-bc06-d99e9751e24e"],
Cell[2915017, 57079, 152, 3, 35, "Input",ExpressionUUID->"03f9ec20-4558-4823-921c-dae3fa02c616"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* NotebookSignature Pu0Ao@q54ft9OD1OGxsE19uX *)
